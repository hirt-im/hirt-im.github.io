(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const c of document.querySelectorAll('link[rel="modulepreload"]'))a(c);new MutationObserver(c=>{for(const d of c)if(d.type==="childList")for(const g of d.addedNodes)g.tagName==="LINK"&&g.rel==="modulepreload"&&a(g)}).observe(document,{childList:!0,subtree:!0});function o(c){const d={};return c.integrity&&(d.integrity=c.integrity),c.referrerPolicy&&(d.referrerPolicy=c.referrerPolicy),c.crossOrigin==="use-credentials"?d.credentials="include":c.crossOrigin==="anonymous"?d.credentials="omit":d.credentials="same-origin",d}function a(c){if(c.ep)return;c.ep=!0;const d=o(c);fetch(c.href,d)}})();var commonjsGlobal=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function getDefaultExportFromCjs(i){return i&&i.__esModule&&Object.prototype.hasOwnProperty.call(i,"default")?i.default:i}function getAugmentedNamespace(i){if(i.__esModule)return i;var s=i.default;if(typeof s=="function"){var o=function a(){if(this instanceof a){var c=[null];c.push.apply(c,arguments);var d=Function.bind.apply(s,c);return new d}return s.apply(this,arguments)};o.prototype=s.prototype}else o={};return Object.defineProperty(o,"__esModule",{value:!0}),Object.keys(i).forEach(function(a){var c=Object.getOwnPropertyDescriptor(i,a);Object.defineProperty(o,a,c.get?c:{enumerable:!0,get:function(){return i[a]}})}),o}var jsxRuntime={exports:{}},reactJsxRuntime_production_min={},react={exports:{}},react_production_min={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var l$2=Symbol.for("react.element"),n$3=Symbol.for("react.portal"),p$5=Symbol.for("react.fragment"),q$3=Symbol.for("react.strict_mode"),r$2=Symbol.for("react.profiler"),t$2=Symbol.for("react.provider"),u$2=Symbol.for("react.context"),v$2=Symbol.for("react.forward_ref"),w$1=Symbol.for("react.suspense"),x=Symbol.for("react.memo"),y=Symbol.for("react.lazy"),z$1=Symbol.iterator;function A$1(i){return i===null||typeof i!="object"?null:(i=z$1&&i[z$1]||i["@@iterator"],typeof i=="function"?i:null)}var B$1={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C$1=Object.assign,D$1={};function E$1(i,s,o){this.props=i,this.context=s,this.refs=D$1,this.updater=o||B$1}E$1.prototype.isReactComponent={};E$1.prototype.setState=function(i,s){if(typeof i!="object"&&typeof i!="function"&&i!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,i,s,"setState")};E$1.prototype.forceUpdate=function(i){this.updater.enqueueForceUpdate(this,i,"forceUpdate")};function F(){}F.prototype=E$1.prototype;function G$1(i,s,o){this.props=i,this.context=s,this.refs=D$1,this.updater=o||B$1}var H$1=G$1.prototype=new F;H$1.constructor=G$1;C$1(H$1,E$1.prototype);H$1.isPureReactComponent=!0;var I$1=Array.isArray,J=Object.prototype.hasOwnProperty,K$1={current:null},L$1={key:!0,ref:!0,__self:!0,__source:!0};function M$1(i,s,o){var a,c={},d=null,g=null;if(s!=null)for(a in s.ref!==void 0&&(g=s.ref),s.key!==void 0&&(d=""+s.key),s)J.call(s,a)&&!L$1.hasOwnProperty(a)&&(c[a]=s[a]);var b=arguments.length-2;if(b===1)c.children=o;else if(1<b){for(var $=Array(b),_=0;_<b;_++)$[_]=arguments[_+2];c.children=$}if(i&&i.defaultProps)for(a in b=i.defaultProps,b)c[a]===void 0&&(c[a]=b[a]);return{$$typeof:l$2,type:i,key:d,ref:g,props:c,_owner:K$1.current}}function N$1(i,s){return{$$typeof:l$2,type:i.type,key:s,ref:i.ref,props:i.props,_owner:i._owner}}function O$1(i){return typeof i=="object"&&i!==null&&i.$$typeof===l$2}function escape(i){var s={"=":"=0",":":"=2"};return"$"+i.replace(/[=:]/g,function(o){return s[o]})}var P$1=/\/+/g;function Q$1(i,s){return typeof i=="object"&&i!==null&&i.key!=null?escape(""+i.key):s.toString(36)}function R$1(i,s,o,a,c){var d=typeof i;(d==="undefined"||d==="boolean")&&(i=null);var g=!1;if(i===null)g=!0;else switch(d){case"string":case"number":g=!0;break;case"object":switch(i.$$typeof){case l$2:case n$3:g=!0}}if(g)return g=i,c=c(g),i=a===""?"."+Q$1(g,0):a,I$1(c)?(o="",i!=null&&(o=i.replace(P$1,"$&/")+"/"),R$1(c,s,o,"",function(_){return _})):c!=null&&(O$1(c)&&(c=N$1(c,o+(!c.key||g&&g.key===c.key?"":(""+c.key).replace(P$1,"$&/")+"/")+i)),s.push(c)),1;if(g=0,a=a===""?".":a+":",I$1(i))for(var b=0;b<i.length;b++){d=i[b];var $=a+Q$1(d,b);g+=R$1(d,s,o,$,c)}else if($=A$1(i),typeof $=="function")for(i=$.call(i),b=0;!(d=i.next()).done;)d=d.value,$=a+Q$1(d,b++),g+=R$1(d,s,o,$,c);else if(d==="object")throw s=String(i),Error("Objects are not valid as a React child (found: "+(s==="[object Object]"?"object with keys {"+Object.keys(i).join(", ")+"}":s)+"). If you meant to render a collection of children, use an array instead.");return g}function S$1(i,s,o){if(i==null)return i;var a=[],c=0;return R$1(i,a,"","",function(d){return s.call(o,d,c++)}),a}function T$1(i){if(i._status===-1){var s=i._result;s=s(),s.then(function(o){(i._status===0||i._status===-1)&&(i._status=1,i._result=o)},function(o){(i._status===0||i._status===-1)&&(i._status=2,i._result=o)}),i._status===-1&&(i._status=0,i._result=s)}if(i._status===1)return i._result.default;throw i._result}var U$1={current:null},V$1={transition:null},W$1={ReactCurrentDispatcher:U$1,ReactCurrentBatchConfig:V$1,ReactCurrentOwner:K$1};react_production_min.Children={map:S$1,forEach:function(i,s,o){S$1(i,function(){s.apply(this,arguments)},o)},count:function(i){var s=0;return S$1(i,function(){s++}),s},toArray:function(i){return S$1(i,function(s){return s})||[]},only:function(i){if(!O$1(i))throw Error("React.Children.only expected to receive a single React element child.");return i}};react_production_min.Component=E$1;react_production_min.Fragment=p$5;react_production_min.Profiler=r$2;react_production_min.PureComponent=G$1;react_production_min.StrictMode=q$3;react_production_min.Suspense=w$1;react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W$1;react_production_min.cloneElement=function(i,s,o){if(i==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+i+".");var a=C$1({},i.props),c=i.key,d=i.ref,g=i._owner;if(s!=null){if(s.ref!==void 0&&(d=s.ref,g=K$1.current),s.key!==void 0&&(c=""+s.key),i.type&&i.type.defaultProps)var b=i.type.defaultProps;for($ in s)J.call(s,$)&&!L$1.hasOwnProperty($)&&(a[$]=s[$]===void 0&&b!==void 0?b[$]:s[$])}var $=arguments.length-2;if($===1)a.children=o;else if(1<$){b=Array($);for(var _=0;_<$;_++)b[_]=arguments[_+2];a.children=b}return{$$typeof:l$2,type:i.type,key:c,ref:d,props:a,_owner:g}};react_production_min.createContext=function(i){return i={$$typeof:u$2,_currentValue:i,_currentValue2:i,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},i.Provider={$$typeof:t$2,_context:i},i.Consumer=i};react_production_min.createElement=M$1;react_production_min.createFactory=function(i){var s=M$1.bind(null,i);return s.type=i,s};react_production_min.createRef=function(){return{current:null}};react_production_min.forwardRef=function(i){return{$$typeof:v$2,render:i}};react_production_min.isValidElement=O$1;react_production_min.lazy=function(i){return{$$typeof:y,_payload:{_status:-1,_result:i},_init:T$1}};react_production_min.memo=function(i,s){return{$$typeof:x,type:i,compare:s===void 0?null:s}};react_production_min.startTransition=function(i){var s=V$1.transition;V$1.transition={};try{i()}finally{V$1.transition=s}};react_production_min.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")};react_production_min.useCallback=function(i,s){return U$1.current.useCallback(i,s)};react_production_min.useContext=function(i){return U$1.current.useContext(i)};react_production_min.useDebugValue=function(){};react_production_min.useDeferredValue=function(i){return U$1.current.useDeferredValue(i)};react_production_min.useEffect=function(i,s){return U$1.current.useEffect(i,s)};react_production_min.useId=function(){return U$1.current.useId()};react_production_min.useImperativeHandle=function(i,s,o){return U$1.current.useImperativeHandle(i,s,o)};react_production_min.useInsertionEffect=function(i,s){return U$1.current.useInsertionEffect(i,s)};react_production_min.useLayoutEffect=function(i,s){return U$1.current.useLayoutEffect(i,s)};react_production_min.useMemo=function(i,s){return U$1.current.useMemo(i,s)};react_production_min.useReducer=function(i,s,o){return U$1.current.useReducer(i,s,o)};react_production_min.useRef=function(i){return U$1.current.useRef(i)};react_production_min.useState=function(i){return U$1.current.useState(i)};react_production_min.useSyncExternalStore=function(i,s,o){return U$1.current.useSyncExternalStore(i,s,o)};react_production_min.useTransition=function(){return U$1.current.useTransition()};react_production_min.version="18.2.0";react.exports=react_production_min;var reactExports=react.exports;const React=getDefaultExportFromCjs(reactExports);/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var f=reactExports,k$1=Symbol.for("react.element"),l$1=Symbol.for("react.fragment"),m$2=Object.prototype.hasOwnProperty,n$2=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p$4={key:!0,ref:!0,__self:!0,__source:!0};function q$2(i,s,o){var a,c={},d=null,g=null;o!==void 0&&(d=""+o),s.key!==void 0&&(d=""+s.key),s.ref!==void 0&&(g=s.ref);for(a in s)m$2.call(s,a)&&!p$4.hasOwnProperty(a)&&(c[a]=s[a]);if(i&&i.defaultProps)for(a in s=i.defaultProps,s)c[a]===void 0&&(c[a]=s[a]);return{$$typeof:k$1,type:i,key:d,ref:g,props:c,_owner:n$2.current}}reactJsxRuntime_production_min.Fragment=l$1;reactJsxRuntime_production_min.jsx=q$2;reactJsxRuntime_production_min.jsxs=q$2;jsxRuntime.exports=reactJsxRuntime_production_min;var jsxRuntimeExports=jsxRuntime.exports,client={},reactDom={exports:{}},reactDom_production_min={},scheduler={exports:{}},scheduler_production_min={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(i){function s(zt,Ut){var Qt=zt.length;zt.push(Ut);e:for(;0<Qt;){var tn=Qt-1>>>1,sn=zt[tn];if(0<c(sn,Ut))zt[tn]=Ut,zt[Qt]=sn,Qt=tn;else break e}}function o(zt){return zt.length===0?null:zt[0]}function a(zt){if(zt.length===0)return null;var Ut=zt[0],Qt=zt.pop();if(Qt!==Ut){zt[0]=Qt;e:for(var tn=0,sn=zt.length,ln=sn>>>1;tn<ln;){var an=2*(tn+1)-1,Yt=zt[an],cn=an+1,Wt=zt[cn];if(0>c(Yt,Qt))cn<sn&&0>c(Wt,Yt)?(zt[tn]=Wt,zt[cn]=Qt,tn=cn):(zt[tn]=Yt,zt[an]=Qt,tn=an);else if(cn<sn&&0>c(Wt,Qt))zt[tn]=Wt,zt[cn]=Qt,tn=cn;else break e}}return Ut}function c(zt,Ut){var Qt=zt.sortIndex-Ut.sortIndex;return Qt!==0?Qt:zt.id-Ut.id}if(typeof performance=="object"&&typeof performance.now=="function"){var d=performance;i.unstable_now=function(){return d.now()}}else{var g=Date,b=g.now();i.unstable_now=function(){return g.now()-b}}var $=[],_=[],_e=1,et=null,rt=3,tt=!1,j=!1,nt=!1,st=typeof setTimeout=="function"?setTimeout:null,ot=typeof clearTimeout=="function"?clearTimeout:null,ut=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function ht(zt){for(var Ut=o(_);Ut!==null;){if(Ut.callback===null)a(_);else if(Ut.startTime<=zt)a(_),Ut.sortIndex=Ut.expirationTime,s($,Ut);else break;Ut=o(_)}}function pt(zt){if(nt=!1,ht(zt),!j)if(o($)!==null)j=!0,Gt(it);else{var Ut=o(_);Ut!==null&&Bt(pt,Ut.startTime-zt)}}function it(zt,Ut){j=!1,nt&&(nt=!1,ot(bt),bt=-1),tt=!0;var Qt=rt;try{for(ht(Ut),et=o($);et!==null&&(!(et.expirationTime>Ut)||zt&&!_t());){var tn=et.callback;if(typeof tn=="function"){et.callback=null,rt=et.priorityLevel;var sn=tn(et.expirationTime<=Ut);Ut=i.unstable_now(),typeof sn=="function"?et.callback=sn:et===o($)&&a($),ht(Ut)}else a($);et=o($)}if(et!==null)var ln=!0;else{var an=o(_);an!==null&&Bt(pt,an.startTime-Ut),ln=!1}return ln}finally{et=null,rt=Qt,tt=!1}}var yt=!1,ft=null,bt=-1,Tt=5,Ct=-1;function _t(){return!(i.unstable_now()-Ct<Tt)}function Ot(){if(ft!==null){var zt=i.unstable_now();Ct=zt;var Ut=!0;try{Ut=ft(!0,zt)}finally{Ut?kt():(yt=!1,ft=null)}}else yt=!1}var kt;if(typeof ut=="function")kt=function(){ut(Ot)};else if(typeof MessageChannel<"u"){var Rt=new MessageChannel,jt=Rt.port2;Rt.port1.onmessage=Ot,kt=function(){jt.postMessage(null)}}else kt=function(){st(Ot,0)};function Gt(zt){ft=zt,yt||(yt=!0,kt())}function Bt(zt,Ut){bt=st(function(){zt(i.unstable_now())},Ut)}i.unstable_IdlePriority=5,i.unstable_ImmediatePriority=1,i.unstable_LowPriority=4,i.unstable_NormalPriority=3,i.unstable_Profiling=null,i.unstable_UserBlockingPriority=2,i.unstable_cancelCallback=function(zt){zt.callback=null},i.unstable_continueExecution=function(){j||tt||(j=!0,Gt(it))},i.unstable_forceFrameRate=function(zt){0>zt||125<zt?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):Tt=0<zt?Math.floor(1e3/zt):5},i.unstable_getCurrentPriorityLevel=function(){return rt},i.unstable_getFirstCallbackNode=function(){return o($)},i.unstable_next=function(zt){switch(rt){case 1:case 2:case 3:var Ut=3;break;default:Ut=rt}var Qt=rt;rt=Ut;try{return zt()}finally{rt=Qt}},i.unstable_pauseExecution=function(){},i.unstable_requestPaint=function(){},i.unstable_runWithPriority=function(zt,Ut){switch(zt){case 1:case 2:case 3:case 4:case 5:break;default:zt=3}var Qt=rt;rt=zt;try{return Ut()}finally{rt=Qt}},i.unstable_scheduleCallback=function(zt,Ut,Qt){var tn=i.unstable_now();switch(typeof Qt=="object"&&Qt!==null?(Qt=Qt.delay,Qt=typeof Qt=="number"&&0<Qt?tn+Qt:tn):Qt=tn,zt){case 1:var sn=-1;break;case 2:sn=250;break;case 5:sn=1073741823;break;case 4:sn=1e4;break;default:sn=5e3}return sn=Qt+sn,zt={id:_e++,callback:Ut,priorityLevel:zt,startTime:Qt,expirationTime:sn,sortIndex:-1},Qt>tn?(zt.sortIndex=Qt,s(_,zt),o($)===null&&zt===o(_)&&(nt?(ot(bt),bt=-1):nt=!0,Bt(pt,Qt-tn))):(zt.sortIndex=sn,s($,zt),j||tt||(j=!0,Gt(it))),zt},i.unstable_shouldYield=_t,i.unstable_wrapCallback=function(zt){var Ut=rt;return function(){var Qt=rt;rt=Ut;try{return zt.apply(this,arguments)}finally{rt=Qt}}}})(scheduler_production_min);scheduler.exports=scheduler_production_min;var schedulerExports=scheduler.exports;/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var aa=reactExports,ca=schedulerExports;function p$3(i){for(var s="https://reactjs.org/docs/error-decoder.html?invariant="+i,o=1;o<arguments.length;o++)s+="&args[]="+encodeURIComponent(arguments[o]);return"Minified React error #"+i+"; visit "+s+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var da=new Set,ea={};function fa(i,s){ha(i,s),ha(i+"Capture",s)}function ha(i,s){for(ea[i]=s,i=0;i<s.length;i++)da.add(s[i])}var ia=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,la={},ma={};function oa(i){return ja.call(ma,i)?!0:ja.call(la,i)?!1:ka.test(i)?ma[i]=!0:(la[i]=!0,!1)}function pa(i,s,o,a){if(o!==null&&o.type===0)return!1;switch(typeof s){case"function":case"symbol":return!0;case"boolean":return a?!1:o!==null?!o.acceptsBooleans:(i=i.toLowerCase().slice(0,5),i!=="data-"&&i!=="aria-");default:return!1}}function qa(i,s,o,a){if(s===null||typeof s>"u"||pa(i,s,o,a))return!0;if(a)return!1;if(o!==null)switch(o.type){case 3:return!s;case 4:return s===!1;case 5:return isNaN(s);case 6:return isNaN(s)||1>s}return!1}function v$1(i,s,o,a,c,d,g){this.acceptsBooleans=s===2||s===3||s===4,this.attributeName=a,this.attributeNamespace=c,this.mustUseProperty=o,this.propertyName=i,this.type=s,this.sanitizeURL=d,this.removeEmptyString=g}var z={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(i){z[i]=new v$1(i,0,!1,i,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(i){var s=i[0];z[s]=new v$1(s,1,!1,i[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(i){z[i]=new v$1(i,2,!1,i.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(i){z[i]=new v$1(i,2,!1,i,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(i){z[i]=new v$1(i,3,!1,i.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(i){z[i]=new v$1(i,3,!0,i,null,!1,!1)});["capture","download"].forEach(function(i){z[i]=new v$1(i,4,!1,i,null,!1,!1)});["cols","rows","size","span"].forEach(function(i){z[i]=new v$1(i,6,!1,i,null,!1,!1)});["rowSpan","start"].forEach(function(i){z[i]=new v$1(i,5,!1,i.toLowerCase(),null,!1,!1)});var ra=/[\-:]([a-z])/g;function sa(i){return i[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(i){var s=i.replace(ra,sa);z[s]=new v$1(s,1,!1,i,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(i){var s=i.replace(ra,sa);z[s]=new v$1(s,1,!1,i,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(i){var s=i.replace(ra,sa);z[s]=new v$1(s,1,!1,i,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(i){z[i]=new v$1(i,1,!1,i.toLowerCase(),null,!1,!1)});z.xlinkHref=new v$1("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(i){z[i]=new v$1(i,1,!1,i.toLowerCase(),null,!0,!0)});function ta(i,s,o,a){var c=z.hasOwnProperty(s)?z[s]:null;(c!==null?c.type!==0:a||!(2<s.length)||s[0]!=="o"&&s[0]!=="O"||s[1]!=="n"&&s[1]!=="N")&&(qa(s,o,c,a)&&(o=null),a||c===null?oa(s)&&(o===null?i.removeAttribute(s):i.setAttribute(s,""+o)):c.mustUseProperty?i[c.propertyName]=o===null?c.type===3?!1:"":o:(s=c.attributeName,a=c.attributeNamespace,o===null?i.removeAttribute(s):(c=c.type,o=c===3||c===4&&o===!0?"":""+o,a?i.setAttributeNS(a,s,o):i.setAttribute(s,o))))}var ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for("react.element"),wa=Symbol.for("react.portal"),ya=Symbol.for("react.fragment"),za=Symbol.for("react.strict_mode"),Aa=Symbol.for("react.profiler"),Ba=Symbol.for("react.provider"),Ca=Symbol.for("react.context"),Da=Symbol.for("react.forward_ref"),Ea=Symbol.for("react.suspense"),Fa=Symbol.for("react.suspense_list"),Ga=Symbol.for("react.memo"),Ha=Symbol.for("react.lazy"),Ia=Symbol.for("react.offscreen"),Ja=Symbol.iterator;function Ka(i){return i===null||typeof i!="object"?null:(i=Ja&&i[Ja]||i["@@iterator"],typeof i=="function"?i:null)}var A=Object.assign,La;function Ma(i){if(La===void 0)try{throw Error()}catch(o){var s=o.stack.trim().match(/\n( *(at )?)/);La=s&&s[1]||""}return`
`+La+i}var Na=!1;function Oa(i,s){if(!i||Na)return"";Na=!0;var o=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(s)if(s=function(){throw Error()},Object.defineProperty(s.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(s,[])}catch(_){var a=_}Reflect.construct(i,[],s)}else{try{s.call()}catch(_){a=_}i.call(s.prototype)}else{try{throw Error()}catch(_){a=_}i()}}catch(_){if(_&&a&&typeof _.stack=="string"){for(var c=_.stack.split(`
`),d=a.stack.split(`
`),g=c.length-1,b=d.length-1;1<=g&&0<=b&&c[g]!==d[b];)b--;for(;1<=g&&0<=b;g--,b--)if(c[g]!==d[b]){if(g!==1||b!==1)do if(g--,b--,0>b||c[g]!==d[b]){var $=`
`+c[g].replace(" at new "," at ");return i.displayName&&$.includes("<anonymous>")&&($=$.replace("<anonymous>",i.displayName)),$}while(1<=g&&0<=b);break}}}finally{Na=!1,Error.prepareStackTrace=o}return(i=i?i.displayName||i.name:"")?Ma(i):""}function Pa(i){switch(i.tag){case 5:return Ma(i.type);case 16:return Ma("Lazy");case 13:return Ma("Suspense");case 19:return Ma("SuspenseList");case 0:case 2:case 15:return i=Oa(i.type,!1),i;case 11:return i=Oa(i.type.render,!1),i;case 1:return i=Oa(i.type,!0),i;default:return""}}function Qa(i){if(i==null)return null;if(typeof i=="function")return i.displayName||i.name||null;if(typeof i=="string")return i;switch(i){case ya:return"Fragment";case wa:return"Portal";case Aa:return"Profiler";case za:return"StrictMode";case Ea:return"Suspense";case Fa:return"SuspenseList"}if(typeof i=="object")switch(i.$$typeof){case Ca:return(i.displayName||"Context")+".Consumer";case Ba:return(i._context.displayName||"Context")+".Provider";case Da:var s=i.render;return i=i.displayName,i||(i=s.displayName||s.name||"",i=i!==""?"ForwardRef("+i+")":"ForwardRef"),i;case Ga:return s=i.displayName||null,s!==null?s:Qa(i.type)||"Memo";case Ha:s=i._payload,i=i._init;try{return Qa(i(s))}catch{}}return null}function Ra(i){var s=i.type;switch(i.tag){case 24:return"Cache";case 9:return(s.displayName||"Context")+".Consumer";case 10:return(s._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return i=s.render,i=i.displayName||i.name||"",s.displayName||(i!==""?"ForwardRef("+i+")":"ForwardRef");case 7:return"Fragment";case 5:return s;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Qa(s);case 8:return s===za?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof s=="function")return s.displayName||s.name||null;if(typeof s=="string")return s}return null}function Sa(i){switch(typeof i){case"boolean":case"number":case"string":case"undefined":return i;case"object":return i;default:return""}}function Ta(i){var s=i.type;return(i=i.nodeName)&&i.toLowerCase()==="input"&&(s==="checkbox"||s==="radio")}function Ua(i){var s=Ta(i)?"checked":"value",o=Object.getOwnPropertyDescriptor(i.constructor.prototype,s),a=""+i[s];if(!i.hasOwnProperty(s)&&typeof o<"u"&&typeof o.get=="function"&&typeof o.set=="function"){var c=o.get,d=o.set;return Object.defineProperty(i,s,{configurable:!0,get:function(){return c.call(this)},set:function(g){a=""+g,d.call(this,g)}}),Object.defineProperty(i,s,{enumerable:o.enumerable}),{getValue:function(){return a},setValue:function(g){a=""+g},stopTracking:function(){i._valueTracker=null,delete i[s]}}}}function Va(i){i._valueTracker||(i._valueTracker=Ua(i))}function Wa(i){if(!i)return!1;var s=i._valueTracker;if(!s)return!0;var o=s.getValue(),a="";return i&&(a=Ta(i)?i.checked?"true":"false":i.value),i=a,i!==o?(s.setValue(i),!0):!1}function Xa(i){if(i=i||(typeof document<"u"?document:void 0),typeof i>"u")return null;try{return i.activeElement||i.body}catch{return i.body}}function Ya(i,s){var o=s.checked;return A({},s,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:o??i._wrapperState.initialChecked})}function Za(i,s){var o=s.defaultValue==null?"":s.defaultValue,a=s.checked!=null?s.checked:s.defaultChecked;o=Sa(s.value!=null?s.value:o),i._wrapperState={initialChecked:a,initialValue:o,controlled:s.type==="checkbox"||s.type==="radio"?s.checked!=null:s.value!=null}}function ab(i,s){s=s.checked,s!=null&&ta(i,"checked",s,!1)}function bb(i,s){ab(i,s);var o=Sa(s.value),a=s.type;if(o!=null)a==="number"?(o===0&&i.value===""||i.value!=o)&&(i.value=""+o):i.value!==""+o&&(i.value=""+o);else if(a==="submit"||a==="reset"){i.removeAttribute("value");return}s.hasOwnProperty("value")?cb(i,s.type,o):s.hasOwnProperty("defaultValue")&&cb(i,s.type,Sa(s.defaultValue)),s.checked==null&&s.defaultChecked!=null&&(i.defaultChecked=!!s.defaultChecked)}function db(i,s,o){if(s.hasOwnProperty("value")||s.hasOwnProperty("defaultValue")){var a=s.type;if(!(a!=="submit"&&a!=="reset"||s.value!==void 0&&s.value!==null))return;s=""+i._wrapperState.initialValue,o||s===i.value||(i.value=s),i.defaultValue=s}o=i.name,o!==""&&(i.name=""),i.defaultChecked=!!i._wrapperState.initialChecked,o!==""&&(i.name=o)}function cb(i,s,o){(s!=="number"||Xa(i.ownerDocument)!==i)&&(o==null?i.defaultValue=""+i._wrapperState.initialValue:i.defaultValue!==""+o&&(i.defaultValue=""+o))}var eb=Array.isArray;function fb(i,s,o,a){if(i=i.options,s){s={};for(var c=0;c<o.length;c++)s["$"+o[c]]=!0;for(o=0;o<i.length;o++)c=s.hasOwnProperty("$"+i[o].value),i[o].selected!==c&&(i[o].selected=c),c&&a&&(i[o].defaultSelected=!0)}else{for(o=""+Sa(o),s=null,c=0;c<i.length;c++){if(i[c].value===o){i[c].selected=!0,a&&(i[c].defaultSelected=!0);return}s!==null||i[c].disabled||(s=i[c])}s!==null&&(s.selected=!0)}}function gb(i,s){if(s.dangerouslySetInnerHTML!=null)throw Error(p$3(91));return A({},s,{value:void 0,defaultValue:void 0,children:""+i._wrapperState.initialValue})}function hb(i,s){var o=s.value;if(o==null){if(o=s.children,s=s.defaultValue,o!=null){if(s!=null)throw Error(p$3(92));if(eb(o)){if(1<o.length)throw Error(p$3(93));o=o[0]}s=o}s==null&&(s=""),o=s}i._wrapperState={initialValue:Sa(o)}}function ib(i,s){var o=Sa(s.value),a=Sa(s.defaultValue);o!=null&&(o=""+o,o!==i.value&&(i.value=o),s.defaultValue==null&&i.defaultValue!==o&&(i.defaultValue=o)),a!=null&&(i.defaultValue=""+a)}function jb(i){var s=i.textContent;s===i._wrapperState.initialValue&&s!==""&&s!==null&&(i.value=s)}function kb(i){switch(i){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function lb(i,s){return i==null||i==="http://www.w3.org/1999/xhtml"?kb(s):i==="http://www.w3.org/2000/svg"&&s==="foreignObject"?"http://www.w3.org/1999/xhtml":i}var mb,nb=function(i){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(s,o,a,c){MSApp.execUnsafeLocalFunction(function(){return i(s,o,a,c)})}:i}(function(i,s){if(i.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in i)i.innerHTML=s;else{for(mb=mb||document.createElement("div"),mb.innerHTML="<svg>"+s.valueOf().toString()+"</svg>",s=mb.firstChild;i.firstChild;)i.removeChild(i.firstChild);for(;s.firstChild;)i.appendChild(s.firstChild)}});function ob(i,s){if(s){var o=i.firstChild;if(o&&o===i.lastChild&&o.nodeType===3){o.nodeValue=s;return}}i.textContent=s}var pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=["Webkit","ms","Moz","O"];Object.keys(pb).forEach(function(i){qb.forEach(function(s){s=s+i.charAt(0).toUpperCase()+i.substring(1),pb[s]=pb[i]})});function rb(i,s,o){return s==null||typeof s=="boolean"||s===""?"":o||typeof s!="number"||s===0||pb.hasOwnProperty(i)&&pb[i]?(""+s).trim():s+"px"}function sb(i,s){i=i.style;for(var o in s)if(s.hasOwnProperty(o)){var a=o.indexOf("--")===0,c=rb(o,s[o],a);o==="float"&&(o="cssFloat"),a?i.setProperty(o,c):i[o]=c}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ub(i,s){if(s){if(tb[i]&&(s.children!=null||s.dangerouslySetInnerHTML!=null))throw Error(p$3(137,i));if(s.dangerouslySetInnerHTML!=null){if(s.children!=null)throw Error(p$3(60));if(typeof s.dangerouslySetInnerHTML!="object"||!("__html"in s.dangerouslySetInnerHTML))throw Error(p$3(61))}if(s.style!=null&&typeof s.style!="object")throw Error(p$3(62))}}function vb(i,s){if(i.indexOf("-")===-1)return typeof s.is=="string";switch(i){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var wb=null;function xb(i){return i=i.target||i.srcElement||window,i.correspondingUseElement&&(i=i.correspondingUseElement),i.nodeType===3?i.parentNode:i}var yb=null,zb=null,Ab=null;function Bb(i){if(i=Cb(i)){if(typeof yb!="function")throw Error(p$3(280));var s=i.stateNode;s&&(s=Db(s),yb(i.stateNode,i.type,s))}}function Eb(i){zb?Ab?Ab.push(i):Ab=[i]:zb=i}function Fb(){if(zb){var i=zb,s=Ab;if(Ab=zb=null,Bb(i),s)for(i=0;i<s.length;i++)Bb(s[i])}}function Gb(i,s){return i(s)}function Hb(){}var Ib=!1;function Jb(i,s,o){if(Ib)return i(s,o);Ib=!0;try{return Gb(i,s,o)}finally{Ib=!1,(zb!==null||Ab!==null)&&(Hb(),Fb())}}function Kb(i,s){var o=i.stateNode;if(o===null)return null;var a=Db(o);if(a===null)return null;o=a[s];e:switch(s){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(i=i.type,a=!(i==="button"||i==="input"||i==="select"||i==="textarea")),i=!a;break e;default:i=!1}if(i)return null;if(o&&typeof o!="function")throw Error(p$3(231,s,typeof o));return o}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,"passive",{get:function(){Lb=!0}}),window.addEventListener("test",Mb,Mb),window.removeEventListener("test",Mb,Mb)}catch{Lb=!1}function Nb(i,s,o,a,c,d,g,b,$){var _=Array.prototype.slice.call(arguments,3);try{s.apply(o,_)}catch(_e){this.onError(_e)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(i){Ob=!0,Pb=i}};function Tb(i,s,o,a,c,d,g,b,$){Ob=!1,Pb=null,Nb.apply(Sb,arguments)}function Ub(i,s,o,a,c,d,g,b,$){if(Tb.apply(this,arguments),Ob){if(Ob){var _=Pb;Ob=!1,Pb=null}else throw Error(p$3(198));Qb||(Qb=!0,Rb=_)}}function Vb(i){var s=i,o=i;if(i.alternate)for(;s.return;)s=s.return;else{i=s;do s=i,s.flags&4098&&(o=s.return),i=s.return;while(i)}return s.tag===3?o:null}function Wb(i){if(i.tag===13){var s=i.memoizedState;if(s===null&&(i=i.alternate,i!==null&&(s=i.memoizedState)),s!==null)return s.dehydrated}return null}function Xb(i){if(Vb(i)!==i)throw Error(p$3(188))}function Yb(i){var s=i.alternate;if(!s){if(s=Vb(i),s===null)throw Error(p$3(188));return s!==i?null:i}for(var o=i,a=s;;){var c=o.return;if(c===null)break;var d=c.alternate;if(d===null){if(a=c.return,a!==null){o=a;continue}break}if(c.child===d.child){for(d=c.child;d;){if(d===o)return Xb(c),i;if(d===a)return Xb(c),s;d=d.sibling}throw Error(p$3(188))}if(o.return!==a.return)o=c,a=d;else{for(var g=!1,b=c.child;b;){if(b===o){g=!0,o=c,a=d;break}if(b===a){g=!0,a=c,o=d;break}b=b.sibling}if(!g){for(b=d.child;b;){if(b===o){g=!0,o=d,a=c;break}if(b===a){g=!0,a=d,o=c;break}b=b.sibling}if(!g)throw Error(p$3(189))}}if(o.alternate!==a)throw Error(p$3(190))}if(o.tag!==3)throw Error(p$3(188));return o.stateNode.current===o?i:s}function Zb(i){return i=Yb(i),i!==null?$b(i):null}function $b(i){if(i.tag===5||i.tag===6)return i;for(i=i.child;i!==null;){var s=$b(i);if(s!==null)return s;i=i.sibling}return null}var ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(i){if(lc&&typeof lc.onCommitFiberRoot=="function")try{lc.onCommitFiberRoot(kc,i,void 0,(i.current.flags&128)===128)}catch{}}var oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(i){return i>>>=0,i===0?32:31-(pc(i)/qc|0)|0}var rc=64,sc=4194304;function tc(i){switch(i&-i){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return i&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return i&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return i}}function uc(i,s){var o=i.pendingLanes;if(o===0)return 0;var a=0,c=i.suspendedLanes,d=i.pingedLanes,g=o&268435455;if(g!==0){var b=g&~c;b!==0?a=tc(b):(d&=g,d!==0&&(a=tc(d)))}else g=o&~c,g!==0?a=tc(g):d!==0&&(a=tc(d));if(a===0)return 0;if(s!==0&&s!==a&&!(s&c)&&(c=a&-a,d=s&-s,c>=d||c===16&&(d&4194240)!==0))return s;if(a&4&&(a|=o&16),s=i.entangledLanes,s!==0)for(i=i.entanglements,s&=a;0<s;)o=31-oc(s),c=1<<o,a|=i[o],s&=~c;return a}function vc(i,s){switch(i){case 1:case 2:case 4:return s+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return s+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function wc(i,s){for(var o=i.suspendedLanes,a=i.pingedLanes,c=i.expirationTimes,d=i.pendingLanes;0<d;){var g=31-oc(d),b=1<<g,$=c[g];$===-1?(!(b&o)||b&a)&&(c[g]=vc(b,s)):$<=s&&(i.expiredLanes|=b),d&=~b}}function xc(i){return i=i.pendingLanes&-1073741825,i!==0?i:i&1073741824?1073741824:0}function yc(){var i=rc;return rc<<=1,!(rc&4194240)&&(rc=64),i}function zc(i){for(var s=[],o=0;31>o;o++)s.push(i);return s}function Ac(i,s,o){i.pendingLanes|=s,s!==536870912&&(i.suspendedLanes=0,i.pingedLanes=0),i=i.eventTimes,s=31-oc(s),i[s]=o}function Bc(i,s){var o=i.pendingLanes&~s;i.pendingLanes=s,i.suspendedLanes=0,i.pingedLanes=0,i.expiredLanes&=s,i.mutableReadLanes&=s,i.entangledLanes&=s,s=i.entanglements;var a=i.eventTimes;for(i=i.expirationTimes;0<o;){var c=31-oc(o),d=1<<c;s[c]=0,a[c]=-1,i[c]=-1,o&=~d}}function Cc(i,s){var o=i.entangledLanes|=s;for(i=i.entanglements;o;){var a=31-oc(o),c=1<<a;c&s|i[a]&s&&(i[a]|=s),o&=~c}}var C=0;function Dc(i){return i&=-i,1<i?4<i?i&268435455?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Sc(i,s){switch(i){case"focusin":case"focusout":Lc=null;break;case"dragenter":case"dragleave":Mc=null;break;case"mouseover":case"mouseout":Nc=null;break;case"pointerover":case"pointerout":Oc.delete(s.pointerId);break;case"gotpointercapture":case"lostpointercapture":Pc.delete(s.pointerId)}}function Tc(i,s,o,a,c,d){return i===null||i.nativeEvent!==d?(i={blockedOn:s,domEventName:o,eventSystemFlags:a,nativeEvent:d,targetContainers:[c]},s!==null&&(s=Cb(s),s!==null&&Fc(s)),i):(i.eventSystemFlags|=a,s=i.targetContainers,c!==null&&s.indexOf(c)===-1&&s.push(c),i)}function Uc(i,s,o,a,c){switch(s){case"focusin":return Lc=Tc(Lc,i,s,o,a,c),!0;case"dragenter":return Mc=Tc(Mc,i,s,o,a,c),!0;case"mouseover":return Nc=Tc(Nc,i,s,o,a,c),!0;case"pointerover":var d=c.pointerId;return Oc.set(d,Tc(Oc.get(d)||null,i,s,o,a,c)),!0;case"gotpointercapture":return d=c.pointerId,Pc.set(d,Tc(Pc.get(d)||null,i,s,o,a,c)),!0}return!1}function Vc(i){var s=Wc(i.target);if(s!==null){var o=Vb(s);if(o!==null){if(s=o.tag,s===13){if(s=Wb(o),s!==null){i.blockedOn=s,Ic(i.priority,function(){Gc(o)});return}}else if(s===3&&o.stateNode.current.memoizedState.isDehydrated){i.blockedOn=o.tag===3?o.stateNode.containerInfo:null;return}}}i.blockedOn=null}function Xc(i){if(i.blockedOn!==null)return!1;for(var s=i.targetContainers;0<s.length;){var o=Yc(i.domEventName,i.eventSystemFlags,s[0],i.nativeEvent);if(o===null){o=i.nativeEvent;var a=new o.constructor(o.type,o);wb=a,o.target.dispatchEvent(a),wb=null}else return s=Cb(o),s!==null&&Fc(s),i.blockedOn=o,!1;s.shift()}return!0}function Zc(i,s,o){Xc(i)&&o.delete(s)}function $c(){Jc=!1,Lc!==null&&Xc(Lc)&&(Lc=null),Mc!==null&&Xc(Mc)&&(Mc=null),Nc!==null&&Xc(Nc)&&(Nc=null),Oc.forEach(Zc),Pc.forEach(Zc)}function ad(i,s){i.blockedOn===s&&(i.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}function bd(i){function s(c){return ad(c,i)}if(0<Kc.length){ad(Kc[0],i);for(var o=1;o<Kc.length;o++){var a=Kc[o];a.blockedOn===i&&(a.blockedOn=null)}}for(Lc!==null&&ad(Lc,i),Mc!==null&&ad(Mc,i),Nc!==null&&ad(Nc,i),Oc.forEach(s),Pc.forEach(s),o=0;o<Qc.length;o++)a=Qc[o],a.blockedOn===i&&(a.blockedOn=null);for(;0<Qc.length&&(o=Qc[0],o.blockedOn===null);)Vc(o),o.blockedOn===null&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;function ed(i,s,o,a){var c=C,d=cd.transition;cd.transition=null;try{C=1,fd(i,s,o,a)}finally{C=c,cd.transition=d}}function gd(i,s,o,a){var c=C,d=cd.transition;cd.transition=null;try{C=4,fd(i,s,o,a)}finally{C=c,cd.transition=d}}function fd(i,s,o,a){if(dd){var c=Yc(i,s,o,a);if(c===null)hd(i,s,a,id,o),Sc(i,a);else if(Uc(c,i,s,o,a))a.stopPropagation();else if(Sc(i,a),s&4&&-1<Rc.indexOf(i)){for(;c!==null;){var d=Cb(c);if(d!==null&&Ec(d),d=Yc(i,s,o,a),d===null&&hd(i,s,a,id,o),d===c)break;c=d}c!==null&&a.stopPropagation()}else hd(i,s,a,null,o)}}var id=null;function Yc(i,s,o,a){if(id=null,i=xb(a),i=Wc(i),i!==null)if(s=Vb(i),s===null)i=null;else if(o=s.tag,o===13){if(i=Wb(s),i!==null)return i;i=null}else if(o===3){if(s.stateNode.current.memoizedState.isDehydrated)return s.tag===3?s.stateNode.containerInfo:null;i=null}else s!==i&&(i=null);return id=i,null}function jd(i){switch(i){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var i,s=ld,o=s.length,a,c="value"in kd?kd.value:kd.textContent,d=c.length;for(i=0;i<o&&s[i]===c[i];i++);var g=o-i;for(a=1;a<=g&&s[o-a]===c[d-a];a++);return md=c.slice(i,1<a?1-a:void 0)}function od(i){var s=i.keyCode;return"charCode"in i?(i=i.charCode,i===0&&s===13&&(i=13)):i=s,i===10&&(i=13),32<=i||i===13?i:0}function pd(){return!0}function qd(){return!1}function rd(i){function s(o,a,c,d,g){this._reactName=o,this._targetInst=c,this.type=a,this.nativeEvent=d,this.target=g,this.currentTarget=null;for(var b in i)i.hasOwnProperty(b)&&(o=i[b],this[b]=o?o(d):d[b]);return this.isDefaultPrevented=(d.defaultPrevented!=null?d.defaultPrevented:d.returnValue===!1)?pd:qd,this.isPropagationStopped=qd,this}return A(s.prototype,{preventDefault:function(){this.defaultPrevented=!0;var o=this.nativeEvent;o&&(o.preventDefault?o.preventDefault():typeof o.returnValue!="unknown"&&(o.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var o=this.nativeEvent;o&&(o.stopPropagation?o.stopPropagation():typeof o.cancelBubble!="unknown"&&(o.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd}),s}var sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(i){return i.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(i){return i.relatedTarget===void 0?i.fromElement===i.srcElement?i.toElement:i.fromElement:i.relatedTarget},movementX:function(i){return"movementX"in i?i.movementX:(i!==yd&&(yd&&i.type==="mousemove"?(wd=i.screenX-yd.screenX,xd=i.screenY-yd.screenY):xd=wd=0,yd=i),wd)},movementY:function(i){return"movementY"in i?i.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(i){return"clipboardData"in i?i.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Nd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Od={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pd(i){var s=this.nativeEvent;return s.getModifierState?s.getModifierState(i):(i=Od[i])?!!s[i]:!1}function zd(){return Pd}var Qd=A({},ud,{key:function(i){if(i.key){var s=Md[i.key]||i.key;if(s!=="Unidentified")return s}return i.type==="keypress"?(i=od(i),i===13?"Enter":String.fromCharCode(i)):i.type==="keydown"||i.type==="keyup"?Nd[i.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(i){return i.type==="keypress"?od(i):0},keyCode:function(i){return i.type==="keydown"||i.type==="keyup"?i.keyCode:0},which:function(i){return i.type==="keypress"?od(i):i.type==="keydown"||i.type==="keyup"?i.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(i){return"deltaX"in i?i.deltaX:"wheelDeltaX"in i?-i.wheelDeltaX:0},deltaY:function(i){return"deltaY"in i?i.deltaY:"wheelDeltaY"in i?-i.wheelDeltaY:"wheelDelta"in i?-i.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&"CompositionEvent"in window,be=null;ia&&"documentMode"in document&&(be=document.documentMode);var ce=ia&&"TextEvent"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;function ge(i,s){switch(i){case"keyup":return $d.indexOf(s.keyCode)!==-1;case"keydown":return s.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function he(i){return i=i.detail,typeof i=="object"&&"data"in i?i.data:null}var ie=!1;function je(i,s){switch(i){case"compositionend":return he(s);case"keypress":return s.which!==32?null:(fe=!0,ee);case"textInput":return i=s.data,i===ee&&fe?null:i;default:return null}}function ke(i,s){if(ie)return i==="compositionend"||!ae&&ge(i,s)?(i=nd(),md=ld=kd=null,ie=!1,i):null;switch(i){case"paste":return null;case"keypress":if(!(s.ctrlKey||s.altKey||s.metaKey)||s.ctrlKey&&s.altKey){if(s.char&&1<s.char.length)return s.char;if(s.which)return String.fromCharCode(s.which)}return null;case"compositionend":return de&&s.locale!=="ko"?null:s.data;default:return null}}var le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(i){var s=i&&i.nodeName&&i.nodeName.toLowerCase();return s==="input"?!!le[i.type]:s==="textarea"}function ne(i,s,o,a){Eb(a),s=oe(s,"onChange"),0<s.length&&(o=new td("onChange","change",null,o,a),i.push({event:o,listeners:s}))}var pe=null,qe=null;function re(i){se(i,0)}function te(i){var s=ue(i);if(Wa(s))return i}function ve(i,s){if(i==="change")return s}var we=!1;if(ia){var xe;if(ia){var ye="oninput"in document;if(!ye){var ze=document.createElement("div");ze.setAttribute("oninput","return;"),ye=typeof ze.oninput=="function"}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent("onpropertychange",Be),qe=pe=null)}function Be(i){if(i.propertyName==="value"&&te(qe)){var s=[];ne(s,qe,i,xb(i)),Jb(re,s)}}function Ce(i,s,o){i==="focusin"?(Ae(),pe=s,qe=o,pe.attachEvent("onpropertychange",Be)):i==="focusout"&&Ae()}function De(i){if(i==="selectionchange"||i==="keyup"||i==="keydown")return te(qe)}function Ee(i,s){if(i==="click")return te(s)}function Fe(i,s){if(i==="input"||i==="change")return te(s)}function Ge(i,s){return i===s&&(i!==0||1/i===1/s)||i!==i&&s!==s}var He=typeof Object.is=="function"?Object.is:Ge;function Ie(i,s){if(He(i,s))return!0;if(typeof i!="object"||i===null||typeof s!="object"||s===null)return!1;var o=Object.keys(i),a=Object.keys(s);if(o.length!==a.length)return!1;for(a=0;a<o.length;a++){var c=o[a];if(!ja.call(s,c)||!He(i[c],s[c]))return!1}return!0}function Je(i){for(;i&&i.firstChild;)i=i.firstChild;return i}function Ke(i,s){var o=Je(i);i=0;for(var a;o;){if(o.nodeType===3){if(a=i+o.textContent.length,i<=s&&a>=s)return{node:o,offset:s-i};i=a}e:{for(;o;){if(o.nextSibling){o=o.nextSibling;break e}o=o.parentNode}o=void 0}o=Je(o)}}function Le(i,s){return i&&s?i===s?!0:i&&i.nodeType===3?!1:s&&s.nodeType===3?Le(i,s.parentNode):"contains"in i?i.contains(s):i.compareDocumentPosition?!!(i.compareDocumentPosition(s)&16):!1:!1}function Me(){for(var i=window,s=Xa();s instanceof i.HTMLIFrameElement;){try{var o=typeof s.contentWindow.location.href=="string"}catch{o=!1}if(o)i=s.contentWindow;else break;s=Xa(i.document)}return s}function Ne(i){var s=i&&i.nodeName&&i.nodeName.toLowerCase();return s&&(s==="input"&&(i.type==="text"||i.type==="search"||i.type==="tel"||i.type==="url"||i.type==="password")||s==="textarea"||i.contentEditable==="true")}function Oe(i){var s=Me(),o=i.focusedElem,a=i.selectionRange;if(s!==o&&o&&o.ownerDocument&&Le(o.ownerDocument.documentElement,o)){if(a!==null&&Ne(o)){if(s=a.start,i=a.end,i===void 0&&(i=s),"selectionStart"in o)o.selectionStart=s,o.selectionEnd=Math.min(i,o.value.length);else if(i=(s=o.ownerDocument||document)&&s.defaultView||window,i.getSelection){i=i.getSelection();var c=o.textContent.length,d=Math.min(a.start,c);a=a.end===void 0?d:Math.min(a.end,c),!i.extend&&d>a&&(c=a,a=d,d=c),c=Ke(o,d);var g=Ke(o,a);c&&g&&(i.rangeCount!==1||i.anchorNode!==c.node||i.anchorOffset!==c.offset||i.focusNode!==g.node||i.focusOffset!==g.offset)&&(s=s.createRange(),s.setStart(c.node,c.offset),i.removeAllRanges(),d>a?(i.addRange(s),i.extend(g.node,g.offset)):(s.setEnd(g.node,g.offset),i.addRange(s)))}}for(s=[],i=o;i=i.parentNode;)i.nodeType===1&&s.push({element:i,left:i.scrollLeft,top:i.scrollTop});for(typeof o.focus=="function"&&o.focus(),o=0;o<s.length;o++)i=s[o],i.element.scrollLeft=i.left,i.element.scrollTop=i.top}}var Pe=ia&&"documentMode"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;function Ue(i,s,o){var a=o.window===o?o.document:o.nodeType===9?o:o.ownerDocument;Te||Qe==null||Qe!==Xa(a)||(a=Qe,"selectionStart"in a&&Ne(a)?a={start:a.selectionStart,end:a.selectionEnd}:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection(),a={anchorNode:a.anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset}),Se&&Ie(Se,a)||(Se=a,a=oe(Re,"onSelect"),0<a.length&&(s=new td("onSelect","select",null,s,o),i.push({event:s,listeners:a}),s.target=Qe)))}function Ve(i,s){var o={};return o[i.toLowerCase()]=s.toLowerCase(),o["Webkit"+i]="webkit"+s,o["Moz"+i]="moz"+s,o}var We={animationend:Ve("Animation","AnimationEnd"),animationiteration:Ve("Animation","AnimationIteration"),animationstart:Ve("Animation","AnimationStart"),transitionend:Ve("Transition","TransitionEnd")},Xe={},Ye={};ia&&(Ye=document.createElement("div").style,"AnimationEvent"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),"TransitionEvent"in window||delete We.transitionend.transition);function Ze(i){if(Xe[i])return Xe[i];if(!We[i])return i;var s=We[i],o;for(o in s)if(s.hasOwnProperty(o)&&o in Ye)return Xe[i]=s[o];return i}var $e=Ze("animationend"),af=Ze("animationiteration"),bf=Ze("animationstart"),cf=Ze("transitionend"),df=new Map,ef="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function ff(i,s){df.set(i,s),fa(s,[i])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,"on"+kf)}ff($e,"onAnimationEnd");ff(af,"onAnimationIteration");ff(bf,"onAnimationStart");ff("dblclick","onDoubleClick");ff("focusin","onFocus");ff("focusout","onBlur");ff(cf,"onTransitionEnd");ha("onMouseEnter",["mouseout","mouseover"]);ha("onMouseLeave",["mouseout","mouseover"]);ha("onPointerEnter",["pointerout","pointerover"]);ha("onPointerLeave",["pointerout","pointerover"]);fa("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));fa("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));fa("onBeforeInput",["compositionend","keypress","textInput","paste"]);fa("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));fa("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));fa("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var lf="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),mf=new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));function nf(i,s,o){var a=i.type||"unknown-event";i.currentTarget=o,Ub(a,s,void 0,i),i.currentTarget=null}function se(i,s){s=(s&4)!==0;for(var o=0;o<i.length;o++){var a=i[o],c=a.event;a=a.listeners;e:{var d=void 0;if(s)for(var g=a.length-1;0<=g;g--){var b=a[g],$=b.instance,_=b.currentTarget;if(b=b.listener,$!==d&&c.isPropagationStopped())break e;nf(c,b,_),d=$}else for(g=0;g<a.length;g++){if(b=a[g],$=b.instance,_=b.currentTarget,b=b.listener,$!==d&&c.isPropagationStopped())break e;nf(c,b,_),d=$}}}if(Qb)throw i=Rb,Qb=!1,Rb=null,i}function D(i,s){var o=s[of];o===void 0&&(o=s[of]=new Set);var a=i+"__bubble";o.has(a)||(pf(s,i,2,!1),o.add(a))}function qf(i,s,o){var a=0;s&&(a|=4),pf(o,i,a,s)}var rf="_reactListening"+Math.random().toString(36).slice(2);function sf(i){if(!i[rf]){i[rf]=!0,da.forEach(function(o){o!=="selectionchange"&&(mf.has(o)||qf(o,!1,i),qf(o,!0,i))});var s=i.nodeType===9?i:i.ownerDocument;s===null||s[rf]||(s[rf]=!0,qf("selectionchange",!1,s))}}function pf(i,s,o,a){switch(jd(s)){case 1:var c=ed;break;case 4:c=gd;break;default:c=fd}o=c.bind(null,s,o,i),c=void 0,!Lb||s!=="touchstart"&&s!=="touchmove"&&s!=="wheel"||(c=!0),a?c!==void 0?i.addEventListener(s,o,{capture:!0,passive:c}):i.addEventListener(s,o,!0):c!==void 0?i.addEventListener(s,o,{passive:c}):i.addEventListener(s,o,!1)}function hd(i,s,o,a,c){var d=a;if(!(s&1)&&!(s&2)&&a!==null)e:for(;;){if(a===null)return;var g=a.tag;if(g===3||g===4){var b=a.stateNode.containerInfo;if(b===c||b.nodeType===8&&b.parentNode===c)break;if(g===4)for(g=a.return;g!==null;){var $=g.tag;if(($===3||$===4)&&($=g.stateNode.containerInfo,$===c||$.nodeType===8&&$.parentNode===c))return;g=g.return}for(;b!==null;){if(g=Wc(b),g===null)return;if($=g.tag,$===5||$===6){a=d=g;continue e}b=b.parentNode}}a=a.return}Jb(function(){var _=d,_e=xb(o),et=[];e:{var rt=df.get(i);if(rt!==void 0){var tt=td,j=i;switch(i){case"keypress":if(od(o)===0)break e;case"keydown":case"keyup":tt=Rd;break;case"focusin":j="focus",tt=Fd;break;case"focusout":j="blur",tt=Fd;break;case"beforeblur":case"afterblur":tt=Fd;break;case"click":if(o.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":tt=Bd;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":tt=Dd;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":tt=Vd;break;case $e:case af:case bf:tt=Hd;break;case cf:tt=Xd;break;case"scroll":tt=vd;break;case"wheel":tt=Zd;break;case"copy":case"cut":case"paste":tt=Jd;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":tt=Td}var nt=(s&4)!==0,st=!nt&&i==="scroll",ot=nt?rt!==null?rt+"Capture":null:rt;nt=[];for(var ut=_,ht;ut!==null;){ht=ut;var pt=ht.stateNode;if(ht.tag===5&&pt!==null&&(ht=pt,ot!==null&&(pt=Kb(ut,ot),pt!=null&&nt.push(tf(ut,pt,ht)))),st)break;ut=ut.return}0<nt.length&&(rt=new tt(rt,j,null,o,_e),et.push({event:rt,listeners:nt}))}}if(!(s&7)){e:{if(rt=i==="mouseover"||i==="pointerover",tt=i==="mouseout"||i==="pointerout",rt&&o!==wb&&(j=o.relatedTarget||o.fromElement)&&(Wc(j)||j[uf]))break e;if((tt||rt)&&(rt=_e.window===_e?_e:(rt=_e.ownerDocument)?rt.defaultView||rt.parentWindow:window,tt?(j=o.relatedTarget||o.toElement,tt=_,j=j?Wc(j):null,j!==null&&(st=Vb(j),j!==st||j.tag!==5&&j.tag!==6)&&(j=null)):(tt=null,j=_),tt!==j)){if(nt=Bd,pt="onMouseLeave",ot="onMouseEnter",ut="mouse",(i==="pointerout"||i==="pointerover")&&(nt=Td,pt="onPointerLeave",ot="onPointerEnter",ut="pointer"),st=tt==null?rt:ue(tt),ht=j==null?rt:ue(j),rt=new nt(pt,ut+"leave",tt,o,_e),rt.target=st,rt.relatedTarget=ht,pt=null,Wc(_e)===_&&(nt=new nt(ot,ut+"enter",j,o,_e),nt.target=ht,nt.relatedTarget=st,pt=nt),st=pt,tt&&j)t:{for(nt=tt,ot=j,ut=0,ht=nt;ht;ht=vf(ht))ut++;for(ht=0,pt=ot;pt;pt=vf(pt))ht++;for(;0<ut-ht;)nt=vf(nt),ut--;for(;0<ht-ut;)ot=vf(ot),ht--;for(;ut--;){if(nt===ot||ot!==null&&nt===ot.alternate)break t;nt=vf(nt),ot=vf(ot)}nt=null}else nt=null;tt!==null&&wf(et,rt,tt,nt,!1),j!==null&&st!==null&&wf(et,st,j,nt,!0)}}e:{if(rt=_?ue(_):window,tt=rt.nodeName&&rt.nodeName.toLowerCase(),tt==="select"||tt==="input"&&rt.type==="file")var it=ve;else if(me(rt))if(we)it=Fe;else{it=De;var yt=Ce}else(tt=rt.nodeName)&&tt.toLowerCase()==="input"&&(rt.type==="checkbox"||rt.type==="radio")&&(it=Ee);if(it&&(it=it(i,_))){ne(et,it,o,_e);break e}yt&&yt(i,rt,_),i==="focusout"&&(yt=rt._wrapperState)&&yt.controlled&&rt.type==="number"&&cb(rt,"number",rt.value)}switch(yt=_?ue(_):window,i){case"focusin":(me(yt)||yt.contentEditable==="true")&&(Qe=yt,Re=_,Se=null);break;case"focusout":Se=Re=Qe=null;break;case"mousedown":Te=!0;break;case"contextmenu":case"mouseup":case"dragend":Te=!1,Ue(et,o,_e);break;case"selectionchange":if(Pe)break;case"keydown":case"keyup":Ue(et,o,_e)}var ft;if(ae)e:{switch(i){case"compositionstart":var bt="onCompositionStart";break e;case"compositionend":bt="onCompositionEnd";break e;case"compositionupdate":bt="onCompositionUpdate";break e}bt=void 0}else ie?ge(i,o)&&(bt="onCompositionEnd"):i==="keydown"&&o.keyCode===229&&(bt="onCompositionStart");bt&&(de&&o.locale!=="ko"&&(ie||bt!=="onCompositionStart"?bt==="onCompositionEnd"&&ie&&(ft=nd()):(kd=_e,ld="value"in kd?kd.value:kd.textContent,ie=!0)),yt=oe(_,bt),0<yt.length&&(bt=new Ld(bt,i,null,o,_e),et.push({event:bt,listeners:yt}),ft?bt.data=ft:(ft=he(o),ft!==null&&(bt.data=ft)))),(ft=ce?je(i,o):ke(i,o))&&(_=oe(_,"onBeforeInput"),0<_.length&&(_e=new Ld("onBeforeInput","beforeinput",null,o,_e),et.push({event:_e,listeners:_}),_e.data=ft))}se(et,s)})}function tf(i,s,o){return{instance:i,listener:s,currentTarget:o}}function oe(i,s){for(var o=s+"Capture",a=[];i!==null;){var c=i,d=c.stateNode;c.tag===5&&d!==null&&(c=d,d=Kb(i,o),d!=null&&a.unshift(tf(i,d,c)),d=Kb(i,s),d!=null&&a.push(tf(i,d,c))),i=i.return}return a}function vf(i){if(i===null)return null;do i=i.return;while(i&&i.tag!==5);return i||null}function wf(i,s,o,a,c){for(var d=s._reactName,g=[];o!==null&&o!==a;){var b=o,$=b.alternate,_=b.stateNode;if($!==null&&$===a)break;b.tag===5&&_!==null&&(b=_,c?($=Kb(o,d),$!=null&&g.unshift(tf(o,$,b))):c||($=Kb(o,d),$!=null&&g.push(tf(o,$,b)))),o=o.return}g.length!==0&&i.push({event:s,listeners:g})}var xf=/\r\n?/g,yf=/\u0000|\uFFFD/g;function zf(i){return(typeof i=="string"?i:""+i).replace(xf,`
`).replace(yf,"")}function Af(i,s,o){if(s=zf(s),zf(i)!==s&&o)throw Error(p$3(425))}function Bf(){}var Cf=null,Df=null;function Ef(i,s){return i==="textarea"||i==="noscript"||typeof s.children=="string"||typeof s.children=="number"||typeof s.dangerouslySetInnerHTML=="object"&&s.dangerouslySetInnerHTML!==null&&s.dangerouslySetInnerHTML.__html!=null}var Ff=typeof setTimeout=="function"?setTimeout:void 0,Gf=typeof clearTimeout=="function"?clearTimeout:void 0,Hf=typeof Promise=="function"?Promise:void 0,Jf=typeof queueMicrotask=="function"?queueMicrotask:typeof Hf<"u"?function(i){return Hf.resolve(null).then(i).catch(If)}:Ff;function If(i){setTimeout(function(){throw i})}function Kf(i,s){var o=s,a=0;do{var c=o.nextSibling;if(i.removeChild(o),c&&c.nodeType===8)if(o=c.data,o==="/$"){if(a===0){i.removeChild(c),bd(s);return}a--}else o!=="$"&&o!=="$?"&&o!=="$!"||a++;o=c}while(o);bd(s)}function Lf(i){for(;i!=null;i=i.nextSibling){var s=i.nodeType;if(s===1||s===3)break;if(s===8){if(s=i.data,s==="$"||s==="$!"||s==="$?")break;if(s==="/$")return null}}return i}function Mf(i){i=i.previousSibling;for(var s=0;i;){if(i.nodeType===8){var o=i.data;if(o==="$"||o==="$!"||o==="$?"){if(s===0)return i;s--}else o==="/$"&&s++}i=i.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of="__reactFiber$"+Nf,Pf="__reactProps$"+Nf,uf="__reactContainer$"+Nf,of="__reactEvents$"+Nf,Qf="__reactListeners$"+Nf,Rf="__reactHandles$"+Nf;function Wc(i){var s=i[Of];if(s)return s;for(var o=i.parentNode;o;){if(s=o[uf]||o[Of]){if(o=s.alternate,s.child!==null||o!==null&&o.child!==null)for(i=Mf(i);i!==null;){if(o=i[Of])return o;i=Mf(i)}return s}i=o,o=i.parentNode}return null}function Cb(i){return i=i[Of]||i[uf],!i||i.tag!==5&&i.tag!==6&&i.tag!==13&&i.tag!==3?null:i}function ue(i){if(i.tag===5||i.tag===6)return i.stateNode;throw Error(p$3(33))}function Db(i){return i[Pf]||null}var Sf=[],Tf=-1;function Uf(i){return{current:i}}function E(i){0>Tf||(i.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(i,s){Tf++,Sf[Tf]=i.current,i.current=s}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(i,s){var o=i.type.contextTypes;if(!o)return Vf;var a=i.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===s)return a.__reactInternalMemoizedMaskedChildContext;var c={},d;for(d in o)c[d]=s[d];return a&&(i=i.stateNode,i.__reactInternalMemoizedUnmaskedChildContext=s,i.__reactInternalMemoizedMaskedChildContext=c),c}function Zf(i){return i=i.childContextTypes,i!=null}function $f(){E(Wf),E(H)}function ag(i,s,o){if(H.current!==Vf)throw Error(p$3(168));G(H,s),G(Wf,o)}function bg(i,s,o){var a=i.stateNode;if(s=s.childContextTypes,typeof a.getChildContext!="function")return o;a=a.getChildContext();for(var c in a)if(!(c in s))throw Error(p$3(108,Ra(i)||"Unknown",c));return A({},o,a)}function cg(i){return i=(i=i.stateNode)&&i.__reactInternalMemoizedMergedChildContext||Vf,Xf=H.current,G(H,i),G(Wf,Wf.current),!0}function dg(i,s,o){var a=i.stateNode;if(!a)throw Error(p$3(169));o?(i=bg(i,s,Xf),a.__reactInternalMemoizedMergedChildContext=i,E(Wf),E(H),G(H,i)):E(Wf),G(Wf,o)}var eg=null,fg=!1,gg=!1;function hg(i){eg===null?eg=[i]:eg.push(i)}function ig(i){fg=!0,hg(i)}function jg(){if(!gg&&eg!==null){gg=!0;var i=0,s=C;try{var o=eg;for(C=1;i<o.length;i++){var a=o[i];do a=a(!0);while(a!==null)}eg=null,fg=!1}catch(c){throw eg!==null&&(eg=eg.slice(i+1)),ac(fc,jg),c}finally{C=s,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg="";function tg(i,s){kg[lg++]=ng,kg[lg++]=mg,mg=i,ng=s}function ug(i,s,o){og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,qg=i;var a=rg;i=sg;var c=32-oc(a)-1;a&=~(1<<c),o+=1;var d=32-oc(s)+c;if(30<d){var g=c-c%5;d=(a&(1<<g)-1).toString(32),a>>=g,c-=g,rg=1<<32-oc(s)+c|o<<c|a,sg=d+i}else rg=1<<d|o<<c|a,sg=i}function vg(i){i.return!==null&&(tg(i,1),ug(i,1,0))}function wg(i){for(;i===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;i===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;function Ag(i,s){var o=Bg(5,null,null,0);o.elementType="DELETED",o.stateNode=s,o.return=i,s=i.deletions,s===null?(i.deletions=[o],i.flags|=16):s.push(o)}function Cg(i,s){switch(i.tag){case 5:var o=i.type;return s=s.nodeType!==1||o.toLowerCase()!==s.nodeName.toLowerCase()?null:s,s!==null?(i.stateNode=s,xg=i,yg=Lf(s.firstChild),!0):!1;case 6:return s=i.pendingProps===""||s.nodeType!==3?null:s,s!==null?(i.stateNode=s,xg=i,yg=null,!0):!1;case 13:return s=s.nodeType!==8?null:s,s!==null?(o=qg!==null?{id:rg,overflow:sg}:null,i.memoizedState={dehydrated:s,treeContext:o,retryLane:1073741824},o=Bg(18,null,null,0),o.stateNode=s,o.return=i,i.child=o,xg=i,yg=null,!0):!1;default:return!1}}function Dg(i){return(i.mode&1)!==0&&(i.flags&128)===0}function Eg(i){if(I){var s=yg;if(s){var o=s;if(!Cg(i,s)){if(Dg(i))throw Error(p$3(418));s=Lf(o.nextSibling);var a=xg;s&&Cg(i,s)?Ag(a,o):(i.flags=i.flags&-4097|2,I=!1,xg=i)}}else{if(Dg(i))throw Error(p$3(418));i.flags=i.flags&-4097|2,I=!1,xg=i}}}function Fg(i){for(i=i.return;i!==null&&i.tag!==5&&i.tag!==3&&i.tag!==13;)i=i.return;xg=i}function Gg(i){if(i!==xg)return!1;if(!I)return Fg(i),I=!0,!1;var s;if((s=i.tag!==3)&&!(s=i.tag!==5)&&(s=i.type,s=s!=="head"&&s!=="body"&&!Ef(i.type,i.memoizedProps)),s&&(s=yg)){if(Dg(i))throw Hg(),Error(p$3(418));for(;s;)Ag(i,s),s=Lf(s.nextSibling)}if(Fg(i),i.tag===13){if(i=i.memoizedState,i=i!==null?i.dehydrated:null,!i)throw Error(p$3(317));e:{for(i=i.nextSibling,s=0;i;){if(i.nodeType===8){var o=i.data;if(o==="/$"){if(s===0){yg=Lf(i.nextSibling);break e}s--}else o!=="$"&&o!=="$!"&&o!=="$?"||s++}i=i.nextSibling}yg=null}}else yg=xg?Lf(i.stateNode.nextSibling):null;return!0}function Hg(){for(var i=yg;i;)i=Lf(i.nextSibling)}function Ig(){yg=xg=null,I=!1}function Jg(i){zg===null?zg=[i]:zg.push(i)}var Kg=ua.ReactCurrentBatchConfig;function Lg(i,s){if(i&&i.defaultProps){s=A({},s),i=i.defaultProps;for(var o in i)s[o]===void 0&&(s[o]=i[o]);return s}return s}var Mg=Uf(null),Ng=null,Og=null,Pg=null;function Qg(){Pg=Og=Ng=null}function Rg(i){var s=Mg.current;E(Mg),i._currentValue=s}function Sg(i,s,o){for(;i!==null;){var a=i.alternate;if((i.childLanes&s)!==s?(i.childLanes|=s,a!==null&&(a.childLanes|=s)):a!==null&&(a.childLanes&s)!==s&&(a.childLanes|=s),i===o)break;i=i.return}}function Tg(i,s){Ng=i,Pg=Og=null,i=i.dependencies,i!==null&&i.firstContext!==null&&(i.lanes&s&&(Ug=!0),i.firstContext=null)}function Vg(i){var s=i._currentValue;if(Pg!==i)if(i={context:i,memoizedValue:s,next:null},Og===null){if(Ng===null)throw Error(p$3(308));Og=i,Ng.dependencies={lanes:0,firstContext:i}}else Og=Og.next=i;return s}var Wg=null;function Xg(i){Wg===null?Wg=[i]:Wg.push(i)}function Yg(i,s,o,a){var c=s.interleaved;return c===null?(o.next=o,Xg(s)):(o.next=c.next,c.next=o),s.interleaved=o,Zg(i,a)}function Zg(i,s){i.lanes|=s;var o=i.alternate;for(o!==null&&(o.lanes|=s),o=i,i=i.return;i!==null;)i.childLanes|=s,o=i.alternate,o!==null&&(o.childLanes|=s),o=i,i=i.return;return o.tag===3?o.stateNode:null}var $g=!1;function ah(i){i.updateQueue={baseState:i.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function bh(i,s){i=i.updateQueue,s.updateQueue===i&&(s.updateQueue={baseState:i.baseState,firstBaseUpdate:i.firstBaseUpdate,lastBaseUpdate:i.lastBaseUpdate,shared:i.shared,effects:i.effects})}function ch(i,s){return{eventTime:i,lane:s,tag:0,payload:null,callback:null,next:null}}function dh(i,s,o){var a=i.updateQueue;if(a===null)return null;if(a=a.shared,K&2){var c=a.pending;return c===null?s.next=s:(s.next=c.next,c.next=s),a.pending=s,Zg(i,o)}return c=a.interleaved,c===null?(s.next=s,Xg(a)):(s.next=c.next,c.next=s),a.interleaved=s,Zg(i,o)}function eh(i,s,o){if(s=s.updateQueue,s!==null&&(s=s.shared,(o&4194240)!==0)){var a=s.lanes;a&=i.pendingLanes,o|=a,s.lanes=o,Cc(i,o)}}function fh(i,s){var o=i.updateQueue,a=i.alternate;if(a!==null&&(a=a.updateQueue,o===a)){var c=null,d=null;if(o=o.firstBaseUpdate,o!==null){do{var g={eventTime:o.eventTime,lane:o.lane,tag:o.tag,payload:o.payload,callback:o.callback,next:null};d===null?c=d=g:d=d.next=g,o=o.next}while(o!==null);d===null?c=d=s:d=d.next=s}else c=d=s;o={baseState:a.baseState,firstBaseUpdate:c,lastBaseUpdate:d,shared:a.shared,effects:a.effects},i.updateQueue=o;return}i=o.lastBaseUpdate,i===null?o.firstBaseUpdate=s:i.next=s,o.lastBaseUpdate=s}function gh(i,s,o,a){var c=i.updateQueue;$g=!1;var d=c.firstBaseUpdate,g=c.lastBaseUpdate,b=c.shared.pending;if(b!==null){c.shared.pending=null;var $=b,_=$.next;$.next=null,g===null?d=_:g.next=_,g=$;var _e=i.alternate;_e!==null&&(_e=_e.updateQueue,b=_e.lastBaseUpdate,b!==g&&(b===null?_e.firstBaseUpdate=_:b.next=_,_e.lastBaseUpdate=$))}if(d!==null){var et=c.baseState;g=0,_e=_=$=null,b=d;do{var rt=b.lane,tt=b.eventTime;if((a&rt)===rt){_e!==null&&(_e=_e.next={eventTime:tt,lane:0,tag:b.tag,payload:b.payload,callback:b.callback,next:null});e:{var j=i,nt=b;switch(rt=s,tt=o,nt.tag){case 1:if(j=nt.payload,typeof j=="function"){et=j.call(tt,et,rt);break e}et=j;break e;case 3:j.flags=j.flags&-65537|128;case 0:if(j=nt.payload,rt=typeof j=="function"?j.call(tt,et,rt):j,rt==null)break e;et=A({},et,rt);break e;case 2:$g=!0}}b.callback!==null&&b.lane!==0&&(i.flags|=64,rt=c.effects,rt===null?c.effects=[b]:rt.push(b))}else tt={eventTime:tt,lane:rt,tag:b.tag,payload:b.payload,callback:b.callback,next:null},_e===null?(_=_e=tt,$=et):_e=_e.next=tt,g|=rt;if(b=b.next,b===null){if(b=c.shared.pending,b===null)break;rt=b,b=rt.next,rt.next=null,c.lastBaseUpdate=rt,c.shared.pending=null}}while(1);if(_e===null&&($=et),c.baseState=$,c.firstBaseUpdate=_,c.lastBaseUpdate=_e,s=c.shared.interleaved,s!==null){c=s;do g|=c.lane,c=c.next;while(c!==s)}else d===null&&(c.shared.lanes=0);hh|=g,i.lanes=g,i.memoizedState=et}}function ih(i,s,o){if(i=s.effects,s.effects=null,i!==null)for(s=0;s<i.length;s++){var a=i[s],c=a.callback;if(c!==null){if(a.callback=null,a=o,typeof c!="function")throw Error(p$3(191,c));c.call(a)}}}var jh=new aa.Component().refs;function kh(i,s,o,a){s=i.memoizedState,o=o(a,s),o=o==null?s:A({},s,o),i.memoizedState=o,i.lanes===0&&(i.updateQueue.baseState=o)}var nh={isMounted:function(i){return(i=i._reactInternals)?Vb(i)===i:!1},enqueueSetState:function(i,s,o){i=i._reactInternals;var a=L(),c=lh(i),d=ch(a,c);d.payload=s,o!=null&&(d.callback=o),s=dh(i,d,c),s!==null&&(mh(s,i,c,a),eh(s,i,c))},enqueueReplaceState:function(i,s,o){i=i._reactInternals;var a=L(),c=lh(i),d=ch(a,c);d.tag=1,d.payload=s,o!=null&&(d.callback=o),s=dh(i,d,c),s!==null&&(mh(s,i,c,a),eh(s,i,c))},enqueueForceUpdate:function(i,s){i=i._reactInternals;var o=L(),a=lh(i),c=ch(o,a);c.tag=2,s!=null&&(c.callback=s),s=dh(i,c,a),s!==null&&(mh(s,i,a,o),eh(s,i,a))}};function oh(i,s,o,a,c,d,g){return i=i.stateNode,typeof i.shouldComponentUpdate=="function"?i.shouldComponentUpdate(a,d,g):s.prototype&&s.prototype.isPureReactComponent?!Ie(o,a)||!Ie(c,d):!0}function ph(i,s,o){var a=!1,c=Vf,d=s.contextType;return typeof d=="object"&&d!==null?d=Vg(d):(c=Zf(s)?Xf:H.current,a=s.contextTypes,d=(a=a!=null)?Yf(i,c):Vf),s=new s(o,d),i.memoizedState=s.state!==null&&s.state!==void 0?s.state:null,s.updater=nh,i.stateNode=s,s._reactInternals=i,a&&(i=i.stateNode,i.__reactInternalMemoizedUnmaskedChildContext=c,i.__reactInternalMemoizedMaskedChildContext=d),s}function qh(i,s,o,a){i=s.state,typeof s.componentWillReceiveProps=="function"&&s.componentWillReceiveProps(o,a),typeof s.UNSAFE_componentWillReceiveProps=="function"&&s.UNSAFE_componentWillReceiveProps(o,a),s.state!==i&&nh.enqueueReplaceState(s,s.state,null)}function rh(i,s,o,a){var c=i.stateNode;c.props=o,c.state=i.memoizedState,c.refs=jh,ah(i);var d=s.contextType;typeof d=="object"&&d!==null?c.context=Vg(d):(d=Zf(s)?Xf:H.current,c.context=Yf(i,d)),c.state=i.memoizedState,d=s.getDerivedStateFromProps,typeof d=="function"&&(kh(i,s,d,o),c.state=i.memoizedState),typeof s.getDerivedStateFromProps=="function"||typeof c.getSnapshotBeforeUpdate=="function"||typeof c.UNSAFE_componentWillMount!="function"&&typeof c.componentWillMount!="function"||(s=c.state,typeof c.componentWillMount=="function"&&c.componentWillMount(),typeof c.UNSAFE_componentWillMount=="function"&&c.UNSAFE_componentWillMount(),s!==c.state&&nh.enqueueReplaceState(c,c.state,null),gh(i,o,c,a),c.state=i.memoizedState),typeof c.componentDidMount=="function"&&(i.flags|=4194308)}function sh(i,s,o){if(i=o.ref,i!==null&&typeof i!="function"&&typeof i!="object"){if(o._owner){if(o=o._owner,o){if(o.tag!==1)throw Error(p$3(309));var a=o.stateNode}if(!a)throw Error(p$3(147,i));var c=a,d=""+i;return s!==null&&s.ref!==null&&typeof s.ref=="function"&&s.ref._stringRef===d?s.ref:(s=function(g){var b=c.refs;b===jh&&(b=c.refs={}),g===null?delete b[d]:b[d]=g},s._stringRef=d,s)}if(typeof i!="string")throw Error(p$3(284));if(!o._owner)throw Error(p$3(290,i))}return i}function th(i,s){throw i=Object.prototype.toString.call(s),Error(p$3(31,i==="[object Object]"?"object with keys {"+Object.keys(s).join(", ")+"}":i))}function uh(i){var s=i._init;return s(i._payload)}function vh(i){function s(ot,ut){if(i){var ht=ot.deletions;ht===null?(ot.deletions=[ut],ot.flags|=16):ht.push(ut)}}function o(ot,ut){if(!i)return null;for(;ut!==null;)s(ot,ut),ut=ut.sibling;return null}function a(ot,ut){for(ot=new Map;ut!==null;)ut.key!==null?ot.set(ut.key,ut):ot.set(ut.index,ut),ut=ut.sibling;return ot}function c(ot,ut){return ot=wh(ot,ut),ot.index=0,ot.sibling=null,ot}function d(ot,ut,ht){return ot.index=ht,i?(ht=ot.alternate,ht!==null?(ht=ht.index,ht<ut?(ot.flags|=2,ut):ht):(ot.flags|=2,ut)):(ot.flags|=1048576,ut)}function g(ot){return i&&ot.alternate===null&&(ot.flags|=2),ot}function b(ot,ut,ht,pt){return ut===null||ut.tag!==6?(ut=xh(ht,ot.mode,pt),ut.return=ot,ut):(ut=c(ut,ht),ut.return=ot,ut)}function $(ot,ut,ht,pt){var it=ht.type;return it===ya?_e(ot,ut,ht.props.children,pt,ht.key):ut!==null&&(ut.elementType===it||typeof it=="object"&&it!==null&&it.$$typeof===Ha&&uh(it)===ut.type)?(pt=c(ut,ht.props),pt.ref=sh(ot,ut,ht),pt.return=ot,pt):(pt=yh(ht.type,ht.key,ht.props,null,ot.mode,pt),pt.ref=sh(ot,ut,ht),pt.return=ot,pt)}function _(ot,ut,ht,pt){return ut===null||ut.tag!==4||ut.stateNode.containerInfo!==ht.containerInfo||ut.stateNode.implementation!==ht.implementation?(ut=zh(ht,ot.mode,pt),ut.return=ot,ut):(ut=c(ut,ht.children||[]),ut.return=ot,ut)}function _e(ot,ut,ht,pt,it){return ut===null||ut.tag!==7?(ut=Ah(ht,ot.mode,pt,it),ut.return=ot,ut):(ut=c(ut,ht),ut.return=ot,ut)}function et(ot,ut,ht){if(typeof ut=="string"&&ut!==""||typeof ut=="number")return ut=xh(""+ut,ot.mode,ht),ut.return=ot,ut;if(typeof ut=="object"&&ut!==null){switch(ut.$$typeof){case va:return ht=yh(ut.type,ut.key,ut.props,null,ot.mode,ht),ht.ref=sh(ot,null,ut),ht.return=ot,ht;case wa:return ut=zh(ut,ot.mode,ht),ut.return=ot,ut;case Ha:var pt=ut._init;return et(ot,pt(ut._payload),ht)}if(eb(ut)||Ka(ut))return ut=Ah(ut,ot.mode,ht,null),ut.return=ot,ut;th(ot,ut)}return null}function rt(ot,ut,ht,pt){var it=ut!==null?ut.key:null;if(typeof ht=="string"&&ht!==""||typeof ht=="number")return it!==null?null:b(ot,ut,""+ht,pt);if(typeof ht=="object"&&ht!==null){switch(ht.$$typeof){case va:return ht.key===it?$(ot,ut,ht,pt):null;case wa:return ht.key===it?_(ot,ut,ht,pt):null;case Ha:return it=ht._init,rt(ot,ut,it(ht._payload),pt)}if(eb(ht)||Ka(ht))return it!==null?null:_e(ot,ut,ht,pt,null);th(ot,ht)}return null}function tt(ot,ut,ht,pt,it){if(typeof pt=="string"&&pt!==""||typeof pt=="number")return ot=ot.get(ht)||null,b(ut,ot,""+pt,it);if(typeof pt=="object"&&pt!==null){switch(pt.$$typeof){case va:return ot=ot.get(pt.key===null?ht:pt.key)||null,$(ut,ot,pt,it);case wa:return ot=ot.get(pt.key===null?ht:pt.key)||null,_(ut,ot,pt,it);case Ha:var yt=pt._init;return tt(ot,ut,ht,yt(pt._payload),it)}if(eb(pt)||Ka(pt))return ot=ot.get(ht)||null,_e(ut,ot,pt,it,null);th(ut,pt)}return null}function j(ot,ut,ht,pt){for(var it=null,yt=null,ft=ut,bt=ut=0,Tt=null;ft!==null&&bt<ht.length;bt++){ft.index>bt?(Tt=ft,ft=null):Tt=ft.sibling;var Ct=rt(ot,ft,ht[bt],pt);if(Ct===null){ft===null&&(ft=Tt);break}i&&ft&&Ct.alternate===null&&s(ot,ft),ut=d(Ct,ut,bt),yt===null?it=Ct:yt.sibling=Ct,yt=Ct,ft=Tt}if(bt===ht.length)return o(ot,ft),I&&tg(ot,bt),it;if(ft===null){for(;bt<ht.length;bt++)ft=et(ot,ht[bt],pt),ft!==null&&(ut=d(ft,ut,bt),yt===null?it=ft:yt.sibling=ft,yt=ft);return I&&tg(ot,bt),it}for(ft=a(ot,ft);bt<ht.length;bt++)Tt=tt(ft,ot,bt,ht[bt],pt),Tt!==null&&(i&&Tt.alternate!==null&&ft.delete(Tt.key===null?bt:Tt.key),ut=d(Tt,ut,bt),yt===null?it=Tt:yt.sibling=Tt,yt=Tt);return i&&ft.forEach(function(_t){return s(ot,_t)}),I&&tg(ot,bt),it}function nt(ot,ut,ht,pt){var it=Ka(ht);if(typeof it!="function")throw Error(p$3(150));if(ht=it.call(ht),ht==null)throw Error(p$3(151));for(var yt=it=null,ft=ut,bt=ut=0,Tt=null,Ct=ht.next();ft!==null&&!Ct.done;bt++,Ct=ht.next()){ft.index>bt?(Tt=ft,ft=null):Tt=ft.sibling;var _t=rt(ot,ft,Ct.value,pt);if(_t===null){ft===null&&(ft=Tt);break}i&&ft&&_t.alternate===null&&s(ot,ft),ut=d(_t,ut,bt),yt===null?it=_t:yt.sibling=_t,yt=_t,ft=Tt}if(Ct.done)return o(ot,ft),I&&tg(ot,bt),it;if(ft===null){for(;!Ct.done;bt++,Ct=ht.next())Ct=et(ot,Ct.value,pt),Ct!==null&&(ut=d(Ct,ut,bt),yt===null?it=Ct:yt.sibling=Ct,yt=Ct);return I&&tg(ot,bt),it}for(ft=a(ot,ft);!Ct.done;bt++,Ct=ht.next())Ct=tt(ft,ot,bt,Ct.value,pt),Ct!==null&&(i&&Ct.alternate!==null&&ft.delete(Ct.key===null?bt:Ct.key),ut=d(Ct,ut,bt),yt===null?it=Ct:yt.sibling=Ct,yt=Ct);return i&&ft.forEach(function(Ot){return s(ot,Ot)}),I&&tg(ot,bt),it}function st(ot,ut,ht,pt){if(typeof ht=="object"&&ht!==null&&ht.type===ya&&ht.key===null&&(ht=ht.props.children),typeof ht=="object"&&ht!==null){switch(ht.$$typeof){case va:e:{for(var it=ht.key,yt=ut;yt!==null;){if(yt.key===it){if(it=ht.type,it===ya){if(yt.tag===7){o(ot,yt.sibling),ut=c(yt,ht.props.children),ut.return=ot,ot=ut;break e}}else if(yt.elementType===it||typeof it=="object"&&it!==null&&it.$$typeof===Ha&&uh(it)===yt.type){o(ot,yt.sibling),ut=c(yt,ht.props),ut.ref=sh(ot,yt,ht),ut.return=ot,ot=ut;break e}o(ot,yt);break}else s(ot,yt);yt=yt.sibling}ht.type===ya?(ut=Ah(ht.props.children,ot.mode,pt,ht.key),ut.return=ot,ot=ut):(pt=yh(ht.type,ht.key,ht.props,null,ot.mode,pt),pt.ref=sh(ot,ut,ht),pt.return=ot,ot=pt)}return g(ot);case wa:e:{for(yt=ht.key;ut!==null;){if(ut.key===yt)if(ut.tag===4&&ut.stateNode.containerInfo===ht.containerInfo&&ut.stateNode.implementation===ht.implementation){o(ot,ut.sibling),ut=c(ut,ht.children||[]),ut.return=ot,ot=ut;break e}else{o(ot,ut);break}else s(ot,ut);ut=ut.sibling}ut=zh(ht,ot.mode,pt),ut.return=ot,ot=ut}return g(ot);case Ha:return yt=ht._init,st(ot,ut,yt(ht._payload),pt)}if(eb(ht))return j(ot,ut,ht,pt);if(Ka(ht))return nt(ot,ut,ht,pt);th(ot,ht)}return typeof ht=="string"&&ht!==""||typeof ht=="number"?(ht=""+ht,ut!==null&&ut.tag===6?(o(ot,ut.sibling),ut=c(ut,ht),ut.return=ot,ot=ut):(o(ot,ut),ut=xh(ht,ot.mode,pt),ut.return=ot,ot=ut),g(ot)):o(ot,ut)}return st}var Bh=vh(!0),Ch=vh(!1),Dh={},Eh=Uf(Dh),Fh=Uf(Dh),Gh=Uf(Dh);function Hh(i){if(i===Dh)throw Error(p$3(174));return i}function Ih(i,s){switch(G(Gh,s),G(Fh,i),G(Eh,Dh),i=s.nodeType,i){case 9:case 11:s=(s=s.documentElement)?s.namespaceURI:lb(null,"");break;default:i=i===8?s.parentNode:s,s=i.namespaceURI||null,i=i.tagName,s=lb(s,i)}E(Eh),G(Eh,s)}function Jh(){E(Eh),E(Fh),E(Gh)}function Kh(i){Hh(Gh.current);var s=Hh(Eh.current),o=lb(s,i.type);s!==o&&(G(Fh,i),G(Eh,o))}function Lh(i){Fh.current===i&&(E(Eh),E(Fh))}var M=Uf(0);function Mh(i){for(var s=i;s!==null;){if(s.tag===13){var o=s.memoizedState;if(o!==null&&(o=o.dehydrated,o===null||o.data==="$?"||o.data==="$!"))return s}else if(s.tag===19&&s.memoizedProps.revealOrder!==void 0){if(s.flags&128)return s}else if(s.child!==null){s.child.return=s,s=s.child;continue}if(s===i)break;for(;s.sibling===null;){if(s.return===null||s.return===i)return null;s=s.return}s.sibling.return=s.return,s=s.sibling}return null}var Nh=[];function Oh(){for(var i=0;i<Nh.length;i++)Nh[i]._workInProgressVersionPrimary=null;Nh.length=0}var Ph=ua.ReactCurrentDispatcher,Qh=ua.ReactCurrentBatchConfig,Rh=0,N=null,O=null,P=null,Sh=!1,Th=!1,Uh=0,Vh=0;function Q(){throw Error(p$3(321))}function Wh(i,s){if(s===null)return!1;for(var o=0;o<s.length&&o<i.length;o++)if(!He(i[o],s[o]))return!1;return!0}function Xh(i,s,o,a,c,d){if(Rh=d,N=s,s.memoizedState=null,s.updateQueue=null,s.lanes=0,Ph.current=i===null||i.memoizedState===null?Yh:Zh,i=o(a,c),Th){d=0;do{if(Th=!1,Uh=0,25<=d)throw Error(p$3(301));d+=1,P=O=null,s.updateQueue=null,Ph.current=$h,i=o(a,c)}while(Th)}if(Ph.current=ai,s=O!==null&&O.next!==null,Rh=0,P=O=N=null,Sh=!1,s)throw Error(p$3(300));return i}function bi(){var i=Uh!==0;return Uh=0,i}function ci(){var i={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return P===null?N.memoizedState=P=i:P=P.next=i,P}function di(){if(O===null){var i=N.alternate;i=i!==null?i.memoizedState:null}else i=O.next;var s=P===null?N.memoizedState:P.next;if(s!==null)P=s,O=i;else{if(i===null)throw Error(p$3(310));O=i,i={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null},P===null?N.memoizedState=P=i:P=P.next=i}return P}function ei(i,s){return typeof s=="function"?s(i):s}function fi(i){var s=di(),o=s.queue;if(o===null)throw Error(p$3(311));o.lastRenderedReducer=i;var a=O,c=a.baseQueue,d=o.pending;if(d!==null){if(c!==null){var g=c.next;c.next=d.next,d.next=g}a.baseQueue=c=d,o.pending=null}if(c!==null){d=c.next,a=a.baseState;var b=g=null,$=null,_=d;do{var _e=_.lane;if((Rh&_e)===_e)$!==null&&($=$.next={lane:0,action:_.action,hasEagerState:_.hasEagerState,eagerState:_.eagerState,next:null}),a=_.hasEagerState?_.eagerState:i(a,_.action);else{var et={lane:_e,action:_.action,hasEagerState:_.hasEagerState,eagerState:_.eagerState,next:null};$===null?(b=$=et,g=a):$=$.next=et,N.lanes|=_e,hh|=_e}_=_.next}while(_!==null&&_!==d);$===null?g=a:$.next=b,He(a,s.memoizedState)||(Ug=!0),s.memoizedState=a,s.baseState=g,s.baseQueue=$,o.lastRenderedState=a}if(i=o.interleaved,i!==null){c=i;do d=c.lane,N.lanes|=d,hh|=d,c=c.next;while(c!==i)}else c===null&&(o.lanes=0);return[s.memoizedState,o.dispatch]}function gi(i){var s=di(),o=s.queue;if(o===null)throw Error(p$3(311));o.lastRenderedReducer=i;var a=o.dispatch,c=o.pending,d=s.memoizedState;if(c!==null){o.pending=null;var g=c=c.next;do d=i(d,g.action),g=g.next;while(g!==c);He(d,s.memoizedState)||(Ug=!0),s.memoizedState=d,s.baseQueue===null&&(s.baseState=d),o.lastRenderedState=d}return[d,a]}function hi(){}function ii(i,s){var o=N,a=di(),c=s(),d=!He(a.memoizedState,c);if(d&&(a.memoizedState=c,Ug=!0),a=a.queue,ji(ki.bind(null,o,a,i),[i]),a.getSnapshot!==s||d||P!==null&&P.memoizedState.tag&1){if(o.flags|=2048,li(9,mi.bind(null,o,a,c,s),void 0,null),R===null)throw Error(p$3(349));Rh&30||ni(o,s,c)}return c}function ni(i,s,o){i.flags|=16384,i={getSnapshot:s,value:o},s=N.updateQueue,s===null?(s={lastEffect:null,stores:null},N.updateQueue=s,s.stores=[i]):(o=s.stores,o===null?s.stores=[i]:o.push(i))}function mi(i,s,o,a){s.value=o,s.getSnapshot=a,oi(s)&&pi(i)}function ki(i,s,o){return o(function(){oi(s)&&pi(i)})}function oi(i){var s=i.getSnapshot;i=i.value;try{var o=s();return!He(i,o)}catch{return!0}}function pi(i){var s=Zg(i,1);s!==null&&mh(s,i,1,-1)}function qi(i){var s=ci();return typeof i=="function"&&(i=i()),s.memoizedState=s.baseState=i,i={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ei,lastRenderedState:i},s.queue=i,i=i.dispatch=ri.bind(null,N,i),[s.memoizedState,i]}function li(i,s,o,a){return i={tag:i,create:s,destroy:o,deps:a,next:null},s=N.updateQueue,s===null?(s={lastEffect:null,stores:null},N.updateQueue=s,s.lastEffect=i.next=i):(o=s.lastEffect,o===null?s.lastEffect=i.next=i:(a=o.next,o.next=i,i.next=a,s.lastEffect=i)),i}function si(){return di().memoizedState}function ti(i,s,o,a){var c=ci();N.flags|=i,c.memoizedState=li(1|s,o,void 0,a===void 0?null:a)}function ui(i,s,o,a){var c=di();a=a===void 0?null:a;var d=void 0;if(O!==null){var g=O.memoizedState;if(d=g.destroy,a!==null&&Wh(a,g.deps)){c.memoizedState=li(s,o,d,a);return}}N.flags|=i,c.memoizedState=li(1|s,o,d,a)}function vi(i,s){return ti(8390656,8,i,s)}function ji(i,s){return ui(2048,8,i,s)}function wi(i,s){return ui(4,2,i,s)}function xi(i,s){return ui(4,4,i,s)}function yi(i,s){if(typeof s=="function")return i=i(),s(i),function(){s(null)};if(s!=null)return i=i(),s.current=i,function(){s.current=null}}function zi(i,s,o){return o=o!=null?o.concat([i]):null,ui(4,4,yi.bind(null,s,i),o)}function Ai(){}function Bi(i,s){var o=di();s=s===void 0?null:s;var a=o.memoizedState;return a!==null&&s!==null&&Wh(s,a[1])?a[0]:(o.memoizedState=[i,s],i)}function Ci(i,s){var o=di();s=s===void 0?null:s;var a=o.memoizedState;return a!==null&&s!==null&&Wh(s,a[1])?a[0]:(i=i(),o.memoizedState=[i,s],i)}function Di(i,s,o){return Rh&21?(He(o,s)||(o=yc(),N.lanes|=o,hh|=o,i.baseState=!0),s):(i.baseState&&(i.baseState=!1,Ug=!0),i.memoizedState=o)}function Ei(i,s){var o=C;C=o!==0&&4>o?o:4,i(!0);var a=Qh.transition;Qh.transition={};try{i(!1),s()}finally{C=o,Qh.transition=a}}function Fi(){return di().memoizedState}function Gi(i,s,o){var a=lh(i);if(o={lane:a,action:o,hasEagerState:!1,eagerState:null,next:null},Hi(i))Ii(s,o);else if(o=Yg(i,s,o,a),o!==null){var c=L();mh(o,i,a,c),Ji(o,s,a)}}function ri(i,s,o){var a=lh(i),c={lane:a,action:o,hasEagerState:!1,eagerState:null,next:null};if(Hi(i))Ii(s,c);else{var d=i.alternate;if(i.lanes===0&&(d===null||d.lanes===0)&&(d=s.lastRenderedReducer,d!==null))try{var g=s.lastRenderedState,b=d(g,o);if(c.hasEagerState=!0,c.eagerState=b,He(b,g)){var $=s.interleaved;$===null?(c.next=c,Xg(s)):(c.next=$.next,$.next=c),s.interleaved=c;return}}catch{}finally{}o=Yg(i,s,c,a),o!==null&&(c=L(),mh(o,i,a,c),Ji(o,s,a))}}function Hi(i){var s=i.alternate;return i===N||s!==null&&s===N}function Ii(i,s){Th=Sh=!0;var o=i.pending;o===null?s.next=s:(s.next=o.next,o.next=s),i.pending=s}function Ji(i,s,o){if(o&4194240){var a=s.lanes;a&=i.pendingLanes,o|=a,s.lanes=o,Cc(i,o)}}var ai={readContext:Vg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useInsertionEffect:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useSyncExternalStore:Q,useId:Q,unstable_isNewReconciler:!1},Yh={readContext:Vg,useCallback:function(i,s){return ci().memoizedState=[i,s===void 0?null:s],i},useContext:Vg,useEffect:vi,useImperativeHandle:function(i,s,o){return o=o!=null?o.concat([i]):null,ti(4194308,4,yi.bind(null,s,i),o)},useLayoutEffect:function(i,s){return ti(4194308,4,i,s)},useInsertionEffect:function(i,s){return ti(4,2,i,s)},useMemo:function(i,s){var o=ci();return s=s===void 0?null:s,i=i(),o.memoizedState=[i,s],i},useReducer:function(i,s,o){var a=ci();return s=o!==void 0?o(s):s,a.memoizedState=a.baseState=s,i={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:i,lastRenderedState:s},a.queue=i,i=i.dispatch=Gi.bind(null,N,i),[a.memoizedState,i]},useRef:function(i){var s=ci();return i={current:i},s.memoizedState=i},useState:qi,useDebugValue:Ai,useDeferredValue:function(i){return ci().memoizedState=i},useTransition:function(){var i=qi(!1),s=i[0];return i=Ei.bind(null,i[1]),ci().memoizedState=i,[s,i]},useMutableSource:function(){},useSyncExternalStore:function(i,s,o){var a=N,c=ci();if(I){if(o===void 0)throw Error(p$3(407));o=o()}else{if(o=s(),R===null)throw Error(p$3(349));Rh&30||ni(a,s,o)}c.memoizedState=o;var d={value:o,getSnapshot:s};return c.queue=d,vi(ki.bind(null,a,d,i),[i]),a.flags|=2048,li(9,mi.bind(null,a,d,o,s),void 0,null),o},useId:function(){var i=ci(),s=R.identifierPrefix;if(I){var o=sg,a=rg;o=(a&~(1<<32-oc(a)-1)).toString(32)+o,s=":"+s+"R"+o,o=Uh++,0<o&&(s+="H"+o.toString(32)),s+=":"}else o=Vh++,s=":"+s+"r"+o.toString(32)+":";return i.memoizedState=s},unstable_isNewReconciler:!1},Zh={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:fi,useRef:si,useState:function(){return fi(ei)},useDebugValue:Ai,useDeferredValue:function(i){var s=di();return Di(s,O.memoizedState,i)},useTransition:function(){var i=fi(ei)[0],s=di().memoizedState;return[i,s]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1},$h={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:gi,useRef:si,useState:function(){return gi(ei)},useDebugValue:Ai,useDeferredValue:function(i){var s=di();return O===null?s.memoizedState=i:Di(s,O.memoizedState,i)},useTransition:function(){var i=gi(ei)[0],s=di().memoizedState;return[i,s]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1};function Ki(i,s){try{var o="",a=s;do o+=Pa(a),a=a.return;while(a);var c=o}catch(d){c=`
Error generating stack: `+d.message+`
`+d.stack}return{value:i,source:s,stack:c,digest:null}}function Li(i,s,o){return{value:i,source:null,stack:o??null,digest:s??null}}function Mi(i,s){try{console.error(s.value)}catch(o){setTimeout(function(){throw o})}}var Ni=typeof WeakMap=="function"?WeakMap:Map;function Oi(i,s,o){o=ch(-1,o),o.tag=3,o.payload={element:null};var a=s.value;return o.callback=function(){Pi||(Pi=!0,Qi=a),Mi(i,s)},o}function Ri(i,s,o){o=ch(-1,o),o.tag=3;var a=i.type.getDerivedStateFromError;if(typeof a=="function"){var c=s.value;o.payload=function(){return a(c)},o.callback=function(){Mi(i,s)}}var d=i.stateNode;return d!==null&&typeof d.componentDidCatch=="function"&&(o.callback=function(){Mi(i,s),typeof a!="function"&&(Si===null?Si=new Set([this]):Si.add(this));var g=s.stack;this.componentDidCatch(s.value,{componentStack:g!==null?g:""})}),o}function Ti(i,s,o){var a=i.pingCache;if(a===null){a=i.pingCache=new Ni;var c=new Set;a.set(s,c)}else c=a.get(s),c===void 0&&(c=new Set,a.set(s,c));c.has(o)||(c.add(o),i=Ui.bind(null,i,s,o),s.then(i,i))}function Vi(i){do{var s;if((s=i.tag===13)&&(s=i.memoizedState,s=s!==null?s.dehydrated!==null:!0),s)return i;i=i.return}while(i!==null);return null}function Wi(i,s,o,a,c){return i.mode&1?(i.flags|=65536,i.lanes=c,i):(i===s?i.flags|=65536:(i.flags|=128,o.flags|=131072,o.flags&=-52805,o.tag===1&&(o.alternate===null?o.tag=17:(s=ch(-1,1),s.tag=2,dh(o,s,1))),o.lanes|=1),i)}var Xi=ua.ReactCurrentOwner,Ug=!1;function Yi(i,s,o,a){s.child=i===null?Ch(s,null,o,a):Bh(s,i.child,o,a)}function Zi(i,s,o,a,c){o=o.render;var d=s.ref;return Tg(s,c),a=Xh(i,s,o,a,d,c),o=bi(),i!==null&&!Ug?(s.updateQueue=i.updateQueue,s.flags&=-2053,i.lanes&=~c,$i(i,s,c)):(I&&o&&vg(s),s.flags|=1,Yi(i,s,a,c),s.child)}function aj(i,s,o,a,c){if(i===null){var d=o.type;return typeof d=="function"&&!bj(d)&&d.defaultProps===void 0&&o.compare===null&&o.defaultProps===void 0?(s.tag=15,s.type=d,cj(i,s,d,a,c)):(i=yh(o.type,null,a,s,s.mode,c),i.ref=s.ref,i.return=s,s.child=i)}if(d=i.child,!(i.lanes&c)){var g=d.memoizedProps;if(o=o.compare,o=o!==null?o:Ie,o(g,a)&&i.ref===s.ref)return $i(i,s,c)}return s.flags|=1,i=wh(d,a),i.ref=s.ref,i.return=s,s.child=i}function cj(i,s,o,a,c){if(i!==null){var d=i.memoizedProps;if(Ie(d,a)&&i.ref===s.ref)if(Ug=!1,s.pendingProps=a=d,(i.lanes&c)!==0)i.flags&131072&&(Ug=!0);else return s.lanes=i.lanes,$i(i,s,c)}return dj(i,s,o,a,c)}function ej(i,s,o){var a=s.pendingProps,c=a.children,d=i!==null?i.memoizedState:null;if(a.mode==="hidden")if(!(s.mode&1))s.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(fj,gj),gj|=o;else{if(!(o&1073741824))return i=d!==null?d.baseLanes|o:o,s.lanes=s.childLanes=1073741824,s.memoizedState={baseLanes:i,cachePool:null,transitions:null},s.updateQueue=null,G(fj,gj),gj|=i,null;s.memoizedState={baseLanes:0,cachePool:null,transitions:null},a=d!==null?d.baseLanes:o,G(fj,gj),gj|=a}else d!==null?(a=d.baseLanes|o,s.memoizedState=null):a=o,G(fj,gj),gj|=a;return Yi(i,s,c,o),s.child}function hj(i,s){var o=s.ref;(i===null&&o!==null||i!==null&&i.ref!==o)&&(s.flags|=512,s.flags|=2097152)}function dj(i,s,o,a,c){var d=Zf(o)?Xf:H.current;return d=Yf(s,d),Tg(s,c),o=Xh(i,s,o,a,d,c),a=bi(),i!==null&&!Ug?(s.updateQueue=i.updateQueue,s.flags&=-2053,i.lanes&=~c,$i(i,s,c)):(I&&a&&vg(s),s.flags|=1,Yi(i,s,o,c),s.child)}function ij(i,s,o,a,c){if(Zf(o)){var d=!0;cg(s)}else d=!1;if(Tg(s,c),s.stateNode===null)jj(i,s),ph(s,o,a),rh(s,o,a,c),a=!0;else if(i===null){var g=s.stateNode,b=s.memoizedProps;g.props=b;var $=g.context,_=o.contextType;typeof _=="object"&&_!==null?_=Vg(_):(_=Zf(o)?Xf:H.current,_=Yf(s,_));var _e=o.getDerivedStateFromProps,et=typeof _e=="function"||typeof g.getSnapshotBeforeUpdate=="function";et||typeof g.UNSAFE_componentWillReceiveProps!="function"&&typeof g.componentWillReceiveProps!="function"||(b!==a||$!==_)&&qh(s,g,a,_),$g=!1;var rt=s.memoizedState;g.state=rt,gh(s,a,g,c),$=s.memoizedState,b!==a||rt!==$||Wf.current||$g?(typeof _e=="function"&&(kh(s,o,_e,a),$=s.memoizedState),(b=$g||oh(s,o,b,a,rt,$,_))?(et||typeof g.UNSAFE_componentWillMount!="function"&&typeof g.componentWillMount!="function"||(typeof g.componentWillMount=="function"&&g.componentWillMount(),typeof g.UNSAFE_componentWillMount=="function"&&g.UNSAFE_componentWillMount()),typeof g.componentDidMount=="function"&&(s.flags|=4194308)):(typeof g.componentDidMount=="function"&&(s.flags|=4194308),s.memoizedProps=a,s.memoizedState=$),g.props=a,g.state=$,g.context=_,a=b):(typeof g.componentDidMount=="function"&&(s.flags|=4194308),a=!1)}else{g=s.stateNode,bh(i,s),b=s.memoizedProps,_=s.type===s.elementType?b:Lg(s.type,b),g.props=_,et=s.pendingProps,rt=g.context,$=o.contextType,typeof $=="object"&&$!==null?$=Vg($):($=Zf(o)?Xf:H.current,$=Yf(s,$));var tt=o.getDerivedStateFromProps;(_e=typeof tt=="function"||typeof g.getSnapshotBeforeUpdate=="function")||typeof g.UNSAFE_componentWillReceiveProps!="function"&&typeof g.componentWillReceiveProps!="function"||(b!==et||rt!==$)&&qh(s,g,a,$),$g=!1,rt=s.memoizedState,g.state=rt,gh(s,a,g,c);var j=s.memoizedState;b!==et||rt!==j||Wf.current||$g?(typeof tt=="function"&&(kh(s,o,tt,a),j=s.memoizedState),(_=$g||oh(s,o,_,a,rt,j,$)||!1)?(_e||typeof g.UNSAFE_componentWillUpdate!="function"&&typeof g.componentWillUpdate!="function"||(typeof g.componentWillUpdate=="function"&&g.componentWillUpdate(a,j,$),typeof g.UNSAFE_componentWillUpdate=="function"&&g.UNSAFE_componentWillUpdate(a,j,$)),typeof g.componentDidUpdate=="function"&&(s.flags|=4),typeof g.getSnapshotBeforeUpdate=="function"&&(s.flags|=1024)):(typeof g.componentDidUpdate!="function"||b===i.memoizedProps&&rt===i.memoizedState||(s.flags|=4),typeof g.getSnapshotBeforeUpdate!="function"||b===i.memoizedProps&&rt===i.memoizedState||(s.flags|=1024),s.memoizedProps=a,s.memoizedState=j),g.props=a,g.state=j,g.context=$,a=_):(typeof g.componentDidUpdate!="function"||b===i.memoizedProps&&rt===i.memoizedState||(s.flags|=4),typeof g.getSnapshotBeforeUpdate!="function"||b===i.memoizedProps&&rt===i.memoizedState||(s.flags|=1024),a=!1)}return kj(i,s,o,a,d,c)}function kj(i,s,o,a,c,d){hj(i,s);var g=(s.flags&128)!==0;if(!a&&!g)return c&&dg(s,o,!1),$i(i,s,d);a=s.stateNode,Xi.current=s;var b=g&&typeof o.getDerivedStateFromError!="function"?null:a.render();return s.flags|=1,i!==null&&g?(s.child=Bh(s,i.child,null,d),s.child=Bh(s,null,b,d)):Yi(i,s,b,d),s.memoizedState=a.state,c&&dg(s,o,!0),s.child}function lj(i){var s=i.stateNode;s.pendingContext?ag(i,s.pendingContext,s.pendingContext!==s.context):s.context&&ag(i,s.context,!1),Ih(i,s.containerInfo)}function mj(i,s,o,a,c){return Ig(),Jg(c),s.flags|=256,Yi(i,s,o,a),s.child}var nj={dehydrated:null,treeContext:null,retryLane:0};function oj(i){return{baseLanes:i,cachePool:null,transitions:null}}function pj(i,s,o){var a=s.pendingProps,c=M.current,d=!1,g=(s.flags&128)!==0,b;if((b=g)||(b=i!==null&&i.memoizedState===null?!1:(c&2)!==0),b?(d=!0,s.flags&=-129):(i===null||i.memoizedState!==null)&&(c|=1),G(M,c&1),i===null)return Eg(s),i=s.memoizedState,i!==null&&(i=i.dehydrated,i!==null)?(s.mode&1?i.data==="$!"?s.lanes=8:s.lanes=1073741824:s.lanes=1,null):(g=a.children,i=a.fallback,d?(a=s.mode,d=s.child,g={mode:"hidden",children:g},!(a&1)&&d!==null?(d.childLanes=0,d.pendingProps=g):d=qj(g,a,0,null),i=Ah(i,a,o,null),d.return=s,i.return=s,d.sibling=i,s.child=d,s.child.memoizedState=oj(o),s.memoizedState=nj,i):rj(s,g));if(c=i.memoizedState,c!==null&&(b=c.dehydrated,b!==null))return sj(i,s,g,a,b,c,o);if(d){d=a.fallback,g=s.mode,c=i.child,b=c.sibling;var $={mode:"hidden",children:a.children};return!(g&1)&&s.child!==c?(a=s.child,a.childLanes=0,a.pendingProps=$,s.deletions=null):(a=wh(c,$),a.subtreeFlags=c.subtreeFlags&14680064),b!==null?d=wh(b,d):(d=Ah(d,g,o,null),d.flags|=2),d.return=s,a.return=s,a.sibling=d,s.child=a,a=d,d=s.child,g=i.child.memoizedState,g=g===null?oj(o):{baseLanes:g.baseLanes|o,cachePool:null,transitions:g.transitions},d.memoizedState=g,d.childLanes=i.childLanes&~o,s.memoizedState=nj,a}return d=i.child,i=d.sibling,a=wh(d,{mode:"visible",children:a.children}),!(s.mode&1)&&(a.lanes=o),a.return=s,a.sibling=null,i!==null&&(o=s.deletions,o===null?(s.deletions=[i],s.flags|=16):o.push(i)),s.child=a,s.memoizedState=null,a}function rj(i,s){return s=qj({mode:"visible",children:s},i.mode,0,null),s.return=i,i.child=s}function tj(i,s,o,a){return a!==null&&Jg(a),Bh(s,i.child,null,o),i=rj(s,s.pendingProps.children),i.flags|=2,s.memoizedState=null,i}function sj(i,s,o,a,c,d,g){if(o)return s.flags&256?(s.flags&=-257,a=Li(Error(p$3(422))),tj(i,s,g,a)):s.memoizedState!==null?(s.child=i.child,s.flags|=128,null):(d=a.fallback,c=s.mode,a=qj({mode:"visible",children:a.children},c,0,null),d=Ah(d,c,g,null),d.flags|=2,a.return=s,d.return=s,a.sibling=d,s.child=a,s.mode&1&&Bh(s,i.child,null,g),s.child.memoizedState=oj(g),s.memoizedState=nj,d);if(!(s.mode&1))return tj(i,s,g,null);if(c.data==="$!"){if(a=c.nextSibling&&c.nextSibling.dataset,a)var b=a.dgst;return a=b,d=Error(p$3(419)),a=Li(d,a,void 0),tj(i,s,g,a)}if(b=(g&i.childLanes)!==0,Ug||b){if(a=R,a!==null){switch(g&-g){case 4:c=2;break;case 16:c=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:c=32;break;case 536870912:c=268435456;break;default:c=0}c=c&(a.suspendedLanes|g)?0:c,c!==0&&c!==d.retryLane&&(d.retryLane=c,Zg(i,c),mh(a,i,c,-1))}return uj(),a=Li(Error(p$3(421))),tj(i,s,g,a)}return c.data==="$?"?(s.flags|=128,s.child=i.child,s=vj.bind(null,i),c._reactRetry=s,null):(i=d.treeContext,yg=Lf(c.nextSibling),xg=s,I=!0,zg=null,i!==null&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=i.id,sg=i.overflow,qg=s),s=rj(s,a.children),s.flags|=4096,s)}function wj(i,s,o){i.lanes|=s;var a=i.alternate;a!==null&&(a.lanes|=s),Sg(i.return,s,o)}function xj(i,s,o,a,c){var d=i.memoizedState;d===null?i.memoizedState={isBackwards:s,rendering:null,renderingStartTime:0,last:a,tail:o,tailMode:c}:(d.isBackwards=s,d.rendering=null,d.renderingStartTime=0,d.last=a,d.tail=o,d.tailMode=c)}function yj(i,s,o){var a=s.pendingProps,c=a.revealOrder,d=a.tail;if(Yi(i,s,a.children,o),a=M.current,a&2)a=a&1|2,s.flags|=128;else{if(i!==null&&i.flags&128)e:for(i=s.child;i!==null;){if(i.tag===13)i.memoizedState!==null&&wj(i,o,s);else if(i.tag===19)wj(i,o,s);else if(i.child!==null){i.child.return=i,i=i.child;continue}if(i===s)break e;for(;i.sibling===null;){if(i.return===null||i.return===s)break e;i=i.return}i.sibling.return=i.return,i=i.sibling}a&=1}if(G(M,a),!(s.mode&1))s.memoizedState=null;else switch(c){case"forwards":for(o=s.child,c=null;o!==null;)i=o.alternate,i!==null&&Mh(i)===null&&(c=o),o=o.sibling;o=c,o===null?(c=s.child,s.child=null):(c=o.sibling,o.sibling=null),xj(s,!1,c,o,d);break;case"backwards":for(o=null,c=s.child,s.child=null;c!==null;){if(i=c.alternate,i!==null&&Mh(i)===null){s.child=c;break}i=c.sibling,c.sibling=o,o=c,c=i}xj(s,!0,o,null,d);break;case"together":xj(s,!1,null,null,void 0);break;default:s.memoizedState=null}return s.child}function jj(i,s){!(s.mode&1)&&i!==null&&(i.alternate=null,s.alternate=null,s.flags|=2)}function $i(i,s,o){if(i!==null&&(s.dependencies=i.dependencies),hh|=s.lanes,!(o&s.childLanes))return null;if(i!==null&&s.child!==i.child)throw Error(p$3(153));if(s.child!==null){for(i=s.child,o=wh(i,i.pendingProps),s.child=o,o.return=s;i.sibling!==null;)i=i.sibling,o=o.sibling=wh(i,i.pendingProps),o.return=s;o.sibling=null}return s.child}function zj(i,s,o){switch(s.tag){case 3:lj(s),Ig();break;case 5:Kh(s);break;case 1:Zf(s.type)&&cg(s);break;case 4:Ih(s,s.stateNode.containerInfo);break;case 10:var a=s.type._context,c=s.memoizedProps.value;G(Mg,a._currentValue),a._currentValue=c;break;case 13:if(a=s.memoizedState,a!==null)return a.dehydrated!==null?(G(M,M.current&1),s.flags|=128,null):o&s.child.childLanes?pj(i,s,o):(G(M,M.current&1),i=$i(i,s,o),i!==null?i.sibling:null);G(M,M.current&1);break;case 19:if(a=(o&s.childLanes)!==0,i.flags&128){if(a)return yj(i,s,o);s.flags|=128}if(c=s.memoizedState,c!==null&&(c.rendering=null,c.tail=null,c.lastEffect=null),G(M,M.current),a)break;return null;case 22:case 23:return s.lanes=0,ej(i,s,o)}return $i(i,s,o)}var Aj,Bj,Cj,Dj;Aj=function(i,s){for(var o=s.child;o!==null;){if(o.tag===5||o.tag===6)i.appendChild(o.stateNode);else if(o.tag!==4&&o.child!==null){o.child.return=o,o=o.child;continue}if(o===s)break;for(;o.sibling===null;){if(o.return===null||o.return===s)return;o=o.return}o.sibling.return=o.return,o=o.sibling}};Bj=function(){};Cj=function(i,s,o,a){var c=i.memoizedProps;if(c!==a){i=s.stateNode,Hh(Eh.current);var d=null;switch(o){case"input":c=Ya(i,c),a=Ya(i,a),d=[];break;case"select":c=A({},c,{value:void 0}),a=A({},a,{value:void 0}),d=[];break;case"textarea":c=gb(i,c),a=gb(i,a),d=[];break;default:typeof c.onClick!="function"&&typeof a.onClick=="function"&&(i.onclick=Bf)}ub(o,a);var g;o=null;for(_ in c)if(!a.hasOwnProperty(_)&&c.hasOwnProperty(_)&&c[_]!=null)if(_==="style"){var b=c[_];for(g in b)b.hasOwnProperty(g)&&(o||(o={}),o[g]="")}else _!=="dangerouslySetInnerHTML"&&_!=="children"&&_!=="suppressContentEditableWarning"&&_!=="suppressHydrationWarning"&&_!=="autoFocus"&&(ea.hasOwnProperty(_)?d||(d=[]):(d=d||[]).push(_,null));for(_ in a){var $=a[_];if(b=c!=null?c[_]:void 0,a.hasOwnProperty(_)&&$!==b&&($!=null||b!=null))if(_==="style")if(b){for(g in b)!b.hasOwnProperty(g)||$&&$.hasOwnProperty(g)||(o||(o={}),o[g]="");for(g in $)$.hasOwnProperty(g)&&b[g]!==$[g]&&(o||(o={}),o[g]=$[g])}else o||(d||(d=[]),d.push(_,o)),o=$;else _==="dangerouslySetInnerHTML"?($=$?$.__html:void 0,b=b?b.__html:void 0,$!=null&&b!==$&&(d=d||[]).push(_,$)):_==="children"?typeof $!="string"&&typeof $!="number"||(d=d||[]).push(_,""+$):_!=="suppressContentEditableWarning"&&_!=="suppressHydrationWarning"&&(ea.hasOwnProperty(_)?($!=null&&_==="onScroll"&&D("scroll",i),d||b===$||(d=[])):(d=d||[]).push(_,$))}o&&(d=d||[]).push("style",o);var _=d;(s.updateQueue=_)&&(s.flags|=4)}};Dj=function(i,s,o,a){o!==a&&(s.flags|=4)};function Ej(i,s){if(!I)switch(i.tailMode){case"hidden":s=i.tail;for(var o=null;s!==null;)s.alternate!==null&&(o=s),s=s.sibling;o===null?i.tail=null:o.sibling=null;break;case"collapsed":o=i.tail;for(var a=null;o!==null;)o.alternate!==null&&(a=o),o=o.sibling;a===null?s||i.tail===null?i.tail=null:i.tail.sibling=null:a.sibling=null}}function S(i){var s=i.alternate!==null&&i.alternate.child===i.child,o=0,a=0;if(s)for(var c=i.child;c!==null;)o|=c.lanes|c.childLanes,a|=c.subtreeFlags&14680064,a|=c.flags&14680064,c.return=i,c=c.sibling;else for(c=i.child;c!==null;)o|=c.lanes|c.childLanes,a|=c.subtreeFlags,a|=c.flags,c.return=i,c=c.sibling;return i.subtreeFlags|=a,i.childLanes=o,s}function Fj(i,s,o){var a=s.pendingProps;switch(wg(s),s.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(s),null;case 1:return Zf(s.type)&&$f(),S(s),null;case 3:return a=s.stateNode,Jh(),E(Wf),E(H),Oh(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),(i===null||i.child===null)&&(Gg(s)?s.flags|=4:i===null||i.memoizedState.isDehydrated&&!(s.flags&256)||(s.flags|=1024,zg!==null&&(Gj(zg),zg=null))),Bj(i,s),S(s),null;case 5:Lh(s);var c=Hh(Gh.current);if(o=s.type,i!==null&&s.stateNode!=null)Cj(i,s,o,a,c),i.ref!==s.ref&&(s.flags|=512,s.flags|=2097152);else{if(!a){if(s.stateNode===null)throw Error(p$3(166));return S(s),null}if(i=Hh(Eh.current),Gg(s)){a=s.stateNode,o=s.type;var d=s.memoizedProps;switch(a[Of]=s,a[Pf]=d,i=(s.mode&1)!==0,o){case"dialog":D("cancel",a),D("close",a);break;case"iframe":case"object":case"embed":D("load",a);break;case"video":case"audio":for(c=0;c<lf.length;c++)D(lf[c],a);break;case"source":D("error",a);break;case"img":case"image":case"link":D("error",a),D("load",a);break;case"details":D("toggle",a);break;case"input":Za(a,d),D("invalid",a);break;case"select":a._wrapperState={wasMultiple:!!d.multiple},D("invalid",a);break;case"textarea":hb(a,d),D("invalid",a)}ub(o,d),c=null;for(var g in d)if(d.hasOwnProperty(g)){var b=d[g];g==="children"?typeof b=="string"?a.textContent!==b&&(d.suppressHydrationWarning!==!0&&Af(a.textContent,b,i),c=["children",b]):typeof b=="number"&&a.textContent!==""+b&&(d.suppressHydrationWarning!==!0&&Af(a.textContent,b,i),c=["children",""+b]):ea.hasOwnProperty(g)&&b!=null&&g==="onScroll"&&D("scroll",a)}switch(o){case"input":Va(a),db(a,d,!0);break;case"textarea":Va(a),jb(a);break;case"select":case"option":break;default:typeof d.onClick=="function"&&(a.onclick=Bf)}a=c,s.updateQueue=a,a!==null&&(s.flags|=4)}else{g=c.nodeType===9?c:c.ownerDocument,i==="http://www.w3.org/1999/xhtml"&&(i=kb(o)),i==="http://www.w3.org/1999/xhtml"?o==="script"?(i=g.createElement("div"),i.innerHTML="<script><\/script>",i=i.removeChild(i.firstChild)):typeof a.is=="string"?i=g.createElement(o,{is:a.is}):(i=g.createElement(o),o==="select"&&(g=i,a.multiple?g.multiple=!0:a.size&&(g.size=a.size))):i=g.createElementNS(i,o),i[Of]=s,i[Pf]=a,Aj(i,s,!1,!1),s.stateNode=i;e:{switch(g=vb(o,a),o){case"dialog":D("cancel",i),D("close",i),c=a;break;case"iframe":case"object":case"embed":D("load",i),c=a;break;case"video":case"audio":for(c=0;c<lf.length;c++)D(lf[c],i);c=a;break;case"source":D("error",i),c=a;break;case"img":case"image":case"link":D("error",i),D("load",i),c=a;break;case"details":D("toggle",i),c=a;break;case"input":Za(i,a),c=Ya(i,a),D("invalid",i);break;case"option":c=a;break;case"select":i._wrapperState={wasMultiple:!!a.multiple},c=A({},a,{value:void 0}),D("invalid",i);break;case"textarea":hb(i,a),c=gb(i,a),D("invalid",i);break;default:c=a}ub(o,c),b=c;for(d in b)if(b.hasOwnProperty(d)){var $=b[d];d==="style"?sb(i,$):d==="dangerouslySetInnerHTML"?($=$?$.__html:void 0,$!=null&&nb(i,$)):d==="children"?typeof $=="string"?(o!=="textarea"||$!=="")&&ob(i,$):typeof $=="number"&&ob(i,""+$):d!=="suppressContentEditableWarning"&&d!=="suppressHydrationWarning"&&d!=="autoFocus"&&(ea.hasOwnProperty(d)?$!=null&&d==="onScroll"&&D("scroll",i):$!=null&&ta(i,d,$,g))}switch(o){case"input":Va(i),db(i,a,!1);break;case"textarea":Va(i),jb(i);break;case"option":a.value!=null&&i.setAttribute("value",""+Sa(a.value));break;case"select":i.multiple=!!a.multiple,d=a.value,d!=null?fb(i,!!a.multiple,d,!1):a.defaultValue!=null&&fb(i,!!a.multiple,a.defaultValue,!0);break;default:typeof c.onClick=="function"&&(i.onclick=Bf)}switch(o){case"button":case"input":case"select":case"textarea":a=!!a.autoFocus;break e;case"img":a=!0;break e;default:a=!1}}a&&(s.flags|=4)}s.ref!==null&&(s.flags|=512,s.flags|=2097152)}return S(s),null;case 6:if(i&&s.stateNode!=null)Dj(i,s,i.memoizedProps,a);else{if(typeof a!="string"&&s.stateNode===null)throw Error(p$3(166));if(o=Hh(Gh.current),Hh(Eh.current),Gg(s)){if(a=s.stateNode,o=s.memoizedProps,a[Of]=s,(d=a.nodeValue!==o)&&(i=xg,i!==null))switch(i.tag){case 3:Af(a.nodeValue,o,(i.mode&1)!==0);break;case 5:i.memoizedProps.suppressHydrationWarning!==!0&&Af(a.nodeValue,o,(i.mode&1)!==0)}d&&(s.flags|=4)}else a=(o.nodeType===9?o:o.ownerDocument).createTextNode(a),a[Of]=s,s.stateNode=a}return S(s),null;case 13:if(E(M),a=s.memoizedState,i===null||i.memoizedState!==null&&i.memoizedState.dehydrated!==null){if(I&&yg!==null&&s.mode&1&&!(s.flags&128))Hg(),Ig(),s.flags|=98560,d=!1;else if(d=Gg(s),a!==null&&a.dehydrated!==null){if(i===null){if(!d)throw Error(p$3(318));if(d=s.memoizedState,d=d!==null?d.dehydrated:null,!d)throw Error(p$3(317));d[Of]=s}else Ig(),!(s.flags&128)&&(s.memoizedState=null),s.flags|=4;S(s),d=!1}else zg!==null&&(Gj(zg),zg=null),d=!0;if(!d)return s.flags&65536?s:null}return s.flags&128?(s.lanes=o,s):(a=a!==null,a!==(i!==null&&i.memoizedState!==null)&&a&&(s.child.flags|=8192,s.mode&1&&(i===null||M.current&1?T===0&&(T=3):uj())),s.updateQueue!==null&&(s.flags|=4),S(s),null);case 4:return Jh(),Bj(i,s),i===null&&sf(s.stateNode.containerInfo),S(s),null;case 10:return Rg(s.type._context),S(s),null;case 17:return Zf(s.type)&&$f(),S(s),null;case 19:if(E(M),d=s.memoizedState,d===null)return S(s),null;if(a=(s.flags&128)!==0,g=d.rendering,g===null)if(a)Ej(d,!1);else{if(T!==0||i!==null&&i.flags&128)for(i=s.child;i!==null;){if(g=Mh(i),g!==null){for(s.flags|=128,Ej(d,!1),a=g.updateQueue,a!==null&&(s.updateQueue=a,s.flags|=4),s.subtreeFlags=0,a=o,o=s.child;o!==null;)d=o,i=a,d.flags&=14680066,g=d.alternate,g===null?(d.childLanes=0,d.lanes=i,d.child=null,d.subtreeFlags=0,d.memoizedProps=null,d.memoizedState=null,d.updateQueue=null,d.dependencies=null,d.stateNode=null):(d.childLanes=g.childLanes,d.lanes=g.lanes,d.child=g.child,d.subtreeFlags=0,d.deletions=null,d.memoizedProps=g.memoizedProps,d.memoizedState=g.memoizedState,d.updateQueue=g.updateQueue,d.type=g.type,i=g.dependencies,d.dependencies=i===null?null:{lanes:i.lanes,firstContext:i.firstContext}),o=o.sibling;return G(M,M.current&1|2),s.child}i=i.sibling}d.tail!==null&&B()>Hj&&(s.flags|=128,a=!0,Ej(d,!1),s.lanes=4194304)}else{if(!a)if(i=Mh(g),i!==null){if(s.flags|=128,a=!0,o=i.updateQueue,o!==null&&(s.updateQueue=o,s.flags|=4),Ej(d,!0),d.tail===null&&d.tailMode==="hidden"&&!g.alternate&&!I)return S(s),null}else 2*B()-d.renderingStartTime>Hj&&o!==1073741824&&(s.flags|=128,a=!0,Ej(d,!1),s.lanes=4194304);d.isBackwards?(g.sibling=s.child,s.child=g):(o=d.last,o!==null?o.sibling=g:s.child=g,d.last=g)}return d.tail!==null?(s=d.tail,d.rendering=s,d.tail=s.sibling,d.renderingStartTime=B(),s.sibling=null,o=M.current,G(M,a?o&1|2:o&1),s):(S(s),null);case 22:case 23:return Ij(),a=s.memoizedState!==null,i!==null&&i.memoizedState!==null!==a&&(s.flags|=8192),a&&s.mode&1?gj&1073741824&&(S(s),s.subtreeFlags&6&&(s.flags|=8192)):S(s),null;case 24:return null;case 25:return null}throw Error(p$3(156,s.tag))}function Jj(i,s){switch(wg(s),s.tag){case 1:return Zf(s.type)&&$f(),i=s.flags,i&65536?(s.flags=i&-65537|128,s):null;case 3:return Jh(),E(Wf),E(H),Oh(),i=s.flags,i&65536&&!(i&128)?(s.flags=i&-65537|128,s):null;case 5:return Lh(s),null;case 13:if(E(M),i=s.memoizedState,i!==null&&i.dehydrated!==null){if(s.alternate===null)throw Error(p$3(340));Ig()}return i=s.flags,i&65536?(s.flags=i&-65537|128,s):null;case 19:return E(M),null;case 4:return Jh(),null;case 10:return Rg(s.type._context),null;case 22:case 23:return Ij(),null;case 24:return null;default:return null}}var Kj=!1,U=!1,Lj=typeof WeakSet=="function"?WeakSet:Set,V=null;function Mj(i,s){var o=i.ref;if(o!==null)if(typeof o=="function")try{o(null)}catch(a){W(i,s,a)}else o.current=null}function Nj(i,s,o){try{o()}catch(a){W(i,s,a)}}var Oj=!1;function Pj(i,s){if(Cf=dd,i=Me(),Ne(i)){if("selectionStart"in i)var o={start:i.selectionStart,end:i.selectionEnd};else e:{o=(o=i.ownerDocument)&&o.defaultView||window;var a=o.getSelection&&o.getSelection();if(a&&a.rangeCount!==0){o=a.anchorNode;var c=a.anchorOffset,d=a.focusNode;a=a.focusOffset;try{o.nodeType,d.nodeType}catch{o=null;break e}var g=0,b=-1,$=-1,_=0,_e=0,et=i,rt=null;t:for(;;){for(var tt;et!==o||c!==0&&et.nodeType!==3||(b=g+c),et!==d||a!==0&&et.nodeType!==3||($=g+a),et.nodeType===3&&(g+=et.nodeValue.length),(tt=et.firstChild)!==null;)rt=et,et=tt;for(;;){if(et===i)break t;if(rt===o&&++_===c&&(b=g),rt===d&&++_e===a&&($=g),(tt=et.nextSibling)!==null)break;et=rt,rt=et.parentNode}et=tt}o=b===-1||$===-1?null:{start:b,end:$}}else o=null}o=o||{start:0,end:0}}else o=null;for(Df={focusedElem:i,selectionRange:o},dd=!1,V=s;V!==null;)if(s=V,i=s.child,(s.subtreeFlags&1028)!==0&&i!==null)i.return=s,V=i;else for(;V!==null;){s=V;try{var j=s.alternate;if(s.flags&1024)switch(s.tag){case 0:case 11:case 15:break;case 1:if(j!==null){var nt=j.memoizedProps,st=j.memoizedState,ot=s.stateNode,ut=ot.getSnapshotBeforeUpdate(s.elementType===s.type?nt:Lg(s.type,nt),st);ot.__reactInternalSnapshotBeforeUpdate=ut}break;case 3:var ht=s.stateNode.containerInfo;ht.nodeType===1?ht.textContent="":ht.nodeType===9&&ht.documentElement&&ht.removeChild(ht.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p$3(163))}}catch(pt){W(s,s.return,pt)}if(i=s.sibling,i!==null){i.return=s.return,V=i;break}V=s.return}return j=Oj,Oj=!1,j}function Qj(i,s,o){var a=s.updateQueue;if(a=a!==null?a.lastEffect:null,a!==null){var c=a=a.next;do{if((c.tag&i)===i){var d=c.destroy;c.destroy=void 0,d!==void 0&&Nj(s,o,d)}c=c.next}while(c!==a)}}function Rj(i,s){if(s=s.updateQueue,s=s!==null?s.lastEffect:null,s!==null){var o=s=s.next;do{if((o.tag&i)===i){var a=o.create;o.destroy=a()}o=o.next}while(o!==s)}}function Sj(i){var s=i.ref;if(s!==null){var o=i.stateNode;switch(i.tag){case 5:i=o;break;default:i=o}typeof s=="function"?s(i):s.current=i}}function Tj(i){var s=i.alternate;s!==null&&(i.alternate=null,Tj(s)),i.child=null,i.deletions=null,i.sibling=null,i.tag===5&&(s=i.stateNode,s!==null&&(delete s[Of],delete s[Pf],delete s[of],delete s[Qf],delete s[Rf])),i.stateNode=null,i.return=null,i.dependencies=null,i.memoizedProps=null,i.memoizedState=null,i.pendingProps=null,i.stateNode=null,i.updateQueue=null}function Uj(i){return i.tag===5||i.tag===3||i.tag===4}function Vj(i){e:for(;;){for(;i.sibling===null;){if(i.return===null||Uj(i.return))return null;i=i.return}for(i.sibling.return=i.return,i=i.sibling;i.tag!==5&&i.tag!==6&&i.tag!==18;){if(i.flags&2||i.child===null||i.tag===4)continue e;i.child.return=i,i=i.child}if(!(i.flags&2))return i.stateNode}}function Wj(i,s,o){var a=i.tag;if(a===5||a===6)i=i.stateNode,s?o.nodeType===8?o.parentNode.insertBefore(i,s):o.insertBefore(i,s):(o.nodeType===8?(s=o.parentNode,s.insertBefore(i,o)):(s=o,s.appendChild(i)),o=o._reactRootContainer,o!=null||s.onclick!==null||(s.onclick=Bf));else if(a!==4&&(i=i.child,i!==null))for(Wj(i,s,o),i=i.sibling;i!==null;)Wj(i,s,o),i=i.sibling}function Xj(i,s,o){var a=i.tag;if(a===5||a===6)i=i.stateNode,s?o.insertBefore(i,s):o.appendChild(i);else if(a!==4&&(i=i.child,i!==null))for(Xj(i,s,o),i=i.sibling;i!==null;)Xj(i,s,o),i=i.sibling}var X=null,Yj=!1;function Zj(i,s,o){for(o=o.child;o!==null;)ak(i,s,o),o=o.sibling}function ak(i,s,o){if(lc&&typeof lc.onCommitFiberUnmount=="function")try{lc.onCommitFiberUnmount(kc,o)}catch{}switch(o.tag){case 5:U||Mj(o,s);case 6:var a=X,c=Yj;X=null,Zj(i,s,o),X=a,Yj=c,X!==null&&(Yj?(i=X,o=o.stateNode,i.nodeType===8?i.parentNode.removeChild(o):i.removeChild(o)):X.removeChild(o.stateNode));break;case 18:X!==null&&(Yj?(i=X,o=o.stateNode,i.nodeType===8?Kf(i.parentNode,o):i.nodeType===1&&Kf(i,o),bd(i)):Kf(X,o.stateNode));break;case 4:a=X,c=Yj,X=o.stateNode.containerInfo,Yj=!0,Zj(i,s,o),X=a,Yj=c;break;case 0:case 11:case 14:case 15:if(!U&&(a=o.updateQueue,a!==null&&(a=a.lastEffect,a!==null))){c=a=a.next;do{var d=c,g=d.destroy;d=d.tag,g!==void 0&&(d&2||d&4)&&Nj(o,s,g),c=c.next}while(c!==a)}Zj(i,s,o);break;case 1:if(!U&&(Mj(o,s),a=o.stateNode,typeof a.componentWillUnmount=="function"))try{a.props=o.memoizedProps,a.state=o.memoizedState,a.componentWillUnmount()}catch(b){W(o,s,b)}Zj(i,s,o);break;case 21:Zj(i,s,o);break;case 22:o.mode&1?(U=(a=U)||o.memoizedState!==null,Zj(i,s,o),U=a):Zj(i,s,o);break;default:Zj(i,s,o)}}function bk(i){var s=i.updateQueue;if(s!==null){i.updateQueue=null;var o=i.stateNode;o===null&&(o=i.stateNode=new Lj),s.forEach(function(a){var c=ck.bind(null,i,a);o.has(a)||(o.add(a),a.then(c,c))})}}function dk(i,s){var o=s.deletions;if(o!==null)for(var a=0;a<o.length;a++){var c=o[a];try{var d=i,g=s,b=g;e:for(;b!==null;){switch(b.tag){case 5:X=b.stateNode,Yj=!1;break e;case 3:X=b.stateNode.containerInfo,Yj=!0;break e;case 4:X=b.stateNode.containerInfo,Yj=!0;break e}b=b.return}if(X===null)throw Error(p$3(160));ak(d,g,c),X=null,Yj=!1;var $=c.alternate;$!==null&&($.return=null),c.return=null}catch(_){W(c,s,_)}}if(s.subtreeFlags&12854)for(s=s.child;s!==null;)ek(s,i),s=s.sibling}function ek(i,s){var o=i.alternate,a=i.flags;switch(i.tag){case 0:case 11:case 14:case 15:if(dk(s,i),fk(i),a&4){try{Qj(3,i,i.return),Rj(3,i)}catch(nt){W(i,i.return,nt)}try{Qj(5,i,i.return)}catch(nt){W(i,i.return,nt)}}break;case 1:dk(s,i),fk(i),a&512&&o!==null&&Mj(o,o.return);break;case 5:if(dk(s,i),fk(i),a&512&&o!==null&&Mj(o,o.return),i.flags&32){var c=i.stateNode;try{ob(c,"")}catch(nt){W(i,i.return,nt)}}if(a&4&&(c=i.stateNode,c!=null)){var d=i.memoizedProps,g=o!==null?o.memoizedProps:d,b=i.type,$=i.updateQueue;if(i.updateQueue=null,$!==null)try{b==="input"&&d.type==="radio"&&d.name!=null&&ab(c,d),vb(b,g);var _=vb(b,d);for(g=0;g<$.length;g+=2){var _e=$[g],et=$[g+1];_e==="style"?sb(c,et):_e==="dangerouslySetInnerHTML"?nb(c,et):_e==="children"?ob(c,et):ta(c,_e,et,_)}switch(b){case"input":bb(c,d);break;case"textarea":ib(c,d);break;case"select":var rt=c._wrapperState.wasMultiple;c._wrapperState.wasMultiple=!!d.multiple;var tt=d.value;tt!=null?fb(c,!!d.multiple,tt,!1):rt!==!!d.multiple&&(d.defaultValue!=null?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:"",!1))}c[Pf]=d}catch(nt){W(i,i.return,nt)}}break;case 6:if(dk(s,i),fk(i),a&4){if(i.stateNode===null)throw Error(p$3(162));c=i.stateNode,d=i.memoizedProps;try{c.nodeValue=d}catch(nt){W(i,i.return,nt)}}break;case 3:if(dk(s,i),fk(i),a&4&&o!==null&&o.memoizedState.isDehydrated)try{bd(s.containerInfo)}catch(nt){W(i,i.return,nt)}break;case 4:dk(s,i),fk(i);break;case 13:dk(s,i),fk(i),c=i.child,c.flags&8192&&(d=c.memoizedState!==null,c.stateNode.isHidden=d,!d||c.alternate!==null&&c.alternate.memoizedState!==null||(gk=B())),a&4&&bk(i);break;case 22:if(_e=o!==null&&o.memoizedState!==null,i.mode&1?(U=(_=U)||_e,dk(s,i),U=_):dk(s,i),fk(i),a&8192){if(_=i.memoizedState!==null,(i.stateNode.isHidden=_)&&!_e&&i.mode&1)for(V=i,_e=i.child;_e!==null;){for(et=V=_e;V!==null;){switch(rt=V,tt=rt.child,rt.tag){case 0:case 11:case 14:case 15:Qj(4,rt,rt.return);break;case 1:Mj(rt,rt.return);var j=rt.stateNode;if(typeof j.componentWillUnmount=="function"){a=rt,o=rt.return;try{s=a,j.props=s.memoizedProps,j.state=s.memoizedState,j.componentWillUnmount()}catch(nt){W(a,o,nt)}}break;case 5:Mj(rt,rt.return);break;case 22:if(rt.memoizedState!==null){hk(et);continue}}tt!==null?(tt.return=rt,V=tt):hk(et)}_e=_e.sibling}e:for(_e=null,et=i;;){if(et.tag===5){if(_e===null){_e=et;try{c=et.stateNode,_?(d=c.style,typeof d.setProperty=="function"?d.setProperty("display","none","important"):d.display="none"):(b=et.stateNode,$=et.memoizedProps.style,g=$!=null&&$.hasOwnProperty("display")?$.display:null,b.style.display=rb("display",g))}catch(nt){W(i,i.return,nt)}}}else if(et.tag===6){if(_e===null)try{et.stateNode.nodeValue=_?"":et.memoizedProps}catch(nt){W(i,i.return,nt)}}else if((et.tag!==22&&et.tag!==23||et.memoizedState===null||et===i)&&et.child!==null){et.child.return=et,et=et.child;continue}if(et===i)break e;for(;et.sibling===null;){if(et.return===null||et.return===i)break e;_e===et&&(_e=null),et=et.return}_e===et&&(_e=null),et.sibling.return=et.return,et=et.sibling}}break;case 19:dk(s,i),fk(i),a&4&&bk(i);break;case 21:break;default:dk(s,i),fk(i)}}function fk(i){var s=i.flags;if(s&2){try{e:{for(var o=i.return;o!==null;){if(Uj(o)){var a=o;break e}o=o.return}throw Error(p$3(160))}switch(a.tag){case 5:var c=a.stateNode;a.flags&32&&(ob(c,""),a.flags&=-33);var d=Vj(i);Xj(i,d,c);break;case 3:case 4:var g=a.stateNode.containerInfo,b=Vj(i);Wj(i,b,g);break;default:throw Error(p$3(161))}}catch($){W(i,i.return,$)}i.flags&=-3}s&4096&&(i.flags&=-4097)}function ik(i,s,o){V=i,jk(i)}function jk(i,s,o){for(var a=(i.mode&1)!==0;V!==null;){var c=V,d=c.child;if(c.tag===22&&a){var g=c.memoizedState!==null||Kj;if(!g){var b=c.alternate,$=b!==null&&b.memoizedState!==null||U;b=Kj;var _=U;if(Kj=g,(U=$)&&!_)for(V=c;V!==null;)g=V,$=g.child,g.tag===22&&g.memoizedState!==null?kk(c):$!==null?($.return=g,V=$):kk(c);for(;d!==null;)V=d,jk(d),d=d.sibling;V=c,Kj=b,U=_}lk(i)}else c.subtreeFlags&8772&&d!==null?(d.return=c,V=d):lk(i)}}function lk(i){for(;V!==null;){var s=V;if(s.flags&8772){var o=s.alternate;try{if(s.flags&8772)switch(s.tag){case 0:case 11:case 15:U||Rj(5,s);break;case 1:var a=s.stateNode;if(s.flags&4&&!U)if(o===null)a.componentDidMount();else{var c=s.elementType===s.type?o.memoizedProps:Lg(s.type,o.memoizedProps);a.componentDidUpdate(c,o.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}var d=s.updateQueue;d!==null&&ih(s,d,a);break;case 3:var g=s.updateQueue;if(g!==null){if(o=null,s.child!==null)switch(s.child.tag){case 5:o=s.child.stateNode;break;case 1:o=s.child.stateNode}ih(s,g,o)}break;case 5:var b=s.stateNode;if(o===null&&s.flags&4){o=b;var $=s.memoizedProps;switch(s.type){case"button":case"input":case"select":case"textarea":$.autoFocus&&o.focus();break;case"img":$.src&&(o.src=$.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(s.memoizedState===null){var _=s.alternate;if(_!==null){var _e=_.memoizedState;if(_e!==null){var et=_e.dehydrated;et!==null&&bd(et)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(p$3(163))}U||s.flags&512&&Sj(s)}catch(rt){W(s,s.return,rt)}}if(s===i){V=null;break}if(o=s.sibling,o!==null){o.return=s.return,V=o;break}V=s.return}}function hk(i){for(;V!==null;){var s=V;if(s===i){V=null;break}var o=s.sibling;if(o!==null){o.return=s.return,V=o;break}V=s.return}}function kk(i){for(;V!==null;){var s=V;try{switch(s.tag){case 0:case 11:case 15:var o=s.return;try{Rj(4,s)}catch($){W(s,o,$)}break;case 1:var a=s.stateNode;if(typeof a.componentDidMount=="function"){var c=s.return;try{a.componentDidMount()}catch($){W(s,c,$)}}var d=s.return;try{Sj(s)}catch($){W(s,d,$)}break;case 5:var g=s.return;try{Sj(s)}catch($){W(s,g,$)}}}catch($){W(s,s.return,$)}if(s===i){V=null;break}var b=s.sibling;if(b!==null){b.return=s.return,V=b;break}V=s.return}}var mk=Math.ceil,nk=ua.ReactCurrentDispatcher,ok=ua.ReactCurrentOwner,pk=ua.ReactCurrentBatchConfig,K=0,R=null,Y=null,Z=0,gj=0,fj=Uf(0),T=0,qk=null,hh=0,rk=0,sk=0,tk=null,uk=null,gk=0,Hj=1/0,vk=null,Pi=!1,Qi=null,Si=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,Bk=-1,Ck=0;function L(){return K&6?B():Bk!==-1?Bk:Bk=B()}function lh(i){return i.mode&1?K&2&&Z!==0?Z&-Z:Kg.transition!==null?(Ck===0&&(Ck=yc()),Ck):(i=C,i!==0||(i=window.event,i=i===void 0?16:jd(i.type)),i):1}function mh(i,s,o,a){if(50<zk)throw zk=0,Ak=null,Error(p$3(185));Ac(i,o,a),(!(K&2)||i!==R)&&(i===R&&(!(K&2)&&(rk|=o),T===4&&Dk(i,Z)),Ek(i,a),o===1&&K===0&&!(s.mode&1)&&(Hj=B()+500,fg&&jg()))}function Ek(i,s){var o=i.callbackNode;wc(i,s);var a=uc(i,i===R?Z:0);if(a===0)o!==null&&bc(o),i.callbackNode=null,i.callbackPriority=0;else if(s=a&-a,i.callbackPriority!==s){if(o!=null&&bc(o),s===1)i.tag===0?ig(Fk.bind(null,i)):hg(Fk.bind(null,i)),Jf(function(){!(K&6)&&jg()}),o=null;else{switch(Dc(a)){case 1:o=fc;break;case 4:o=gc;break;case 16:o=hc;break;case 536870912:o=jc;break;default:o=hc}o=Gk(o,Hk.bind(null,i))}i.callbackPriority=s,i.callbackNode=o}}function Hk(i,s){if(Bk=-1,Ck=0,K&6)throw Error(p$3(327));var o=i.callbackNode;if(Ik()&&i.callbackNode!==o)return null;var a=uc(i,i===R?Z:0);if(a===0)return null;if(a&30||a&i.expiredLanes||s)s=Jk(i,a);else{s=a;var c=K;K|=2;var d=Kk();(R!==i||Z!==s)&&(vk=null,Hj=B()+500,Lk(i,s));do try{Mk();break}catch(b){Nk(i,b)}while(1);Qg(),nk.current=d,K=c,Y!==null?s=0:(R=null,Z=0,s=T)}if(s!==0){if(s===2&&(c=xc(i),c!==0&&(a=c,s=Ok(i,c))),s===1)throw o=qk,Lk(i,0),Dk(i,a),Ek(i,B()),o;if(s===6)Dk(i,a);else{if(c=i.current.alternate,!(a&30)&&!Pk(c)&&(s=Jk(i,a),s===2&&(d=xc(i),d!==0&&(a=d,s=Ok(i,d))),s===1))throw o=qk,Lk(i,0),Dk(i,a),Ek(i,B()),o;switch(i.finishedWork=c,i.finishedLanes=a,s){case 0:case 1:throw Error(p$3(345));case 2:Qk(i,uk,vk);break;case 3:if(Dk(i,a),(a&130023424)===a&&(s=gk+500-B(),10<s)){if(uc(i,0)!==0)break;if(c=i.suspendedLanes,(c&a)!==a){L(),i.pingedLanes|=i.suspendedLanes&c;break}i.timeoutHandle=Ff(Qk.bind(null,i,uk,vk),s);break}Qk(i,uk,vk);break;case 4:if(Dk(i,a),(a&4194240)===a)break;for(s=i.eventTimes,c=-1;0<a;){var g=31-oc(a);d=1<<g,g=s[g],g>c&&(c=g),a&=~d}if(a=c,a=B()-a,a=(120>a?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*mk(a/1960))-a,10<a){i.timeoutHandle=Ff(Qk.bind(null,i,uk,vk),a);break}Qk(i,uk,vk);break;case 5:Qk(i,uk,vk);break;default:throw Error(p$3(329))}}}return Ek(i,B()),i.callbackNode===o?Hk.bind(null,i):null}function Ok(i,s){var o=tk;return i.current.memoizedState.isDehydrated&&(Lk(i,s).flags|=256),i=Jk(i,s),i!==2&&(s=uk,uk=o,s!==null&&Gj(s)),i}function Gj(i){uk===null?uk=i:uk.push.apply(uk,i)}function Pk(i){for(var s=i;;){if(s.flags&16384){var o=s.updateQueue;if(o!==null&&(o=o.stores,o!==null))for(var a=0;a<o.length;a++){var c=o[a],d=c.getSnapshot;c=c.value;try{if(!He(d(),c))return!1}catch{return!1}}}if(o=s.child,s.subtreeFlags&16384&&o!==null)o.return=s,s=o;else{if(s===i)break;for(;s.sibling===null;){if(s.return===null||s.return===i)return!0;s=s.return}s.sibling.return=s.return,s=s.sibling}}return!0}function Dk(i,s){for(s&=~sk,s&=~rk,i.suspendedLanes|=s,i.pingedLanes&=~s,i=i.expirationTimes;0<s;){var o=31-oc(s),a=1<<o;i[o]=-1,s&=~a}}function Fk(i){if(K&6)throw Error(p$3(327));Ik();var s=uc(i,0);if(!(s&1))return Ek(i,B()),null;var o=Jk(i,s);if(i.tag!==0&&o===2){var a=xc(i);a!==0&&(s=a,o=Ok(i,a))}if(o===1)throw o=qk,Lk(i,0),Dk(i,s),Ek(i,B()),o;if(o===6)throw Error(p$3(345));return i.finishedWork=i.current.alternate,i.finishedLanes=s,Qk(i,uk,vk),Ek(i,B()),null}function Rk(i,s){var o=K;K|=1;try{return i(s)}finally{K=o,K===0&&(Hj=B()+500,fg&&jg())}}function Sk(i){xk!==null&&xk.tag===0&&!(K&6)&&Ik();var s=K;K|=1;var o=pk.transition,a=C;try{if(pk.transition=null,C=1,i)return i()}finally{C=a,pk.transition=o,K=s,!(K&6)&&jg()}}function Ij(){gj=fj.current,E(fj)}function Lk(i,s){i.finishedWork=null,i.finishedLanes=0;var o=i.timeoutHandle;if(o!==-1&&(i.timeoutHandle=-1,Gf(o)),Y!==null)for(o=Y.return;o!==null;){var a=o;switch(wg(a),a.tag){case 1:a=a.type.childContextTypes,a!=null&&$f();break;case 3:Jh(),E(Wf),E(H),Oh();break;case 5:Lh(a);break;case 4:Jh();break;case 13:E(M);break;case 19:E(M);break;case 10:Rg(a.type._context);break;case 22:case 23:Ij()}o=o.return}if(R=i,Y=i=wh(i.current,null),Z=gj=s,T=0,qk=null,sk=rk=hh=0,uk=tk=null,Wg!==null){for(s=0;s<Wg.length;s++)if(o=Wg[s],a=o.interleaved,a!==null){o.interleaved=null;var c=a.next,d=o.pending;if(d!==null){var g=d.next;d.next=c,a.next=g}o.pending=a}Wg=null}return i}function Nk(i,s){do{var o=Y;try{if(Qg(),Ph.current=ai,Sh){for(var a=N.memoizedState;a!==null;){var c=a.queue;c!==null&&(c.pending=null),a=a.next}Sh=!1}if(Rh=0,P=O=N=null,Th=!1,Uh=0,ok.current=null,o===null||o.return===null){T=1,qk=s,Y=null;break}e:{var d=i,g=o.return,b=o,$=s;if(s=Z,b.flags|=32768,$!==null&&typeof $=="object"&&typeof $.then=="function"){var _=$,_e=b,et=_e.tag;if(!(_e.mode&1)&&(et===0||et===11||et===15)){var rt=_e.alternate;rt?(_e.updateQueue=rt.updateQueue,_e.memoizedState=rt.memoizedState,_e.lanes=rt.lanes):(_e.updateQueue=null,_e.memoizedState=null)}var tt=Vi(g);if(tt!==null){tt.flags&=-257,Wi(tt,g,b,d,s),tt.mode&1&&Ti(d,_,s),s=tt,$=_;var j=s.updateQueue;if(j===null){var nt=new Set;nt.add($),s.updateQueue=nt}else j.add($);break e}else{if(!(s&1)){Ti(d,_,s),uj();break e}$=Error(p$3(426))}}else if(I&&b.mode&1){var st=Vi(g);if(st!==null){!(st.flags&65536)&&(st.flags|=256),Wi(st,g,b,d,s),Jg(Ki($,b));break e}}d=$=Ki($,b),T!==4&&(T=2),tk===null?tk=[d]:tk.push(d),d=g;do{switch(d.tag){case 3:d.flags|=65536,s&=-s,d.lanes|=s;var ot=Oi(d,$,s);fh(d,ot);break e;case 1:b=$;var ut=d.type,ht=d.stateNode;if(!(d.flags&128)&&(typeof ut.getDerivedStateFromError=="function"||ht!==null&&typeof ht.componentDidCatch=="function"&&(Si===null||!Si.has(ht)))){d.flags|=65536,s&=-s,d.lanes|=s;var pt=Ri(d,b,s);fh(d,pt);break e}}d=d.return}while(d!==null)}Tk(o)}catch(it){s=it,Y===o&&o!==null&&(Y=o=o.return);continue}break}while(1)}function Kk(){var i=nk.current;return nk.current=ai,i===null?ai:i}function uj(){(T===0||T===3||T===2)&&(T=4),R===null||!(hh&268435455)&&!(rk&268435455)||Dk(R,Z)}function Jk(i,s){var o=K;K|=2;var a=Kk();(R!==i||Z!==s)&&(vk=null,Lk(i,s));do try{Uk();break}catch(c){Nk(i,c)}while(1);if(Qg(),K=o,nk.current=a,Y!==null)throw Error(p$3(261));return R=null,Z=0,T}function Uk(){for(;Y!==null;)Vk(Y)}function Mk(){for(;Y!==null&&!cc();)Vk(Y)}function Vk(i){var s=Wk(i.alternate,i,gj);i.memoizedProps=i.pendingProps,s===null?Tk(i):Y=s,ok.current=null}function Tk(i){var s=i;do{var o=s.alternate;if(i=s.return,s.flags&32768){if(o=Jj(o,s),o!==null){o.flags&=32767,Y=o;return}if(i!==null)i.flags|=32768,i.subtreeFlags=0,i.deletions=null;else{T=6,Y=null;return}}else if(o=Fj(o,s,gj),o!==null){Y=o;return}if(s=s.sibling,s!==null){Y=s;return}Y=s=i}while(s!==null);T===0&&(T=5)}function Qk(i,s,o){var a=C,c=pk.transition;try{pk.transition=null,C=1,Xk(i,s,o,a)}finally{pk.transition=c,C=a}return null}function Xk(i,s,o,a){do Ik();while(xk!==null);if(K&6)throw Error(p$3(327));o=i.finishedWork;var c=i.finishedLanes;if(o===null)return null;if(i.finishedWork=null,i.finishedLanes=0,o===i.current)throw Error(p$3(177));i.callbackNode=null,i.callbackPriority=0;var d=o.lanes|o.childLanes;if(Bc(i,d),i===R&&(Y=R=null,Z=0),!(o.subtreeFlags&2064)&&!(o.flags&2064)||wk||(wk=!0,Gk(hc,function(){return Ik(),null})),d=(o.flags&15990)!==0,o.subtreeFlags&15990||d){d=pk.transition,pk.transition=null;var g=C;C=1;var b=K;K|=4,ok.current=null,Pj(i,o),ek(o,i),Oe(Df),dd=!!Cf,Df=Cf=null,i.current=o,ik(o),dc(),K=b,C=g,pk.transition=d}else i.current=o;if(wk&&(wk=!1,xk=i,yk=c),d=i.pendingLanes,d===0&&(Si=null),mc(o.stateNode),Ek(i,B()),s!==null)for(a=i.onRecoverableError,o=0;o<s.length;o++)c=s[o],a(c.value,{componentStack:c.stack,digest:c.digest});if(Pi)throw Pi=!1,i=Qi,Qi=null,i;return yk&1&&i.tag!==0&&Ik(),d=i.pendingLanes,d&1?i===Ak?zk++:(zk=0,Ak=i):zk=0,jg(),null}function Ik(){if(xk!==null){var i=Dc(yk),s=pk.transition,o=C;try{if(pk.transition=null,C=16>i?16:i,xk===null)var a=!1;else{if(i=xk,xk=null,yk=0,K&6)throw Error(p$3(331));var c=K;for(K|=4,V=i.current;V!==null;){var d=V,g=d.child;if(V.flags&16){var b=d.deletions;if(b!==null){for(var $=0;$<b.length;$++){var _=b[$];for(V=_;V!==null;){var _e=V;switch(_e.tag){case 0:case 11:case 15:Qj(8,_e,d)}var et=_e.child;if(et!==null)et.return=_e,V=et;else for(;V!==null;){_e=V;var rt=_e.sibling,tt=_e.return;if(Tj(_e),_e===_){V=null;break}if(rt!==null){rt.return=tt,V=rt;break}V=tt}}}var j=d.alternate;if(j!==null){var nt=j.child;if(nt!==null){j.child=null;do{var st=nt.sibling;nt.sibling=null,nt=st}while(nt!==null)}}V=d}}if(d.subtreeFlags&2064&&g!==null)g.return=d,V=g;else e:for(;V!==null;){if(d=V,d.flags&2048)switch(d.tag){case 0:case 11:case 15:Qj(9,d,d.return)}var ot=d.sibling;if(ot!==null){ot.return=d.return,V=ot;break e}V=d.return}}var ut=i.current;for(V=ut;V!==null;){g=V;var ht=g.child;if(g.subtreeFlags&2064&&ht!==null)ht.return=g,V=ht;else e:for(g=ut;V!==null;){if(b=V,b.flags&2048)try{switch(b.tag){case 0:case 11:case 15:Rj(9,b)}}catch(it){W(b,b.return,it)}if(b===g){V=null;break e}var pt=b.sibling;if(pt!==null){pt.return=b.return,V=pt;break e}V=b.return}}if(K=c,jg(),lc&&typeof lc.onPostCommitFiberRoot=="function")try{lc.onPostCommitFiberRoot(kc,i)}catch{}a=!0}return a}finally{C=o,pk.transition=s}}return!1}function Yk(i,s,o){s=Ki(o,s),s=Oi(i,s,1),i=dh(i,s,1),s=L(),i!==null&&(Ac(i,1,s),Ek(i,s))}function W(i,s,o){if(i.tag===3)Yk(i,i,o);else for(;s!==null;){if(s.tag===3){Yk(s,i,o);break}else if(s.tag===1){var a=s.stateNode;if(typeof s.type.getDerivedStateFromError=="function"||typeof a.componentDidCatch=="function"&&(Si===null||!Si.has(a))){i=Ki(o,i),i=Ri(s,i,1),s=dh(s,i,1),i=L(),s!==null&&(Ac(s,1,i),Ek(s,i));break}}s=s.return}}function Ui(i,s,o){var a=i.pingCache;a!==null&&a.delete(s),s=L(),i.pingedLanes|=i.suspendedLanes&o,R===i&&(Z&o)===o&&(T===4||T===3&&(Z&130023424)===Z&&500>B()-gk?Lk(i,0):sk|=o),Ek(i,s)}function Zk(i,s){s===0&&(i.mode&1?(s=sc,sc<<=1,!(sc&130023424)&&(sc=4194304)):s=1);var o=L();i=Zg(i,s),i!==null&&(Ac(i,s,o),Ek(i,o))}function vj(i){var s=i.memoizedState,o=0;s!==null&&(o=s.retryLane),Zk(i,o)}function ck(i,s){var o=0;switch(i.tag){case 13:var a=i.stateNode,c=i.memoizedState;c!==null&&(o=c.retryLane);break;case 19:a=i.stateNode;break;default:throw Error(p$3(314))}a!==null&&a.delete(s),Zk(i,o)}var Wk;Wk=function(i,s,o){if(i!==null)if(i.memoizedProps!==s.pendingProps||Wf.current)Ug=!0;else{if(!(i.lanes&o)&&!(s.flags&128))return Ug=!1,zj(i,s,o);Ug=!!(i.flags&131072)}else Ug=!1,I&&s.flags&1048576&&ug(s,ng,s.index);switch(s.lanes=0,s.tag){case 2:var a=s.type;jj(i,s),i=s.pendingProps;var c=Yf(s,H.current);Tg(s,o),c=Xh(null,s,a,i,c,o);var d=bi();return s.flags|=1,typeof c=="object"&&c!==null&&typeof c.render=="function"&&c.$$typeof===void 0?(s.tag=1,s.memoizedState=null,s.updateQueue=null,Zf(a)?(d=!0,cg(s)):d=!1,s.memoizedState=c.state!==null&&c.state!==void 0?c.state:null,ah(s),c.updater=nh,s.stateNode=c,c._reactInternals=s,rh(s,a,i,o),s=kj(null,s,a,!0,d,o)):(s.tag=0,I&&d&&vg(s),Yi(null,s,c,o),s=s.child),s;case 16:a=s.elementType;e:{switch(jj(i,s),i=s.pendingProps,c=a._init,a=c(a._payload),s.type=a,c=s.tag=$k(a),i=Lg(a,i),c){case 0:s=dj(null,s,a,i,o);break e;case 1:s=ij(null,s,a,i,o);break e;case 11:s=Zi(null,s,a,i,o);break e;case 14:s=aj(null,s,a,Lg(a.type,i),o);break e}throw Error(p$3(306,a,""))}return s;case 0:return a=s.type,c=s.pendingProps,c=s.elementType===a?c:Lg(a,c),dj(i,s,a,c,o);case 1:return a=s.type,c=s.pendingProps,c=s.elementType===a?c:Lg(a,c),ij(i,s,a,c,o);case 3:e:{if(lj(s),i===null)throw Error(p$3(387));a=s.pendingProps,d=s.memoizedState,c=d.element,bh(i,s),gh(s,a,null,o);var g=s.memoizedState;if(a=g.element,d.isDehydrated)if(d={element:a,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},s.updateQueue.baseState=d,s.memoizedState=d,s.flags&256){c=Ki(Error(p$3(423)),s),s=mj(i,s,a,o,c);break e}else if(a!==c){c=Ki(Error(p$3(424)),s),s=mj(i,s,a,o,c);break e}else for(yg=Lf(s.stateNode.containerInfo.firstChild),xg=s,I=!0,zg=null,o=Ch(s,null,a,o),s.child=o;o;)o.flags=o.flags&-3|4096,o=o.sibling;else{if(Ig(),a===c){s=$i(i,s,o);break e}Yi(i,s,a,o)}s=s.child}return s;case 5:return Kh(s),i===null&&Eg(s),a=s.type,c=s.pendingProps,d=i!==null?i.memoizedProps:null,g=c.children,Ef(a,c)?g=null:d!==null&&Ef(a,d)&&(s.flags|=32),hj(i,s),Yi(i,s,g,o),s.child;case 6:return i===null&&Eg(s),null;case 13:return pj(i,s,o);case 4:return Ih(s,s.stateNode.containerInfo),a=s.pendingProps,i===null?s.child=Bh(s,null,a,o):Yi(i,s,a,o),s.child;case 11:return a=s.type,c=s.pendingProps,c=s.elementType===a?c:Lg(a,c),Zi(i,s,a,c,o);case 7:return Yi(i,s,s.pendingProps,o),s.child;case 8:return Yi(i,s,s.pendingProps.children,o),s.child;case 12:return Yi(i,s,s.pendingProps.children,o),s.child;case 10:e:{if(a=s.type._context,c=s.pendingProps,d=s.memoizedProps,g=c.value,G(Mg,a._currentValue),a._currentValue=g,d!==null)if(He(d.value,g)){if(d.children===c.children&&!Wf.current){s=$i(i,s,o);break e}}else for(d=s.child,d!==null&&(d.return=s);d!==null;){var b=d.dependencies;if(b!==null){g=d.child;for(var $=b.firstContext;$!==null;){if($.context===a){if(d.tag===1){$=ch(-1,o&-o),$.tag=2;var _=d.updateQueue;if(_!==null){_=_.shared;var _e=_.pending;_e===null?$.next=$:($.next=_e.next,_e.next=$),_.pending=$}}d.lanes|=o,$=d.alternate,$!==null&&($.lanes|=o),Sg(d.return,o,s),b.lanes|=o;break}$=$.next}}else if(d.tag===10)g=d.type===s.type?null:d.child;else if(d.tag===18){if(g=d.return,g===null)throw Error(p$3(341));g.lanes|=o,b=g.alternate,b!==null&&(b.lanes|=o),Sg(g,o,s),g=d.sibling}else g=d.child;if(g!==null)g.return=d;else for(g=d;g!==null;){if(g===s){g=null;break}if(d=g.sibling,d!==null){d.return=g.return,g=d;break}g=g.return}d=g}Yi(i,s,c.children,o),s=s.child}return s;case 9:return c=s.type,a=s.pendingProps.children,Tg(s,o),c=Vg(c),a=a(c),s.flags|=1,Yi(i,s,a,o),s.child;case 14:return a=s.type,c=Lg(a,s.pendingProps),c=Lg(a.type,c),aj(i,s,a,c,o);case 15:return cj(i,s,s.type,s.pendingProps,o);case 17:return a=s.type,c=s.pendingProps,c=s.elementType===a?c:Lg(a,c),jj(i,s),s.tag=1,Zf(a)?(i=!0,cg(s)):i=!1,Tg(s,o),ph(s,a,c),rh(s,a,c,o),kj(null,s,a,!0,i,o);case 19:return yj(i,s,o);case 22:return ej(i,s,o)}throw Error(p$3(156,s.tag))};function Gk(i,s){return ac(i,s)}function al(i,s,o,a){this.tag=i,this.key=o,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=s,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Bg(i,s,o,a){return new al(i,s,o,a)}function bj(i){return i=i.prototype,!(!i||!i.isReactComponent)}function $k(i){if(typeof i=="function")return bj(i)?1:0;if(i!=null){if(i=i.$$typeof,i===Da)return 11;if(i===Ga)return 14}return 2}function wh(i,s){var o=i.alternate;return o===null?(o=Bg(i.tag,s,i.key,i.mode),o.elementType=i.elementType,o.type=i.type,o.stateNode=i.stateNode,o.alternate=i,i.alternate=o):(o.pendingProps=s,o.type=i.type,o.flags=0,o.subtreeFlags=0,o.deletions=null),o.flags=i.flags&14680064,o.childLanes=i.childLanes,o.lanes=i.lanes,o.child=i.child,o.memoizedProps=i.memoizedProps,o.memoizedState=i.memoizedState,o.updateQueue=i.updateQueue,s=i.dependencies,o.dependencies=s===null?null:{lanes:s.lanes,firstContext:s.firstContext},o.sibling=i.sibling,o.index=i.index,o.ref=i.ref,o}function yh(i,s,o,a,c,d){var g=2;if(a=i,typeof i=="function")bj(i)&&(g=1);else if(typeof i=="string")g=5;else e:switch(i){case ya:return Ah(o.children,c,d,s);case za:g=8,c|=8;break;case Aa:return i=Bg(12,o,s,c|2),i.elementType=Aa,i.lanes=d,i;case Ea:return i=Bg(13,o,s,c),i.elementType=Ea,i.lanes=d,i;case Fa:return i=Bg(19,o,s,c),i.elementType=Fa,i.lanes=d,i;case Ia:return qj(o,c,d,s);default:if(typeof i=="object"&&i!==null)switch(i.$$typeof){case Ba:g=10;break e;case Ca:g=9;break e;case Da:g=11;break e;case Ga:g=14;break e;case Ha:g=16,a=null;break e}throw Error(p$3(130,i==null?i:typeof i,""))}return s=Bg(g,o,s,c),s.elementType=i,s.type=a,s.lanes=d,s}function Ah(i,s,o,a){return i=Bg(7,i,a,s),i.lanes=o,i}function qj(i,s,o,a){return i=Bg(22,i,a,s),i.elementType=Ia,i.lanes=o,i.stateNode={isHidden:!1},i}function xh(i,s,o){return i=Bg(6,i,null,s),i.lanes=o,i}function zh(i,s,o){return s=Bg(4,i.children!==null?i.children:[],i.key,s),s.lanes=o,s.stateNode={containerInfo:i.containerInfo,pendingChildren:null,implementation:i.implementation},s}function bl(i,s,o,a,c){this.tag=s,this.containerInfo=i,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=zc(0),this.expirationTimes=zc(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=zc(0),this.identifierPrefix=a,this.onRecoverableError=c,this.mutableSourceEagerHydrationData=null}function cl(i,s,o,a,c,d,g,b,$){return i=new bl(i,s,o,b,$),s===1?(s=1,d===!0&&(s|=8)):s=0,d=Bg(3,null,null,s),i.current=d,d.stateNode=i,d.memoizedState={element:a,isDehydrated:o,cache:null,transitions:null,pendingSuspenseBoundaries:null},ah(d),i}function dl(i,s,o){var a=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:wa,key:a==null?null:""+a,children:i,containerInfo:s,implementation:o}}function el(i){if(!i)return Vf;i=i._reactInternals;e:{if(Vb(i)!==i||i.tag!==1)throw Error(p$3(170));var s=i;do{switch(s.tag){case 3:s=s.stateNode.context;break e;case 1:if(Zf(s.type)){s=s.stateNode.__reactInternalMemoizedMergedChildContext;break e}}s=s.return}while(s!==null);throw Error(p$3(171))}if(i.tag===1){var o=i.type;if(Zf(o))return bg(i,o,s)}return s}function fl(i,s,o,a,c,d,g,b,$){return i=cl(o,a,!0,i,c,d,g,b,$),i.context=el(null),o=i.current,a=L(),c=lh(o),d=ch(a,c),d.callback=s??null,dh(o,d,c),i.current.lanes=c,Ac(i,c,a),Ek(i,a),i}function gl(i,s,o,a){var c=s.current,d=L(),g=lh(c);return o=el(o),s.context===null?s.context=o:s.pendingContext=o,s=ch(d,g),s.payload={element:i},a=a===void 0?null:a,a!==null&&(s.callback=a),i=dh(c,s,g),i!==null&&(mh(i,c,g,d),eh(i,c,g)),g}function hl(i){if(i=i.current,!i.child)return null;switch(i.child.tag){case 5:return i.child.stateNode;default:return i.child.stateNode}}function il(i,s){if(i=i.memoizedState,i!==null&&i.dehydrated!==null){var o=i.retryLane;i.retryLane=o!==0&&o<s?o:s}}function jl(i,s){il(i,s),(i=i.alternate)&&il(i,s)}function kl(){return null}var ll=typeof reportError=="function"?reportError:function(i){console.error(i)};function ml(i){this._internalRoot=i}nl.prototype.render=ml.prototype.render=function(i){var s=this._internalRoot;if(s===null)throw Error(p$3(409));gl(i,s,null,null)};nl.prototype.unmount=ml.prototype.unmount=function(){var i=this._internalRoot;if(i!==null){this._internalRoot=null;var s=i.containerInfo;Sk(function(){gl(null,i,null,null)}),s[uf]=null}};function nl(i){this._internalRoot=i}nl.prototype.unstable_scheduleHydration=function(i){if(i){var s=Hc();i={blockedOn:null,target:i,priority:s};for(var o=0;o<Qc.length&&s!==0&&s<Qc[o].priority;o++);Qc.splice(o,0,i),o===0&&Vc(i)}};function ol(i){return!(!i||i.nodeType!==1&&i.nodeType!==9&&i.nodeType!==11)}function pl(i){return!(!i||i.nodeType!==1&&i.nodeType!==9&&i.nodeType!==11&&(i.nodeType!==8||i.nodeValue!==" react-mount-point-unstable "))}function ql(){}function rl(i,s,o,a,c){if(c){if(typeof a=="function"){var d=a;a=function(){var _=hl(g);d.call(_)}}var g=fl(s,a,i,0,null,!1,!1,"",ql);return i._reactRootContainer=g,i[uf]=g.current,sf(i.nodeType===8?i.parentNode:i),Sk(),g}for(;c=i.lastChild;)i.removeChild(c);if(typeof a=="function"){var b=a;a=function(){var _=hl($);b.call(_)}}var $=cl(i,0,!1,null,null,!1,!1,"",ql);return i._reactRootContainer=$,i[uf]=$.current,sf(i.nodeType===8?i.parentNode:i),Sk(function(){gl(s,$,o,a)}),$}function sl(i,s,o,a,c){var d=o._reactRootContainer;if(d){var g=d;if(typeof c=="function"){var b=c;c=function(){var $=hl(g);b.call($)}}gl(s,g,i,c)}else g=rl(o,s,i,c,a);return hl(g)}Ec=function(i){switch(i.tag){case 3:var s=i.stateNode;if(s.current.memoizedState.isDehydrated){var o=tc(s.pendingLanes);o!==0&&(Cc(s,o|1),Ek(s,B()),!(K&6)&&(Hj=B()+500,jg()))}break;case 13:Sk(function(){var a=Zg(i,1);if(a!==null){var c=L();mh(a,i,1,c)}}),jl(i,1)}};Fc=function(i){if(i.tag===13){var s=Zg(i,134217728);if(s!==null){var o=L();mh(s,i,134217728,o)}jl(i,134217728)}};Gc=function(i){if(i.tag===13){var s=lh(i),o=Zg(i,s);if(o!==null){var a=L();mh(o,i,s,a)}jl(i,s)}};Hc=function(){return C};Ic=function(i,s){var o=C;try{return C=i,s()}finally{C=o}};yb=function(i,s,o){switch(s){case"input":if(bb(i,o),s=o.name,o.type==="radio"&&s!=null){for(o=i;o.parentNode;)o=o.parentNode;for(o=o.querySelectorAll("input[name="+JSON.stringify(""+s)+'][type="radio"]'),s=0;s<o.length;s++){var a=o[s];if(a!==i&&a.form===i.form){var c=Db(a);if(!c)throw Error(p$3(90));Wa(a),bb(a,c)}}}break;case"textarea":ib(i,o);break;case"select":s=o.value,s!=null&&fb(i,!!o.multiple,s,!1)}};Gb=Rk;Hb=Sk;var tl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Rk]},ul={findFiberByHostInstance:Wc,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},vl={bundleType:ul.bundleType,version:ul.version,rendererPackageName:ul.rendererPackageName,rendererConfig:ul.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(i){return i=Zb(i),i===null?null:i.stateNode},findFiberByHostInstance:ul.findFiberByHostInstance||kl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!wl.isDisabled&&wl.supportsFiber)try{kc=wl.inject(vl),lc=wl}catch{}}reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tl;reactDom_production_min.createPortal=function(i,s){var o=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!ol(s))throw Error(p$3(200));return dl(i,s,null,o)};reactDom_production_min.createRoot=function(i,s){if(!ol(i))throw Error(p$3(299));var o=!1,a="",c=ll;return s!=null&&(s.unstable_strictMode===!0&&(o=!0),s.identifierPrefix!==void 0&&(a=s.identifierPrefix),s.onRecoverableError!==void 0&&(c=s.onRecoverableError)),s=cl(i,1,!1,null,null,o,!1,a,c),i[uf]=s.current,sf(i.nodeType===8?i.parentNode:i),new ml(s)};reactDom_production_min.findDOMNode=function(i){if(i==null)return null;if(i.nodeType===1)return i;var s=i._reactInternals;if(s===void 0)throw typeof i.render=="function"?Error(p$3(188)):(i=Object.keys(i).join(","),Error(p$3(268,i)));return i=Zb(s),i=i===null?null:i.stateNode,i};reactDom_production_min.flushSync=function(i){return Sk(i)};reactDom_production_min.hydrate=function(i,s,o){if(!pl(s))throw Error(p$3(200));return sl(null,i,s,!0,o)};reactDom_production_min.hydrateRoot=function(i,s,o){if(!ol(i))throw Error(p$3(405));var a=o!=null&&o.hydratedSources||null,c=!1,d="",g=ll;if(o!=null&&(o.unstable_strictMode===!0&&(c=!0),o.identifierPrefix!==void 0&&(d=o.identifierPrefix),o.onRecoverableError!==void 0&&(g=o.onRecoverableError)),s=fl(s,null,i,1,o??null,c,!1,d,g),i[uf]=s.current,sf(i),a)for(i=0;i<a.length;i++)o=a[i],c=o._getVersion,c=c(o._source),s.mutableSourceEagerHydrationData==null?s.mutableSourceEagerHydrationData=[o,c]:s.mutableSourceEagerHydrationData.push(o,c);return new nl(s)};reactDom_production_min.render=function(i,s,o){if(!pl(s))throw Error(p$3(200));return sl(null,i,s,!1,o)};reactDom_production_min.unmountComponentAtNode=function(i){if(!pl(i))throw Error(p$3(40));return i._reactRootContainer?(Sk(function(){sl(null,null,i,!1,function(){i._reactRootContainer=null,i[uf]=null})}),!0):!1};reactDom_production_min.unstable_batchedUpdates=Rk;reactDom_production_min.unstable_renderSubtreeIntoContainer=function(i,s,o,a){if(!pl(o))throw Error(p$3(200));if(i==null||i._reactInternals===void 0)throw Error(p$3(38));return sl(i,s,o,!1,a)};reactDom_production_min.version="18.2.0-next-9e3b772b8-20220608";function checkDCE(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE)}catch(i){console.error(i)}}checkDCE(),reactDom.exports=reactDom_production_min;var reactDomExports=reactDom.exports,m$1=reactDomExports;client.createRoot=m$1.createRoot,client.hydrateRoot=m$1.hydrateRoot;var es6={exports:{}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EPSILON_FLOAT32$1=1e-7,EPSILON_FLOAT16$1=1e-4;class DataStorage{constructor(s,o){this.backend=s,this.dataMover=o,this.data=new WeakMap,this.dataIdsCount=0}get(s){return this.data.has(s)||this.dataMover.moveData(this.backend,s),this.data.get(s)}set(s,o){this.dataIdsCount++,this.data.set(s,o)}has(s){return this.data.has(s)}delete(s){return this.dataIdsCount--,this.data.delete(s)}numDataIds(){return this.dataIdsCount}}class KernelBackend{decComplexRef(s){}time(s){return notYetImplemented("time")}read(s){return notYetImplemented("read")}readSync(s){return notYetImplemented("readSync")}numDataIds(){return notYetImplemented("numDataIds")}disposeData(s){return notYetImplemented("disposeData")}write(s,o,a){return notYetImplemented("write")}move(s,o,a,c){return notYetImplemented("move")}memory(){return notYetImplemented("memory")}floatPrecision(){return notYetImplemented("floatPrecision")}epsilon(){return this.floatPrecision()===32?EPSILON_FLOAT32$1:EPSILON_FLOAT16$1}batchMatMul(s,o,a,c){return notYetImplemented("batchMatMul")}fusedBatchMatMul({a:s,b:o,transposeA:a,transposeB:c,bias:d,activation:g,preluActivationWeights:b}){return notYetImplemented("fusedBatchMatMul")}slice(s,o,a){return notYetImplemented("slice")}stridedSlice(s,o,a,c){return notYetImplemented("stridedSlice")}unstack(s,o){return notYetImplemented("unstack")}reverse(s,o){return notYetImplemented("reverse")}concat(s,o){return notYetImplemented("concat")}neg(s){return notYetImplemented("neg")}add(s,o){return notYetImplemented("add")}addN(s){return notYetImplemented("addN")}subtract(s,o){return notYetImplemented("subtract")}multiply(s,o){return notYetImplemented("multiply")}realDivide(s,o){return notYetImplemented("realDivide")}floorDiv(s,o){return notYetImplemented("floorDiv")}sum(s,o){return notYetImplemented("sum")}prod(s,o){return notYetImplemented("prod")}unsortedSegmentSum(s,o,a){return notYetImplemented("unsortedSegmentSum")}argMin(s,o){return notYetImplemented("argMin")}argMax(s,o){return notYetImplemented("argMax")}equal(s,o){return notYetImplemented("equal")}notEqual(s,o){return notYetImplemented("notEqual")}less(s,o){return notYetImplemented("less")}lessEqual(s,o){return notYetImplemented("lessEqual")}greater(s,o){return notYetImplemented("greater")}greaterEqual(s,o){return notYetImplemented("greaterEqual")}logicalNot(s){return notYetImplemented("logicalNot")}logicalAnd(s,o){return notYetImplemented("logicalAnd")}logicalOr(s,o){return notYetImplemented("logicalOr")}where(s){return notYetImplemented("where")}select(s,o,a){return notYetImplemented("select")}topk(s,o,a){return notYetImplemented("topk")}min(s,o){return notYetImplemented("min")}minimum(s,o){return notYetImplemented("minimum")}mod(s,o){return notYetImplemented("mod")}max(s,o){return notYetImplemented("max")}maximum(s,o){return notYetImplemented("maximum")}all(s,o){return notYetImplemented("all")}any(s,o){return notYetImplemented("any")}squaredDifference(s,o){return notYetImplemented("squaredDifference")}ceil(s){return notYetImplemented("ceil")}floor(s){return notYetImplemented("floor")}round(s){return notYetImplemented("round")}sign(s){return notYetImplemented("sign")}isNaN(s){return notYetImplemented("isNaN")}isInf(s){return notYetImplemented("isInf")}isFinite(s){return notYetImplemented("isFinite")}pow(s,o){return notYetImplemented("pow")}exp(s){return notYetImplemented("exp")}expm1(s){return notYetImplemented("expm1")}softmax(s,o){return notYetImplemented("softmax")}log(s){return notYetImplemented("log")}log1p(s){return notYetImplemented("log1p")}sqrt(s){return notYetImplemented("sqrt")}rsqrt(s){return notYetImplemented("rsqrt")}square(s){return notYetImplemented("square")}reciprocal(s){return notYetImplemented("reciprocal")}relu(s){return notYetImplemented("relu")}relu6(s){return notYetImplemented("relu6")}prelu(s,o){return notYetImplemented("prelu")}elu(s){return notYetImplemented("elu")}eluDer(s,o){return notYetImplemented("eluDer")}selu(s){return notYetImplemented("selu")}int(s){return notYetImplemented("int")}clip(s,o,a){return notYetImplemented("clip")}abs(s){return notYetImplemented("abs")}complexAbs(s){return notYetImplemented("complexAbs")}sigmoid(s){return notYetImplemented("sigmoid")}softplus(s){return notYetImplemented("softplus")}sin(s){return notYetImplemented("sin")}cos(s){return notYetImplemented("cos")}tan(s){return notYetImplemented("tan")}asin(s){return notYetImplemented("asin")}acos(s){return notYetImplemented("acos")}atan(s){return notYetImplemented("atan")}atan2(s,o){return notYetImplemented("atan2")}sinh(s){return notYetImplemented("sinh")}cosh(s){return notYetImplemented("cosh")}tanh(s){return notYetImplemented("tanh")}asinh(s){return notYetImplemented("asinh")}acosh(s){return notYetImplemented("acosh")}atanh(s){return notYetImplemented("atanh")}erf(s){return notYetImplemented("erf")}step(s,o){return notYetImplemented("step")}fusedConv2d({input:s,filter:o,convInfo:a,bias:c,activation:d,preluActivationWeights:g}){return notYetImplemented("fusedConv2d")}conv2d(s,o,a){return notYetImplemented("conv2d")}conv2dDerInput(s,o,a){return notYetImplemented("conv2dDerInput")}conv2dDerFilter(s,o,a){return notYetImplemented("conv2dDerFilter")}fusedDepthwiseConv2D({input:s,filter:o,convInfo:a,bias:c,activation:d,preluActivationWeights:g}){return notYetImplemented("fusedDepthwiseConv2D")}depthwiseConv2D(s,o,a){return notYetImplemented("depthwiseConv2D")}depthwiseConv2DDerInput(s,o,a){return notYetImplemented("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(s,o,a){return notYetImplemented("depthwiseConv2DDerFilter")}conv3d(s,o,a){return notYetImplemented("conv3d")}conv3dDerInput(s,o,a){return notYetImplemented("conv3dDerInput")}conv3dDerFilter(s,o,a){return notYetImplemented("conv3dDerFilter")}maxPool(s,o){return notYetImplemented("maxPool")}maxPoolBackprop(s,o,a,c){return notYetImplemented("maxPoolBackprop")}avgPool(s,o){return notYetImplemented("avgPool")}avgPoolBackprop(s,o,a){return notYetImplemented("avgPoolBackprop")}avgPool3d(s,o){return notYetImplemented("avgPool3d")}avgPool3dBackprop(s,o,a){return notYetImplemented("avgPool3dBackprop")}maxPool3d(s,o){return notYetImplemented("maxPool3d")}maxPool3dBackprop(s,o,a,c){return notYetImplemented("maxPool3dBackprop")}reshape(s,o){return notYetImplemented("reshape")}cast(s,o){return notYetImplemented("cast")}tile(s,o){return notYetImplemented("tile")}pad(s,o,a){return notYetImplemented("pad")}transpose(s,o){return notYetImplemented("transpose")}gather(s,o,a,c=0){return notYetImplemented("gather")}gatherND(s,o){return notYetImplemented("gatherND")}scatterND(s,o,a){return notYetImplemented("scatterND")}batchToSpaceND(s,o,a){return notYetImplemented("batchToSpaceND")}spaceToBatchND(s,o,a){return notYetImplemented("spaceToBatchND")}resizeBilinear(s,o,a,c,d){return notYetImplemented("resizeBilinear")}resizeBilinearBackprop(s,o,a){return notYetImplemented("resizeBilinearBackprop")}resizeNearestNeighbor(s,o,a,c,d){return notYetImplemented("resizeNearestNeighbor")}resizeNearestNeighborBackprop(s,o,a){return notYetImplemented("resizeNearestNeighborBackprop")}batchNorm(s,o,a,c,d,g){return notYetImplemented("batchNorm")}localResponseNormalization4D(s,o,a,c,d){return notYetImplemented("localResponseNormalization4D")}LRNGrad(s,o,a,c,d,g,b){return notYetImplemented("LRNGrad")}multinomial(s,o,a,c){return notYetImplemented("multinomial")}oneHot(s,o,a,c){return notYetImplemented("oneHot")}cumsum(s,o,a,c){return notYetImplemented("cumsum")}nonMaxSuppression(s,o,a,c,d){return notYetImplemented("nonMaxSuppression")}fft(s){return notYetImplemented("fft")}ifft(s){return notYetImplemented("ifft")}complex(s,o){return notYetImplemented("complex")}real(s){return notYetImplemented("real")}imag(s){return notYetImplemented("imag")}cropAndResize(s,o,a,c,d,g){return notYetImplemented("cropAndResize")}depthToSpace(s,o,a){return notYetImplemented("depthToSpace")}split(s,o,a){return notYetImplemented("split")}sparseToDense(s,o,a,c){return notYetImplemented("sparseToDense")}diag(s){return notYetImplemented("diag")}fill(s,o,a){return notYetImplemented("fill")}onesLike(s){return notYetImplemented("onesLike")}zerosLike(s){return notYetImplemented("zerosLike")}linspace(s,o,a){return notYetImplemented("linspace")}dispose(){return notYetImplemented("dispose")}}function notYetImplemented(i){throw new Error(`'${i}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function shuffle(i){let s=i.length,o=0,a=0;for(;s>0;)a=Math.random()*s|0,s--,o=i[s],i[s]=i[a],i[a]=o}function clamp$1(i,s,o){return Math.max(i,Math.min(s,o))}function nearestLargerEven(i){return i%2===0?i:i+1}function sum$3(i){let s=0;for(let o=0;o<i.length;o++)s+=i[o];return s}function randUniform(i,s){const o=Math.random();return s*o+(1-o)*i}function distSquared(i,s){let o=0;for(let a=0;a<i.length;a++){const c=Number(i[a])-Number(s[a]);o+=c*c}return o}function assert$2(i,s){if(!i)throw new Error(typeof s=="string"?s:s())}function assertShapesMatch(i,s,o=""){assert$2(arraysEqual(i,s),()=>o+` Shapes ${i} and ${s} must match`)}function assertNonNull(i){assert$2(i!=null,()=>"The input to the tensor constructor must be a non-null value.")}function flatten$2(i,s=[],o=!1){if(s==null&&(s=[]),Array.isArray(i)||isTypedArray(i)&&!o)for(let a=0;a<i.length;++a)flatten$2(i[a],s,o);else s.push(i);return s}function sizeFromShape(i){if(i.length===0)return 1;let s=i[0];for(let o=1;o<i.length;o++)s*=i[o];return s}function isScalarShape(i){return i.length===0}function arraysEqual(i,s){if(i===s)return!0;if(i==null||s==null||i.length!==s.length)return!1;for(let o=0;o<i.length;o++)if(i[o]!==s[o])return!1;return!0}function isInt(i){return i%1===0}function tanh$3(i){if(Math.tanh!=null)return Math.tanh(i);if(i===1/0)return 1;if(i===-1/0)return-1;{const s=Math.exp(2*i);return(s-1)/(s+1)}}function sizeToSquarishShape(i){const s=Math.ceil(Math.sqrt(i));return[s,Math.ceil(i/s)]}function createShuffledIndices(i){const s=new Uint32Array(i);for(let o=0;o<i;++o)s[o]=o;return shuffle(s),s}function rightPad(i,s){return s<=i.length?i:i+" ".repeat(s-i.length)}function repeatedTry(i,s=a=>0,o){return new Promise((a,c)=>{let d=0;const g=()=>{if(i()){a();return}d++;const b=s(d);if(o!=null&&d>=o){c();return}setTimeout(g,b)};g()})}function inferFromImplicitShape(i,s){let o=1,a=-1;for(let d=0;d<i.length;++d)if(i[d]>=0)o*=i[d];else if(i[d]===-1){if(a!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${a} and dim ${d}`);a=d}else if(i[d]<0)throw Error(`Shapes can not be < 0. Found ${i[d]} at dim ${d}`);if(a===-1){if(s>0&&s!==o)throw Error(`Size(${s}) must match the product of shape ${i}`);return i}if(o===0)throw Error(`Cannot infer the missing size in [${i}] when there are 0 elements`);if(s%o!==0)throw Error(`The implicit shape can't be a fractional number. Got ${s} / ${o}`);const c=i.slice();return c[a]=s/o,c}function parseAxisParam(i,s){const o=s.length;return i=i==null?s.map((a,c)=>c):[].concat(i),assert$2(i.every(a=>a>=-o&&a<o),()=>`All values in axis param must be in range [-${o}, ${o}) but got axis ${i}`),assert$2(i.every(a=>isInt(a)),()=>`All values in axis param must be integers but got axis ${i}`),i.map(a=>a<0?o+a:a)}function squeezeShape(i,s){const o=[],a=[],c=s!=null&&Array.isArray(s)&&s.length===0,d=s==null||c?null:parseAxisParam(s,i).sort();let g=0;for(let b=0;b<i.length;++b){if(d!=null){if(d[g]===b&&i[b]!==1)throw new Error(`Can't squeeze axis ${b} since its dim '${i[b]}' is not 1`);(d[g]==null||d[g]>b)&&i[b]===1&&(o.push(i[b]),a.push(b)),d[g]<=b&&g++}i[b]!==1&&(o.push(i[b]),a.push(b))}return{newShape:o,keptDims:a}}function getTypedArrayFromDType(i,s){let o=null;if(i==null||i==="float32")o=new Float32Array(s);else if(i==="int32")o=new Int32Array(s);else if(i==="bool")o=new Uint8Array(s);else throw new Error(`Unknown data type ${i}`);return o}function getArrayFromDType(i,s){let o=null;if(i==null||i==="float32")o=new Float32Array(s);else if(i==="int32")o=new Int32Array(s);else if(i==="bool")o=new Uint8Array(s);else if(i==="string")o=new Array(s);else throw new Error(`Unknown data type ${i}`);return o}function checkConversionForErrors(i,s){for(let o=0;o<i.length;o++){const a=i[o];if(isNaN(a)||!isFinite(a))throw Error(`A tensor of type ${s} being uploaded contains ${a}.`)}}function isValidDtype(i){return i==="bool"||i==="complex64"||i==="float32"||i==="int32"||i==="string"}function hasEncodingLoss(i,s){return!(s==="complex64"||s==="float32"&&i!=="complex64"||s==="int32"&&i!=="float32"&&i!=="complex64"||s==="bool"&&i==="bool")}function isTypedArray(i){return i instanceof Float32Array||i instanceof Int32Array||i instanceof Uint8Array}function bytesPerElement(i){if(i==="float32"||i==="int32")return 4;if(i==="complex64")return 8;if(i==="bool")return 1;throw new Error(`Unknown dtype ${i}`)}function bytesFromStringArray(i){if(i==null)return 0;let s=0;return i.forEach(o=>s+=o.length),s}function isString$1(i){return typeof i=="string"||i instanceof String}function isBoolean$1(i){return typeof i=="boolean"}function isNumber$1(i){return typeof i=="number"}function inferDtype(i){return Array.isArray(i)?inferDtype(i[0]):i instanceof Float32Array?"float32":i instanceof Int32Array||i instanceof Uint8Array?"int32":isNumber$1(i)?"float32":isString$1(i)?"string":isBoolean$1(i)?"bool":"float32"}function isFunction$1(i){return!!(i&&i.constructor&&i.call&&i.apply)}function nearestDivisor(i,s){for(let o=s;o<i;++o)if(i%o===0)return o;return i}function computeStrides(i){const s=i.length;if(s<2)return[];const o=new Array(s-1);o[s-2]=i[s-1];for(let a=s-3;a>=0;--a)o[a]=o[a+1]*i[a+1];return o}function createNestedArray(i,s,o){const a=new Array;if(s.length===1){const c=s[0];for(let d=0;d<c;d++)a[d]=o[i+d]}else{const c=s[0],d=s.slice(1),g=d.reduce((b,$)=>b*$);for(let b=0;b<c;b++)a[b]=createNestedArray(i+b*g,d,o)}return a}function toNestedArray(i,s){if(i.length===0)return s[0];const o=i.reduce((a,c)=>a*c);if(o===0)return[];if(o!==s.length)throw new Error(`[${i}] does not match the input size ${s.length}.`);return createNestedArray(0,i,s)}function makeOnesTypedArray(i,s){const o=makeZerosTypedArray(i,s);for(let a=0;a<o.length;a++)o[a]=1;return o}function makeZerosTypedArray(i,s){if(s==null||s==="float32"||s==="complex64")return new Float32Array(i);if(s==="int32")return new Int32Array(i);if(s==="bool")return new Uint8Array(i);throw new Error(`Unknown data type ${s}`)}function makeZerosNestedTypedArray(i,s){const o=i.reduce((a,c)=>a*c,1);if(s==null||s==="float32")return toNestedArray(i,new Float32Array(o));if(s==="int32")return toNestedArray(i,new Int32Array(o));if(s==="bool")return toNestedArray(i,new Uint8Array(o));throw new Error(`Unknown data type ${s}`)}function assertNonNegativeIntegerDimensions(i){i.forEach(s=>{assert$2(Number.isInteger(s)&&s>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${i}].`)})}function locToIndex(i,s,o){if(s===0)return 0;if(s===1)return i[0];let a=i[i.length-1];for(let c=0;c<i.length-1;++c)a+=o[c]*i[c];return a}function indexToLoc(i,s,o){if(s===0)return[];if(s===1)return[i];const a=new Array(s);for(let c=0;c<a.length-1;++c)a[c]=Math.floor(i/o[c]),i-=a[c]*o[c];return a[a.length-1]=i,a}function isPromise(i){return i&&i.then&&typeof i.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TENSORFLOWJS_FLAGS_PREFIX="tfjsflags";class Environment{constructor(s){this.global=s,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(s,o){this.platform!=null&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${o}.`),this.platformName=s,this.platform=o}registerFlag(s,o,a){if(this.flagRegistry[s]={evaluationFn:o,setHook:a},this.urlFlags[s]!=null){const c=this.urlFlags[s];console.warn(`Setting feature override from URL ${s}: ${c}.`),this.set(s,c)}}async getAsync(s){return s in this.flags?this.flags[s]:(this.flags[s]=await this.evaluateFlag(s),this.flags[s])}get(s){if(s in this.flags)return this.flags[s];const o=this.evaluateFlag(s);if(isPromise(o))throw new Error(`Flag ${s} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[s]=o,this.flags[s]}getNumber(s){return this.get(s)}getBool(s){return this.get(s)}getFlags(){return this.flags}get features(){return this.flags}set(s,o){if(this.flagRegistry[s]==null)throw new Error(`Cannot set flag ${s} as it has not been registered.`);this.flags[s]=o,this.flagRegistry[s].setHook!=null&&this.flagRegistry[s].setHook(o)}evaluateFlag(s){if(this.flagRegistry[s]==null)throw new Error(`Cannot evaluate flag '${s}': no evaluation function found.`);return this.flagRegistry[s].evaluationFn()}setFlags(s){this.flags=Object.assign({},s)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const s=getQueryParams(this.global.location.search);TENSORFLOWJS_FLAGS_PREFIX in s&&s[TENSORFLOWJS_FLAGS_PREFIX].split(",").forEach(a=>{const[c,d]=a.split(":");this.urlFlags[c]=parseValue(c,d)})}}function getQueryParams(i){const s={};return i.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(o,...a)=>(decodeParam(s,a[0],a[1]),a.join("="))),s}function decodeParam(i,s,o){i[decodeURIComponent(s)]=decodeURIComponent(o||"")}function parseValue(i,s){if(s=s.toLowerCase(),s==="true"||s==="false")return s==="true";if(`${+s}`===s)return+s;throw new Error(`Could not parse value flag value ${s} for flag ${i}.`)}function env(){return ENV$2}let ENV$2=null;function setEnvironmentGlobal(i){ENV$2=i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let globalNameSpace;function getGlobalNamespace(){if(globalNameSpace==null){let i;if(typeof window<"u")i=window;else if(typeof global<"u")i=global;else if(typeof process<"u")i=process;else if(typeof self<"u")i=self;else throw new Error("Could not find a global object");globalNameSpace=i}return globalNameSpace}function getGlobalMap(){const i=getGlobalNamespace();return i._tfGlobals==null&&(i._tfGlobals=new Map),i._tfGlobals}function getGlobal(i,s){const o=getGlobalMap();if(o.has(i))return o.get(i);{const a=s();return o.set(i,a),o.get(i)}}const Abs$1="Abs",Acos="Acos",Acosh="Acosh",Add$2="Add",AddN="AddN",All="All",Any="Any",ArgMax="ArgMax",ArgMin="ArgMin",Asin="Asin",Asinh="Asinh",Atan="Atan",Atanh="Atanh",Atan2="Atan2",AvgPool="AvgPool",AvgPoolGrad="AvgPoolGrad",AvgPool3D="AvgPool3D",AvgPool3DGrad="AvgPool3DGrad",BatchMatMul="BatchMatMul",BatchToSpaceND="BatchToSpaceND",Bincount="Bincount",BroadcastTo="BroadcastTo",Cast="Cast",Ceil="Ceil",ClipByValue="ClipByValue",Complex="Complex",ComplexAbs="ComplexAbs",Concat="Concat",Conv2D$1="Conv2D",Conv2DBackpropFilter="Conv2DBackpropFilter",Conv2DBackpropInput="Conv2DBackpropInput",Conv3D$1="Conv3D",Conv3DBackpropFilterV2="Conv3DBackpropFilterV2",Conv3DBackpropInputV2="Conv3DBackpropInputV2",Cos="Cos",Cosh="Cosh",Cumsum="Cumsum",CropAndResize="CropAndResize",DenseBincount="DenseBincount",DepthToSpace="DepthToSpace",DepthwiseConv2dNative="DepthwiseConv2dNative",DepthwiseConv2dNativeBackpropFilter="DepthwiseConv2dNativeBackpropFilter",DepthwiseConv2dNativeBackpropInput="DepthwiseConv2dNativeBackpropInput",Diag="Diag",Dilation2D="Dilation2D",Dilation2DBackpropInput="Dilation2DBackpropInput",Dilation2DBackpropFilter="Dilation2DBackpropFilter",RealDiv="RealDiv",Elu$1="Elu",EluGrad="EluGrad",Erf="Erf",Equal="Equal",Exp="Exp",ExpandDims="ExpandDims",Expm1="Expm1",FFT$1="FFT",Fill="Fill",FlipLeftRight="FlipLeftRight",Floor="Floor",FloorDiv="FloorDiv",FusedBatchNorm="FusedBatchNorm",GatherV2="GatherV2",GatherNd="GatherNd",Greater="Greater",GreaterEqual="GreaterEqual",Identity$1="Identity",IFFT="IFFT",Imag="Imag",IsFinite="IsFinite",IsInf="IsInf",IsNan="IsNan",LeakyRelu="LeakyRelu",Less="Less",LessEqual="LessEqual",LinSpace="LinSpace",Log="Log",Log1p="Log1p",LogicalAnd="LogicalAnd",LogicalNot="LogicalNot",LogicalOr="LogicalOr",LogSoftmax$1="LogSoftmax",LRN="LRN",LRNGrad="LRNGrad",Max="Max",Maximum$1="Maximum",MaxPool="MaxPool",MaxPoolGrad="MaxPoolGrad",MaxPool3D="MaxPool3D",MaxPool3DGrad="MaxPool3DGrad",MaxPoolWithArgmax="MaxPoolWithArgmax",Mean="Mean",Min="Min",Minimum$1="Minimum",MirrorPad="MirrorPad",Mod="Mod",Multinomial="Multinomial",Multiply$2="Multiply",Neg="Neg",NotEqual="NotEqual",NonMaxSuppressionV3="NonMaxSuppressionV3",NonMaxSuppressionV4="NonMaxSuppressionV4",NonMaxSuppressionV5="NonMaxSuppressionV5",OnesLike="OnesLike",OneHot="OneHot",Pack="Pack",PadV2="PadV2",Pool="Pool",Pow$1="Pow",Prelu="Prelu",Prod="Prod",Range="Range",Real="Real",Reciprocal="Reciprocal",Relu$1="Relu",Reshape$1="Reshape",ResizeNearestNeighbor="ResizeNearestNeighbor",ResizeNearestNeighborGrad="ResizeNearestNeighborGrad",ResizeBilinear="ResizeBilinear",ResizeBilinearGrad="ResizeBilinearGrad",Relu6$1="Relu6",Reverse="Reverse",Round="Round",Rsqrt="Rsqrt",ScatterNd="ScatterNd",Select="Select",Selu$1="Selu",Slice="Slice",Sin="Sin",Sinh="Sinh",Sign="Sign",Sigmoid$1="Sigmoid",Softplus$1="Softplus",Sqrt="Sqrt",Sum="Sum",SpaceToBatchND="SpaceToBatchND",SplitV="SplitV",Softmax$2="Softmax",SquaredDifference="SquaredDifference",Square="Square",Sub="Sub",SparseToDense="SparseToDense",StridedSlice="StridedSlice",Tan="Tan",Tanh$1="Tanh",Tile="Tile",TopK="TopK",Transpose="Transpose",Unique="Unique",Unpack="Unpack",UnsortedSegmentSum="UnsortedSegmentSum",ZerosLike="ZerosLike",Step="Step",FromPixels="FromPixels",RotateWithOffset="RotateWithOffset",_FusedMatMul="_FusedMatMul",FusedConv2D="FusedConv2D",FusedDepthwiseConv2D="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kernelRegistry=getGlobal("kernelRegistry",()=>new Map),gradRegistry=getGlobal("gradRegistry",()=>new Map);function getKernel(i,s){const o=makeKey(i,s);return kernelRegistry.get(o)}function getGradient(i){return gradRegistry.get(i)}function getKernelsForBackend(i){const s=kernelRegistry.entries(),o=[];for(;;){const{done:a,value:c}=s.next();if(a)break;const[d,g]=c,[b]=d.split("_");b===i&&o.push(g)}return o}function registerKernel(i){const{kernelName:s,backendName:o}=i,a=makeKey(s,o);kernelRegistry.has(a)&&console.warn(`The kernel '${s}' for backend '${o}' is already registered`),kernelRegistry.set(a,i)}function registerGradient(i){const{kernelName:s}=i;gradRegistry.has(s)&&env().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${s}'`),gradRegistry.set(s,i)}function unregisterKernel(i,s){const o=makeKey(i,s);if(!kernelRegistry.has(o))throw new Error(`The kernel '${i}' for backend '${s}' is not registered`);kernelRegistry.delete(o)}function unregisterGradient(i){if(!gradRegistry.has(i))throw new Error(`The gradient '${i}' for backend is not registered`);gradRegistry.delete(i)}function copyRegisteredKernels(i,s){getKernelsForBackend(i).forEach(a=>{const c=Object.assign({},a,{backendName:s});registerKernel(c)})}function makeKey(i,s){return`${s}_${i}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function createScalarValue(i,s){return s==="string"?encodeString(i):toTypedArray([i],s)}function noConversionNeeded(i,s){return i instanceof Float32Array&&s==="float32"||i instanceof Int32Array&&s==="int32"||i instanceof Uint8Array&&s==="bool"}function toTypedArray(i,s){if(s==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(i)&&(i=flatten$2(i)),env().getBool("DEBUG")&&checkConversionForErrors(i,s),noConversionNeeded(i,s))return i;if(s==null||s==="float32"||s==="complex64")return new Float32Array(i);if(s==="int32")return new Int32Array(i);if(s==="bool"){const o=new Uint8Array(i.length);for(let a=0;a<o.length;++a)Math.round(i[a])!==0&&(o[a]=1);return o}else throw new Error(`Unknown data type ${s}`)}function now$1(){return env().platform.now()}function fetch$1(i,s){return env().platform.fetch(i,s)}function encodeString(i,s="utf-8"){return s=s||"utf-8",env().platform.encode(i,s)}function decodeString(i,s="utf-8"){return s=s||"utf-8",env().platform.decode(i,s)}const util=Object.freeze(Object.defineProperty({__proto__:null,arraysEqual,assert:assert$2,assertNonNegativeIntegerDimensions,assertNonNull,assertShapesMatch,bytesFromStringArray,bytesPerElement,checkConversionForErrors,clamp:clamp$1,computeStrides,createScalarValue,createShuffledIndices,decodeString,distSquared,encodeString,fetch:fetch$1,flatten:flatten$2,getArrayFromDType,getTypedArrayFromDType,hasEncodingLoss,indexToLoc,inferDtype,inferFromImplicitShape,isBoolean:isBoolean$1,isFunction:isFunction$1,isInt,isNumber:isNumber$1,isPromise,isScalarShape,isString:isString$1,isTypedArray,isValidDtype,locToIndex,makeOnesTypedArray,makeZerosNestedTypedArray,makeZerosTypedArray,nearestDivisor,nearestLargerEven,now:now$1,parseAxisParam,randUniform,repeatedTry,rightPad,shuffle,sizeFromShape,sizeToSquarishShape,squeezeShape,sum:sum$3,tanh:tanh$3,toNestedArray,toTypedArray},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Profiler{constructor(s,o){this.backendTimer=s,this.logger=o,o==null&&(this.logger=new Logger)}profileKernel(s,o,a){let c;const d=()=>{c=a()},g=this.backendTimer.time(d);if(env().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let $=0;$<c.length;$++){const _=c[$];_.data().then(_e=>{checkComputationForErrors(_e,_.dtype,s)})}return{kernelName:s,outputs:c,inputs:o,timeMs:g.then($=>$.kernelMs),extraInfo:g.then($=>$.getExtraProfileInfo!=null?$.getExtraProfileInfo():"")}}logKernelProfile(s){const{kernelName:o,outputs:a,timeMs:c,inputs:d,extraInfo:g}=s;a.forEach(b=>{Promise.all([b.data(),c,g]).then($=>{this.logger.logKernelProfile(o,b,$[0],$[1],d,$[2])})})}}function checkComputationForErrors(i,s,o){if(s!=="float32")return!1;for(let a=0;a<i.length;a++){const c=i[a];if(isNaN(c)||!isFinite(c))return console.warn(`Found ${c} in the result of '${o}'`),!0}return!1}class Logger{logKernelProfile(s,o,a,c,d,g){const b=typeof c=="number"?rightPad(`${c}ms`,9):c.error,$=rightPad(s,25),_=o.rank,_e=o.size,et=rightPad(o.shape.toString(),14);let rt="";for(const tt in d){const j=d[tt];if(j!=null){const nt=j.shape||o.shape,st=nt.length;rt+=`${tt}: ${st}D ${st>0?nt:""} `}}console.log(`%c${$}	%c${b}	%c${_}D ${et}	%c${_e}	%c${rt}	%c${g}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getFilteredNodesXToY(i,s,o){const a={},c={};for(let $=0;$<s.length;$++)a[s[$].id]=!0;for(let $=0;$<i.length;$++){const _=i[$],_e=_.inputs;for(const et in _e){const rt=_e[et];let tt=!1;for(let j=0;j<s.length;j++)if(a[rt.id]){_.outputs.forEach(nt=>a[nt.id]=!0),tt=!0,c[_.id]=!0;break}if(tt)break}}const d={};d[o.id]=!0;const g={};for(let $=i.length-1;$>=0;$--){const _=i[$],_e=_.inputs;for(let et=0;et<_.outputs.length;et++)if(d[_.outputs[et].id]){for(const rt in _e)d[_e[rt].id]=!0,g[_.id]=!0;break}}const b=[];for(let $=0;$<i.length;$++){const _=i[$];if(c[_.id]&&g[_.id]){const _e={};for(const rt in _.inputs){const tt=_.inputs[rt];a[tt.id]&&(_e[rt]=tt)}const et=Object.assign({},_);et.inputs=_e,et.outputs=_.outputs,b.push(et)}}return b}function backpropagateGradients(i,s,o,a){for(let c=s.length-1;c>=0;c--){const d=s[c],g=[];if(d.outputs.forEach($=>{const _=i[$.id];_!=null?g.push(_):g.push(null)}),d.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${d.kernelName}.`);const b=d.gradient(g);for(const $ in d.inputs){if(!($ in b))throw new Error(`Cannot backprop through input ${$}. Available gradients found: ${Object.keys(b)}.`);const _=o(()=>b[$]());if(_.dtype!=="float32")throw new Error(`Error in gradient for op ${d.kernelName}. The gradient of input ${$} must have 'float32' dtype, but has '${_.dtype}'`);const _e=d.inputs[$];if(!arraysEqual(_.shape,_e.shape))throw new Error(`Error in gradient for op ${d.kernelName}. The gradient of input '${$}' has shape '${_.shape}', which does not match the shape of the input '${_e.shape}'`);if(i[_e.id]==null)i[_e.id]=_;else{const et=i[_e.id];i[_e.id]=a(et,_),et.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FORMAT_LIMIT_NUM_VALS=20,FORMAT_NUM_FIRST_LAST_VALS=3,FORMAT_NUM_SIG_DIGITS=7;function tensorToString(i,s,o,a){const c=computeStrides(s),d=computeMaxSizePerColumn(i,s,o,c),g=s.length,b=subTensorToString(i,s,o,c,d),$=["Tensor"];return a&&($.push(`  dtype: ${o}`),$.push(`  rank: ${g}`),$.push(`  shape: [${s}]`),$.push("  values:")),$.push(b.map(_=>"    "+_).join(`
`)),$.join(`
`)}function computeMaxSizePerColumn(i,s,o,a){const c=sizeFromShape(s),d=a[a.length-1],g=new Array(d).fill(0),b=s.length,$=o==="complex64"?createComplexTuples(i):i;if(b>1)for(let _=0;_<c/d;_++){const _e=_*d;for(let et=0;et<d;et++)g[et]=Math.max(g[et],valToString($[_e+et],0,o).length)}return g}function valToString(i,s,o){let a;return Array.isArray(i)?a=`${parseFloat(i[0].toFixed(FORMAT_NUM_SIG_DIGITS))} + ${parseFloat(i[1].toFixed(FORMAT_NUM_SIG_DIGITS))}j`:isString$1(i)?a=`'${i}'`:o==="bool"?a=boolNumToString(i):a=parseFloat(i.toFixed(FORMAT_NUM_SIG_DIGITS)).toString(),rightPad(a,s)}function boolNumToString(i){return i===0?"false":"true"}function subTensorToString(i,s,o,a,c,d=!0){const g=o==="complex64"?2:1,b=s[0],$=s.length;if($===0){if(o==="complex64"){const nt=createComplexTuples(i);return[valToString(nt[0],0,o)]}return o==="bool"?[boolNumToString(i[0])]:[i[0].toString()]}if($===1){if(b>FORMAT_LIMIT_NUM_VALS){const st=FORMAT_NUM_FIRST_LAST_VALS*g;let ot=Array.from(i.slice(0,st)),ut=Array.from(i.slice((b-FORMAT_NUM_FIRST_LAST_VALS)*g,b*g));return o==="complex64"&&(ot=createComplexTuples(ot),ut=createComplexTuples(ut)),["["+ot.map((ht,pt)=>valToString(ht,c[pt],o)).join(", ")+", ..., "+ut.map((ht,pt)=>valToString(ht,c[b-FORMAT_NUM_FIRST_LAST_VALS+pt],o)).join(", ")+"]"]}return["["+(o==="complex64"?createComplexTuples(i):Array.from(i)).map((st,ot)=>valToString(st,c[ot],o)).join(", ")+"]"]}const _=s.slice(1),_e=a.slice(1),et=a[0]*g,rt=[];if(b>FORMAT_LIMIT_NUM_VALS){for(let nt=0;nt<FORMAT_NUM_FIRST_LAST_VALS;nt++){const st=nt*et,ot=st+et;rt.push(...subTensorToString(i.slice(st,ot),_,o,_e,c,!1))}rt.push("...");for(let nt=b-FORMAT_NUM_FIRST_LAST_VALS;nt<b;nt++){const st=nt*et,ot=st+et;rt.push(...subTensorToString(i.slice(st,ot),_,o,_e,c,nt===b-1))}}else for(let nt=0;nt<b;nt++){const st=nt*et,ot=st+et;rt.push(...subTensorToString(i.slice(st,ot),_,o,_e,c,nt===b-1))}const tt=$===2?",":"";rt[0]="["+rt[0]+tt;for(let nt=1;nt<rt.length-1;nt++)rt[nt]=" "+rt[nt]+tt;let j=`,
`;for(let nt=2;nt<$;nt++)j+=`
`;return rt[rt.length-1]=" "+rt[rt.length-1]+"]"+(d?"":j),rt}function createComplexTuples(i){const s=[];for(let o=0;o<i.length;o+=2)s.push([i[o],i[o+1]]);return s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TensorBuffer{constructor(s,o,a){if(this.dtype=o,this.shape=s.slice(),this.size=sizeFromShape(s),a!=null){const c=a.length;assert$2(c===this.size,()=>`Length of values '${c}' does not match the size inferred by the shape '${this.size}'.`)}if(o==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=a||getArrayFromDType(o,this.size),this.strides=computeStrides(s)}set(s,...o){o.length===0&&(o=[0]),assert$2(o.length===this.rank,()=>`The number of provided coordinates (${o.length}) must match the rank (${this.rank})`);const a=this.locToIndex(o);this.values[a]=s}get(...s){s.length===0&&(s=[0]);let o=0;for(const c of s){if(c<0||c>=this.shape[o]){const d=`Requested out of range element at ${s}.   Buffer shape=${this.shape}`;throw new Error(d)}o++}let a=s[s.length-1];for(let c=0;c<s.length-1;++c)a+=this.strides[c]*s[c];return this.values[a]}locToIndex(s){if(this.rank===0)return 0;if(this.rank===1)return s[0];let o=s[s.length-1];for(let a=0;a<s.length-1;++a)o+=this.strides[a]*s[a];return o}indexToLoc(s){if(this.rank===0)return[];if(this.rank===1)return[s];const o=new Array(this.shape.length);for(let a=0;a<o.length-1;++a)o[a]=Math.floor(s/this.strides[a]),s-=o[a]*this.strides[a];return o[o.length-1]=s,o}get rank(){return this.shape.length}toTensor(){return trackerFn().makeTensor(this.values,this.shape,this.dtype)}}let trackerFn=null,opHandler$1=null;function setTensorTracker(i){trackerFn=i}function setOpHandler(i){opHandler$1=i}class Tensor{constructor(s,o,a,c){this.kept=!1,this.isDisposedInternal=!1,this.shape=s.slice(),this.dtype=o||"float32",this.size=sizeFromShape(s),this.strides=computeStrides(s),this.dataId=a,this.id=c,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const s=await this.data();return opHandler$1.buffer(this.shape,this.dtype,s)}bufferSync(){return opHandler$1.buffer(this.shape,this.dtype,this.dataSync())}async array(){const s=await this.data();return toNestedArray(this.shape,s)}arraySync(){return toNestedArray(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const s=trackerFn().read(this.dataId);if(this.dtype==="string"){const o=await s;try{return o.map(a=>decodeString(a))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return s}dataSync(){this.throwIfDisposed();const s=trackerFn().readSync(this.dataId);if(this.dtype==="string")try{return s.map(o=>decodeString(o))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return s}async bytes(){this.throwIfDisposed();const s=await trackerFn().read(this.dataId);return this.dtype==="string"?s:new Uint8Array(s.buffer)}dispose(){this.isDisposed||(trackerFn().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(s=!1){return opHandler$1.print(this,s)}clone(){return this.throwIfDisposed(),opHandler$1.clone(this)}toString(s=!1){const o=this.dataSync();return tensorToString(o,this.shape,this.dtype,s)}cast(s){return this.throwIfDisposed(),opHandler$1.cast(this,s)}variable(s=!0,o,a){return this.throwIfDisposed(),trackerFn().makeVariable(this,s,o,a)}}Object.defineProperty(Tensor,Symbol.hasInstance,{value:i=>!!i&&i.data!=null&&i.dataSync!=null&&i.throwIfDisposed!=null});class Variable extends Tensor{constructor(s,o,a,c){super(s.shape,s.dtype,s.dataId,c),this.trainable=o,this.name=a}assign(s){if(s.dtype!==this.dtype)throw new Error(`dtype of the new value (${s.dtype}) and previous value (${this.dtype}) must match`);if(!arraysEqual(s.shape,this.shape))throw new Error(`shape of the new value (${s.shape}) and previous value (${this.shape}) must match`);trackerFn().disposeTensor(this),this.dataId=s.dataId,trackerFn().incRef(this,null)}dispose(){trackerFn().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Variable,Symbol.hasInstance,{value:i=>i instanceof Tensor&&i.assign!=null&&i.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Rank;(function(i){i.R0="R0",i.R1="R1",i.R2="R2",i.R3="R3",i.R4="R4",i.R5="R5",i.R6="R6"})(Rank||(Rank={}));var UpcastInt32AndMap;(function(i){i.float32="float32",i.int32="int32",i.bool="int32",i.complex64="complex64"})(UpcastInt32AndMap||(UpcastInt32AndMap={}));var UpcastBoolAndMap;(function(i){i.float32="float32",i.int32="int32",i.bool="bool",i.complex64="complex64"})(UpcastBoolAndMap||(UpcastBoolAndMap={}));var UpcastFloat32AndMap;(function(i){i.float32="float32",i.int32="float32",i.bool="float32",i.complex64="complex64"})(UpcastFloat32AndMap||(UpcastFloat32AndMap={}));var UpcastComplex64AndMap;(function(i){i.float32="complex64",i.int32="complex64",i.bool="complex64",i.complex64="complex64"})(UpcastComplex64AndMap||(UpcastComplex64AndMap={}));const upcastTypeMap={float32:UpcastFloat32AndMap,int32:UpcastInt32AndMap,bool:UpcastBoolAndMap,complex64:UpcastComplex64AndMap};function upcastType(i,s){if(i==="string"||s==="string"){if(i==="string"&&s==="string")return"string";throw new Error(`Can not upcast ${i} with ${s}`)}return upcastTypeMap[i][s]}function sumOutType(i){return upcastType(i,"int32")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function makeTypesMatch(i,s){if(i.dtype===s.dtype)return[i,s];const o=upcastType(i.dtype,s.dtype);return[i.cast(o),s.cast(o)]}function assertTypesMatch(i,s){assert$2(i.dtype===s.dtype,()=>`The dtypes of the first(${i.dtype}) and second(${s.dtype}) input must match`)}function isTensorInList(i,s){return s.some(o=>o.id===i.id)}function getTensorsInContainer(i){const s=[];return walkTensorContainer(i,s,new Set),s}function walkTensorContainer(i,s,o){if(i==null)return;if(i instanceof Tensor){s.push(i);return}if(!isIterable$1(i))return;const a=i;for(const c in a){const d=a[c];o.has(d)||(o.add(d),walkTensorContainer(d,s,o))}}function isIterable$1(i){return Array.isArray(i)||typeof i=="object"}const tensor_util=Object.freeze(Object.defineProperty({__proto__:null,assertTypesMatch,getTensorsInContainer,isTensorInList,makeTypesMatch},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EngineState{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(s=>s.name)))}}}dispose(){for(const s in this.registeredVariables)this.registeredVariables[s].dispose()}}class Engine{constructor(s){this.ENV=s,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new EngineState}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const s=this.getSortedBackends();for(let o=0;o<s.length;o++){const a=s[o];if(await this.initializeBackend(a).success){await this.setBackend(a);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:s,asyncInit:o}=this.initializeBackendsAndReturnBest();if(o)throw new Error(`The highest priority backend '${s}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(s)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(s){if(!(s in this.registry))if(s in this.registryFactory){const{asyncInit:o}=this.initializeBackend(s);if(o)return null}else return null;return this.registry[s]}findBackendFactory(s){return s in this.registryFactory?this.registryFactory[s].factory:null}registerBackend(s,o,a=1){return s in this.registryFactory?(console.warn(`${s} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[s]={factory:o,priority:a},!0)}async setBackend(s){if(this.registryFactory[s]==null)throw new Error(`Backend name '${s}' not found in registry`);if(this.backendName=s,this.registry[s]==null){this.backendInstance=null;const{success:o,asyncInit:a}=this.initializeBackend(s);if(!(a?await o:o))return!1}return this.backendInstance=this.registry[s],this.setupRegisteredKernels(),this.profiler=new Profiler(this.backendInstance),!0}setupRegisteredKernels(){getKernelsForBackend(this.backendName).forEach(o=>{o.setupFunc!=null&&o.setupFunc(this.backendInstance)})}disposeRegisteredKernels(s){getKernelsForBackend(s).forEach(a=>{a.disposeFunc!=null&&a.disposeFunc(this.registry[s])})}initializeBackend(s){const o=this.registryFactory[s];if(o==null)throw new Error(`Cannot initialize backend ${s}, no registration found.`);try{const a=o.factory();if(a&&!(a instanceof KernelBackend)&&typeof a.then=="function"){const c=++this.pendingBackendInitId,d=a.then(g=>c<this.pendingBackendInitId?!1:(this.registry[s]=g,this.pendingBackendInit=null,!0)).catch(g=>(c<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${s} failed`),console.warn(g.stack||g.message)),!1));return this.pendingBackendInit=d,{success:d,asyncInit:!0}}else return this.registry[s]=a,{success:!0,asyncInit:!1}}catch(a){return console.warn(`Initialization of backend ${s} failed`),console.warn(a.stack||a.message),{success:!1,asyncInit:!1}}}removeBackend(s){if(!(s in this.registryFactory))throw new Error(`${s} backend not found in registry`);this.backendName===s&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,s in this.registry&&(this.disposeRegisteredKernels(s),this.registry[s].dispose(),delete this.registry[s]),delete this.registryFactory[s],this.backendName===s&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((s,o)=>this.registryFactory[o].priority-this.registryFactory[s].priority)}initializeBackendsAndReturnBest(){const s=this.getSortedBackends();for(let o=0;o<s.length;o++){const a=s[o],{success:c,asyncInit:d}=this.initializeBackend(a);if(d||c)return{name:a,asyncInit:d}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(s,o){const a=this.state.tensorInfo.get(o),c=a.backend,d=this.readSync(o);c.disposeData(o),a.backend=s,s.move(o,d,a.shape,a.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(s,o){let a=null;if(o==null){if(typeof s!="function")throw new Error("Please provide a function to tidy()");o=s}else{if(typeof s!="string"&&!(s instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof o!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=s}let c;return this.scopedRun(()=>this.startScope(a),()=>this.endScope(c),()=>(c=o(),c instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),c))}scopedRun(s,o,a){s();try{const c=a();return o(),c}catch(c){throw o(),c}}nextTensorId(){return Engine.nextTensorId++}nextVariableId(){return Engine.nextVariableId++}clone(s){const o=this.makeTensorFromDataId(s.dataId,s.shape,s.dtype),a={x:s},c=g=>({x:()=>{const b="float32",$={x:g},_={dtype:b};return ENGINE.runKernelFunc(_e=>_e.cast(g,b),$,null,Cast,_)}}),d=[];return this.addTapeNode(this.state.activeScope.name,a,[o],c,d,{}),o}runKernel(s,o,a,c,d){return this.runKernelFunc(null,o,null,s,a,c,d)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(s,o,a){const c=this.backend.numDataIds();let d=0;a.forEach($=>{d+=$.dtype==="complex64"?3:1});const g=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],b=c-o-d-g;if(b>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${b} data ids) after running '${s}'`)}runKernelFunc(s,o,a,c,d,g,b){let $,_=[];const _e=this.isTapeOn();c==null&&(c=this.state.activeScope!=null?this.state.activeScope.name:"");const et=this.state.numBytes,rt=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let tt;this.backendName==null&&this.backend;const j=getKernel(c,this.backendName);let nt;if(j!=null)tt=()=>{const ot=this.backend.numDataIds();nt=j.kernelFunc({inputs:o,attrs:d,backend:this.backend});const ut=Array.isArray(nt)?nt:[nt];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,ot,ut);const ht=ut.map(pt=>{if(pt.rank!=null)return pt;const{dataId:it,shape:yt,dtype:ft}=pt;return this.makeTensorFromDataId(it,yt,ft)});if(_e){let pt=this.getTensorsForGradient(c,o,ht);if(pt==null){b==null&&(b=[]);const it=ht.filter((yt,ft)=>b[ft]);pt=(g||[]).slice().concat(it)}_=this.saveTensorsForBackwardMode(pt)}return ht};else{if(s==null)throw new Error(`Error running ${c}: Neither modular kernel nor forward func passed`);const ot=ut=>{_e&&(_=ut.map(ht=>this.keep(this.clone(ht))))};tt=()=>{const ut=this.backend.numDataIds();nt=this.tidy(()=>s(this.backend,ot));const ht=Array.isArray(nt)?nt:[nt];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,ut,ht),ht}}let st;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?$=tt():(st=this.profiler.profileKernel(c,o,()=>tt()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(st),$=st.outputs)}),_e&&this.addTapeNode(c,o,$,a,_,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-et,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-rt,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(o).map(ot=>o[ot]!=null?o[ot].shape:null),outputShapes:$.map(ot=>ot.shape),kernelTimeMs:st.timeMs,extraInfo:st.extraInfo}),Array.isArray(nt)?$:$[0]}saveTensorsForBackwardMode(s){return s.map(a=>this.keep(this.clone(a)))}getTensorsForGradient(s,o,a){const c=getGradient(s);if(c!=null){const d=c.inputsToSave||[],g=c.outputsToSave||[];let b;c.saveAllInputs?(assert$2(Array.isArray(o),()=>"saveAllInputs is true, expected inputs to be an array."),b=Object.keys(o).map(_=>o[_])):b=d.map(_=>o[_]);const $=a.filter((_,_e)=>g[_e]);return b.concat($)}return null}makeTensor(s,o,a,c){if(s==null)throw new Error("Values passed to engine.makeTensor() are null");a=a||"float32",c=c||this.backend;let d=s;a==="string"&&isString$1(s[0])&&(d=s.map($=>encodeString($)));const g=c.write(d,o,a),b=new Tensor(o,a,g,this.nextTensorId());if(this.incRef(b,c),a==="string"){const $=this.state.tensorInfo.get(g),_=bytesFromStringArray(d);this.state.numBytes+=_-$.bytes,$.bytes=_}return b}makeTensorFromDataId(s,o,a,c){a=a||"float32";const d=new Tensor(o,a,s,this.nextTensorId());return this.incRef(d,c),d}makeVariable(s,o=!0,a,c){a=a||this.nextVariableId().toString(),c!=null&&c!==s.dtype&&(s=s.cast(c));const d=new Variable(s,o,a,this.nextTensorId());if(this.state.registeredVariables[d.name]!=null)throw new Error(`Variable with name ${d.name} was already registered`);return this.state.registeredVariables[d.name]=d,this.incRef(d,this.backend),d}incRef(s,o){const a=this.state.tensorInfo.has(s.dataId)?this.state.tensorInfo.get(s.dataId).refCount:0;if(this.state.numTensors++,s.dtype==="string"&&this.state.numStringTensors++,a===0){this.state.numDataBuffers++;let c=0;s.dtype!=="complex64"&&s.dtype!=="string"&&(c=s.size*bytesPerElement(s.dtype)),this.state.tensorInfo.set(s.dataId,{backend:o||this.backend,dtype:s.dtype,shape:s.shape,bytes:c,refCount:0}),this.state.numBytes+=c}this.state.tensorInfo.get(s.dataId).refCount++,s instanceof Variable||this.track(s)}disposeTensor(s){if(!this.state.tensorInfo.has(s.dataId))return;this.state.numTensors--,s.dtype==="string"&&this.state.numStringTensors--;const o=this.state.tensorInfo.get(s.dataId);o.refCount<=1?(s.dtype!=="complex64"&&(this.state.numBytes-=o.bytes),this.state.numDataBuffers--,o.backend.disposeData(s.dataId),this.state.tensorInfo.delete(s.dataId)):(o.backend.decComplexRef(s.dataId),this.state.tensorInfo.get(s.dataId).refCount--)}disposeVariables(){for(const s in this.state.registeredVariables){const o=this.state.registeredVariables[s];this.disposeVariable(o)}}disposeVariable(s){this.disposeTensor(s),this.state.registeredVariables[s.name]!=null&&delete this.state.registeredVariables[s.name]}memory(){const s=this.backend.memory();return s.numTensors=this.state.numTensors,s.numDataBuffers=this.state.numDataBuffers,s.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(s.unreliable=!0,s.reasons==null&&(s.reasons=[]),s.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),s}async profile(s){this.state.profiling=!0;const o=this.state.numBytes,a=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await s(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(c=>c.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-o,this.state.activeProfile.newTensors=this.state.numTensors-a;for(const c of this.state.activeProfile.kernels)c.kernelTimeMs=await c.kernelTimeMs,c.extraInfo=await c.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(s,o,a,c,d,g){const b={id:this.state.nextTapeNodeId++,kernelName:s,inputs:o,outputs:a,saved:d},$=getGradient(s);$!=null&&(c=$.gradFunc),c!=null&&(b.gradient=_=>(_=_.map((_e,et)=>{if(_e==null){const rt=a[et],tt=makeZerosTypedArray(rt.size,rt.dtype);return this.makeTensor(tt,rt.shape,rt.dtype)}return _e}),c(_.length>1?_:_[0],d,g))),this.state.activeTape.push(b)}keep(s){return s.kept=!0,s}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(s){const o={track:[],name:"unnamed scope",id:this.state.nextScopeId++};s&&(o.name=s),this.state.scopeStack.push(o),this.state.activeScope=o}endScope(s){const o=getTensorsInContainer(s),a=new Set(o.map(d=>d.id));for(let d=0;d<this.state.activeScope.track.length;d++){const g=this.state.activeScope.track[d];!g.kept&&!a.has(g.id)&&g.dispose()}const c=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],o.forEach(d=>{!d.kept&&d.scopeId===c.id&&this.track(d)})}gradients(s,o,a,c=!1){if(assert$2(o.length>0,()=>"gradients() received an empty list of xs."),a!=null&&a.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${a.dtype}'`);const d=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",s));assert$2(d instanceof Tensor,()=>"The result y returned by f() must be a tensor.");const g=getFilteredNodesXToY(this.state.activeTape,o,d);if(!c&&g.length===0&&o.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const b={};b[d.id]=a??ones$2(d.shape),backpropagateGradients(b,g,_=>this.tidy(_),add$3);const $=o.map(_=>b[_.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(_=>{for(const _e of _.saved)_e.dispose()}),this.state.activeTape=null),{value:d,grads:$}})}customGrad(s){return assert$2(isFunction$1(s),()=>"The f passed in customGrad(f) must be a function."),(...o)=>{assert$2(o.every(d=>d instanceof Tensor),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let a;const c={};return o.forEach((d,g)=>{c[g]=d}),this.runKernelFunc((d,g)=>(a=s(...o,g),assert$2(a.value instanceof Tensor,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),assert$2(isFunction$1(a.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),a.value),c,(d,g)=>{const b=a.gradFunc(d,g),$=Array.isArray(b)?b:[b];assert$2($.length===o.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),assert$2($.every(_e=>_e instanceof Tensor),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const _={};return $.forEach((_e,et)=>{_[et]=()=>_e}),_})}}readSync(s){return this.state.tensorInfo.get(s).backend.readSync(s)}read(s){return this.state.tensorInfo.get(s).backend.read(s)}async time(s){const o=now$1(),a=await this.backend.time(s);return a.wallMs=now$1()-o,a}track(s){return this.state.activeScope!=null&&(s.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(s)),s}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new EngineState;for(const s in this.registry)this.disposeRegisteredKernels(s),this.registry[s].dispose(),delete this.registry[s];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Engine.nextTensorId=0;Engine.nextVariableId=0;function ones$2(i){const s=makeOnesTypedArray(sizeFromShape(i),"float32");return ENGINE.makeTensor(s,i,"float32")}function getOrMakeEngine(){const i=getGlobalNamespace();if(i._tfengine==null){const s=new Environment(i);i._tfengine=new Engine(s)}return setEnvironmentGlobal(i._tfengine.ENV),setTensorTracker(()=>i._tfengine),i._tfengine}const ENGINE=getOrMakeEngine();function add$3(i,s){const o={a:i,b:s};return ENGINE.runKernel(Add$2,o)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _isNavigatorDefined(){return typeof navigator<"u"&&navigator!=null}function isMobile(){if(_isNavigatorDefined()){const i=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(i)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(i.substr(0,4))}return!1}function isBrowser(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}const device_util=Object.freeze(Object.defineProperty({__proto__:null,isBrowser,isMobile},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ENV$1=env();ENV$1.registerFlag("DEBUG",()=>!1,i=>{i&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});ENV$1.registerFlag("IS_BROWSER",()=>isBrowser());ENV$1.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");ENV$1.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));ENV$1.registerFlag("PROD",()=>!1);ENV$1.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ENV$1.getBool("DEBUG"));ENV$1.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);ENV$1.registerFlag("IS_TEST",()=>!1);ENV$1.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function inferShape(i,s){let o=i;if(isTypedArray(i))return s==="string"?[]:[i.length];if(!Array.isArray(i))return[];const a=[];for(;Array.isArray(o)||isTypedArray(o)&&s!=="string";)a.push(o.length),o=o[0];return Array.isArray(i)&&env().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&deepAssertShapeConsistency(i,a,[]),a}function deepAssertShapeConsistency(i,s,o){if(o=o||[],!Array.isArray(i)&&!isTypedArray(i)){assert$2(s.length===0,()=>`Element arr[${o.join("][")}] is a primitive, but should be an array/TypedArray of ${s[0]} elements`);return}assert$2(s.length>0,()=>`Element arr[${o.join("][")}] should be a primitive, but is an array of ${i.length} elements`),assert$2(i.length===s[0],()=>`Element arr[${o.join("][")}] should have ${s[0]} elements, but has ${i.length} elements`);const a=s.slice(1);for(let c=0;c<i.length;++c)deepAssertShapeConsistency(i[c],a,o.concat(c))}function assertDtype(i,s,o,a){if(i!=="string_or_numeric"){if(i==null)throw new Error("Expected dtype cannot be null.");if(i!=="numeric"&&i!==s||i==="numeric"&&s==="string")throw new Error(`Argument '${o}' passed to '${a}' must be ${i} tensor, but got ${s} tensor`)}}function convertToTensor(i,s,o,a="numeric"){if(i instanceof Tensor)return assertDtype(a,i.dtype,s,o),i;let c=inferDtype(i);if(c!=="string"&&["bool","int32","float32"].indexOf(a)>=0&&(c=a),assertDtype(a,c,s,o),i==null||!isTypedArray(i)&&!Array.isArray(i)&&typeof i!="number"&&typeof i!="boolean"&&typeof i!="string"){const $=i==null?"null":i.constructor.name;throw new Error(`Argument '${s}' passed to '${o}' must be a Tensor or TensorLike, but got '${$}'`)}const d=inferShape(i,c);!isTypedArray(i)&&!Array.isArray(i)&&(i=[i]);const b=c!=="string"?toTypedArray(i,c):flatten$2(i,[],!0);return ENGINE.makeTensor(b,d,c)}function convertToTensorArray(i,s,o,a="numeric"){if(!Array.isArray(i))throw new Error(`Argument ${s} passed to ${o} must be a \`Tensor[]\` or \`TensorLike[]\``);return i.map((d,g)=>convertToTensor(d,`${s}[${g}]`,o,a))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OP_SCOPE_SUFFIX="__op";function op(i){const s=Object.keys(i);if(s.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${s.length} keys.`);let o=s[0];const a=i[o];o.endsWith("_")&&(o=o.substring(0,o.length-1)),o=o+OP_SCOPE_SUFFIX;const c=(...d)=>{ENGINE.startScope(o);try{const g=a(...d);return isPromise(g)&&console.error("Cannot return a Promise inside of tidy."),ENGINE.endScope(g),g}catch(g){throw ENGINE.endScope(null),g}};return Object.defineProperty(c,"name",{value:o,configurable:!0}),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function complex_(i,s){const o=convertToTensor(i,"real","complex"),a=convertToTensor(s,"imag","complex");assertShapesMatch(o.shape,a.shape,`real and imag shapes, ${o.shape} and ${a.shape}, must match in call to tf.complex().`);const c={real:o,imag:a};return ENGINE.runKernel(Complex,c)}const complex$2=op({complex_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function makeTensor(i,s,o,a){if(a==null&&(a=inferDtype(i)),a==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!isTypedArray(i)&&!Array.isArray(i)&&typeof i!="number"&&typeof i!="boolean"&&typeof i!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(s!=null){assertNonNegativeIntegerDimensions(s);const c=sizeFromShape(s),d=sizeFromShape(o);assert$2(c===d,()=>`Based on the provided shape, [${s}], the tensor should have ${c} values but has ${d}`);for(let g=0;g<o.length;++g){const b=o[g],$=g===o.length-1?b!==sizeFromShape(s.slice(g)):!0;assert$2(o[g]===s[g]||!$,()=>`Error creating a new Tensor. Inferred shape (${o}) does not match the provided shape (${s}). `)}}return!isTypedArray(i)&&!Array.isArray(i)&&(i=[i]),s=s||o,i=a!=="string"?toTypedArray(i,a):flatten$2(i,[],!0),ENGINE.makeTensor(i,s,a)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensor(i,s,o){const a=inferShape(i,o);return makeTensor(i,s,a,o)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DTYPE_VALUE_SIZE_MAP={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NUM_BYTES_STRING_LENGTH=4;async function encodeWeights(i,s){const o=[],a=[],c=Array.isArray(i)?i.map(g=>g.name):Object.keys(i);for(let g=0;g<c.length;++g){const b=c[g],$=Array.isArray(i)?i[g].tensor:i[b];if($.dtype!=="float32"&&$.dtype!=="int32"&&$.dtype!=="bool"&&$.dtype!=="string"&&$.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${b}': ${$.dtype}`);const _={name:b,shape:$.shape,dtype:$.dtype};if($.dtype==="string"){const _e=new Promise(async et=>{const rt=await $.bytes(),tt=rt.reduce((st,ot)=>st+ot.length,0)+NUM_BYTES_STRING_LENGTH*rt.length,j=new Uint8Array(tt);let nt=0;for(let st=0;st<rt.length;st++){const ot=rt[st],ut=new Uint8Array(new Uint32Array([ot.length]).buffer);j.set(ut,nt),nt+=NUM_BYTES_STRING_LENGTH,j.set(ot,nt),nt+=ot.length}et(j)});a.push(_e)}else a.push($.data());s!=null&&(_.group=s),o.push(_)}const d=await Promise.all(a);return{data:concatenateTypedArrays(d),specs:o}}function decodeWeights(i,s){const o={};let a,c=0;for(const d of s){const g=d.name,b=d.dtype,$=d.shape,_=sizeFromShape($);let _e;if("quantization"in d){const et=d.quantization;if(et.dtype==="uint8"||et.dtype==="uint16"){if(!("min"in et&&"scale"in et))throw new Error(`Weight ${d.name} with quantization ${et.dtype} doesn't have corresponding metadata min and scale.`)}else if(et.dtype==="float16"){if(b!=="float32")throw new Error(`Weight ${d.name} is quantized with ${et.dtype} which only supports weights of type float32 not ${b}.`)}else throw new Error(`Weight ${d.name} has unknown quantization dtype ${et.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const rt=DTYPE_VALUE_SIZE_MAP[et.dtype],tt=i.slice(c,c+_*rt),j=et.dtype==="uint8"?new Uint8Array(tt):new Uint16Array(tt);if(b==="float32")if(et.dtype==="uint8"||et.dtype==="uint16"){_e=new Float32Array(j.length);for(let nt=0;nt<j.length;nt++){const st=j[nt];_e[nt]=st*et.scale+et.min}}else if(et.dtype==="float16")a===void 0&&(a=getFloat16Decoder()),_e=a(j);else throw new Error(`Unsupported quantization type ${et.dtype} for weight type float32.`);else if(b==="int32"){if(et.dtype!=="uint8"&&et.dtype!=="uint16")throw new Error(`Unsupported quantization type ${et.dtype} for weight type int32.`);_e=new Int32Array(j.length);for(let nt=0;nt<j.length;nt++){const st=j[nt];_e[nt]=Math.round(st*et.scale+et.min)}}else throw new Error(`Unsupported dtype in weight '${g}': ${b}`);c+=_*rt}else if(b==="string"){const et=sizeFromShape(d.shape);_e=[];for(let rt=0;rt<et;rt++){const tt=new Uint32Array(i.slice(c,c+NUM_BYTES_STRING_LENGTH))[0];c+=NUM_BYTES_STRING_LENGTH;const j=new Uint8Array(i.slice(c,c+tt));_e.push(j),c+=tt}}else{const et=DTYPE_VALUE_SIZE_MAP[b],rt=i.slice(c,c+_*et);if(b==="float32")_e=new Float32Array(rt);else if(b==="int32")_e=new Int32Array(rt);else if(b==="bool")_e=new Uint8Array(rt);else if(b==="complex64"){_e=new Float32Array(rt);const tt=new Float32Array(_e.length/2),j=new Float32Array(_e.length/2);for(let ot=0;ot<tt.length;ot++)tt[ot]=_e[ot*2],j[ot]=_e[ot*2+1];const nt=tensor(tt,$,"float32"),st=tensor(j,$,"float32");o[g]=complex$2(nt,st),nt.dispose(),st.dispose()}else throw new Error(`Unsupported dtype in weight '${g}': ${b}`);c+=_*et}b!=="complex64"&&(o[g]=tensor(_e,$,b))}return o}function concatenateTypedArrays(i){if(i===null)throw new Error(`Invalid input value: ${JSON.stringify(i)}`);let s=0;const o=[];i.forEach(d=>{if(s+=d.byteLength,o.push(d.byteLength===d.buffer.byteLength?d:new d.constructor(d)),!(d instanceof Float32Array||d instanceof Int32Array||d instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${d.constructor.name}`)});const a=new Uint8Array(s);let c=0;return o.forEach(d=>{a.set(new Uint8Array(d.buffer),c),c+=d.byteLength}),a.buffer}const useNodeBuffer=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function stringByteLength(i){return useNodeBuffer?Buffer.byteLength(i):new Blob([i]).size}function arrayBufferToBase64String(i){if(useNodeBuffer)return Buffer.from(i).toString("base64");const s=new Uint8Array(i);let o="";for(let a=0,c=s.length;a<c;a++)o+=String.fromCharCode(s[a]);return btoa(o)}function base64StringToArrayBuffer(i){if(useNodeBuffer){const a=Buffer.from(i,"base64");return a.buffer.slice(a.byteOffset,a.byteOffset+a.byteLength)}const s=atob(i),o=new Uint8Array(s.length);for(let a=0;a<s.length;++a)o.set([s.charCodeAt(a)],a);return o.buffer}function concatenateArrayBuffers(i){if(i.length===1)return i[0];let s=0;i.forEach(c=>{s+=c.byteLength});const o=new Uint8Array(s);let a=0;return i.forEach(c=>{o.set(new Uint8Array(c),a),a+=c.byteLength}),o.buffer}function basename(i){const s="/";for(i=i.trim();i.endsWith(s);)i=i.slice(0,i.length-1);const o=i.split(s);return o[o.length-1]}function getModelArtifactsInfoForJSON(i){if(i.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:i.modelTopology==null?0:stringByteLength(JSON.stringify(i.modelTopology)),weightSpecsBytes:i.weightSpecs==null?0:stringByteLength(JSON.stringify(i.weightSpecs)),weightDataBytes:i.weightData==null?0:i.weightData.byteLength}}function computeFloat16MantisaTable(){const i=o=>{let a=o<<13,c=0;for(;!(a&8388608);)c-=8388608,a<<=1;return a&=-8388609,c+=947912704,a|c},s=new Uint32Array(2048);s[0]=0;for(let o=1;o<1024;o++)s[o]=i(o);for(let o=1024;o<2048;o++)s[o]=939524096+(o-1024<<13);return s}function computeFloat16ExponentTable(){const i=new Uint32Array(64);i[0]=0,i[31]=1199570944,i[32]=2147483648,i[63]=3347054592;for(let s=1;s<31;s++)i[s]=s<<23;for(let s=33;s<63;s++)i[s]=2147483648+(s-32<<23);return i}function computeFloat16OffsetTable(){const i=new Uint32Array(64);for(let s=0;s<64;s++)i[s]=1024;return i[0]=i[32]=0,i}function getFloat16Decoder(){const i=computeFloat16MantisaTable(),s=computeFloat16ExponentTable(),o=computeFloat16OffsetTable();return a=>{const c=new ArrayBuffer(4*a.length),d=new Uint32Array(c);for(let g=0;g<a.length;g++){const b=a[g],$=i[o[b>>10]+(b&1023)]+s[b>>10];d[g]=$}return new Float32Array(c)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IORouterRegistry{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return IORouterRegistry.instance==null&&(IORouterRegistry.instance=new IORouterRegistry),IORouterRegistry.instance}static registerSaveRouter(s){IORouterRegistry.getInstance().saveRouters.push(s)}static registerLoadRouter(s){IORouterRegistry.getInstance().loadRouters.push(s)}static getSaveHandlers(s){return IORouterRegistry.getHandlers(s,"save")}static getLoadHandlers(s,o){return IORouterRegistry.getHandlers(s,"load",o)}static getHandlers(s,o,a){const c=[];return(o==="load"?IORouterRegistry.getInstance().loadRouters:IORouterRegistry.getInstance().saveRouters).forEach(g=>{const b=g(s,a);b!==null&&c.push(b)}),c}}const registerSaveRouter=i=>IORouterRegistry.registerSaveRouter(i),registerLoadRouter=i=>IORouterRegistry.registerLoadRouter(i),getSaveHandlers=i=>IORouterRegistry.getSaveHandlers(i),getLoadHandlers=(i,s)=>IORouterRegistry.getLoadHandlers(i,s);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DATABASE_NAME="tensorflowjs",DATABASE_VERSION=1,MODEL_STORE_NAME="models_store",INFO_STORE_NAME="model_info_store";function getIndexedDBFactory(){if(!env().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const i=typeof window>"u"?self:window,s=i.indexedDB||i.mozIndexedDB||i.webkitIndexedDB||i.msIndexedDB||i.shimIndexedDB;if(s==null)throw new Error("The current browser does not appear to support IndexedDB.");return s}function setUpDatabase(i){const s=i.result;s.createObjectStore(MODEL_STORE_NAME,{keyPath:"modelPath"}),s.createObjectStore(INFO_STORE_NAME,{keyPath:"modelPath"})}class BrowserIndexedDB{constructor(s){if(this.indexedDB=getIndexedDBFactory(),s==null||!s)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=s}async save(s){if(s.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,s)}async load(){return this.databaseAction(this.modelPath)}databaseAction(s,o){return new Promise((a,c)=>{const d=this.indexedDB.open(DATABASE_NAME,DATABASE_VERSION);d.onupgradeneeded=()=>setUpDatabase(d),d.onsuccess=()=>{const g=d.result;if(o==null){const b=g.transaction(MODEL_STORE_NAME,"readonly"),_=b.objectStore(MODEL_STORE_NAME).get(this.modelPath);_.onsuccess=()=>{if(_.result==null)return g.close(),c(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));a(_.result.modelArtifacts)},_.onerror=_e=>(g.close(),c(_.error)),b.oncomplete=()=>g.close()}else{const b=getModelArtifactsInfoForJSON(o),$=g.transaction(INFO_STORE_NAME,"readwrite");let _=$.objectStore(INFO_STORE_NAME);const _e=_.put({modelPath:this.modelPath,modelArtifactsInfo:b});let et;_e.onsuccess=()=>{et=g.transaction(MODEL_STORE_NAME,"readwrite");const tt=et.objectStore(MODEL_STORE_NAME).put({modelPath:this.modelPath,modelArtifacts:o,modelArtifactsInfo:b});tt.onsuccess=()=>a({modelArtifactsInfo:b}),tt.onerror=j=>{_=$.objectStore(INFO_STORE_NAME);const nt=_.delete(this.modelPath);nt.onsuccess=()=>(g.close(),c(tt.error)),nt.onerror=st=>(g.close(),c(tt.error))}},_e.onerror=rt=>(g.close(),c(_e.error)),$.oncomplete=()=>{et==null?g.close():et.oncomplete=()=>g.close()}}},d.onerror=g=>c(d.error)})}}BrowserIndexedDB.URL_SCHEME="indexeddb://";const indexedDBRouter=i=>env().getBool("IS_BROWSER")&&!Array.isArray(i)&&i.startsWith(BrowserIndexedDB.URL_SCHEME)?browserIndexedDB(i.slice(BrowserIndexedDB.URL_SCHEME.length)):null;IORouterRegistry.registerSaveRouter(indexedDBRouter);IORouterRegistry.registerLoadRouter(indexedDBRouter);function browserIndexedDB(i){return new BrowserIndexedDB(i)}function maybeStripScheme$1(i){return i.startsWith(BrowserIndexedDB.URL_SCHEME)?i.slice(BrowserIndexedDB.URL_SCHEME.length):i}class BrowserIndexedDBManager{constructor(){this.indexedDB=getIndexedDBFactory()}async listModels(){return new Promise((s,o)=>{const a=this.indexedDB.open(DATABASE_NAME,DATABASE_VERSION);a.onupgradeneeded=()=>setUpDatabase(a),a.onsuccess=()=>{const c=a.result,d=c.transaction(INFO_STORE_NAME,"readonly"),b=d.objectStore(INFO_STORE_NAME).getAll();b.onsuccess=()=>{const $={};for(const _ of b.result)$[_.modelPath]=_.modelArtifactsInfo;s($)},b.onerror=$=>(c.close(),o(b.error)),d.oncomplete=()=>c.close()},a.onerror=c=>o(a.error)})}async removeModel(s){return s=maybeStripScheme$1(s),new Promise((o,a)=>{const c=this.indexedDB.open(DATABASE_NAME,DATABASE_VERSION);c.onupgradeneeded=()=>setUpDatabase(c),c.onsuccess=()=>{const d=c.result,g=d.transaction(INFO_STORE_NAME,"readwrite"),b=g.objectStore(INFO_STORE_NAME),$=b.get(s);let _;$.onsuccess=()=>{if($.result==null)return d.close(),a(new Error(`Cannot find model with path '${s}' in IndexedDB.`));{const _e=b.delete(s),et=()=>{_=d.transaction(MODEL_STORE_NAME,"readwrite");const tt=_.objectStore(MODEL_STORE_NAME).delete(s);tt.onsuccess=()=>o($.result.modelArtifactsInfo),tt.onerror=j=>a($.error)};_e.onsuccess=et,_e.onerror=rt=>(et(),d.close(),a($.error))}},$.onerror=_e=>(d.close(),a($.error)),g.oncomplete=()=>{_==null?d.close():_.oncomplete=()=>d.close()}},c.onerror=d=>a(c.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PATH_SEPARATOR="/",PATH_PREFIX="tensorflowjs_models",INFO_SUFFIX="info",MODEL_TOPOLOGY_SUFFIX="model_topology",WEIGHT_SPECS_SUFFIX="weight_specs",WEIGHT_DATA_SUFFIX="weight_data",MODEL_METADATA_SUFFIX="model_metadata";function getModelKeys(i){return{info:[PATH_PREFIX,i,INFO_SUFFIX].join(PATH_SEPARATOR),topology:[PATH_PREFIX,i,MODEL_TOPOLOGY_SUFFIX].join(PATH_SEPARATOR),weightSpecs:[PATH_PREFIX,i,WEIGHT_SPECS_SUFFIX].join(PATH_SEPARATOR),weightData:[PATH_PREFIX,i,WEIGHT_DATA_SUFFIX].join(PATH_SEPARATOR),modelMetadata:[PATH_PREFIX,i,MODEL_METADATA_SUFFIX].join(PATH_SEPARATOR)}}function getModelPathFromKey(i){const s=i.split(PATH_SEPARATOR);if(s.length<3)throw new Error(`Invalid key format: ${i}`);return s.slice(1,s.length-1).join(PATH_SEPARATOR)}function maybeStripScheme(i){return i.startsWith(BrowserLocalStorage.URL_SCHEME)?i.slice(BrowserLocalStorage.URL_SCHEME.length):i}class BrowserLocalStorage{constructor(s){if(!env().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,s==null||!s)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=s,this.keys=getModelKeys(this.modelPath)}async save(s){if(s.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const o=JSON.stringify(s.modelTopology),a=JSON.stringify(s.weightSpecs),c=getModelArtifactsInfoForJSON(s);try{this.LS.setItem(this.keys.info,JSON.stringify(c)),this.LS.setItem(this.keys.topology,o),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,arrayBufferToBase64String(s.weightData));const d={format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};return s.signature!=null&&(d.signature=s.signature),s.userDefinedMetadata!=null&&(d.userDefinedMetadata=s.userDefinedMetadata),s.modelInitializer!=null&&(d.modelInitializer=s.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(d)),{modelArtifactsInfo:c}}catch{throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${c.modelTopologyBytes}, weightSpecsBytes=${c.weightSpecsBytes}, weightDataBytes=${c.weightDataBytes}.`)}}}async load(){const s=JSON.parse(this.LS.getItem(this.keys.info));if(s==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(s.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const o={},a=JSON.parse(this.LS.getItem(this.keys.topology));if(a==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);o.modelTopology=a;const c=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(c==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);o.weightSpecs=c;const d=this.LS.getItem(this.keys.modelMetadata);if(d!=null){const b=JSON.parse(d);o.format=b.format,o.generatedBy=b.generatedBy,o.convertedBy=b.convertedBy,b.signature!=null&&(o.signature=b.signature),b.userDefinedMetadata!=null&&(o.userDefinedMetadata=b.userDefinedMetadata),b.modelInitializer!=null&&(o.modelInitializer=b.modelInitializer)}const g=this.LS.getItem(this.keys.weightData);if(g==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return o.weightData=base64StringToArrayBuffer(g),o}}BrowserLocalStorage.URL_SCHEME="localstorage://";const localStorageRouter=i=>env().getBool("IS_BROWSER")&&!Array.isArray(i)&&i.startsWith(BrowserLocalStorage.URL_SCHEME)?browserLocalStorage(i.slice(BrowserLocalStorage.URL_SCHEME.length)):null;IORouterRegistry.registerSaveRouter(localStorageRouter);IORouterRegistry.registerLoadRouter(localStorageRouter);function browserLocalStorage(i){return new BrowserLocalStorage(i)}class BrowserLocalStorageManager{constructor(){assert$2(env().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),assert$2(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const s={},o=PATH_PREFIX+PATH_SEPARATOR,a=PATH_SEPARATOR+INFO_SUFFIX;for(let c=0;c<this.LS.length;++c){const d=this.LS.key(c);if(d.startsWith(o)&&d.endsWith(a)){const g=getModelPathFromKey(d);s[g]=JSON.parse(this.LS.getItem(d))}}return s}async removeModel(s){s=maybeStripScheme(s);const o=getModelKeys(s);if(this.LS.getItem(o.info)==null)throw new Error(`Cannot find model at path '${s}'`);const a=JSON.parse(this.LS.getItem(o.info));return this.LS.removeItem(o.info),this.LS.removeItem(o.topology),this.LS.removeItem(o.weightSpecs),this.LS.removeItem(o.weightData),a}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const URL_SCHEME_SUFFIX="://";class ModelStoreManagerRegistry{constructor(){this.managers={}}static getInstance(){return ModelStoreManagerRegistry.instance==null&&(ModelStoreManagerRegistry.instance=new ModelStoreManagerRegistry),ModelStoreManagerRegistry.instance}static registerManager(s,o){assert$2(s!=null,()=>"scheme must not be undefined or null."),s.endsWith(URL_SCHEME_SUFFIX)&&(s=s.slice(0,s.indexOf(URL_SCHEME_SUFFIX))),assert$2(s.length>0,()=>"scheme must not be an empty string.");const a=ModelStoreManagerRegistry.getInstance();assert$2(a.managers[s]==null,()=>`A model store manager is already registered for scheme '${s}'.`),a.managers[s]=o}static getManager(s){const o=this.getInstance().managers[s];if(o==null)throw new Error(`Cannot find model manager for scheme '${s}'`);return o}static getSchemes(){return Object.keys(this.getInstance().managers)}}function parseURL(i){if(i.indexOf(URL_SCHEME_SUFFIX)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${ModelStoreManagerRegistry.getSchemes().join(",")}`);return{scheme:i.split(URL_SCHEME_SUFFIX)[0],path:i.split(URL_SCHEME_SUFFIX)[1]}}async function cloneModelInternal(i,s,o=!1){assert$2(i!==s,()=>`Old path and new path are the same: '${i}'`);const a=IORouterRegistry.getLoadHandlers(i);assert$2(a.length>0,()=>`Copying failed because no load handler is found for source URL ${i}.`),assert$2(a.length<2,()=>`Copying failed because more than one (${a.length}) load handlers for source URL ${i}.`);const c=a[0],d=IORouterRegistry.getSaveHandlers(s);assert$2(d.length>0,()=>`Copying failed because no save handler is found for destination URL ${s}.`),assert$2(d.length<2,()=>`Copying failed because more than one (${a.length}) save handlers for destination URL ${s}.`);const g=d[0],b=parseURL(i).scheme,$=parseURL(i).path,_=b===parseURL(i).scheme,_e=await c.load();o&&_&&await ModelStoreManagerRegistry.getManager(b).removeModel($);const et=await g.save(_e);return o&&!_&&await ModelStoreManagerRegistry.getManager(b).removeModel($),et.modelArtifactsInfo}async function listModels(){const i=ModelStoreManagerRegistry.getSchemes(),s={};for(const o of i){const a=await ModelStoreManagerRegistry.getManager(o).listModels();for(const c in a){const d=o+URL_SCHEME_SUFFIX+c;s[d]=a[c]}}return s}async function removeModel(i){const s=parseURL(i);return ModelStoreManagerRegistry.getManager(s.scheme).removeModel(s.path)}async function copyModel(i,s){return cloneModelInternal(i,s,!1)}async function moveModel(i,s){return cloneModelInternal(i,s,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PlatformBrowser{fetch(s,o){return fetch(s,o)}now(){return performance.now()}encode(s,o){if(o!=="utf-8"&&o!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${o}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(s)}decode(s,o){return new TextDecoder(o).decode(s)}}if(env().get("IS_BROWSER")){env().setPlatform("browser",new PlatformBrowser);try{ModelStoreManagerRegistry.registerManager(BrowserLocalStorage.URL_SCHEME,new BrowserLocalStorageManager)}catch{}try{ModelStoreManagerRegistry.registerManager(BrowserIndexedDB.URL_SCHEME,new BrowserIndexedDBManager)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const getNodeFetch={importFetch:()=>require("node-fetch")};let systemFetch;class PlatformNode{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(s,o){return env().global.fetch!=null?env().global.fetch(s,o):(systemFetch==null&&(systemFetch=getNodeFetch.importFetch()),systemFetch(s,o))}now(){const s=process.hrtime();return s[0]*1e3+s[1]/1e6}encode(s,o){if(o!=="utf-8"&&o!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${o}`);return this.textEncoder.encode(s)}decode(s,o){return s.length===0?"":new this.util.TextDecoder(o).decode(s)}}env().get("IS_NODE")&&env().setPlatform("node",new PlatformNode);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function buffer(i,s="float32",o){return s=s||"float32",assertNonNegativeIntegerDimensions(i),new TensorBuffer(i,s,o)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cast_(i,s){const o=convertToTensor(i,"x","cast");if(!isValidDtype(s))throw new Error(`Failed to cast to unknown dtype ${s}`);if(s==="string"&&o.dtype!=="string"||s!=="string"&&o.dtype==="string")throw new Error("Only strings can be casted to strings");const a={x:o},c={dtype:s};return ENGINE.runKernel(Cast,a,c)}const cast$3=op({cast_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function clone_(i){const o={x:convertToTensor(i,"x","clone","string_or_numeric")};return ENGINE.runKernel(Identity$1,o)}const clone=op({clone_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function print(i,s=!1){console.log(i.toString(s))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getOrMakeEngine();const opHandler={buffer,cast:cast$3,clone,print};setOpHandler(opHandler);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DEFAULT_FILE_NAME_PREFIX="model",DEFAULT_JSON_EXTENSION_NAME=".json",DEFAULT_WEIGHT_DATA_EXTENSION_NAME=".weights.bin";function defer(i){return new Promise(s=>setTimeout(s)).then(i)}class BrowserDownloads{constructor(s){if(!env().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");s.startsWith(BrowserDownloads.URL_SCHEME)&&(s=s.slice(BrowserDownloads.URL_SCHEME.length)),(s==null||s.length===0)&&(s=DEFAULT_FILE_NAME_PREFIX),this.modelTopologyFileName=s+DEFAULT_JSON_EXTENSION_NAME,this.weightDataFileName=s+DEFAULT_WEIGHT_DATA_EXTENSION_NAME}async save(s){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const o=window.URL.createObjectURL(new Blob([s.weightData],{type:"application/octet-stream"}));if(s.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const a=[{paths:["./"+this.weightDataFileName],weights:s.weightSpecs}],c={modelTopology:s.modelTopology,format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy,weightsManifest:a};s.signature!=null&&(c.signature=s.signature),s.userDefinedMetadata!=null&&(c.userDefinedMetadata=s.userDefinedMetadata),s.modelInitializer!=null&&(c.modelInitializer=s.modelInitializer);const d=window.URL.createObjectURL(new Blob([JSON.stringify(c)],{type:"application/json"})),g=this.jsonAnchor==null?document.createElement("a"):this.jsonAnchor;if(g.download=this.modelTopologyFileName,g.href=d,await defer(()=>g.dispatchEvent(new MouseEvent("click"))),s.weightData!=null){const b=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;b.download=this.weightDataFileName,b.href=o,await defer(()=>b.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:getModelArtifactsInfoForJSON(s)}}}}BrowserDownloads.URL_SCHEME="downloads://";class BrowserFiles{constructor(s){if(s==null||s.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${s}`);this.files=s}async load(){const s=this.files[0],o=this.files.slice(1);return new Promise((a,c)=>{const d=new FileReader;d.onload=g=>{const b=JSON.parse(g.target.result),$=b.modelTopology;if($==null){c(new Error(`modelTopology field is missing from file ${s.name}`));return}o.length===0&&a({modelTopology:$});const _=b.weightsManifest;if(_==null){c(new Error(`weightManifest field is missing from file ${s.name}`));return}let _e;try{_e=this.checkManifestAndWeightFiles(_,o)}catch(j){c(j);return}const et=[],rt=[],tt=[];_.forEach(j=>{j.paths.forEach(nt=>{rt.push(nt),tt.push(null)}),et.push(...j.weights)}),_.forEach(j=>{j.paths.forEach(nt=>{const st=new FileReader;st.onload=ot=>{const ut=ot.target.result,ht=rt.indexOf(nt);if(tt[ht]=ut,tt.indexOf(null)===-1){const pt={modelTopology:$,weightSpecs:et,weightData:concatenateArrayBuffers(tt),format:b.format,generatedBy:b.generatedBy,convertedBy:b.convertedBy};b.signature!=null&&(pt.signature=b.signature),b.userDefinedMetadata!=null&&(pt.userDefinedMetadata=b.userDefinedMetadata),b.modelInitializer!=null&&(pt.modelInitializer=b.modelInitializer),a(pt)}},st.onerror=ot=>c(`Failed to weights data from file of path '${nt}'.`),st.readAsArrayBuffer(_e[nt])})})},d.onerror=g=>c(`Failed to read model topology and weights manifest JSON from file '${s.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),d.readAsText(s)})}checkManifestAndWeightFiles(s,o){const a=[],c=o.map(g=>basename(g.name)),d={};for(const g of s)g.paths.forEach(b=>{const $=basename(b);if(a.indexOf($)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${$}'`);if(a.push($),c.indexOf($)===-1)throw new Error(`Weight file with basename '${$}' is not provided.`);d[b]=o[c.indexOf($)]});if(a.length!==o.length)throw new Error(`Mismatch in the number of files in weights manifest (${a.length}) and the number of weight files provided (${o.length}).`);return d}}const browserDownloadsRouter=i=>env().getBool("IS_BROWSER")&&!Array.isArray(i)&&i.startsWith(BrowserDownloads.URL_SCHEME)?browserDownloads(i.slice(BrowserDownloads.URL_SCHEME.length)):null;IORouterRegistry.registerSaveRouter(browserDownloadsRouter);function browserDownloads(i="model"){return new BrowserDownloads(i)}function browserFiles(i){return new BrowserFiles(i)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function monitorPromisesProgress(i,s,o,a){g(i),o=o??0,a=a??1,b(o,a);let c=0;const d=$=>($.then(_=>{const _e=o+ ++c/i.length*(a-o);return s(_e),_}),$);function g($){assert$2($!=null&&Array.isArray($)&&$.length>0,()=>"promises must be a none empty array")}function b($,_){assert$2($>=0&&$<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${$}`),assert$2(_>=0&&_<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${_}`),assert$2(_>=$,()=>`startFraction must be no more than endFraction, but got startFraction ${$} and endFraction ${_}`)}return Promise.all(i.map(d))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function loadWeightsAsArrayBuffer(i,s){s==null&&(s={});const o=s.fetchFunc==null?env().platform.fetch:s.fetchFunc,a=i.map(et=>o(et,s.requestInit,{isBinary:!0})),c=0,d=.5,b=(s.onProgress==null?await Promise.all(a):await monitorPromisesProgress(a,s.onProgress,c,d)).map(et=>et.arrayBuffer()),$=.5,_=1;return s.onProgress==null?await Promise.all(b):await monitorPromisesProgress(b,s.onProgress,$,_)}async function loadWeights(i,s="",o,a){return weightsLoaderFactory(g=>loadWeightsAsArrayBuffer(g,{requestInit:a}))(i,s,o)}function weightsLoaderFactory(i){return async(s,o="",a)=>{const c=s.map(()=>!1),d={},g=a!=null?a.map(()=>!1):[],b=[];if(s.forEach((tt,j)=>{let nt=0;tt.weights.forEach(st=>{const ot="quantization"in st?st.quantization.dtype:st.dtype,ut=DTYPE_VALUE_SIZE_MAP[ot]*sizeFromShape(st.shape),ht=()=>{c[j]=!0,d[j]==null&&(d[j]=[]),d[j].push({manifestEntry:st,groupOffset:nt,sizeBytes:ut})};a!=null?a.forEach((pt,it)=>{pt===st.name&&(ht(),g[it]=!0)}):ht(),b.push(st.name),nt+=ut})}),!g.every(tt=>tt)){const tt=a.filter((j,nt)=>!g[nt]);throw new Error(`Could not find weights in manifest with names: ${tt.join(", ")}. 
Manifest JSON has weights with names: ${b.join(", ")}.`)}const $=c.reduce((tt,j,nt)=>(j&&tt.push(nt),tt),[]),_=[];$.forEach(tt=>{s[tt].paths.forEach(j=>{const nt=o+(o.endsWith("/")?"":"/")+j;_.push(nt)})});const _e=await i(_),et={};let rt=0;return $.forEach(tt=>{const j=s[tt].paths.length;let nt=0;for(let pt=0;pt<j;pt++)nt+=_e[rt+pt].byteLength;const st=new ArrayBuffer(nt),ot=new Uint8Array(st);let ut=0;for(let pt=0;pt<j;pt++){const it=new Uint8Array(_e[rt+pt]);ot.set(it,ut),ut+=it.byteLength}d[tt].forEach(pt=>{const it=st.slice(pt.groupOffset,pt.groupOffset+pt.sizeBytes),yt=decodeWeights(it,[pt.manifestEntry]);for(const ft in yt)et[ft]=yt[ft]}),rt+=j}),et}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OCTET_STREAM_MIME_TYPE="application/octet-stream",JSON_TYPE="application/json";class HTTPRequest{constructor(s,o){if(this.DEFAULT_METHOD="POST",o==null&&(o={}),this.weightPathPrefix=o.weightPathPrefix,this.onProgress=o.onProgress,this.weightUrlConverter=o.weightUrlConverter,o.fetchFunc!=null?(assert$2(typeof o.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=o.fetchFunc):this.fetch=env().platform.fetch,assert$2(s!=null&&s.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(s)&&assert$2(s.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${s.length}).`),this.path=s,o.requestInit!=null&&o.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=o.requestInit||{}}async save(s){if(s.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const o=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);o.body=new FormData;const a=[{paths:["./model.weights.bin"],weights:s.weightSpecs}],c={modelTopology:s.modelTopology,format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy,weightsManifest:a};s.signature!=null&&(c.signature=s.signature),s.userDefinedMetadata!=null&&(c.userDefinedMetadata=s.userDefinedMetadata),s.modelInitializer!=null&&(c.modelInitializer=s.modelInitializer),o.body.append("model.json",new Blob([JSON.stringify(c)],{type:JSON_TYPE}),"model.json"),s.weightData!=null&&o.body.append("model.weights.bin",new Blob([s.weightData],{type:OCTET_STREAM_MIME_TYPE}),"model.weights.bin");const d=await this.fetch(this.path,o);if(d.ok)return{modelArtifactsInfo:getModelArtifactsInfoForJSON(s),responses:[d]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${d.status}.`)}async load(){const s=await this.fetch(this.path,this.requestInit);if(!s.ok)throw new Error(`Request to ${this.path} failed with status code ${s.status}. Please verify this URL points to the model JSON of the model to load.`);let o;try{o=await s.json()}catch{let nt=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?nt+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":nt+=" Please make sure the server is serving valid JSON for this request.",new Error(nt)}const a=o.modelTopology,c=o.weightsManifest,d=o.generatedBy,g=o.convertedBy,b=o.format,$=o.signature,_=o.userDefinedMetadata;if(a==null&&c==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let _e,et;c!=null&&([_e,et]=await this.loadWeights(c));const rt={modelTopology:a,weightSpecs:_e,weightData:et,generatedBy:d,convertedBy:g,format:b};$!=null&&(rt.signature=$),_!=null&&(rt.userDefinedMetadata=_);const tt=o.modelInitializer;return tt&&(rt.modelInitializer=tt),rt}async loadWeights(s){const o=Array.isArray(this.path)?this.path[1]:this.path,[a,c]=parseUrl(o),d=this.weightPathPrefix||a,g=[];for(const _e of s)g.push(..._e.weights);const b=[],$=[];for(const _e of s)for(const et of _e.paths)this.weightUrlConverter!=null?$.push(this.weightUrlConverter(et)):b.push(d+et+c);this.weightUrlConverter&&b.push(...await Promise.all($));const _=await loadWeightsAsArrayBuffer(b,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[g,concatenateArrayBuffers(_)]}}HTTPRequest.URL_SCHEME_REGEX=/^https?:\/\//;function parseUrl(i){const s=i.lastIndexOf("/"),o=i.lastIndexOf("?"),a=i.substring(0,s),c=o>s?i.substring(o):"";return[a+"/",c]}function isHTTPScheme(i){return i.match(HTTPRequest.URL_SCHEME_REGEX)!=null}const httpRouter=(i,s)=>{if(typeof fetch>"u"&&(s==null||s.fetchFunc==null))return null;{let o=!0;if(Array.isArray(i)?o=i.every(a=>isHTTPScheme(a)):o=isHTTPScheme(i),o)return http(i,s)}return null};IORouterRegistry.registerSaveRouter(httpRouter);IORouterRegistry.registerLoadRouter(httpRouter);function http(i,s){return new HTTPRequest(i,s)}function browserHTTPRequest(i,s){return http(i,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PassthroughLoader{constructor(s){this.modelArtifacts=s}async load(){return this.modelArtifacts}}class PassthroughSaver{constructor(s){this.saveHandler=s}async save(s){return this.saveHandler(s)}}function fromMemory(i,s,o,a){return arguments.length===1?i.modelTopology!=null||i.weightSpecs!=null?new PassthroughLoader(i):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new PassthroughLoader({modelTopology:i})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new PassthroughLoader({modelTopology:i,weightSpecs:s,weightData:o,trainingConfig:a}))}function withSaveHandler(i){return new PassthroughSaver(i)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const io=Object.freeze(Object.defineProperty({__proto__:null,browserFiles,browserHTTPRequest,concatenateArrayBuffers,copyModel,decodeWeights,encodeWeights,fromMemory,getLoadHandlers,getModelArtifactsInfoForJSON,getSaveHandlers,http,isHTTPScheme,listModels,loadWeights,moveModel,registerLoadRouter,registerSaveRouter,removeModel,weightsLoaderFactory,withSaveHandler},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function matMul_(i,s,o=!1,a=!1){let c=convertToTensor(i,"a","matMul"),d=convertToTensor(s,"b","matMul");[c,d]=makeTypesMatch(c,d);const g={a:c,b:d},b={transposeA:o,transposeB:a};return ENGINE.runKernel(BatchMatMul,g,b)}const matMul$1=op({matMul_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oneHot_(i,s,o=1,a=0){if(s<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${s}`);const d={indices:convertToTensor(i,"indices","oneHot","int32")},g={depth:s,onValue:o,offValue:a};return ENGINE.runKernel(OneHot,d,g)}const oneHot$2=op({oneHot_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transpose_(i,s){const o=convertToTensor(i,"x","transpose");if(s==null&&(s=o.shape.map((d,g)=>g).reverse()),assert$2(o.rank===s.length,()=>`Error in transpose: rank of input ${o.rank} must match length of perm ${s}.`),s.forEach(d=>{assert$2(d>=0&&d<o.rank,()=>`All entries in 'perm' must be between 0 and ${o.rank-1} but got ${s}`)}),o.rank<=1)return o.clone();const a={x:o},c={perm:s};return ENGINE.runKernel(Transpose,a,c)}const transpose$2=op({transpose_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function confusionMatrix_(i,s,o){const a=convertToTensor(i,"labels","confusionMatrix"),c=convertToTensor(s,"predictions","confusionMatrix");assert$2(o==null||o>0&&Number.isInteger(o),()=>`If provided, numClasses must be a positive integer, but got ${o}`),assert$2(a.rank===1,()=>`Expected the rank of labels to be 1, but got ${a.rank}`),assert$2(c.rank===1,()=>`Expected the rank of predictions to be 1, but got ${c.rank}`),assert$2(a.shape[0]===c.shape[0],()=>`Mismatch in the number of examples: ${a.shape[0]} vs. ${c.shape[0]}. Labels and predictions should have the same number of elements.`),assert$2(o>0&&Number.isInteger(o),()=>`numClasses is required to be a positive integer, but got ${o}`);const d=oneHot$2(cast$3(a,"int32"),o),g=oneHot$2(cast$3(c,"int32"),o),b=transpose$2(d),$=matMul$1(b,g);return cast$3($,"int32")}const confusionMatrix=op({confusionMatrix_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const math=Object.freeze(Object.defineProperty({__proto__:null,confusionMatrix},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensor3d(i,s,o){if(assertNonNull(i),s!=null&&s.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const a=inferShape(i,o);if(a.length!==3&&a.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(a.length===1&&s==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return makeTensor(i,s,a,o)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fromPixels2DContext$1;function fromPixels_(i,s=3){if(s>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(i==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let o=!1,a=!1,c=!1,d=!1,g=!1,b=!1;if(i.data instanceof Uint8Array)o=!0;else if(typeof ImageData<"u"&&i instanceof ImageData)a=!0;else if(typeof HTMLVideoElement<"u"&&i instanceof HTMLVideoElement)c=!0;else if(typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement)d=!0;else if(i.getContext!=null)g=!0;else if(typeof ImageBitmap<"u"&&i instanceof ImageBitmap)b=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${i.constructor.name}`);if(c&&c&&i.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(getKernel(FromPixels,ENGINE.backendName)!=null){const j={pixels:i},nt={numChannels:s};return ENGINE.runKernel(FromPixels,j,nt)}const[_,_e]=c?[i.videoWidth,i.videoHeight]:[i.width,i.height];let et;g?et=i.getContext("2d").getImageData(0,0,_,_e).data:a||o?et=i.data:(d||c||b)&&(fromPixels2DContext$1==null&&(fromPixels2DContext$1=document.createElement("canvas").getContext("2d")),fromPixels2DContext$1.canvas.width=_,fromPixels2DContext$1.canvas.height=_e,fromPixels2DContext$1.drawImage(i,0,0,_,_e),et=fromPixels2DContext$1.getImageData(0,0,_,_e).data);let rt;if(s===4)rt=new Int32Array(et);else{const j=_*_e;rt=new Int32Array(j*s);for(let nt=0;nt<j;nt++)for(let st=0;st<s;++st)rt[nt*s+st]=et[nt*4+st]}return tensor3d(rt,[_e,_,s],"int32")}async function toPixels(i,s){let o=convertToTensor(i,"img","toPixels");if(!(i instanceof Tensor)){const _=o;o=cast$3(_,"int32"),_.dispose()}if(o.rank!==2&&o.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${o.rank}.`);const[a,c]=o.shape.slice(0,2),d=o.rank===2?1:o.shape[2];if(d>4||d===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${d}`);if(o.dtype!=="float32"&&o.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${o.dtype}. Please use float32 or int32 tensors.`);const g=await o.data(),b=o.dtype==="float32"?255:1,$=new Uint8ClampedArray(c*a*4);for(let _=0;_<a*c;++_){const _e=[0,0,0,255];for(let rt=0;rt<d;rt++){const tt=g[_*d+rt];if(o.dtype==="float32"){if(tt<0||tt>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${tt}.`)}else if(o.dtype==="int32"&&(tt<0||tt>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${tt}.`);d===1?(_e[0]=tt*b,_e[1]=tt*b,_e[2]=tt*b):_e[rt]=tt*b}const et=_*4;$[et+0]=Math.round(_e[0]),$[et+1]=Math.round(_e[1]),$[et+2]=Math.round(_e[2]),$[et+3]=Math.round(_e[3])}if(s!=null){s.width=c,s.height=a;const _=s.getContext("2d"),_e=new ImageData($,c,a);_.putImageData(_e,0,0)}return o!==i&&o.dispose(),$}const fromPixels$1=op({fromPixels_}),browser=Object.freeze(Object.defineProperty({__proto__:null,fromPixels:fromPixels$1,toPixels},Symbol.toStringTag,{value:"Module"}));function prepareAndValidate(i,s){const o=i.shape.length,a=s.shape.length;if(o<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${o}.`);if(a<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${a}.`);if(s.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${s.dtype}.`);if(s.shape[a-1]>o)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${s.shape[a-1]} vs. ${o}`);if(sizeFromShape(i.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${i.shape}.`);const c=s.shape,d=c[c.length-1];let g=1;for(let et=0;et<c.length-1;++et)g*=c[et];const b=i.shape,$=c.slice();$.pop();let _=1;for(let et=d;et<o;++et)_*=b[et],$.push(b[et]);const _e=[...computeStrides(i.shape).map(et=>et/_),1].slice(0,d);return[$,g,_,_e]}const gather_nd_util=Object.freeze(Object.defineProperty({__proto__:null,prepareAndValidate},Symbol.toStringTag,{value:"Module"}));function validateUpdateShape(i,s,o){const a=s.rank>1?s.shape[s.rank-1]:1,c=s.rank>1?s.rank-1:1,d=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${o.shape}, indices.shape: ${s.shape}, shape: ${i}, sliceDim: ${a}, and batchDim: ${c}.`;if(o.rank<c)throw new Error(d+` update.rank < ${c}. `);if(i.length<a+(o.rank-c))throw new Error(d+` Output shape length < ${a+(o.rank-c)}`);if(o.rank!==c+i.length-a)throw new Error(d+` update.rank != ${c+i.length-a}`);for(let g=0;g<c;++g)if(o.shape[g]!==s.shape[g])throw new Error(d+` updates.shape[${g}] (${o.shape[g]}) != indices.shape[${g}] (${s.shape[g]}).`);for(let g=0;g<o.rank-c;++g)if(o.shape[g+c]!==i[g+a])throw new Error(d+` updates.shape[${g+c}] (${o.shape[g+c]}) != shape[${g+c}] (${i[g+c]})`)}function validateInput$1(i,s,o){if(s.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${s.rank}.`);if(i.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${i.rank}.`);if(s.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${s.dtype}`);if(o.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${o}`);if(o.length===0){if(s.size===0)throw new Error(`Indices specified for empty output. indices shape: ${s.shape}`);if(i.size===0)throw new Error(`Updates specified for empty output. updates shape: ${i.shape}`)}validateUpdateShape(o,s,i)}function calculateShapes(i,s,o){const a=s.shape.length,c=a>1?s.shape[a-1]:1,d=o.length;let g=1;for(let et=c;et<d;++et)g*=o[et];const b=c<1?1:c,$=sizeFromShape(s.shape)/b,_=[...computeStrides(o.slice(0,c)),1],_e=sizeFromShape(o);return{sliceRank:c,numUpdates:$,sliceSize:g,strides:_,outputSize:_e}}const scatter_nd_util=Object.freeze(Object.defineProperty({__proto__:null,calculateShapes,validateInput:validateInput$1,validateUpdateShape},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function assertParamsValid(i,s,o){const a=i.shape.length;assert$2(a===s.length,()=>`Error in slice${a}D: Length of begin ${s} must match the rank of the array (${a}).`),assert$2(a===o.length,()=>`Error in slice${a}D: Length of size ${o} must match the rank of the array (${a}).`);for(let c=0;c<a;++c)assert$2(s[c]+o[c]<=i.shape[c],()=>`Error in slice${a}D: begin[${c}] + size[${c}] (${s[c]+o[c]}) would overflow input.shape[${c}] (${i.shape[c]})`)}function maskToAxes(i){const s=[];let o=0;for(;i>0;)i&1&&s.push(o),i/=2,o++;return s}function computeOutShape$2(i,s,o){const a=[];for(let c=0;c<i.length;c++)a[c]=Math.ceil((s[c]-i[c])/o[c]);return a}function stridesWithElidedDims(i,s,o,a){const c=[...i];for(let d=c.length;d<a.length;d++)c.push(1);for(let d=0;d<o;d++)d===0?c[s]=1:(c.splice(s,0,1),c.pop());return c}function unnormalizeAxis(i,s,o){return o<=i?o:o-(s-1)}function getElidedAxes(i,s){const o=[];for(let a=0;a<i;a++)o.push(s+a);return o}function getNormalizedAxes(i,s,o,a,c,d,g,b,$){const _=i.length;let _e=new Array(_),et=new Array(_),rt=new Array(_);if(s.length&&o>0){const tt=s[0],j=o+1;_e=startIndicesWithElidedDims(g,tt,j,a,i),et=stopIndicesWithElidedDims(b,tt,j,c,i),rt=stridesWithElidedDims(d,tt,j,i)}else for(let tt=0;tt<_;tt++)_e[tt]=startForAxis(g,a,d,i,tt,$),et[tt]=stopForAxis(b,c,d,i,tt,$),rt[tt]=stridesForAxis(d,tt,$);return{begin:_e,end:et,strides:rt}}function startIndicesWithElidedDims(i,s,o,a,c){const d=[...c],g=getElidedAxes(o,s);for(let b=0;b<d.length;b++)if(g.indexOf(b)>-1)d[b]=0;else{const $=unnormalizeAxis(s,o,b);let _=a[$];i&1<<$&&(_=0),d[b]=_}return d}function stopIndicesWithElidedDims(i,s,o,a,c){const d=[...c],g=getElidedAxes(o,s);for(let b=0;b<d.length;b++)if(g.indexOf(b)>-1)d[b]=Number.MAX_SAFE_INTEGER;else{const $=unnormalizeAxis(s,o,b);let _=a[$];i&1<<$&&(_=Number.MAX_SAFE_INTEGER),d[b]=_}for(let b=0;b<d.length;b++){const $=c[b];d[b]<0&&(d[b]+=$),d[b]=clamp$1(0,d[b],c[b])}return d}function stridesForAxis(i,s,o){let a=i[s];return(o&1<<s||a==null)&&(a=1),a}function startForAxis(i,s,o,a,c,d){let g=s[c];const b=o[c]||1;(i&1<<c||d&1<<c||g==null)&&(b>0?g=Number.MIN_SAFE_INTEGER:g=Number.MAX_SAFE_INTEGER);const $=a[c];return g<0&&(g+=$),g=clamp$1(0,g,$-1),g}function stopForAxis(i,s,o,a,c,d){let g=s[c];const b=o[c]||1;(i&1<<c||d&1<<c||g==null)&&(b>0?g=Number.MAX_SAFE_INTEGER:g=Number.MIN_SAFE_INTEGER);const $=a[c];return g<0&&(g+=$),b>0?g=clamp$1(0,g,$):g=clamp$1(-1,g,$-1),g}function isSliceContinous(i,s,o){let a=o.length;for(let c=0;c<o.length;c++)if(o[c]>1){a=c;break}for(let c=a+1;c<o.length;c++)if(s[c]>0||o[c]!==i[c])return!1;return!0}function computeFlatOffset(i,s){let o=i.length>0?i[i.length-1]:1;for(let a=0;a<i.length-1;a++)o+=i[a]*s[a];return o}function parseSliceParams(i,s,o){let a;const c=i.shape.length;typeof s=="number"?a=[s,...new Array(c-1).fill(0)]:s.length<c?a=s.concat(new Array(c-s.length).fill(0)):a=s.slice(),a.forEach(g=>{assert$2(g!==-1,()=>"slice() does not support negative begin indexing.")});let d;return o==null?d=new Array(c).fill(-1):typeof o=="number"?d=[o,...new Array(c-1).fill(-1)]:o.length<c?d=o.concat(new Array(c-o.length).fill(-1)):d=o,d=d.map((g,b)=>g>=0?g:(assert$2(g===-1,()=>`Negative size values should be exactly -1 but got ${g} for the slice() size at index ${b}.`),i.shape[b]-a[b])),[a,d]}function sliceInfo(i,s,o,a,c,d,g,b,$){let _=s.slice(),_e=o.slice(),et=a;a==null&&(et=new Array(_.length));const rt=maskToAxes(g);if(rt.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(g!==0&&b!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(g!==0&&$!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const tt=i.length-_.length,j=maskToAxes(b),nt=i.slice();j.forEach(ft=>{_[ft]=0,_e[ft]=1,nt.splice(ft,0,1)});const{begin:st,end:ot,strides:ut}=getNormalizedAxes(nt,rt,tt,_,_e,et,c,d,g);_=st,_e=ot,et=ut;const ht=maskToAxes($);ht.forEach(ft=>{_e[ft]=_[ft]+1,et[ft]=1});const pt=computeOutShape$2(_,_e,et),it=pt.filter((ft,bt)=>ht.indexOf(bt)===-1);return{nonStrided:et.every(ft=>ft===1),$begin:_,$end:_e,$strides:et,size:pt,newShape:nt,outShape:it}}const slice_util=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid,computeFlatOffset,computeOutShape:computeOutShape$2,getNormalizedAxes,isSliceContinous,maskToAxes,parseSliceParams,sliceInfo,startForAxis,startIndicesWithElidedDims,stopForAxis,stopIndicesWithElidedDims,stridesForAxis,stridesWithElidedDims},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Serializable{getClassName(){return this.constructor.className}static fromConfig(s,o){return new s(o)}}class SerializationMap{constructor(){this.classNameMap={}}static getMap(){return SerializationMap.instance==null&&(SerializationMap.instance=new SerializationMap),SerializationMap.instance}static register(s){SerializationMap.getMap().classNameMap[s.className]=[s,s.fromConfig]}}function registerClass(i){assert$2(i.className!=null,()=>"Class being registered does not have the static className property defined."),assert$2(typeof i.className=="string",()=>"className is required to be a string, but got type "+typeof i.className),assert$2(i.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),SerializationMap.register(i)}const serialization=Object.freeze(Object.defineProperty({__proto__:null,Serializable,SerializationMap,registerClass},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TEST_EPSILON_FLOAT32=.001,TEST_EPSILON_FLOAT16=.1;function expectArraysClose(i,s,o){return o==null&&(o=testEpsilon()),expectArraysPredicate(i,s,(a,c)=>areClose(a,c,o))}function testEpsilon(){return ENGINE.backend.floatPrecision()===32?TEST_EPSILON_FLOAT32:TEST_EPSILON_FLOAT16}function expectArraysPredicate(i,s,o){let a=!0;if((isTypedArray(i)||isTypedArray(s))&&(a=!1),isTypedArray(i)&&isTypedArray(s)&&(a=!0),a){const g=i.constructor.name,b=s.constructor.name;if(g!==b)throw new Error(`Arrays are of different type. Actual: ${g}. Expected: ${b}`)}if(Array.isArray(i)&&Array.isArray(s)){const g=inferShape(i),b=inferShape(s);if(!arraysEqual(g,b))throw new Error(`Arrays have different shapes. Actual: [${g}]. Expected: [${b}]`)}const c=isTypedArray(i)?i:flatten$2(i),d=isTypedArray(s)?s:flatten$2(s);if(c.length!==d.length)throw new Error(`Arrays have different lengths actual: ${c.length} vs expected: ${d.length}.
Actual:   ${c}.
Expected: ${d}.`);for(let g=0;g<d.length;++g){const b=c[g],$=d[g];if(!o(b,$))throw new Error(`Arrays differ: actual[${g}] = ${b}, expected[${g}] = ${$}.
Actual:   ${c}.
Expected: ${d}.`)}}function expectPromiseToFail(i,s){i().then(()=>s.fail(),()=>s())}function expectArraysEqual(i,s){const o=typeof s=="string"||typeof s=="number"||typeof s=="boolean"?[s]:s;return isString$1(i)||isString$1(i[0])||isString$1(s)||isString$1(s[0])?expectArraysPredicate(i,o,(a,c)=>a==c):expectArraysPredicate(i,s,(a,c)=>areClose(a,c,0))}function expectNumbersClose(i,s,o){if(o==null&&(o=testEpsilon()),!areClose(i,s,o))throw new Error(`Numbers differ: actual === ${i}, expected === ${s}`)}function areClose(i,s,o){return!isFinite(i)&&!isFinite(s)?!0:!(isNaN(i)||isNaN(s)||Math.abs(i-s)>o)}function expectValuesInRange(i,s,o){for(let a=0;a<i.length;a++)if(i[a]<s||i[a]>o)throw new Error(`Value out of range:${i[a]} low: ${s}, high: ${o}`)}function expectArrayBuffersEqual(i,s){expect(new Float32Array(i)).toEqual(new Float32Array(s))}function encodeStrings(i){for(let s=0;s<i.length;s++){const o=i[s];Array.isArray(o)?encodeStrings(o):i[s]=encodeString(o)}return i}const test_util=Object.freeze(Object.defineProperty({__proto__:null,TEST_EPSILON_FLOAT16,encodeStrings,expectArrayBuffersEqual,expectArraysClose,expectArraysEqual,expectNumbersClose,expectPromiseToFail,expectValuesInRange,testEpsilon},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. */const version$8="2.8.6";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function enableProdMode(){env().set("PROD",!0)}function enableDebugMode(){env().set("DEBUG",!0)}function disableDeprecationWarnings(){env().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function deprecationWarn(i){env().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(i+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function disposeVariables(){ENGINE.disposeVariables()}function engine(){return ENGINE}function memory(){return ENGINE.memory()}function profile(i){return ENGINE.profile(i)}function tidy(i,s){return ENGINE.tidy(i,s)}function dispose(i){getTensorsInContainer(i).forEach(o=>o.dispose())}function keep(i){return ENGINE.keep(i)}function time(i){return ENGINE.time(i)}function setBackend(i){return ENGINE.setBackend(i)}function ready(){return ENGINE.ready()}function getBackend(){return ENGINE.backendName}function removeBackend(i){ENGINE.removeBackend(i)}function findBackend(i){return ENGINE.findBackend(i)}function findBackendFactory(i){return ENGINE.findBackendFactory(i)}function registerBackend(i,s,o=1){return ENGINE.registerBackend(i,s,o)}function backend(){return ENGINE.backend}function setPlatform(i,s){env().setPlatform(i,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function add_(i,s){let o=convertToTensor(i,"a","add"),a=convertToTensor(s,"b","add");[o,a]=makeTypesMatch(o,a);const c={a:o,b:a};return ENGINE.runKernel(Add$2,c)}const add$2=op({add_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function floorDiv_(i,s){let o=convertToTensor(i,"a","floorDiv"),a=convertToTensor(s,"b","floorDiv");[o,a]=makeTypesMatch(o,a);const c={a:o,b:a};return ENGINE.runKernel(FloorDiv,c)}const floorDiv$2=op({floorDiv_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function div_(i,s){let o=convertToTensor(i,"a","div"),a=convertToTensor(s,"b","div");if([o,a]=makeTypesMatch(o,a),o.dtype==="int32"&&a.dtype==="int32")return floorDiv$2(o,a);const c={a:o,b:a},d={};return ENGINE.runKernel(RealDiv,c,d)}const div$1=op({div_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mul_(i,s){let o=convertToTensor(i,"a","mul"),a=convertToTensor(s,"b","mul");[o,a]=makeTypesMatch(o,a);const c={a:o,b:a};return ENGINE.runKernel(Multiply$2,c)}const mul=op({mul_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function abs_(i){const s=convertToTensor(i,"x","abs");if(s.dtype==="complex64"){const o={x:s};return ENGINE.runKernel(ComplexAbs,o)}else{const o={x:s};return ENGINE.runKernel(Abs$1,o)}}const abs$2=op({abs_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function acos_(i){const o={x:convertToTensor(i,"x","acos")};return ENGINE.runKernel(Acos,o)}const acos$2=op({acos_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function acosh_(i){const o={x:convertToTensor(i,"x","acosh")};return ENGINE.runKernel(Acosh,o)}const acosh$2=op({acosh_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function addN_(i){assert$2(Array.isArray(i),()=>"The argument passed to tf.addN() must be a list of tensors"),assert$2(i.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${i.length}`);const s=i.map((c,d)=>convertToTensor(c,`tensors${d}`,"addN")),o=s[0];s.forEach(c=>{if(c.dtype!==o.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),s.forEach(c=>{if(!arraysEqual(c.shape,o.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const a=s;return ENGINE.runKernel(AddN,a)}const addN$2=op({addN_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function all_(i,s=null,o=!1){const c={x:convertToTensor(i,"x","all","bool")},d={axis:s,keepDims:o};return ENGINE.runKernel(All,c,d)}const all$2=op({all_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function any_(i,s=null,o=!1){const c={x:convertToTensor(i,"x","any","bool")},d={axis:s,keepDims:o};return ENGINE.runKernel(Any,c,d)}const any$2=op({any_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMax_(i,s=0){const a={x:convertToTensor(i,"x","argMax")},c={axis:s};return ENGINE.runKernel(ArgMax,a,c)}const argMax$2=op({argMax_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMin_(i,s=0){const a={x:convertToTensor(i,"x","argMin")},c={axis:s};return ENGINE.runKernel(ArgMin,a,c)}const argMin$2=op({argMin_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function asin_(i){const o={x:convertToTensor(i,"x","asin")};return ENGINE.runKernel(Asin,o)}const asin$2=op({asin_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function asinh_(i){const o={x:convertToTensor(i,"x","asinh")};return ENGINE.runKernel(Asinh,o)}const asinh$2=op({asinh_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function atan_(i){const o={x:convertToTensor(i,"x","atan")};return ENGINE.runKernel(Atan,o)}const atan$2=op({atan_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function atan2_(i,s){let o=convertToTensor(i,"a","atan2"),a=convertToTensor(s,"b","atan2");[o,a]=makeTypesMatch(o,a);const c={a:o,b:a};return ENGINE.runKernel(Atan2,c)}const atan2$2=op({atan2_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function atanh_(i){const o={x:convertToTensor(i,"x","atanh")};return ENGINE.runKernel(Atanh,o)}const atanh$2=op({atanh_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function computeDilation2DInfo(i,s,o,a,c="NHWC",d){const g=i[3],b=[...s,g],$=convertConv2DDataFormat(c);return computeConv2DInfo(i,b,o,d,a,null,null,$)}function computePool2DInfo(i,s,o,a,c,d,g="channelsLast"){const[b,$]=parseTupleParam(s);let _;if(g==="channelsLast")_=[b,$,i[3],i[3]];else if(g==="channelsFirst")_=[b,$,i[1],i[1]];else throw new Error(`Unknown dataFormat ${g}`);return computeConv2DInfo(i,_,o,a,c,d,!1,g)}function computePool3DInfo(i,s,o,a,c,d,g="NDHWC"){const[b,$,_]=parse3TupleParam(s);let _e,et;if(g==="NDHWC")et="channelsLast",_e=[b,$,_,i[4],i[4]];else if(g==="NCDHW")et="channelsFirst",_e=[b,$,_,i[1],i[1]];else throw new Error(`Unknown dataFormat ${g}`);return computeConv3DInfo(i,_e,o,a,c,!1,et,d)}function computeConv2DInfo(i,s,o,a,c,d,g=!1,b="channelsLast"){let[$,_,_e,et]=[-1,-1,-1,-1];if(b==="channelsLast")[$,_,_e,et]=i;else if(b==="channelsFirst")[$,et,_,_e]=i;else throw new Error(`Unknown dataFormat ${b}`);const[rt,tt,,j]=s,[nt,st]=parseTupleParam(o),[ot,ut]=parseTupleParam(a),ht=getEffectiveFilterSize(rt,ot),pt=getEffectiveFilterSize(tt,ut),{padInfo:it,outHeight:yt,outWidth:ft}=getPadAndOutInfo(c,_,_e,nt,st,ht,pt,d,b),bt=g?j*et:j;let Tt;return b==="channelsFirst"?Tt=[$,bt,yt,ft]:b==="channelsLast"&&(Tt=[$,yt,ft,bt]),{batchSize:$,dataFormat:b,inHeight:_,inWidth:_e,inChannels:et,outHeight:yt,outWidth:ft,outChannels:bt,padInfo:it,strideHeight:nt,strideWidth:st,filterHeight:rt,filterWidth:tt,effectiveFilterHeight:ht,effectiveFilterWidth:pt,dilationHeight:ot,dilationWidth:ut,inShape:i,outShape:Tt,filterShape:s}}function computeConv3DInfo(i,s,o,a,c,d=!1,g="channelsLast",b){let[$,_,_e,et,rt]=[-1,-1,-1,-1,-1];if(g==="channelsLast")[$,_,_e,et,rt]=i;else if(g==="channelsFirst")[$,rt,_,_e,et]=i;else throw new Error(`Unknown dataFormat ${g}`);const[tt,j,nt,,st]=s,[ot,ut,ht]=parse3TupleParam(o),[pt,it,yt]=parse3TupleParam(a),ft=getEffectiveFilterSize(tt,pt),bt=getEffectiveFilterSize(j,it),Tt=getEffectiveFilterSize(nt,yt),{padInfo:Ct,outDepth:_t,outHeight:Ot,outWidth:kt}=get3DPadAndOutInfo(c,_,_e,et,ot,ut,ht,ft,bt,Tt,b),Rt=d?st*rt:st;let jt;return g==="channelsFirst"?jt=[$,Rt,_t,Ot,kt]:g==="channelsLast"&&(jt=[$,_t,Ot,kt,Rt]),{batchSize:$,dataFormat:g,inDepth:_,inHeight:_e,inWidth:et,inChannels:rt,outDepth:_t,outHeight:Ot,outWidth:kt,outChannels:Rt,padInfo:Ct,strideDepth:ot,strideHeight:ut,strideWidth:ht,filterDepth:tt,filterHeight:j,filterWidth:nt,effectiveFilterDepth:ft,effectiveFilterHeight:bt,effectiveFilterWidth:Tt,dilationDepth:pt,dilationHeight:it,dilationWidth:yt,inShape:i,outShape:jt,filterShape:s}}function computeOutputShape2D(i,s,o,a,c){a==null&&(a=computeDefaultPad(i,s,o));const d=i[0],g=i[1],b=round$3((d-s+2*a)/o+1,c),$=round$3((g-s+2*a)/o+1,c);return[b,$]}function computeOutputShape4D(i,s,o,a,c,d){c==null&&(c=computeDefaultPad(i,s,a));const g=i[0],b=i[1],$=i[2],_=round$3((g-s+2*c)/a+1,d),_e=round$3((b-s+2*c)/a+1,d),et=round$3(($-s+2*c)/a+1,d);return[_,_e,et,o]}function computeDefaultPad(i,s,o,a=1){const c=getEffectiveFilterSize(s,a);return Math.floor((i[0]*(o-1)-o+c)/2)}function parseTupleParam(i){return typeof i=="number"?[i,i,i]:i.length===2?[i[0],i[1],1]:i}function parse3TupleParam(i){return typeof i=="number"?[i,i,i]:i}function getEffectiveFilterSize(i,s){return s<=1?i:i+(i-1)*(s-1)}function getPadAndOutInfo(i,s,o,a,c,d,g,b,$){let _,_e,et;if(typeof i=="number"){_={top:i,bottom:i,left:i,right:i,type:i===0?"VALID":"NUMBER"};const tt=computeOutputShape2D([s,o],d,a,i,b);_e=tt[0],et=tt[1]}else if(i==="same"){_e=Math.ceil(s/a),et=Math.ceil(o/c);const rt=Math.max(0,(_e-1)*a+d-s),tt=Math.max(0,(et-1)*c+g-o),j=Math.floor(rt/2),nt=rt-j,st=Math.floor(tt/2),ot=tt-st;_={top:j,bottom:nt,left:st,right:ot,type:"SAME"}}else if(i==="valid")_={top:0,bottom:0,left:0,right:0,type:"VALID"},_e=Math.ceil((s-d+1)/a),et=Math.ceil((o-g+1)/c);else if(typeof i=="object"){const rt=$==="channelsLast"?i[1][0]:i[2][0],tt=$==="channelsLast"?i[1][1]:i[2][1],j=$==="channelsLast"?i[2][0]:i[3][0],nt=$==="channelsLast"?i[2][1]:i[3][1];_={top:rt,bottom:tt,left:j,right:nt,type:rt===0&&tt===0&&j===0&&nt===0?"VALID":"EXPLICIT"},_e=round$3((s-d+rt+tt)/a+1,b),et=round$3((o-g+j+nt)/c+1,b)}else throw Error(`Unknown padding parameter: ${i}`);return{padInfo:_,outHeight:_e,outWidth:et}}function get3DPadAndOutInfo(i,s,o,a,c,d,g,b,$,_,_e){let et,rt,tt,j;if(typeof i=="number"){et={top:i,bottom:i,left:i,right:i,front:i,back:i,type:i===0?"VALID":"NUMBER"};const st=computeOutputShape4D([s,o,a,1],b,1,c,i,_e);rt=st[0],tt=st[1],j=st[2]}else if(i==="same"){rt=Math.ceil(s/c),tt=Math.ceil(o/d),j=Math.ceil(a/g);const nt=(rt-1)*c+b-s,st=(tt-1)*d+$-o,ot=(j-1)*g+_-a,ut=Math.floor(nt/2),ht=nt-ut,pt=Math.floor(st/2),it=st-pt,yt=Math.floor(ot/2),ft=ot-yt;et={top:pt,bottom:it,left:yt,right:ft,front:ut,back:ht,type:"SAME"}}else if(i==="valid")et={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},rt=Math.ceil((s-b+1)/c),tt=Math.ceil((o-$+1)/d),j=Math.ceil((a-_+1)/g);else throw Error(`Unknown padding parameter: ${i}`);return{padInfo:et,outDepth:rt,outHeight:tt,outWidth:j}}function round$3(i,s){if(!s)return Math.trunc(i);switch(s){case"round":return Math.round(i);case"ceil":return Math.ceil(i);case"floor":return Math.floor(i);default:throw new Error(`Unknown roundingMode ${s}`)}}function tupleValuesAreOne(i){const[s,o,a]=parseTupleParam(i);return s===1&&o===1&&a===1}function eitherStridesOrDilationsAreOne(i,s){return tupleValuesAreOne(i)||tupleValuesAreOne(s)}function convertConv2DDataFormat(i){if(i==="NHWC")return"channelsLast";if(i==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${i}`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reshape_(i,s){const a={x:convertToTensor(i,"x","reshape","string_or_numeric")},c={shape:s};return ENGINE.runKernel(Reshape$1,a,c)}const reshape$3=op({reshape_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool_(i,s,o,a,c){const d=convertToTensor(i,"x","avgPool","float32"),g=1;assert$2(eitherStridesOrDilationsAreOne(o,g),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${g}'`);let b=d,$=!1;d.rank===3&&($=!0,b=reshape$3(d,[1,d.shape[0],d.shape[1],d.shape[2]])),assert$2(b.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${b.rank}.`),c!=null&&assert$2(isInt(a),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${c} but got pad ${a}.`);const _={x:b},_e={filterSize:s,strides:o,pad:a,dimRoundingMode:c};let et=ENGINE.runKernel(AvgPool,_,_e);return et=cast$3(et,d.dtype),$?reshape$3(et,[et.shape[1],et.shape[2],et.shape[3]]):et}const avgPool$2=op({avgPool_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3d_(i,s,o,a,c,d="NDHWC",g){g==null?g=[1,1,1]:deprecationWarn("dilations is deprecated, this field will be gone in v3.0.0.");const b=convertToTensor(i,"x","avgPool3d","float32");let $=b,_=!1;b.rank===4&&(_=!0,$=reshape$3(b,[1,b.shape[0],b.shape[1],b.shape[2],b.shape[3]])),assert$2($.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${$.rank}.`),assert$2(d==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${d}`),assert$2(eitherStridesOrDilationsAreOne(o,g),()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${o} and dilations '${g}'`),c!=null&&assert$2(isInt(a),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${c} but got pad ${a}.`);const _e={x:$},et={filterSize:s,strides:o,pad:a,dimRoundingMode:c,dataFormat:d,dilations:g};let rt=ENGINE.runKernel(AvgPool3D,_e,et);return rt=cast$3(rt,$.dtype),_?reshape$3(rt,[rt.shape[1],rt.shape[2],rt.shape[3],rt.shape[4]]):rt}const avgPool3d$1=op({avgPool3d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concat_(i,s=0){assert$2(i.length>=1,()=>"Pass at least one tensor to concat");const o=convertToTensorArray(i,"tensors","concat","string_or_numeric");if(o[0].dtype==="complex64"&&o.forEach(d=>{if(d.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${d.dtype}. `)}),o.length===1)return clone(o[0]);const a=o,c={axis:s};return ENGINE.runKernel(Concat,a,c)}const concat$2=op({concat_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sigmoid_(i){const o={x:convertToTensor(i,"x","sigmoid")};return ENGINE.runKernel(Sigmoid$1,o)}const sigmoid$2=op({sigmoid_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice_(i,s,o){const a=convertToTensor(i,"x","slice","string_or_numeric");if(a.rank===0)throw new Error("Slicing scalar is not possible");const c={x:a},d={begin:s,size:o};return ENGINE.runKernel(Slice,c,d)}const slice$2=op({slice_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tanh_(i){const o={x:convertToTensor(i,"x","tanh")};return ENGINE.runKernel(Tanh$1,o)}const tanh$2=op({tanh_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function basicLSTMCell_(i,s,o,a,c,d){const g=convertToTensor(i,"forgetBias","basicLSTMCell"),b=convertToTensor(s,"lstmKernel","basicLSTMCell"),$=convertToTensor(o,"lstmBias","basicLSTMCell"),_=convertToTensor(a,"data","basicLSTMCell"),_e=convertToTensor(c,"c","basicLSTMCell"),et=convertToTensor(d,"h","basicLSTMCell"),rt=concat$2([_,et],1),tt=matMul$1(rt,b),j=add$2(tt,$),nt=j.shape[0],st=j.shape[1]/4,ot=[nt,st],ut=slice$2(j,[0,0],ot),ht=slice$2(j,[0,st],ot),pt=slice$2(j,[0,st*2],ot),it=slice$2(j,[0,st*3],ot),yt=add$2(mul(sigmoid$2(ut),tanh$2(ht)),mul(_e,sigmoid$2(add$2(g,pt)))),ft=mul(tanh$2(yt),sigmoid$2(it));return[yt,ft]}const basicLSTMCell=op({basicLSTMCell_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchToSpaceND_(i,s,o){const a=convertToTensor(i,"x","batchToSpaceND"),c=s.reduce((b,$)=>b*$);assert$2(a.rank>=1+s.length,()=>`input rank is ${a.rank} but should be > than blockShape.length ${s.length}`),assert$2(o.length===s.length,()=>`crops.length is ${o.length} but should be equal to blockShape.length  ${s.length}`),assert$2(a.shape[0]%c===0,()=>`input tensor batch is ${a.shape[0]} but is not divisible by the product of the elements of blockShape ${s.join(" * ")} === ${c}`);const d={x:a},g={blockShape:s,crops:o};return ENGINE.runKernel(BatchToSpaceND,d,g)}const batchToSpaceND$2=op({batchToSpaceND_});function xAs4D(i){let s;return i.rank===0||i.rank===1?s=reshape$3(i,[1,1,1,i.size]):i.rank===2?s=reshape$3(i,[1,1,i.shape[0],i.shape[1]]):i.rank===3?s=reshape$3(i,[1,i.shape[0],i.shape[1],i.shape[2]]):s=i,s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchNorm_(i,s,o,a,c,d){d==null&&(d=.001);const g=convertToTensor(i,"x","batchNorm"),b=convertToTensor(s,"mean","batchNorm"),$=convertToTensor(o,"variance","batchNorm");let _;c!=null&&(_=convertToTensor(c,"scale","batchNorm"));let _e;a!=null&&(_e=convertToTensor(a,"offset","batchNorm")),assert$2(b.rank===$.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),assert$2(_e==null||b.rank===_e.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),assert$2(_==null||b.rank===_.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const rt={x:xAs4D(g),scale:_,offset:_e,mean:b,variance:$},tt={varianceEpsilon:d},j=ENGINE.runKernel(FusedBatchNorm,rt,tt);return reshape$3(j,g.shape)}const batchNorm$2=op({batchNorm_});function batchNorm2d_(i,s,o,a,c,d){const g=convertToTensor(i,"x","batchNorm"),b=convertToTensor(s,"mean","batchNorm"),$=convertToTensor(o,"variance","batchNorm");let _;c!=null&&(_=convertToTensor(c,"scale","batchNorm"));let _e;return a!=null&&(_e=convertToTensor(a,"offset","batchNorm")),assert$2(g.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${g.rank}.`),assert$2(b.rank===2||b.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${b.rank}.`),assert$2($.rank===2||$.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${$.rank}.`),_!=null&&assert$2(_.rank===2||_.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${_.rank}.`),_e!=null&&assert$2(_e.rank===2||_e.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${_e.rank}.`),batchNorm$2(g,b,$,_e,_,d)}const batchNorm2d=op({batchNorm2d_});function batchNorm3d_(i,s,o,a,c,d){const g=convertToTensor(i,"x","batchNorm"),b=convertToTensor(s,"mean","batchNorm"),$=convertToTensor(o,"variance","batchNorm");let _;c!=null&&(_=convertToTensor(c,"scale","batchNorm"));let _e;return a!=null&&(_e=convertToTensor(a,"offset","batchNorm")),assert$2(g.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${g.rank}.`),assert$2(b.rank===3||b.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${b.rank}.`),assert$2($.rank===3||$.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${$.rank}.`),_!=null&&assert$2(_.rank===3||_.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${_.rank}.`),_e!=null&&assert$2(_e.rank===3||_e.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${_e.rank}.`),batchNorm$2(g,b,$,_e,_,d)}const batchNorm3d=op({batchNorm3d_});function batchNorm4d_(i,s,o,a,c,d){const g=convertToTensor(i,"x","batchNorm"),b=convertToTensor(s,"mean","batchNorm"),$=convertToTensor(o,"variance","batchNorm");let _;c!=null&&(_=convertToTensor(c,"scale","batchNorm"));let _e;return a!=null&&(_e=convertToTensor(a,"offset","batchNorm")),assert$2(g.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${g.rank}.`),assert$2(b.rank===4||b.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${b.rank}.`),assert$2($.rank===4||$.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${$.rank}.`),_!=null&&assert$2(_.rank===4||_.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${_.rank}.`),_e!=null&&assert$2(_e.rank===4||_e.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${_e.rank}.`),batchNorm$2(g,b,$,_e,_,d)}const batchNorm4d=op({batchNorm4d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bincount_(i,s,o){const a=convertToTensor(i,"x","bincount"),c=convertToTensor(s,"weights","bincount");assert$2(a.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${a.dtype}`),assert$2(o>=0,()=>`size must be non-negative, but got ${o}.`),assert$2(c.size===a.size||c.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${a.shape}, weights shape: ${c.shape}.`);const d={x:a,weights:c},g={size:o};return ENGINE.runKernel(Bincount,d,g)}const bincount$2=op({bincount_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function broadcastTo_(i,s){let o=convertToTensor(i,"broadcastTo","x");const a=o.shape;if(s.some(_=>!(_>0)||_%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${s}].`);if(s.length<o.rank)throw new Error(`broadcastTo(): shape.length=${s.length} < input.rank=${o.rank}.`);if(s.length>o.rank){const _=o.shape.slice();for(;_.length<s.length;)_.unshift(1);o=reshape$3(o,_)}const c=o.shape,d=Array.from(s);for(let _=s.length-1;_>=0;_--)if(c[_]===s[_])d[_]=1;else if(o.shape[_]!==1)throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);if(d.map((_,_e)=>_>1?_e:-1).filter(_=>_>=0).length===0)return clone(o);const b={x:o},$={reps:d};return ENGINE.runKernel(Tile,b,$)}const broadcastTo=op({broadcastTo_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ceil_(i){const o={x:convertToTensor(i,"x","ceil")};return ENGINE.runKernel(Ceil,o)}const ceil$2=op({ceil_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function clipByValue_(i,s,o){const a=convertToTensor(i,"x","clipByValue");assert$2(s<=o,()=>`Error in clip: min (${s}) must be less than or equal to max (${o}).`);const c={x:a},d={clipValueMin:s,clipValueMax:o};return ENGINE.runKernel(ClipByValue,c,d)}const clipByValue$1=op({clipByValue_});function concat1d_(i){return concat$2(i,0)}const concat1d=op({concat1d_});function concat2d_(i,s){return concat$2(i,s)}const concat2d=op({concat2d_});function concat3d_(i,s){return concat$2(i,s)}const concat3d=op({concat3d_});function concat4d_(i,s){return concat$2(i,s)}const concat4d=op({concat4d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2d_(i,s,o,a,c="NHWC",d=[1,1],g){const b=convertToTensor(i,"x","conv2d"),$=convertToTensor(s,"filter","conv2d");let _=b,_e=!1;b.rank===3&&(_e=!0,_=reshape$3(b,[1,b.shape[0],b.shape[1],b.shape[2]])),assert$2(_.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${_.rank}.`),assert$2($.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${$.rank}.`),g!=null&&assert$2(isInt(a),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${g} but got pad ${a}.`);const et=c==="NHWC"?_.shape[3]:_.shape[1];assert$2(et===$.shape[2],()=>`Error in conv2d: depth of input (${et}) must match input depth for filter ${$.shape[2]}.`),assert$2(eitherStridesOrDilationsAreOne(o,d),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);const rt={x:_,filter:$},tt={strides:o,pad:a,dataFormat:c,dilations:d,dimRoundingMode:g},j=ENGINE.runKernel(Conv2D$1,rt,tt);return _e?reshape$3(j,[j.shape[1],j.shape[2],j.shape[3]]):j}const conv2d$3=op({conv2d_});function conv1d_(i,s,o,a,c="NWC",d=1,g){const b=convertToTensor(i,"x","conv1d"),$=convertToTensor(s,"filter","conv1d");let _=b,_e=!1;b.rank===2&&(_e=!0,_=reshape$3(b,[1,b.shape[0],b.shape[1]])),assert$2(_.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${_.rank}.`),assert$2($.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${$.rank}.`),g!=null&&assert$2(isInt(a),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${g} but got pad ${a}.`),assert$2(_.shape[2]===$.shape[1],()=>`Error in conv1d: depth of input (${_.shape[2]}) must match input depth for filter ${$.shape[1]}.`),assert$2(eitherStridesOrDilationsAreOne(o,d),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${o} and dilation '${d}'`),assert$2(c==="NWC",()=>`Error in conv1d: got dataFormat of ${c} but only NWC is currently supported.`);const et=reshape$3($,[1,$.shape[0],$.shape[1],$.shape[2]]),rt=reshape$3(_,[_.shape[0],1,_.shape[1],_.shape[2]]),st=conv2d$3(rt,et,[1,o],a,"NHWC",[1,d],g);return _e?reshape$3(st,[st.shape[2],st.shape[3]]):reshape$3(st,[st.shape[0],st.shape[2],st.shape[3]])}const conv1d$1=op({conv1d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropInput_(i,s,o,a,c,d="NHWC",g){assert$2(i.length===s.rank,()=>`Length of inShape (${i.length}) and rank of dy (${s.rank}) must match`);let b=i,$=s,_=!1;s.rank===3&&(_=!0,$=reshape$3(s,[1,s.shape[0],s.shape[1],s.shape[2]]),b=[1,i[0],i[1],i[2]]),assert$2(b.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${b.length}.`),assert$2($.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${$.rank}`),assert$2(o.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${o.rank}`);const _e=d==="NHWC"?b[3]:b[1],et=d==="NHWC"?$.shape[3]:$.shape[1];assert$2(_e===o.shape[2],()=>`Error in conv2dDerInput: depth of input (${_e}) must match input depth for filter ${o.shape[2]}.`),assert$2(et===o.shape[3],()=>`Error in conv2dDerInput: depth of output (${et}) must match output depth for filter ${o.shape[3]}.`),g!=null&&assert$2(isInt(c),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${g} but got pad ${c}.`);const rt={dy:$,filter:o},tt={strides:a,pad:c,dataFormat:d,dimRoundingMode:g,inputShape:b},j=ENGINE.runKernel(Conv2DBackpropInput,rt,tt);return _?reshape$3(j,[j.shape[1],j.shape[2],j.shape[3]]):j}const conv2DBackpropInput$2=op({conv2DBackpropInput_});function conv2dTranspose_(i,s,o,a,c,d){const g=convertToTensor(i,"x","conv2dTranspose"),b=convertToTensor(s,"filter","conv2dTranspose");return conv2DBackpropInput$2(o,g,b,a,c,"NHWC",d)}const conv2dTranspose$1=op({conv2dTranspose_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3d_(i,s,o,a,c="NDHWC",d=[1,1,1]){const g=convertToTensor(i,"x","conv3d"),b=convertToTensor(s,"filter","conv3d");let $=g,_=!1;g.rank===4&&(_=!0,$=reshape$3(g,[1,g.shape[0],g.shape[1],g.shape[2],g.shape[3]])),assert$2($.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${$.rank}.`),assert$2(b.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${b.rank}.`),assert$2($.shape[4]===b.shape[3],()=>`Error in conv3d: depth of input (${$.shape[4]}) must match input depth for filter ${b.shape[3]}.`),assert$2(eitherStridesOrDilationsAreOne(o,d),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`),assert$2(c==="NDHWC",()=>`Error in conv3d: got dataFormat of ${c} but only NDHWC is currently supported.`);const _e={x:$,filter:b},et={strides:o,pad:a,dataFormat:c,dilations:d},rt=ENGINE.runKernel(Conv3D$1,_e,et);return _?reshape$3(rt,[rt.shape[1],rt.shape[2],rt.shape[3],rt.shape[4]]):rt}const conv3d$1=op({conv3d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropInput_(i,s,o,a,c){assert$2(i.length===s.rank,()=>`Length of inShape (${i.length}) and rank of dy (${s.rank}) must match`);let d=i,g=s,b=!1;s.rank===4&&(b=!0,g=reshape$3(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]]),d=[1,i[0],i[1],i[2],i[3]]);const $=d[4],_=g.shape[4];assert$2(d.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${d.length}.`),assert$2(g.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${g.rank}`),assert$2(o.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${o.rank}`),assert$2($===o.shape[3],()=>`Error in conv3dDerInput: depth of input (${$}) must match input depth for filter ${o.shape[3]}.`),assert$2(_===o.shape[4],()=>`Error in conv3dDerInput: depth of output (${_}) must match output depth for filter ${o.shape[4]}.`);const _e={dy:g,filter:o},et={pad:c,strides:a,inputShape:d},rt=ENGINE.runKernel(Conv3DBackpropInputV2,_e,et);return b?reshape$3(rt,[rt.shape[1],rt.shape[2],rt.shape[3],rt.shape[4]]):rt}const conv3DBackpropInput$1=op({conv3DBackpropInput_});function conv3dTranspose_(i,s,o,a,c){const d=convertToTensor(i,"x","conv3dTranspose"),g=convertToTensor(s,"filter","conv3dTranspose");return conv3DBackpropInput$1(o,d,g,a,c)}const conv3dTranspose=op({conv3dTranspose_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cos_(i){const o={x:convertToTensor(i,"x","cos")};return ENGINE.runKernel(Cos,o)}const cos$2=op({cos_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cosh_(i){const o={x:convertToTensor(i,"x","cosh")};return ENGINE.runKernel(Cosh,o)}const cosh$2=op({cosh_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cumsum_(i,s=0,o=!1,a=!1){const d={x:convertToTensor(i,"x","cumsum")},g={axis:s,exclusive:o,reverse:a};return ENGINE.runKernel(Cumsum,d,g)}const cumsum$2=op({cumsum_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function denseBincount_(i,s,o,a=!1){const c=convertToTensor(i,"x","denseBincount"),d=convertToTensor(s,"weights","denseBincount");assert$2(c.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${c.dtype}`),assert$2(c.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${c.rank}.`),assert$2(o>=0,()=>`size must be non-negative, but got ${o}.`),assert$2(d.size===c.size||d.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${c.shape}, weights shape: ${d.shape}.`);const g={x:c,weights:d},b={size:o,binaryOutput:a};return ENGINE.runKernel(DenseBincount,g,b)}const denseBincount$2=op({denseBincount_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthToSpace_(i,s,o="NHWC"){const a=convertToTensor(i,"x","depthToSpace"),c=o==="NHWC"?a.shape[1]:a.shape[2],d=o==="NHWC"?a.shape[2]:a.shape[3],g=o==="NHWC"?a.shape[3]:a.shape[1];assert$2(c*s>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${c} and ${s}  for depthToSpace with input shape
    ${a.shape}`),assert$2(d*s>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${d} and ${s} for depthToSpace with input shape
        ${a.shape}`),assert$2(g%(s*s)===0,()=>`Dimension size must be evenly divisible by ${s*s} but is ${g} for depthToSpace with input shape ${a.shape}`);const b={x:a},$={blockSize:s,dataFormat:o};return ENGINE.runKernel(DepthToSpace,b,$)}const depthToSpace$2=op({depthToSpace_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2d_(i,s,o,a,c="NHWC",d=[1,1],g){const b=convertToTensor(i,"x","depthwiseConv2d"),$=convertToTensor(s,"filter","depthwiseConv2d");let _=b,_e=!1;b.rank===3&&(_e=!0,_=reshape$3(b,[1,b.shape[0],b.shape[1],b.shape[2]])),assert$2(_.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${_.rank}.`),assert$2($.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${$.rank}.`),assert$2(_.shape[3]===$.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${_.shape[3]}) must match the inChannels dimension in filter ${$.shape[2]}.`),g!=null&&assert$2(isInt(a),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${g} but got pad ${a}.`);const et={x:_,filter:$},rt={strides:o,pad:a,dataFormat:c,dilations:d,dimRoundingMode:g},tt=ENGINE.runKernel(DepthwiseConv2dNative,et,rt);return _e?reshape$3(tt,[tt.shape[1],tt.shape[2],tt.shape[3]]):tt}const depthwiseConv2d$3=op({depthwiseConv2d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function diag_(i){const o={x:convertToTensor(i,"x","diag")};return ENGINE.runKernel(Diag,o)}const diag$2=op({diag_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dilation2d_(i,s,o,a,c=[1,1],d="NHWC"){const g=convertToTensor(i,"x","dilation2d"),b=convertToTensor(s,"filter","dilation2d");assert$2(g.rank===3||g.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${g.rank}.`),assert$2(b.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${b.rank}.`),assert$2(d==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${d}`);let $=g,_=!1;g.rank===3&&($=reshape$3(g,[1,g.shape[0],g.shape[1],g.shape[2]]),_=!0);const _e={x:$,filter:b},et={strides:o,pad:a,dilations:c},rt=ENGINE.runKernel(Dilation2D,_e,et);return _?reshape$3(rt,[rt.shape[1],rt.shape[2],rt.shape[3]]):rt}const dilation2d=op({dilation2d_});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getBroadcastDims$1(i,s){const o=i.length,a=[];for(let c=0;c<o;c++){const d=o-1-c,g=i[d]||1;(s[s.length-1-c]||1)>1&&g===1&&a.unshift(d)}return a}function getReductionAxes(i,s){const o=[];for(let a=0;a<s.length;a++){const c=i[i.length-a-1],d=s.length-a-1,g=s[d];(c==null||c===1&&g>1)&&o.unshift(d)}return o}function assertAndGetBroadcastShape(i,s){const o=[],a=Math.max(i.length,s.length);for(let c=0;c<a;c++){let d=i[i.length-c-1];d==null&&(d=1);let g=s[s.length-c-1];if(g==null&&(g=1),d===1)o.unshift(g);else if(g===1)o.unshift(d);else if(d!==g){const b=`Operands could not be broadcast together with shapes ${i} and ${s}.`;throw Error(b)}else o.unshift(d)}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function equal_(i,s){let o=convertToTensor(i,"a","equal"),a=convertToTensor(s,"b","equal");[o,a]=makeTypesMatch(o,a),assertAndGetBroadcastShape(o.shape,a.shape);const c={a:o,b:a};return ENGINE.runKernel(Equal,c)}const equal$2=op({equal_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function where_(i,s,o){const a=convertToTensor(s,"a","where"),c=convertToTensor(o,"b","where"),d=convertToTensor(i,"condition","where","bool"),g=assertAndGetBroadcastShape(a.shape,c.shape),b=broadcastTo(a,g),$=broadcastTo(c,g);d.rank===1&&assert$2(d.shape[0]===a.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),d.rank!==1&&assertShapesMatch(d.shape,$.shape,"Error in where: ");const _={condition:d,t:b,e:$};return ENGINE.runKernel(Select,_)}const where=op({where_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zerosLike_(i){const o={x:convertToTensor(i,"x","zerosLike")};return ENGINE.runKernel(ZerosLike,o)}const zerosLike$2=op({zerosLike_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function divNoNan_(i,s){let o=convertToTensor(i,"a","div"),a=convertToTensor(s,"b","div");[o,a]=makeTypesMatch(o,a);const c=div$1(o,a),d=zerosLike$2(c),g=equal$2(a,d);return where(g,d,c)}const divNoNan=op({divNoNan_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dot_(i,s){const o=convertToTensor(i,"t1","dot"),a=convertToTensor(s,"t2","dot");assert$2((o.rank===1||o.rank===2)&&(a.rank===1||a.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${o.rank} and ${a.rank}.`);const c=o.rank===1?o.size:o.shape[1],d=a.rank===1?a.size:a.shape[0];if(assert$2(c===d,()=>`Error in dot: inner dimensions of inputs must match, but got ${c} and ${d}.`),o.rank===1&&a.rank===1){const g=reshape$3(o,[1,-1]),b=reshape$3(a,[-1,1]),$=matMul$1(g,b);return reshape$3($,[])}else if(o.rank===1&&a.rank===2){const g=reshape$3(o,[1,-1]),b=reshape$3(a,[a.shape[0],a.shape[1]]),$=matMul$1(g,b);return reshape$3($,[$.size])}else if(o.rank===2&&a.rank===1){const g=reshape$3(a,[-1,1]),b=matMul$1(o,g);return reshape$3(b,[b.size])}else{const g=reshape$3(a,[a.shape[0],a.shape[1]]);return matMul$1(o,g)}}const dot$2=op({dot_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function elu_(i){const o={x:convertToTensor(i,"x","elu")};return ENGINE.runKernel(Elu$1,o)}const elu$4=op({elu_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function erf_(i){let s=convertToTensor(i,"x","erf");assert$2(s.dtype==="int32"||s.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),s.dtype==="int32"&&(s=cast$3(s,"float32"));const o={x:s};return ENGINE.runKernel(Erf,o)}const erf$2=op({erf_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function exp_(i){const o={x:convertToTensor(i,"x","exp")};return ENGINE.runKernel(Exp,o)}const exp$2=op({exp_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function expandDims_(i,s=0){const o=convertToTensor(i,"x","expandDims","string_or_numeric");assert$2(s<=o.rank,()=>"Axis must be <= rank of the tensor");const a={input:o},c={dim:s};return ENGINE.runKernel(ExpandDims,a,c)}const expandDims$3=op({expandDims_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function expm1_(i){const o={x:convertToTensor(i,"x","expm1")};return ENGINE.runKernel(Expm1,o)}const expm1$2=op({expm1_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tile_(i,s){const o=convertToTensor(i,"x","tile","string_or_numeric");assert$2(o.rank===s.length,()=>`Error in transpose: rank of input ${o.rank} must match length of reps ${s}.`);const a={x:o},c={reps:s};return ENGINE.runKernel(Tile,a,c)}const tile$3=op({tile_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eye_(i,s,o,a="float32"){s==null&&(s=i);const c=buffer([i,s],a),d=i<=s?i:s;for(let b=0;b<d;++b)c.set(1,b,b);const g=reshape$3(c.toTensor(),[i,s]);if(o==null)return g;if(o.length===1)return tile$3(expandDims$3(g,0),[o[0],1,1]);if(o.length===2)return tile$3(expandDims$3(expandDims$3(g,0),0),[o[0],o[1],1,1]);if(o.length===3)return tile$3(expandDims$3(expandDims$3(expandDims$3(g,0),0),0),[o[0],o[1],o[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${o.length}D.`)}const eye=op({eye_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fill$2(i,s,o){const a={shape:i,value:s,dtype:o};return ENGINE.runKernel(Fill,{},a)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function floor_(i){const o={x:convertToTensor(i,"x","floor")};return ENGINE.runKernel(Floor,o)}const floor$2=op({floor_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gather_(i,s,o=0,a=0){const c=convertToTensor(i,"x","gather"),d=convertToTensor(s,"indices","gather","int32"),g={x:c,indices:d},b={axis:o,batchDims:a};return ENGINE.runKernel(GatherV2,g,b)}const gather$1=op({gather_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function greater_(i,s){let o=convertToTensor(i,"a","greater"),a=convertToTensor(s,"b","greater");[o,a]=makeTypesMatch(o,a),assertAndGetBroadcastShape(o.shape,a.shape);const c={a:o,b:a};return ENGINE.runKernel(Greater,c)}const greater$3=op({greater_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function greaterEqual_(i,s){let o=convertToTensor(i,"a","greaterEqual"),a=convertToTensor(s,"b","greaterEqual");[o,a]=makeTypesMatch(o,a),assertAndGetBroadcastShape(o.shape,a.shape);const c={a:o,b:a};return ENGINE.runKernel(GreaterEqual,c)}const greaterEqual$2=op({greaterEqual_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function imag_(i){const o={input:convertToTensor(i,"input","imag")};return ENGINE.runKernel(Imag,o)}const imag$2=op({imag_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function isFinite_(i){const o={x:convertToTensor(i,"x","isFinite")};return ENGINE.runKernel(IsFinite,o)}const isFinite$3=op({isFinite_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function isInf_(i){const o={x:convertToTensor(i,"x","isInf")};return ENGINE.runKernel(IsInf,o)}const isInf$2=op({isInf_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function isNaN_(i){const o={x:convertToTensor(i,"x","isNaN")};return ENGINE.runKernel(IsNan,o)}const isNaN$3=op({isNaN_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function leakyRelu_(i,s=.2){const a={x:convertToTensor(i,"x","leakyRelu")},c={alpha:s};return ENGINE.runKernel(LeakyRelu,a,c)}const leakyRelu$2=op({leakyRelu_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function less_(i,s){let o=convertToTensor(i,"a","less"),a=convertToTensor(s,"b","less");[o,a]=makeTypesMatch(o,a),assertAndGetBroadcastShape(o.shape,a.shape);const c={a:o,b:a};return ENGINE.runKernel(Less,c)}const less$3=op({less_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lessEqual_(i,s){let o=convertToTensor(i,"a","lessEqual"),a=convertToTensor(s,"b","lessEqual");[o,a]=makeTypesMatch(o,a),assertAndGetBroadcastShape(o.shape,a.shape);const c={a:o,b:a};return ENGINE.runKernel(LessEqual,c)}const lessEqual$2=op({lessEqual_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function linspace(i,s,o){if(o<=0)throw new Error("The number of values should be positive.");const a={start:i,stop:s,num:o};return ENGINE.runKernel(LinSpace,{},a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function localResponseNormalization_(i,s=5,o=1,a=1,c=.5){const d=convertToTensor(i,"x","localResponseNormalization");assert$2(d.rank===4||d.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${d.rank}.`),assert$2(isInt(s),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${s}.`);let g=d,b=!1;d.rank===3&&(b=!0,g=reshape$3(d,[1,d.shape[0],d.shape[1],d.shape[2]]));const $={x:g},_={depthRadius:s,bias:o,alpha:a,beta:c},_e=ENGINE.runKernel(LRN,$,_);return b?reshape$3(_e,[_e.shape[1],_e.shape[2],_e.shape[3]]):_e}const localResponseNormalization=op({localResponseNormalization_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function log_(i){const o={x:convertToTensor(i,"x","log")};return ENGINE.runKernel(Log,o)}const log$4=op({log_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function log1p_(i){const o={x:convertToTensor(i,"x","log1p")};return ENGINE.runKernel(Log1p,o)}const log1p$2=op({log1p_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function grad(i){return assert$2(isFunction$1(i),()=>"The f passed in grad(f) must be a function"),(s,o)=>{const a=convertToTensor(s,"x","tf.grad","string_or_numeric"),c=o!=null?convertToTensor(o,"dy","tf.grad"):null;return ENGINE.tidy(()=>{const{value:d,grads:g}=ENGINE.gradients(()=>i(a),[a],c);return c!=null&&assertShapesMatch(d.shape,c.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),checkGrads(g),g[0]})}}function grads(i){return assert$2(isFunction$1(i),()=>"The f passed in grads(f) must be a function"),(s,o)=>{assert$2(Array.isArray(s),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const a=convertToTensorArray(s,"args","tf.grads","string_or_numeric"),c=o!=null?convertToTensor(o,"dy","tf.grads"):null;return ENGINE.tidy(()=>{const{value:d,grads:g}=ENGINE.gradients(()=>i(...a),a,c);return c!=null&&assertShapesMatch(d.shape,c.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),checkGrads(g),g})}}function valueAndGrad(i){return assert$2(isFunction$1(i),()=>"The f passed in valueAndGrad(f) must be a function"),(s,o)=>{assert$2(s instanceof Tensor,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),assert$2(o==null||o instanceof Tensor,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:a,value:c}=ENGINE.gradients(()=>i(s),[s],o);return checkGrads(a),{grad:a[0],value:c}}}function valueAndGrads(i){return assert$2(isFunction$1(i),()=>"The f passed in valueAndGrads(f) must be a function"),(s,o)=>{assert$2(Array.isArray(s)&&s.every(c=>c instanceof Tensor),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),assert$2(o==null||o instanceof Tensor,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const a=ENGINE.gradients(()=>i(...s),s,o);return o!=null&&assertShapesMatch(a.value.shape,o.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),checkGrads(a.grads),a}}function variableGrads(i,s){assert$2(isFunction$1(i),()=>"The f passed in variableGrads(f) must be a function"),assert$2(s==null||Array.isArray(s)&&s.every(_=>_ instanceof Variable),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const o=s!=null;if(!o){s=[];for(const _ in ENGINE.registeredVariables)s.push(ENGINE.registeredVariables[_])}const a=o?s.filter(_=>!_.trainable):null,c=s.length;s=s.filter(_=>_.trainable),assert$2(s.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${c} variables is trainable.`);const d=!0,{value:g,grads:b}=ENGINE.gradients(i,s,null,d);assert$2(b.some(_=>_!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),assert$2(g.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${g.rank} tensor`);const $={};return s.forEach((_,_e)=>{b[_e]!=null&&($[_.name]=b[_e])}),a!=null&&a.forEach(_=>$[_.name]=null),{value:g,grads:$}}function customGrad(i){return ENGINE.customGrad(i)}function checkGrads(i){if(i.filter(o=>o==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function neg_(i){const o={x:convertToTensor(i,"x","neg")};return ENGINE.runKernel(Neg,o)}const neg$2=op({neg_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function softplus_(i){const o={x:convertToTensor(i,"x","softplus")};return ENGINE.runKernel(Softplus$1,o)}const softplus$2=op({softplus_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logSigmoid_(i){const s=convertToTensor(i,"x","logSigmoid");return customGrad(a=>({value:neg$2(softplus$2(neg$2(a))),gradFunc:g=>mul(g,sigmoid$2(neg$2(a)))}))(s)}const logSigmoid=op({logSigmoid_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function max_(i,s=null,o=!1){const c={x:convertToTensor(i,"x","max")},d={reductionIndices:s,keepDims:o};return ENGINE.runKernel(Max,c,d)}const max$3=op({max_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sub_(i,s){let o=convertToTensor(i,"a","sub"),a=convertToTensor(s,"b","sub");[o,a]=makeTypesMatch(o,a);const c={a:o,b:a};return ENGINE.runKernel(Sub,c)}const sub$2=op({sub_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sum_(i,s=null,o=!1){let a=convertToTensor(i,"x","sum");a.dtype==="bool"&&(a=cast$3(a,"int32"));const c={x:a},d={axis:s,keepDims:o};return ENGINE.runKernel(Sum,c,d)}const sum$2=op({sum_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logSoftmax_(i,s=-1){const o=convertToTensor(i,"logits","logSoftmax");if(s===-1&&(s=o.rank-1),s!==o.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${o.rank} and axis was ${s}`);return customGrad((c,d)=>{const b=max$3(c,s,!0),$=sub$2(c,b),_=sub$2(cast$3($,"float32"),log$4(sum$2(exp$2($),s,!0)));return d([_]),{value:_,gradFunc:(et,rt)=>{const[tt]=rt,j=!0,nt=exp$2(tt);return sub$2(et,mul(sum$2(et,s,j),nt))}}})(o)}const logSoftmax=op({logSoftmax_});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function axesAreInnerMostDims(i,s){for(let o=0;o<i.length;++o)if(i[i.length-o-1]!==s-1-o)return!1;return!0}function combineLocations(i,s,o){const a=i.length+s.length,c=[];let d=0,g=0;for(let b=0;b<a;b++)o.indexOf(b)===-1?c.push(i[d++]):c.push(s[g++]);return c}function computeOutAndReduceShapes(i,s){const o=[],a=i.length;for(let d=0;d<a;d++)s.indexOf(d)===-1&&o.push(i[d]);const c=s.map(d=>i[d]);return[o,c]}function expandShapeToKeepDim(i,s){const o=s.map(a=>1);return combineLocations(i,o,s)}function assertAxesAreInnerMostDims(i,s,o){assert$2(axesAreInnerMostDims(s,o),()=>`${i} supports only inner-most axes for now. Got axes ${s} and rank-${o} input.`)}function getAxesPermutation(i,s){if(axesAreInnerMostDims(i,s))return null;const o=[];for(let a=0;a<s;++a)i.indexOf(a)===-1&&o.push(a);return i.forEach(a=>o.push(a)),o}function getUndoAxesPermutation(i){return i.map((s,o)=>[o,s]).sort((s,o)=>s[1]-o[1]).map(s=>s[0])}function getInnerMostAxes(i,s){const o=[];for(let a=s-i;a<s;++a)o.push(a);return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logSumExp_(i,s=null,o=!1){const a=convertToTensor(i,"x","logSumExp"),c=parseAxisParam(s,a.shape),d=max$3(a,c,!0),g=sub$2(a,d),b=exp$2(g),$=sum$2(b,c),_=log$4($),_e=add$2(reshape$3(d,_.shape),_);if(o){const et=expandShapeToKeepDim(_e.shape,c);return reshape$3(_e,et)}return _e}const logSumExp=op({logSumExp_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logicalAnd_(i,s){const o=convertToTensor(i,"a","logicalAnd","bool"),a=convertToTensor(s,"b","logicalAnd","bool");assertAndGetBroadcastShape(o.shape,a.shape);const c={a:o,b:a};return ENGINE.runKernel(LogicalAnd,c)}const logicalAnd$2=op({logicalAnd_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logicalNot_(i){const o={x:convertToTensor(i,"x","logicalNot","bool")};return ENGINE.runKernel(LogicalNot,o)}const logicalNot$2=op({logicalNot_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logicalOr_(i,s){const o=convertToTensor(i,"a","logicalOr","bool"),a=convertToTensor(s,"b","logicalOr","bool");assertAndGetBroadcastShape(o.shape,a.shape);const c={a:o,b:a};return ENGINE.runKernel(LogicalOr,c)}const logicalOr$2=op({logicalOr_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logicalXor_(i,s){const o=convertToTensor(i,"a","logicalXor","bool"),a=convertToTensor(s,"b","logicalXor","bool");return assertAndGetBroadcastShape(o.shape,a.shape),logicalAnd$2(logicalOr$2(i,s),logicalNot$2(logicalAnd$2(i,s)))}const logicalXor=op({logicalXor_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool_(i,s,o,a,c){const d=convertToTensor(i,"x","maxPool"),g=1;let b=d,$=!1;d.rank===3&&($=!0,b=reshape$3(d,[1,d.shape[0],d.shape[1],d.shape[2]])),assert$2(b.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${b.rank}.`),assert$2(eitherStridesOrDilationsAreOne(o,g),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${g}'`),c!=null&&assert$2(isInt(a),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${c} but got pad ${a}.`);const _={x:b},_e={filterSize:s,strides:o,pad:a,dimRoundingMode:c},et=ENGINE.runKernel(MaxPool,_,_e);return $?reshape$3(et,[et.shape[1],et.shape[2],et.shape[3]]):et}const maxPool$2=op({maxPool_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3d_(i,s=[1,1,1],o,a,c,d="NDHWC",g){g==null?g=[1,1,1]:deprecationWarn("dilations is deprecated, this field will be gone in v3.0.0.");const b=convertToTensor(i,"x","maxPool3d");let $=b,_=!1;b.rank===4&&(_=!0,$=reshape$3(b,[1,b.shape[0],b.shape[1],b.shape[2],b.shape[3]])),assert$2($.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${$.rank}.`),assert$2(d==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${d}`),assert$2(eitherStridesOrDilationsAreOne(o,g),()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${o} and dilations '${g}'`),c!=null&&assert$2(isInt(a),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${c} but got pad ${a}.`);const _e={x:$},et={filterSize:s,strides:o,pad:a,dimRoundingMode:c,dataFormat:d,dilations:g},rt=ENGINE.runKernel(MaxPool3D,_e,et);return _?reshape$3(rt,[rt.shape[1],rt.shape[2],rt.shape[3],rt.shape[4]]):rt}const maxPool3d$1=op({maxPool3d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolWithArgmax_(i,s,o,a,c=!1){const g={x:convertToTensor(i,"x","maxPoolWithArgmax")},b={filterSize:s,strides:o,pad:a,includeBatchInIndex:c},$=ENGINE.runKernel(MaxPoolWithArgmax,g,b);return{result:$[0],indexes:$[1]}}const maxPoolWithArgmax=op({maxPoolWithArgmax_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maximum_(i,s){let o=convertToTensor(i,"a","maximum"),a=convertToTensor(s,"b","maximum");[o,a]=makeTypesMatch(o,a),o.dtype==="bool"&&(o=cast$3(o,"int32"),a=cast$3(a,"int32")),assertAndGetBroadcastShape(o.shape,a.shape);const c={a:o,b:a};return ENGINE.runKernel(Maximum$1,c)}const maximum$3=op({maximum_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mean_(i,s=null,o=!1){const c={x:convertToTensor(i,"x","mean")},d={axis:s,keepDims:o};return ENGINE.runKernel(Mean,c,d)}const mean$1=op({mean_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function min_(i,s=null,o=!1){const c={x:convertToTensor(i,"x","min")},d={axis:s,keepDims:o};return ENGINE.runKernel(Min,c,d)}const min$3=op({min_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function minimum_(i,s){let o=convertToTensor(i,"a","minimum"),a=convertToTensor(s,"b","minimum");[o,a]=makeTypesMatch(o,a),o.dtype==="bool"&&(o=cast$3(o,"int32"),a=cast$3(a,"int32")),assertAndGetBroadcastShape(o.shape,a.shape);const c={a:o,b:a};return ENGINE.runKernel(Minimum$1,c)}const minimum$3=op({minimum_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mirrorPad_(i,s,o){assert$2(o==="reflect"||o==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${o}.`);const a=convertToTensor(i,"x","mirrorPad");if(a.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");assert$2(s.length===a.rank,()=>`Padding doesn't match input. Must be ${a.rank}. Got ${s.length}.`);const c=o==="reflect"?1:0;for(let b=0;b<a.rank;b++)assert$2(s[b].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),assert$2(s[b][0]>=0&&s[b][0]<=a.shape[b]-c&&s[b][1]>=0&&s[b][1]<=a.shape[b]-c,()=>`Padding in dimension ${b} cannot be greater than or equal to ${a.shape[b]-c} or less than 0 for input of shape ${a.shape}`);const d={paddings:s,mode:o},g={x:a};return ENGINE.runKernel(MirrorPad,g,d)}const mirrorPad$1=op({mirrorPad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mod_(i,s){let o=convertToTensor(i,"a","mod"),a=convertToTensor(s,"b","mod");[o,a]=makeTypesMatch(o,a);const c={a:o,b:a};return ENGINE.runKernel(Mod,c)}const mod$2=op({mod_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function square_(i){const s=convertToTensor(i,"x","square"),o={};return ENGINE.runKernel("Square",{x:s},o)}const square$2=op({square_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function moments_(i,s=null,o=!1){i=convertToTensor(i,"x","moments");const a=parseAxisParam(s,i.shape),c=mean$1(i,a,o);let d=c.shape;o||(d=expandShapeToKeepDim(c.shape,a));const g=square$2(sub$2(cast$3(i,"float32"),reshape$3(c,d))),b=mean$1(g,a,o);return{mean:c,variance:b}}const moments=op({moments_});function multiRNNCell_(i,s,o,a){const c=convertToTensor(s,"data","multiRNNCell"),d=convertToTensorArray(o,"c","multiRNNCell"),g=convertToTensorArray(a,"h","multiRNNCell");let b=c;const $=[];for(let et=0;et<i.length;et++){const rt=i[et](b,d[et],g[et]);$.push(rt[0]),$.push(rt[1]),b=rt[1]}const _=[],_e=[];for(let et=0;et<$.length;et+=2)_.push($[et]),_e.push($[et+1]);return[_,_e]}const multiRNNCell=op({multiRNNCell_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function multinomial_(i,s,o,a=!1){const c=convertToTensor(i,"logits","multinomial"),d=c.size,g=c.rank;if(d<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${d}.`);if(g>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${g}`);o=o||Math.random();const $={logits:g===1?reshape$3(c,[1,-1]):c},_={numSamples:s,seed:o,normalized:a},_e=ENGINE.runKernel(Multinomial,$,_);return g===1?reshape$3(_e,[_e.size]):_e}const multinomial$2=op({multinomial_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function notEqual_(i,s){let o=convertToTensor(i,"a","notEqual"),a=convertToTensor(s,"b","notEqual");[o,a]=makeTypesMatch(o,a),assertAndGetBroadcastShape(o.shape,a.shape);const c={a:o,b:a};return ENGINE.runKernel(NotEqual,c)}const notEqual$2=op({notEqual_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zeros$2(i,s="float32"){if(s==="complex64"){const a=zeros$2(i,"float32"),c=zeros$2(i,"float32");return complex$2(a,c)}const o=makeZerosTypedArray(sizeFromShape(i),s);return ENGINE.makeTensor(o,i,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ones$1(i,s="float32"){if(s==="complex64"){const a=ones$1(i,"float32"),c=zeros$2(i,"float32");return complex$2(a,c)}const o=makeOnesTypedArray(sizeFromShape(i),s);return ENGINE.makeTensor(o,i,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function onesLike_(i){const o={x:convertToTensor(i,"x","onesLike")};return ENGINE.runKernel(OnesLike,o)}const onesLike$2=op({onesLike_});function outerProduct_(i,s){const o=convertToTensor(i,"v1","outerProduct"),a=convertToTensor(s,"v2","outerProduct");assert$2(o.rank===1&&a.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${o.rank} and ${a.rank}.`);const c=reshape$3(o,[-1,1]),d=reshape$3(a,[1,-1]);return matMul$1(c,d)}const outerProduct=op({outerProduct_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pad_(i,s,o=0){const a=convertToTensor(i,"x","pad");if(a.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const c={paddings:s,constantValue:o},d={x:a};return ENGINE.runKernel(PadV2,d,c)}const pad=op({pad_});function pad1d_(i,s,o=0){return assert$2(s.length===2,()=>"Invalid number of paddings. Must be length of 2."),pad(i,[s],o)}const pad1d=op({pad1d_});function pad2d_(i,s,o=0){return assert$2(s.length===2&&s[0].length===2&&s[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),pad(i,s,o)}const pad2d=op({pad2d_});function pad3d_(i,s,o=0){return assert$2(s.length===3&&s[0].length===2&&s[1].length===2&&s[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),pad(i,s,o)}const pad3d=op({pad3d_});function pad4d_(i,s,o=0){return assert$2(s.length===4&&s[0].length===2&&s[1].length===2&&s[2].length===2&&s[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),pad(i,s,o)}const pad4d=op({pad4d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function spaceToBatchND_(i,s,o){const a=convertToTensor(i,"x","spaceToBatchND");assert$2(a.rank>=1+s.length,()=>`input rank ${a.rank} should be > than [blockShape] ${s.length}`),assert$2(o.length===s.length,()=>`paddings.shape[0] ${o.length} must be equal to [blockShape] ${s.length}`),assert$2(a.shape.reduce((g,b,$)=>$>0&&$<=s.length?g&&(b+o[$-1][0]+o[$-1][1])%s[$-1]===0:g,!0),()=>`input spatial dimensions ${a.shape.slice(1)} with paddings ${o.toString()} must be divisible by blockShapes ${s.toString()}`);const c={x:a},d={blockShape:s,paddings:o};return ENGINE.runKernel(SpaceToBatchND,c,d)}const spaceToBatchND$2=op({spaceToBatchND_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pool_(i,s,o,a,c,d){c==null&&(c=[1,1]),d==null&&(d=1),a===0&&(a="valid");const g=convertToTensor(i,"x","maxPool");let b=g,$=!1;g.rank===3&&($=!0,b=reshape$3(g,[1,g.shape[0],g.shape[1],g.shape[2]])),assert$2(eitherStridesOrDilationsAreOne(d,c),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${d} and dilations '${c}'`);const _=computePool2DInfo(b.shape,s,d,c,a),_e=[_.dilationHeight,_.dilationWidth];let et;a==="same"?et=withSpaceToBatchBasePaddings([_.filterHeight,_.filterWidth],_e):et=[[0,0],[0,0]];const rt=_e[0]===1&&_e[1]===1,[tt,j]=requiredSpaceToBatchPaddings([_.inHeight,_.inWidth],_e,et),nt=rt?a:"valid",st=rt?b:spaceToBatchND$2(b,_e,tt),ut=(o==="avg"?()=>avgPool$2(st,s,d,nt):()=>maxPool$2(st,s,d,nt))(),ht=rt?ut:batchToSpaceND$2(ut,_e,j);return $?reshape$3(ht,[ht.shape[1],ht.shape[2],ht.shape[3]]):ht}function requiredSpaceToBatchPaddings(i,s,o){const a=o.map(_e=>_e[0]),c=o.map(_e=>_e[1]),d=i.concat(a,c),g=s.map((_e,et)=>(_e-d[et]%_e)%_e),b=c.map((_e,et)=>_e+g[et]),$=s.map((_e,et)=>[a[et],b[et]]),_=s.map((_e,et)=>[0,g[et]]);return[$,_]}function withSpaceToBatchBasePaddings(i,s){const a=i.map((g,b)=>g+(g-1)*(s[b]-1)).map(g=>g-1),c=a.map(g=>Math.floor(g/2)),d=a.map((g,b)=>g-c[b]);return a.map((g,b)=>[c[b],d[b]])}const pool$1=op({pool_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pow_(i,s){let o=convertToTensor(i,"base","pow"),a=convertToTensor(s,"exp","pow");[o,a]=makeTypesMatch(o,a);const c={a:o,b:a};return ENGINE.runKernel(Pow$1,c)}const pow$2=op({pow_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function prelu_(i,s){const o=convertToTensor(i,"x","prelu"),a=convertToTensor(s,"alpha","prelu"),c={x:o,alpha:a};return ENGINE.runKernel(Prelu,c)}const prelu$3=op({prelu_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function prod_(i,s=null,o=!1){let a=convertToTensor(i,"x","prod");a.dtype==="bool"&&(a=cast$3(a,"int32"));const c={x:a},d={axis:s,keepDims:o};return ENGINE.runKernel(Prod,c,d)}const prod$2=op({prod_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rand_(i,s,o){const a=sizeFromShape(i);let c=null;if(o==null||o==="float32")c=new Float32Array(a);else if(o==="int32")c=new Int32Array(a);else if(o==="bool")c=new Uint8Array(a);else throw new Error(`Unknown data type ${o}`);for(let d=0;d<a;d++)c[d]=s();return ENGINE.makeTensor(c,i,o)}const rand=op({rand_});var alea$5={exports:{}};alea$5.exports;(function(i){(function(s,o,a){function c($){var _=this,_e=b();_.next=function(){var et=2091639*_.s0+_.c*23283064365386963e-26;return _.s0=_.s1,_.s1=_.s2,_.s2=et-(_.c=et|0)},_.c=1,_.s0=_e(" "),_.s1=_e(" "),_.s2=_e(" "),_.s0-=_e($),_.s0<0&&(_.s0+=1),_.s1-=_e($),_.s1<0&&(_.s1+=1),_.s2-=_e($),_.s2<0&&(_.s2+=1),_e=null}function d($,_){return _.c=$.c,_.s0=$.s0,_.s1=$.s1,_.s2=$.s2,_}function g($,_){var _e=new c($),et=_&&_.state,rt=_e.next;return rt.int32=function(){return _e.next()*4294967296|0},rt.double=function(){return rt()+(rt()*2097152|0)*11102230246251565e-32},rt.quick=rt,et&&(typeof et=="object"&&d(et,_e),rt.state=function(){return d(_e,{})}),rt}function b(){var $=4022871197,_=function(_e){_e=_e.toString();for(var et=0;et<_e.length;et++){$+=_e.charCodeAt(et);var rt=.02519603282416938*$;$=rt>>>0,rt-=$,rt*=$,$=rt>>>0,rt-=$,$+=rt*4294967296}return($>>>0)*23283064365386963e-26};return _}o&&o.exports?o.exports=g:a&&a.amd?a(function(){return g}):this.alea=g})(commonjsGlobal,i,!1)})(alea$5);var aleaExports$2=alea$5.exports,xor128$5={exports:{}};xor128$5.exports;(function(i){(function(s,o,a){function c(b){var $=this,_="";$.x=0,$.y=0,$.z=0,$.w=0,$.next=function(){var et=$.x^$.x<<11;return $.x=$.y,$.y=$.z,$.z=$.w,$.w^=$.w>>>19^et^et>>>8},b===(b|0)?$.x=b:_+=b;for(var _e=0;_e<_.length+64;_e++)$.x^=_.charCodeAt(_e)|0,$.next()}function d(b,$){return $.x=b.x,$.y=b.y,$.z=b.z,$.w=b.w,$}function g(b,$){var _=new c(b),_e=$&&$.state,et=function(){return(_.next()>>>0)/4294967296};return et.double=function(){do var rt=_.next()>>>11,tt=(_.next()>>>0)/4294967296,j=(rt+tt)/(1<<21);while(j===0);return j},et.int32=_.next,et.quick=et,_e&&(typeof _e=="object"&&d(_e,_),et.state=function(){return d(_,{})}),et}o&&o.exports?o.exports=g:a&&a.amd?a(function(){return g}):this.xor128=g})(commonjsGlobal,i,!1)})(xor128$5);var xor128Exports$2=xor128$5.exports,xorwow$5={exports:{}};xorwow$5.exports;(function(i){(function(s,o,a){function c(b){var $=this,_="";$.next=function(){var et=$.x^$.x>>>2;return $.x=$.y,$.y=$.z,$.z=$.w,$.w=$.v,($.d=$.d+362437|0)+($.v=$.v^$.v<<4^(et^et<<1))|0},$.x=0,$.y=0,$.z=0,$.w=0,$.v=0,b===(b|0)?$.x=b:_+=b;for(var _e=0;_e<_.length+64;_e++)$.x^=_.charCodeAt(_e)|0,_e==_.length&&($.d=$.x<<10^$.x>>>4),$.next()}function d(b,$){return $.x=b.x,$.y=b.y,$.z=b.z,$.w=b.w,$.v=b.v,$.d=b.d,$}function g(b,$){var _=new c(b),_e=$&&$.state,et=function(){return(_.next()>>>0)/4294967296};return et.double=function(){do var rt=_.next()>>>11,tt=(_.next()>>>0)/4294967296,j=(rt+tt)/(1<<21);while(j===0);return j},et.int32=_.next,et.quick=et,_e&&(typeof _e=="object"&&d(_e,_),et.state=function(){return d(_,{})}),et}o&&o.exports?o.exports=g:a&&a.amd?a(function(){return g}):this.xorwow=g})(commonjsGlobal,i,!1)})(xorwow$5);var xorwowExports$2=xorwow$5.exports,xorshift7$5={exports:{}};xorshift7$5.exports;(function(i){(function(s,o,a){function c(b){var $=this;$.next=function(){var _e=$.x,et=$.i,rt,tt;return rt=_e[et],rt^=rt>>>7,tt=rt^rt<<24,rt=_e[et+1&7],tt^=rt^rt>>>10,rt=_e[et+3&7],tt^=rt^rt>>>3,rt=_e[et+4&7],tt^=rt^rt<<7,rt=_e[et+7&7],rt=rt^rt<<13,tt^=rt^rt<<9,_e[et]=tt,$.i=et+1&7,tt};function _(_e,et){var rt,tt=[];if(et===(et|0))tt[0]=et;else for(et=""+et,rt=0;rt<et.length;++rt)tt[rt&7]=tt[rt&7]<<15^et.charCodeAt(rt)+tt[rt+1&7]<<13;for(;tt.length<8;)tt.push(0);for(rt=0;rt<8&&tt[rt]===0;++rt);for(rt==8?tt[7]=-1:tt[rt],_e.x=tt,_e.i=0,rt=256;rt>0;--rt)_e.next()}_($,b)}function d(b,$){return $.x=b.x.slice(),$.i=b.i,$}function g(b,$){b==null&&(b=+new Date);var _=new c(b),_e=$&&$.state,et=function(){return(_.next()>>>0)/4294967296};return et.double=function(){do var rt=_.next()>>>11,tt=(_.next()>>>0)/4294967296,j=(rt+tt)/(1<<21);while(j===0);return j},et.int32=_.next,et.quick=et,_e&&(_e.x&&d(_e,_),et.state=function(){return d(_,{})}),et}o&&o.exports?o.exports=g:a&&a.amd?a(function(){return g}):this.xorshift7=g})(commonjsGlobal,i,!1)})(xorshift7$5);var xorshift7Exports$2=xorshift7$5.exports,xor4096$5={exports:{}};xor4096$5.exports;(function(i){(function(s,o,a){function c(b){var $=this;$.next=function(){var _e=$.w,et=$.X,rt=$.i,tt,j;return $.w=_e=_e+1640531527|0,j=et[rt+34&127],tt=et[rt=rt+1&127],j^=j<<13,tt^=tt<<17,j^=j>>>15,tt^=tt>>>12,j=et[rt]=j^tt,$.i=rt,j+(_e^_e>>>16)|0};function _(_e,et){var rt,tt,j,nt,st,ot=[],ut=128;for(et===(et|0)?(tt=et,et=null):(et=et+"\0",tt=0,ut=Math.max(ut,et.length)),j=0,nt=-32;nt<ut;++nt)et&&(tt^=et.charCodeAt((nt+32)%et.length)),nt===0&&(st=tt),tt^=tt<<10,tt^=tt>>>15,tt^=tt<<4,tt^=tt>>>13,nt>=0&&(st=st+1640531527|0,rt=ot[nt&127]^=tt+st,j=rt==0?j+1:0);for(j>=128&&(ot[(et&&et.length||0)&127]=-1),j=127,nt=4*128;nt>0;--nt)tt=ot[j+34&127],rt=ot[j=j+1&127],tt^=tt<<13,rt^=rt<<17,tt^=tt>>>15,rt^=rt>>>12,ot[j]=tt^rt;_e.w=st,_e.X=ot,_e.i=j}_($,b)}function d(b,$){return $.i=b.i,$.w=b.w,$.X=b.X.slice(),$}function g(b,$){b==null&&(b=+new Date);var _=new c(b),_e=$&&$.state,et=function(){return(_.next()>>>0)/4294967296};return et.double=function(){do var rt=_.next()>>>11,tt=(_.next()>>>0)/4294967296,j=(rt+tt)/(1<<21);while(j===0);return j},et.int32=_.next,et.quick=et,_e&&(_e.X&&d(_e,_),et.state=function(){return d(_,{})}),et}o&&o.exports?o.exports=g:a&&a.amd?a(function(){return g}):this.xor4096=g})(commonjsGlobal,i,!1)})(xor4096$5);var xor4096Exports$2=xor4096$5.exports,tychei$5={exports:{}};tychei$5.exports;(function(i){(function(s,o,a){function c(b){var $=this,_="";$.next=function(){var et=$.b,rt=$.c,tt=$.d,j=$.a;return et=et<<25^et>>>7^rt,rt=rt-tt|0,tt=tt<<24^tt>>>8^j,j=j-et|0,$.b=et=et<<20^et>>>12^rt,$.c=rt=rt-tt|0,$.d=tt<<16^rt>>>16^j,$.a=j-et|0},$.a=0,$.b=0,$.c=-1640531527,$.d=1367130551,b===Math.floor(b)?($.a=b/4294967296|0,$.b=b|0):_+=b;for(var _e=0;_e<_.length+20;_e++)$.b^=_.charCodeAt(_e)|0,$.next()}function d(b,$){return $.a=b.a,$.b=b.b,$.c=b.c,$.d=b.d,$}function g(b,$){var _=new c(b),_e=$&&$.state,et=function(){return(_.next()>>>0)/4294967296};return et.double=function(){do var rt=_.next()>>>11,tt=(_.next()>>>0)/4294967296,j=(rt+tt)/(1<<21);while(j===0);return j},et.int32=_.next,et.quick=et,_e&&(typeof _e=="object"&&d(_e,_),et.state=function(){return d(_,{})}),et}o&&o.exports?o.exports=g:a&&a.amd?a(function(){return g}):this.tychei=g})(commonjsGlobal,i,!1)})(tychei$5);var tycheiExports$2=tychei$5.exports,seedrandom$5={exports:{}};const __viteBrowserExternal={},__viteBrowserExternal$1=Object.freeze(Object.defineProperty({__proto__:null,default:__viteBrowserExternal},Symbol.toStringTag,{value:"Module"})),require$$0$1=getAugmentedNamespace(__viteBrowserExternal$1);(function(i){(function(s,o){var a=this,c=256,d=6,g=52,b="random",$=o.pow(c,d),_=o.pow(2,g),_e=_*2,et=c-1,rt;function tt(pt,it,yt){var ft=[];it=it==!0?{entropy:!0}:it||{};var bt=ot(st(it.entropy?[pt,ht(s)]:pt??ut(),3),ft),Tt=new j(ft),Ct=function(){for(var _t=Tt.g(d),Ot=$,kt=0;_t<_;)_t=(_t+kt)*c,Ot*=c,kt=Tt.g(1);for(;_t>=_e;)_t/=2,Ot/=2,kt>>>=1;return(_t+kt)/Ot};return Ct.int32=function(){return Tt.g(4)|0},Ct.quick=function(){return Tt.g(4)/4294967296},Ct.double=Ct,ot(ht(Tt.S),s),(it.pass||yt||function(_t,Ot,kt,Rt){return Rt&&(Rt.S&&nt(Rt,Tt),_t.state=function(){return nt(Tt,{})}),kt?(o[b]=_t,Ot):_t})(Ct,bt,"global"in it?it.global:this==o,it.state)}o["seed"+b]=tt;function j(pt){var it,yt=pt.length,ft=this,bt=0,Tt=ft.i=ft.j=0,Ct=ft.S=[];for(yt||(pt=[yt++]);bt<c;)Ct[bt]=bt++;for(bt=0;bt<c;bt++)Ct[bt]=Ct[Tt=et&Tt+pt[bt%yt]+(it=Ct[bt])],Ct[Tt]=it;(ft.g=function(_t){for(var Ot,kt=0,Rt=ft.i,jt=ft.j,Gt=ft.S;_t--;)Ot=Gt[Rt=et&Rt+1],kt=kt*c+Gt[et&(Gt[Rt]=Gt[jt=et&jt+Ot])+(Gt[jt]=Ot)];return ft.i=Rt,ft.j=jt,kt})(c)}function nt(pt,it){return it.i=pt.i,it.j=pt.j,it.S=pt.S.slice(),it}function st(pt,it){var yt=[],ft=typeof pt,bt;if(it&&ft=="object")for(bt in pt)try{yt.push(st(pt[bt],it-1))}catch{}return yt.length?yt:ft=="string"?pt:pt+"\0"}function ot(pt,it){for(var yt=pt+"",ft,bt=0;bt<yt.length;)it[et&bt]=et&(ft^=it[et&bt]*19)+yt.charCodeAt(bt++);return ht(it)}function ut(){try{var pt;return rt&&(pt=rt.randomBytes)?pt=pt(c):(pt=new Uint8Array(c),(a.crypto||a.msCrypto).getRandomValues(pt)),ht(pt)}catch{var it=a.navigator,yt=it&&it.plugins;return[+new Date,a,yt,a.screen,ht(s)]}}function ht(pt){return String.fromCharCode.apply(0,pt)}if(ot(o.random(),s),i.exports){i.exports=tt;try{rt=require$$0$1}catch{}}})([],Math)})(seedrandom$5);var seedrandomExports$2=seedrandom$5.exports,alea$4=aleaExports$2,xor128$4=xor128Exports$2,xorwow$4=xorwowExports$2,xorshift7$4=xorshift7Exports$2,xor4096$4=xor4096Exports$2,tychei$4=tycheiExports$2,sr$2=seedrandomExports$2;sr$2.alea=alea$4;sr$2.xor128=xor128$4;sr$2.xorwow=xorwow$4;sr$2.xorshift7=xorshift7$4;sr$2.xor4096=xor4096$4;sr$2.tychei=tychei$4;var seedrandom$4=sr$2;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MPRandGauss{constructor(s,o,a,c,d){this.mean=s,this.stdDev=o,this.dtype=a,this.nextVal=NaN,this.truncated=c,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const g=d||Math.random();this.random=seedrandom$4.alea(g.toString())}nextValue(){if(!isNaN(this.nextVal)){const c=this.nextVal;return this.nextVal=NaN,c}let s,o,a=!1;for(;!a;){let c,d,g;do c=2*this.random()-1,d=2*this.random()-1,g=c*c+d*d;while(g>=1||g===0);const b=Math.sqrt(-2*Math.log(g)/g);s=this.mean+this.stdDev*c*b,o=this.mean+this.stdDev*d*b,(!this.truncated||this.isValidTruncated(s))&&(a=!0)}return(!this.truncated||this.isValidTruncated(o))&&(this.nextVal=this.convertValue(o)),this.convertValue(s)}convertValue(s){return this.dtype==null||this.dtype==="float32"?s:Math.round(s)}isValidTruncated(s){return s<=this.upper&&s>=this.lower}}class RandGamma{constructor(s,o,a,c){this.alpha=s,this.beta=1/o,this.dtype=a;const d=c||Math.random();this.randu=seedrandom$4.alea(d.toString()),this.randn=new MPRandGauss(0,1,a,!1,this.randu()),s<1?this.d=s+2/3:this.d=s-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let s,o,a,c,d,g;for(;;){do c=this.randn.nextValue(),g=1+this.c*c;while(g<=0);if(g*=g*g,s=c*c,o=1-.331*s*s,a=.5*s+this.d*(1-g+Math.log(g)),d=this.randu(),d<o||Math.log(d)<a)break}return g=1/this.beta*this.d*g,this.alpha<1&&(g*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(g)}convertValue(s){return this.dtype==="float32"?s:Math.round(s)}}class UniformRandom{constructor(s=0,o=1,a,c){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=s,this.range=o-s,this.dtype=a,c==null&&(c=Math.random()),typeof c=="number"&&(c=c.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${s} - ${o} <= 1 and dtype is not float`);this.random=seedrandom$4.alea(c)}convertValue(s){return this.canReturnFloat()?s:Math.round(s)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function randomGamma_(i,s,o=1,a="float32",c){if(o==null&&(o=1),a==null&&(a="float32"),a!=="float32"&&a!=="int32")throw new Error(`Unsupported data type ${a}`);const d=new RandGamma(s,o,a,c),g=buffer(i,a);for(let b=0;b<g.values.length;b++)g.values[b]=d.nextValue();return g.toTensor()}const randomGamma=op({randomGamma_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function randomNormal_(i,s=0,o=1,a,c){if(a!=null&&a==="bool")throw new Error(`Unsupported data type ${a}`);const d=new MPRandGauss(s,o,a,!1,c),g=buffer(i,a);for(let b=0;b<g.values.length;b++)g.values[b]=d.nextValue();return g.toTensor()}const randomNormal$2=op({randomNormal_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function randomUniform_(i,s=0,o=1,a="float32",c){const d=buffer(i,a),g=new UniformRandom(s,o,null,c);for(let b=0;b<d.values.length;b++)d.values[b]=g.nextValue();return d.toTensor()}const randomUniform$1=op({randomUniform_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function range$4(i,s,o=1,a="float32"){if(o===0)throw new Error("Cannot have a step of zero");const c={start:i,stop:s,step:o,dtype:a};return ENGINE.runKernel(Range,{},c)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function real_(i){const o={input:convertToTensor(i,"input","real")};return ENGINE.runKernel(Real,o)}const real$2=op({real_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reciprocal_(i){const o={x:convertToTensor(i,"x","reciprocal")};return ENGINE.runKernel(Reciprocal,o)}const reciprocal$2=op({reciprocal_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function relu_(i){const o={x:convertToTensor(i,"x","relu")};return ENGINE.runKernel(Relu$1,o)}const relu$2=op({relu_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function relu6_(i){const o={x:convertToTensor(i,"x","relu6")};return ENGINE.runKernel(Relu6$1,o)}const relu6$2=op({relu6_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reverse_(i,s){const a={x:convertToTensor(i,"x","reverse")},c={dims:s};return ENGINE.runKernel(Reverse,a,c)}const reverse$2=op({reverse_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reverse1d_(i){const s=convertToTensor(i,"x","reverse");return assert$2(s.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${s.rank}.`),reverse$2(s,0)}const reverse1d=op({reverse1d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reverse2d_(i,s){const o=convertToTensor(i,"x","reverse");return assert$2(o.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${o.rank}.`),reverse$2(o,s)}const reverse2d=op({reverse2d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reverse3d_(i,s){const o=convertToTensor(i,"x","reverse");return assert$2(o.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${o.rank}.`),reverse$2(o,s)}const reverse3d=op({reverse3d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reverse4d_(i,s){const o=convertToTensor(i,"x","reverse");return assert$2(o.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${o.rank}.`),reverse$2(o,s)}const reverse4d=op({reverse4d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function round_(i){const o={x:convertToTensor(i,"x","round")};return ENGINE.runKernel(Round,o)}const round$2=op({round_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rsqrt_(i){const o={x:convertToTensor(i,"x","rsqrt")};return ENGINE.runKernel(Rsqrt,o)}const rsqrt$2=op({rsqrt_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function scalar(i,s){if((isTypedArray(i)&&s!=="string"||Array.isArray(i))&&s!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(s==="string"&&isTypedArray(i)&&!(i instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return makeTensor(i,[],[],s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function selu_(i){const o={x:convertToTensor(i,"x","selu")};return ENGINE.runKernel(Selu$1,o)}const selu$2=op({selu_});function separableConv2d_(i,s,o,a,c,d=[1,1],g="NHWC"){const b=convertToTensor(i,"x","separableConv2d"),$=convertToTensor(s,"depthwiseFilter","separableConv2d"),_=convertToTensor(o,"pointwiseFilter","separableConv2d");let _e=b,et=!1;if(b.rank===3&&(et=!0,_e=reshape$3(b,[1,b.shape[0],b.shape[1],b.shape[2]])),g==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");assert$2(_e.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${_e.rank}.`),assert$2($.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${$.rank}.`),assert$2(_.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${$.rank}.`),assert$2(_.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${_.shape[0]}.`),assert$2(_.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${_.shape[1]}.`);const rt=$.shape[2],tt=$.shape[3];assert$2(_.shape[2]===rt*tt,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${rt*tt}, but got ${_.shape[2]}.`);const j=depthwiseConv2d$3(_e,$,a,c,g,d),st=conv2d$3(j,_,1,"valid",g);return et?reshape$3(st,[st.shape[1],st.shape[2],st.shape[3]]):st}const separableConv2d$1=op({separableConv2d_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function setdiff1dAsync_(i,s){const o=convertToTensor(i,"x","setdiff1d"),a=convertToTensor(s,"y","setdiff1d");assert$2(o.dtype===a.dtype,()=>`x and y should have the same dtype, but got x (${o.dtype}) and y (${a.dtype}).`),assert$2(o.rank===1,()=>`x should be 1D tensor, but got x (${o.shape}).`),assert$2(a.rank===1,()=>`y should be 1D tensor, but got y (${a.shape}).`);const c=await o.data(),d=await a.data(),g=new Set(d);let b=0;for(let _e=0;_e<c.length;_e++)g.has(c[_e])||b++;const $=new TensorBuffer([b],o.dtype),_=new TensorBuffer([b],"int32");for(let _e=0,et=0;_e<c.length;_e++)g.has(c[_e])||($.values[et]=c[_e],_.values[et]=_e,et++);return[$.toTensor(),_.toTensor()]}const setdiff1dAsync=setdiff1dAsync_;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sign_(i){const o={x:convertToTensor(i,"x","sign")};return ENGINE.runKernel(Sign,o)}const sign$2=op({sign_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sin_(i){const o={x:convertToTensor(i,"x","sin")};return ENGINE.runKernel(Sin,o)}const sin$2=op({sin_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sinh_(i){const o={x:convertToTensor(i,"x","sinh")};return ENGINE.runKernel(Sinh,o)}const sinh$2=op({sinh_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice1d_(i,s,o){const a=convertToTensor(i,"x","slice1d");return assert$2(a.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${a.rank} tensor`),slice$2(a,[s],[o])}const slice1d=op({slice1d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice2d_(i,s,o){const a=convertToTensor(i,"x","slice2d");return assert$2(a.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${a.rank} tensor`),slice$2(a,s,o)}const slice2d=op({slice2d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice3d_(i,s,o){const a=convertToTensor(i,"x","slice3d");return assert$2(a.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${a.rank} tensor`),slice$2(a,s,o)}const slice3d=op({slice3d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice4d_(i,s,o){const a=convertToTensor(i,"x","slice4d");return assert$2(a.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${a.rank} tensor`),slice$2(a,s,o)}const slice4d=op({slice4d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function softmax_(i,s=-1){const o=convertToTensor(i,"logits","softmax","float32");if(s===-1&&(s=o.rank-1),s!==o.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o.rank} and dim was ${s}`);const a={logits:o},c={dim:s};return ENGINE.runKernel(Softmax$2,a,c)}const softmax$3=op({softmax_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fft_(i){assert$2(i.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${i.dtype}.`);const s={input:i};return ENGINE.runKernel(FFT$1,s)}const fft$2=op({fft_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ifft_(i){assert$2(i.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${i.dtype}.`);const s={input:i};return ENGINE.runKernel(IFFT,s)}const ifft$2=op({ifft_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function irfft_(i){const s=i.shape[i.shape.length-1],o=i.size/s;let a;if(s<=2){const c=reshape$3(i,[o,s]);a=ifft$2(c)}else{const c=[o,2*(s-1)],d=reshape$3(real$2(i),[o,s]),g=reshape$3(imag$2(i),[o,s]),b=reverse$2(slice$2(d,[0,1],[o,s-2]),1),$=mul(reverse$2(slice$2(g,[0,1],[o,s-2]),1),scalar(-1)),_=concat$2([d,b],1),_e=concat$2([g,$],1),et=reshape$3(complex$2(_,_e),[c[0],c[1]]);a=ifft$2(et)}if(a=real$2(a),i.rank===3&&i.shape[0]!==0){const c=a,d=i.shape[0];a=reshape$3(a,[d,a.shape[0]/d,a.shape[1]]),c.dispose()}return a}const irfft=op({irfft_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function split_(i,s,o=0){const c={x:convertToTensor(i,"x","split")},d={numOrSizeSplits:s,axis:o};return ENGINE.runKernel(SplitV,c,d)}const split$1=op({split_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rfft_(i,s){assert$2(i.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${i.dtype}`);let o=i.shape[i.shape.length-1];const a=i.size/o;let c;if(s!=null&&s<o){const j=i.shape.map(st=>0),nt=i.shape.map(st=>st);nt[i.shape.length-1]=s,c=slice$2(i,j,nt),o=s}else if(s!=null&&s>o){const j=i.shape.map(nt=>nt);j[i.shape.length-1]=s-o,c=concat$2([i,zeros$2(j)],i.shape.length-1),o=s}else c=i;const d=zerosLike$2(c),g=reshape$3(complex$2(c,d),[a,o]),b=fft$2(g),$=Math.floor(o/2)+1,_=real$2(b),_e=imag$2(b),et=split$1(_,[$,o-$],_.shape.length-1),rt=split$1(_e,[$,o-$],_e.shape.length-1),tt=c.shape.slice();return tt[c.shape.length-1]=$,reshape$3(complex$2(et[0],rt[0]),tt)}const rfft=op({rfft_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sqrt_(i){const o={x:convertToTensor(i,"x","sqrt")};return ENGINE.runKernel(Sqrt,o)}const sqrt$2=op({sqrt_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function squaredDifference_(i,s){let o=convertToTensor(i,"a","squaredDifference"),a=convertToTensor(s,"b","squaredDifference");[o,a]=makeTypesMatch(o,a),assertAndGetBroadcastShape(o.shape,a.shape);const c={a:o,b:a},d={};return ENGINE.runKernel(SquaredDifference,c,d)}const squaredDifference$2=op({squaredDifference_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function squeeze_(i,s){const o=convertToTensor(i,"x","squeeze");return reshape$3(o,squeezeShape(o.shape,s).newShape)}const squeeze=op({squeeze_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stack_(i,s=0){const o=convertToTensorArray(i,"tensors","stack","string_or_numeric");assert$2(o.length>=1,()=>"Pass at least one tensor to tf.stack"),o.length>0&&assert$2(s<=o[0].rank,()=>"Axis must be <= rank of the tensor");const a=o,c={axis:s};return ENGINE.runKernel(Pack,a,c)}const stack=op({stack_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function step_(i,s=0){const a={x:convertToTensor(i,"x","step")},c={alpha:s};return ENGINE.runKernel(Step,a,c)}const step$2=op({step_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stridedSlice_(i,s,o,a,c=0,d=0,g=0,b=0,$=0){const _e={x:convertToTensor(i,"x","stridedSlice")},et={begin:s,end:o,strides:a,beginMask:c,endMask:d,ellipsisMask:g,newAxisMask:b,shrinkAxisMask:$};return ENGINE.runKernel(StridedSlice,_e,et)}const stridedSlice$2=op({stridedSlice_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tan_(i){const o={x:convertToTensor(i,"x","tan")};return ENGINE.runKernel(Tan,o)}const tan$2=op({tan_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensor1d(i,s){assertNonNull(i);const o=inferShape(i,s);if(o.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return makeTensor(i,null,o,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensor2d(i,s,o){if(assertNonNull(i),s!=null&&s.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const a=inferShape(i,o);if(a.length!==2&&a.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(a.length===1&&s==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return makeTensor(i,s,a,o)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensor4d(i,s,o){if(assertNonNull(i),s!=null&&s.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const a=inferShape(i,o);if(a.length!==4&&a.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(a.length===1&&s==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return makeTensor(i,s,a,o)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensor5d(i,s,o){if(assertNonNull(i),s!=null&&s.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const a=inferShape(i,o);if(a.length!==5&&a.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(a.length===1&&s==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return makeTensor(i,s,a,o)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensor6d(i,s,o){if(assertNonNull(i),s!=null&&s.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const a=inferShape(i,o);if(a.length!==6&&a.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(a.length===1&&s==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return s=s||a,makeTensor(i,s,a,o)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function topk_(i,s=1,o=!0){const a=convertToTensor(i,"x","topk");if(a.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const c=a.shape[a.shape.length-1];if(s>c)throw new Error(`'k' passed to topk() must be <= the last dimension (${c}) but got ${s}`);const d={x:a},g={k:s,sorted:o},[b,$]=ENGINE.runKernel(TopK,d,g);return{values:b,indices:$}}const topk=op({topk_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function truncatedNormal_(i,s=0,o=1,a,c){if(a!=null&&a==="bool")throw new Error("Unsupported data type $ { dtype }");const d=new MPRandGauss(s,o,a,!0,c),g=buffer(i,a);for(let b=0;b<g.values.length;b++)g.values[b]=d.nextValue();return g.toTensor()}const truncatedNormal$1=op({truncatedNormal_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unique_(i,s=0){const o=convertToTensor(i,"x","unique","string_or_numeric");assert$2(o.rank>0,()=>"The input tensor must be at least 1D");const a={x:o},c={axis:s},[d,g]=ENGINE.runKernel(Unique,a,c);return{values:d,indices:g}}const unique$3=op({unique_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unsortedSegmentSum_(i,s,o){const a=convertToTensor(i,"x","unsortedSegmentSum"),c=convertToTensor(s,"segmentIds","unsortedSegmentSum","int32");assert$2(isInt(o),()=>"numSegments must be of dtype int");const d={x:a,segmentIds:c},g={numSegments:o};return ENGINE.runKernel(UnsortedSegmentSum,d,g)}const unsortedSegmentSum$2=op({unsortedSegmentSum_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unstack_(i,s=0){const o=convertToTensor(i,"x","unstack","string_or_numeric");assert$2(s>=-o.shape.length&&s<o.shape.length,()=>`Axis = ${s} is not in [-${o.shape.length}, ${o.shape.length})`);const a={value:o},c={axis:s};return ENGINE.runKernel(Unpack,a,c)}const unstack=op({unstack_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function variable(i,s=!0,o,a){return ENGINE.makeVariable(i,s,o,a)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function whereImpl$2(i,s){const o=[];for(let d=0;d<s.length;d++)s[d]&&o.push(d);const a=buffer(i,"int32"),c=buffer([o.length,i.length],"int32");for(let d=0;d<o.length;d++){const g=a.indexToLoc(o[d]),b=d*i.length;c.values.set(g,b)}return c.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function whereAsync_(i){const s=convertToTensor(i,"condition","whereAsync","bool"),o=await s.data(),a=whereImpl$2(s.shape,o);return i!==s&&s.dispose(),a}const whereAsync=whereAsync_;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function booleanMaskAsync_(i,s,o){const a=convertToTensor(i,"tensor","boolMask"),c=convertToTensor(s,"mask","boolMask","bool"),d=o??0,g=c.rank,b=a.shape;assert$2(g>0,()=>"mask cannot be scalar"),assertShapesMatch(b.slice(d,d+g),c.shape,"mask's shape must match the first K dimensions of tensor's shape,");let $=1;for(let nt=d;nt<d+g;nt++)$*=b[nt];const _=b.slice(0,d).concat([$],b.slice(d+g)),_e=reshape$3(a,_),et=reshape$3(c,[-1]),rt=await whereAsync(et),tt=squeeze(rt,[1]),j=gather$1(_e,tt,d);return i!==a&&a.dispose(),s!==c&&c.dispose(),tt.dispose(),_e.dispose(),et.dispose(),rt.dispose(),j}const booleanMaskAsync=booleanMaskAsync_;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function notEqualStrict_(i,s){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const o=convertToTensor(i,"a","notEqualStrict"),a=convertToTensor(s,"b","notEqualStrict");return assertShapesMatch(o.shape,a.shape,"Error in notEqualStrict: "),notEqual$2(o,a)}function lessStrict_(i,s){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const o=convertToTensor(i,"a","lessStrict"),a=convertToTensor(s,"b","lessStrict");return assertShapesMatch(o.shape,a.shape,"Error in lessStrict: "),less$3(o,a)}function equalStrict_(i,s){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const o=convertToTensor(i,"a","equalStrict"),a=convertToTensor(s,"b","equalStrict");return assertShapesMatch(o.shape,a.shape,"Error in equalStrict: "),equal$2(o,a)}function lessEqualStrict_(i,s){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const o=convertToTensor(i,"a","lessEqualStrict"),a=convertToTensor(s,"b","lessEqualStrict");return assertShapesMatch(o.shape,a.shape,"Error in lessEqualStrict: "),lessEqual$2(o,a)}function greaterStrict_(i,s){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const o=convertToTensor(i,"a","greaterStrict"),a=convertToTensor(s,"b","greaterStrict");return assertShapesMatch(o.shape,a.shape,"Error in greaterStrict: "),greater$3(o,a)}function greaterEqualStrict_(i,s){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const o=convertToTensor(i,"a","greaterEqualStrict"),a=convertToTensor(s,"b","greaterEqualStrict");return assertShapesMatch(o.shape,a.shape,"Error in greaterEqualStrict: "),greaterEqual$2(o,a)}const equalStrict=op({equalStrict_}),greaterEqualStrict=op({greaterEqualStrict_}),greaterStrict=op({greaterStrict_}),lessEqualStrict=op({lessEqualStrict_}),lessStrict=op({lessStrict_}),notEqualStrict=op({notEqualStrict_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function addStrict_(i,s){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const o=convertToTensor(i,"a","addStrict"),a=convertToTensor(s,"b","addStrict");return assertShapesMatch(o.shape,a.shape,"Error in addStrict: "),add$2(o,a)}function subStrict_(i,s){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const o=convertToTensor(i,"a","subStrict"),a=convertToTensor(s,"b","subStrict");return assertShapesMatch(o.shape,a.shape,"Error in subStrict: "),sub$2(o,a)}function powStrict_(i,s){return deprecationWarn("strict variants of ops have been deprecated and will be removed in future"),assertShapesMatch(i.shape,s.shape,"Error in powStrict: "),pow$2(i,s)}function mulStrict_(i,s){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const o=convertToTensor(i,"a","mul"),a=convertToTensor(s,"b","mul");return assertShapesMatch(o.shape,a.shape,"Error in multiplyStrict: "),mul(o,a)}function divStrict_(i,s){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const o=convertToTensor(i,"a","div"),a=convertToTensor(s,"b","div");return assertShapesMatch(o.shape,a.shape,"Error in divideStrict: "),div$1(o,a)}function modStrict_(i,s){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const o=convertToTensor(i,"a","modStrict"),a=convertToTensor(s,"b","modStrict");return assertShapesMatch(o.shape,a.shape,"Error in modStrict: "),mod$2(o,a)}function minimumStrict_(i,s){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const o=convertToTensor(i,"a","minimumStrict"),a=convertToTensor(s,"b","minimumStrict");return assertShapesMatch(o.shape,a.shape,"Error in minimumStrict: "),minimum$3(o,a)}function maximumStrict_(i,s){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const o=convertToTensor(i,"a","maximumStrict"),a=convertToTensor(s,"b","maximumStrict");return assertShapesMatch(o.shape,a.shape,"Error in maximumStrict: "),maximum$3(o,a)}function squaredDifferenceStrict_(i,s){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const o=convertToTensor(i,"a","squaredDifferenceStrict"),a=convertToTensor(s,"b","squaredDifferenceStrict");return assertShapesMatch(o.shape,a.shape,"Error in squaredDifferenceStrict: "),squaredDifference$2(o,a)}const addStrict=op({addStrict_}),divStrict=op({divStrict_}),maximumStrict=op({maximumStrict_}),minimumStrict=op({minimumStrict_}),modStrict=op({modStrict_}),mulStrict=op({mulStrict_}),powStrict=op({powStrict_}),squaredDifferenceStrict=op({squaredDifferenceStrict_}),subStrict=op({subStrict_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function norm_(i,s="euclidean",o=null,a=!1){i=convertToTensor(i,"x","norm");const c=normImpl(i,s,o);let d=c.shape;if(a){const g=parseAxisParam(o,i.shape);d=expandShapeToKeepDim(c.shape,g)}return reshape$3(c,d)}function normImpl(i,s,o=null){if(i.rank===0)return abs$2(i);if(i.rank!==1&&o===null)return normImpl(reshape$3(i,[-1]),s,o);if(i.rank===1||typeof o=="number"||Array.isArray(o)&&o.length===1){if(s===1)return sum$2(abs$2(i),o);if(s===1/0)return max$3(abs$2(i),o);if(s===-1/0)return min$3(abs$2(i),o);if(s==="euclidean"||s===2)return sqrt$2(sum$2(pow$2(abs$2(i),scalar(2,"int32")),o));throw new Error(`Error in norm: invalid ord value: ${s}`)}if(Array.isArray(o)&&o.length===2){if(s===1)return max$3(sum$2(abs$2(i),o[0]),o[1]-1);if(s===1/0)return max$3(sum$2(abs$2(i),o[1]),o[0]);if(s===-1/0)return min$3(sum$2(abs$2(i),o[1]),o[0]);if(s==="fro"||s==="euclidean")return sqrt$2(sum$2(square$2(i),o));throw new Error(`Error in norm: invalid ord value: ${s}`)}throw new Error(`Error in norm: invalid axis: ${o}`)}const norm=op({norm_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function movingAverage_(i,s,o,a,c=!0){const d=convertToTensor(i,"v","movingAverage"),g=convertToTensor(s,"x","movingAverage"),b=convertToTensor(o,"decay","movingAverage");assertTypesMatch(d,g),assert$2(arraysEqual(d.shape,g.shape),()=>"Shape mismatch in v and x");const $=scalar(1),_=sub$2($,b);let _e=mul(sub$2(g,d),_);if(c){assert$2(a!=null,()=>"When using zeroDebias: true, step is required.");const et=convertToTensor(a,"step","movingAverage");_e=div$1(_e,sub$2($,pow$2(b,et)))}return add$2(d,_e)}const movingAverage=op({movingAverage_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function scatterND_(i,s,o){const a=convertToTensor(i,"indices","scatterND","int32"),c=convertToTensor(s,"updates","scatterND");validateInput$1(c,a,o);const d={indices:a,updates:c},g={shape:o};return ENGINE.runKernel(ScatterNd,d,g)}const scatterND=op({scatterND_});function validateInput(i,s,o,a){if(i.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${i.dtype}.`);if(i.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${i.shape}.`);const c=i.rank>0?i.shape[0]:1,d=i.rank>1?i.shape[1]:1;if(o.length!==d)throw new Error(`outputShape has incorrect number of elements:, ${o.length}, should be: ${d}.`);const g=s.size;if(!(s.rank===0||s.rank===1&&g===c))throw new Error(`sparseValues has incorrect shape ${s.shape}, should be [] or [${c}]`);if(s.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseToDense_(i,s,o,a=0){const c=convertToTensor(i,"sparseIndices","sparseToDense","int32"),d=convertToTensor(s,"sparseValues","sparseToDense"),g=convertToTensor(a,"defaultValue","sparseToDense",d.dtype);validateInput(c,d,o,g);const b={sparseIndices:c,sparseValues:d,defaultValue:g},$={outputShape:o};return ENGINE.runKernel(SparseToDense,b,$)}const sparseToDense$2=op({sparseToDense_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherND_(i,s){const o=convertToTensor(s,"indices","gatherND","int32"),c={params:convertToTensor(i,"x","gatherND"),indices:o};return ENGINE.runKernel(GatherNd,c)}const gatherND=op({gatherND_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getNoiseShape(i,s){if(s==null)return i.shape.slice();if(arraysEqual(i.shape,s))return s;if(i.shape.length===s.length){const o=[];for(let a=0;a<i.shape.length;a++)s[a]==null&&i.shape[a]!=null?o.push(i.shape[a]):o.push(s[a]);return o}return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dropout_(i,s,o,a){const c=convertToTensor(i,"x","dropout");if(assert$2(c.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${c.dtype} tensor instead.`),assert$2(s>=0&&s<1,()=>`rate must be a float in the range [0, 1), but got ${s}.`),s===0)return i instanceof Tensor?c.clone():c;const d=getNoiseShape(c,o),g=1-s,b=div$1(floor$2(add$2(randomUniform$1(d,0,1,"float32",a),g)),g);return mul(c,b)}const dropout$2=op({dropout_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function enclosingPowerOfTwo(i){return Math.floor(Math.pow(2,Math.ceil(Math.log(i)/Math.log(2))))}function cosineWindow(i,s,o){const a=1-i%2,c=new Float32Array(i);for(let d=0;d<i;++d){const g=2*Math.PI*d/(i+a-1);c[d]=s-o*Math.cos(g)}return tensor1d(c,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function inTopKAsync_(i,s,o=1){const a=convertToTensor(i,"predictions","inTopK"),c=convertToTensor(s,"targets","inTopK");assert$2(a.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${a.rank}`),assert$2(a.rank-1===c.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${a.rank} and targets rank ${c.rank}`),assertShapesMatch(a.shape.slice(0,a.shape.length-1),c.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const d=a.shape[a.shape.length-1];assert$2(o>0&&o<=d,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${d}), but got ${o}`);const g=await a.data(),b=await c.data(),[$,_]=[g.length/d,d],_e=getTypedArrayFromDType("bool",$);for(let et=0;et<$;et++){const rt=et*_,tt=g.subarray(rt,rt+_),j=[];for(let nt=0;nt<tt.length;nt++)j.push({value:tt[nt],index:nt});j.sort((nt,st)=>st.value-nt.value),_e[et]=0;for(let nt=0;nt<o;nt++)if(j[nt].index===b[et]){_e[et]=1;break}}return i!==a&&a.dispose(),s!==c&&c.dispose(),tensor(_e,c.shape,"bool")}const inTopKAsync=inTopKAsync_;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropFilter_(i,s,o,a,c,d="NHWC",g){let b=i;i.rank===3&&(b=reshape$3(i,[1,i.shape[0],i.shape[1],i.shape[2]]));let $=s;$.rank===3&&($=reshape$3(s,[1,s.shape[0],s.shape[1],s.shape[2]])),assert$2(b.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${b.shape}.`),assert$2($.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${$.shape}.`),assert$2(o.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${o}.`);const _=d==="NHWC"?b.shape[3]:b.shape[1],_e=d==="NHWC"?$.shape[3]:$.shape[1];assert$2(_===o[2],()=>`Error in conv2dDerFilter: depth of input ${_}) must match input depth in filter (${o[2]}.`),assert$2(_e===o[3],()=>`Error in conv2dDerFilter: depth of dy (${_e}) must match output depth for filter (${o[3]}).`),g!=null&&assert$2(isInt(c),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${g} but got pad ${c}.`);const et={x:b,dy:$},rt={strides:a,pad:c,dataFormat:d,dimRoundingMode:g,filterShape:o};return ENGINE.runKernel(Conv2DBackpropFilter,et,rt)}const conv2DBackpropFilter$2=op({conv2DBackpropFilter_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getFusedDyActivation(i,s,o){if(o==null||o==="linear")return i;if(o==="relu")return mul(i,step$2(s));throw new Error(`Cannot compute gradient for fused activation ${o}.`)}function getFusedBiasGradient(i,s){let o=s;const a=getReductionAxes(i.shape,s.shape);return a.length>0&&(o=sum$2(o,a)),reshape$3(o,i.shape)}function applyActivation$1(i,s,o,a){if(s==="linear")return i;if(s==="relu")return relu$2(i);if(s==="elu")return elu$4(i);if(s==="relu6")return relu6$2(i);if(s==="prelu")return prelu$3(i,o);if(s==="leakyrelu")return leakyRelu$2(i,a);throw new Error(`Unknown fused activation ${s}.`)}const shouldFuse=(i,s)=>!(i>0)||s==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedConv2d_({x:i,filter:s,strides:o,pad:a,dataFormat:c="NHWC",dilations:d=[1,1],dimRoundingMode:g,bias:b,activation:$="linear",preluActivationWeights:_,leakyreluAlpha:_e}){if($=$||"linear",shouldFuse(ENGINE.state.gradientDepth,$)===!1){let it=conv2d$3(i,s,o,a,c,d,g);return b!=null&&(it=add$2(it,b)),applyActivation$1(it,$,_,_e)}const et=convertToTensor(i,"x","conv2d"),rt=convertToTensor(s,"filter","conv2d");let tt=et,j=!1;et.rank===3&&(j=!0,tt=reshape$3(et,[1,et.shape[0],et.shape[1],et.shape[2]])),assert$2(tt.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${tt.rank}.`),assert$2(rt.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${rt.rank}.`),g!=null&&assert$2(isInt(a),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${g} but got pad ${a}.`),assert$2(tt.shape[3]===rt.shape[2],()=>`Error in conv2d: depth of input (${tt.shape[3]}) must match input depth for filter ${rt.shape[2]}.`),assert$2(eitherStridesOrDilationsAreOne(o,d),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`),assert$2(c==="NHWC",()=>`Error in conv2d: got dataFormat of ${c} but only NHWC is currently supported.`);const nt=computeConv2DInfo(tt.shape,rt.shape,o,d,a,g);let st;b!=null&&(st=convertToTensor(b,"bias","fused conv2d"),[st]=makeTypesMatch(st,et),assertAndGetBroadcastShape(nt.outShape,st.shape));let ot;_!=null&&(ot=convertToTensor(_,"prelu weights","fused conv2d"));const ut=(it,yt)=>{const[ft,bt,Tt,Ct]=yt,_t=getFusedDyActivation(it,Tt,$);assert$2(tupleValuesAreOne(d),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${d}'`);const Ot=conv2DBackpropInput$2(bt.shape,_t,ft,o,a),kt=conv2DBackpropFilter$2(bt,_t,ft.shape,o,a),Rt=[Ot,kt];if(Ct!=null){const jt=getFusedBiasGradient(Ct,_t);Rt.push(jt)}return Rt},ht={x:tt,filter:rt,bias:st,preluActivationWeights:ot},pt={strides:o,pad:a,dataFormat:c,dilations:d,dimRoundingMode:g,activation:$,leakyreluAlpha:_e};return b==null?customGrad((yt,ft,bt)=>{let Tt=ENGINE.runKernel(FusedConv2D,ht,pt);return bt([ft,yt,Tt]),j&&(Tt=reshape$3(Tt,[Tt.shape[1],Tt.shape[2],Tt.shape[3]])),{value:Tt,gradFunc:ut}})(tt,rt):customGrad((yt,ft,bt,Tt)=>{let Ct=ENGINE.runKernel(FusedConv2D,ht,pt);return Tt([ft,yt,Ct,bt]),j&&(Ct=reshape$3(Ct,[Ct.shape[1],Ct.shape[2],Ct.shape[3]])),{value:Ct,gradFunc:ut}})(tt,rt,st)}const conv2d$2=op({fusedConv2d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropFilter_(i,s,o,a,c,d=[1,1],g){let b=i;i.rank===3&&(b=reshape$3(i,[1,i.shape[0],i.shape[1],i.shape[2]]));let $=s;$.rank===3&&($=reshape$3(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const _={x:b,dy:$},_e={strides:a,pad:c,dimRoundingMode:g,dilations:d,filterShape:o};return ENGINE.runKernel(DepthwiseConv2dNativeBackpropFilter,_,_e)}const depthwiseConv2dNativeBackpropFilter$2=op({depthwiseConv2dNativeBackpropFilter_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropInput_(i,s,o,a,c,d=[1,1],g){let b=s,$=!1;s.rank===3&&($=!0,b=reshape$3(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const _={dy:b,filter:o},_e={strides:a,pad:c,dimRoundingMode:g,dilations:d,inputShape:i},et=ENGINE.runKernel(DepthwiseConv2dNativeBackpropInput,_,_e);return $?reshape$3(et,[et.shape[1],et.shape[2],et.shape[3]]):et}const depthwiseConv2dNativeBackpropInput$2=op({depthwiseConv2dNativeBackpropInput_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedDepthwiseConv2d_({x:i,filter:s,strides:o,pad:a,dataFormat:c="NHWC",dilations:d=[1,1],dimRoundingMode:g,bias:b,activation:$="linear",preluActivationWeights:_,leakyreluAlpha:_e}){if(shouldFuse(ENGINE.state.gradientDepth,$)===!1){let it=depthwiseConv2d$3(i,s,o,a,c,d,g);return b!=null&&(it=add$2(it,b)),applyActivation$1(it,$,_,_e)}const et=convertToTensor(i,"x","depthwiseConv2d"),rt=convertToTensor(s,"filter","depthwiseConv2d");let tt=et,j=!1;et.rank===3&&(j=!0,tt=reshape$3(et,[1,et.shape[0],et.shape[1],et.shape[2]])),assert$2(tt.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${tt.rank}.`),assert$2(rt.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${rt.rank}.`),assert$2(tt.shape[3]===rt.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${tt.shape[3]}) must match the inChannels dimension in filter ${rt.shape[2]}.`),d==null&&(d=[1,1]),assert$2(eitherStridesOrDilationsAreOne(o,d),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`),g!=null&&assert$2(isInt(a),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${g} but got pad ${a}.`);const nt=computeConv2DInfo(tt.shape,rt.shape,o,d,a,g,!0);let st;b!=null&&(st=convertToTensor(b,"bias","fused conv2d"),[st]=makeTypesMatch(st,et),assertAndGetBroadcastShape(nt.outShape,st.shape));let ot;_!=null&&(ot=convertToTensor(_,"prelu weights","fused depthwiseConv2d"));const ut=(it,yt)=>{assert$2(tupleValuesAreOne(d),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${d}'`);const[ft,bt,Tt,Ct]=yt,_t=getFusedDyActivation(it,Tt,$),Ot=depthwiseConv2dNativeBackpropInput$2(bt.shape,_t,ft,o,a,d,g),kt=depthwiseConv2dNativeBackpropFilter$2(bt,_t,ft.shape,o,a,d,g);if(Ct!=null){const Rt=getFusedBiasGradient(st,_t);return[Ot,kt,Rt]}return[Ot,kt]},ht={x:tt,filter:rt,bias:st,preluActivationWeights:ot},pt={strides:o,pad:a,dataFormat:c,dilations:d,dimRoundingMode:g,activation:$,leakyreluAlpha:_e};return b==null?customGrad((yt,ft,bt)=>{let Tt=ENGINE.runKernel(FusedDepthwiseConv2D,ht,pt);return bt([ft,yt,Tt]),j&&(Tt=reshape$3(Tt,[Tt.shape[1],Tt.shape[2],Tt.shape[3]])),{value:Tt,gradFunc:ut}})(tt,rt):customGrad((yt,ft,bt,Tt)=>{let Ct=ENGINE.runKernel(FusedDepthwiseConv2D,ht,pt);return Tt([ft,yt,Ct,bt]),j&&(Ct=reshape$3(Ct,[Ct.shape[1],Ct.shape[2],Ct.shape[3]])),{value:Ct,gradFunc:ut}})(tt,rt,st)}const depthwiseConv2d$2=op({fusedDepthwiseConv2d_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedMatMul_({a:i,b:s,transposeA:o=!1,transposeB:a=!1,bias:c,activation:d="linear",preluActivationWeights:g,leakyreluAlpha:b}){if(shouldFuse(ENGINE.state.gradientDepth,d)===!1){let Ct=matMul$1(i,s,o,a);return c!=null&&(Ct=add$2(Ct,c)),applyActivation$1(Ct,d,g,b)}let $=convertToTensor(i,"a","fused matMul"),_=convertToTensor(s,"b","fused matMul");[$,_]=makeTypesMatch($,_);const _e=o?$.shape[$.rank-2]:$.shape[$.rank-1],et=a?_.shape[_.rank-1]:_.shape[_.rank-2],rt=o?$.shape[$.rank-1]:$.shape[$.rank-2],tt=a?_.shape[_.rank-2]:_.shape[_.rank-1],j=$.shape.slice(0,-2),nt=_.shape.slice(0,-2),st=sizeFromShape(j),ot=sizeFromShape(nt);assert$2($.rank>=2&&_.rank>=2&&$.rank===_.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${$.rank} and ${_.rank}.`),assert$2(arraysEqual(j,nt),()=>`Error in fused matMul: outer dimensions (${j}) and (${nt}) of Tensors with shapes ${$.shape} and ${_.shape} must match.`),assert$2(_e===et,()=>`Error in fused matMul: inner shapes (${_e}) and (${et}) of Tensors with shapes ${$.shape} and ${_.shape} and transposeA=${o} and transposeB=${a} must match.`);const ut=$.shape.slice(0,-2).concat([rt,tt]),ht=o?reshape$3($,[st,_e,rt]):reshape$3($,[st,rt,_e]),pt=a?reshape$3(_,[ot,tt,et]):reshape$3(_,[ot,et,tt]);let it;c!=null&&(it=convertToTensor(c,"bias","fused matMul"),[it]=makeTypesMatch(it,$),assertAndGetBroadcastShape(ut,it.shape));let yt;g!=null&&(yt=convertToTensor(g,"prelu weights","fused matMul"));const ft=(Ct,_t)=>{const[Ot,kt,Rt,jt]=_t,Gt=getFusedDyActivation(reshape$3(Ct,Rt.shape),Rt,d);let Bt,zt;if(!o&&!a?(Bt=matMul$1(Gt,kt,!1,!0),zt=matMul$1(Ot,Gt,!0,!1)):!o&&a?(Bt=matMul$1(Gt,kt,!1,!1),zt=matMul$1(Gt,Ot,!0,!1)):o&&!a?(Bt=matMul$1(kt,Gt,!1,!0),zt=matMul$1(Ot,Gt,!1,!1)):(Bt=matMul$1(kt,Gt,!0,!0),zt=matMul$1(Gt,Ot,!0,!0)),c!=null){const Ut=getFusedBiasGradient(jt,Gt);return[Bt,zt,Ut]}else return[Bt,zt]},bt={a:ht,b:pt,bias:it,preluActivationWeights:yt},Tt={transposeA:o,transposeB:a,activation:d,leakyreluAlpha:b};return c==null?customGrad((_t,Ot,kt)=>{const Rt=ENGINE.runKernel(_FusedMatMul,bt,Tt);return kt([_t,Ot,Rt]),{value:reshape$3(Rt,ut),gradFunc:ft}})(ht,pt):customGrad((_t,Ot,kt,Rt)=>{const jt=ENGINE.runKernel(_FusedMatMul,bt,Tt);return Rt([_t,Ot,jt,kt]),{value:reshape$3(jt,ut),gradFunc:ft}})(ht,pt,it)}const matMul=op({fusedMatMul_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fused_ops=Object.freeze(Object.defineProperty({__proto__:null,conv2d:conv2d$2,depthwiseConv2d:depthwiseConv2d$2,matMul},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hammingWindow_(i){return cosineWindow(i,.54,.46)}const hammingWindow=op({hammingWindow_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hannWindow_(i){return cosineWindow(i,.5,.5)}const hannWindow=op({hannWindow_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function frame_(i,s,o,a=!1,c=0){let d=0;const g=[];for(;d+s<=i.size;)g.push(slice$2(i,d,s)),d+=o;if(a)for(;d<i.size;){const b=d+s-i.size,$=concat$2([slice$2(i,d,s-b),fill$2([b],c)]);g.push($),d+=o}return g.length===0?tensor2d([],[0,s]):reshape$3(concat$2(g),[g.length,s])}const frame=op({frame_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stft_(i,s,o,a,c=hannWindow){a==null&&(a=enclosingPowerOfTwo(s));const d=frame(i,s,o),g=mul(d,c(s)),b=[];for(let $=0;$<d.shape[0];$++)b.push(rfft(slice$2(g,[$,0],[1,s]),a));return concat$2(b)}const stft=op({stft_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cropAndResize_(i,s,o,a,c="bilinear",d=0){const g=convertToTensor(i,"image","cropAndResize"),b=convertToTensor(s,"boxes","cropAndResize","float32"),$=convertToTensor(o,"boxInd","cropAndResize","int32"),_=b.shape[0];assert$2(g.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${g.rank}.`),assert$2(b.rank===2&&b.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${_},4] but had shape ${b.shape}.`),assert$2($.rank===1&&$.shape[0]===_,()=>`Error in cropAndResize: boxInd must be have size [${_}] but had shape ${b.shape}.`),assert$2(a.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${a.length}.`),assert$2(a[0]>=1&&a[1]>=1,()=>`cropSize must be atleast [1,1], but was ${a}`),assert$2(c==="bilinear"||c==="nearest",()=>`method must be bilinear or nearest, but was ${c}`);const _e={image:g,boxes:b,boxInd:$},et={method:c,extrapolationValue:d,cropSize:a};return ENGINE.runKernel(CropAndResize,_e,et)}const cropAndResize$2=op({cropAndResize_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function flipLeftRight_(i){const s=convertToTensor(i,"image","flipLeftRight","float32");assert$2(s.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${s.rank}.`);const o={image:s};return ENGINE.runKernel(FlipLeftRight,o,{})}const flipLeftRight=op({flipLeftRight_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rotateWithOffset_(i,s,o=0,a=.5){const c=convertToTensor(i,"image","rotateWithOffset","float32");assert$2(c.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${c.rank}.`);const d={image:c},g={radians:s,fillValue:o,center:a};return ENGINE.runKernel(RotateWithOffset,d,g)}const rotateWithOffset=op({rotateWithOffset_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppSanityCheck(i,s,o,a,c,d){a==null&&(a=.5),c==null&&(c=Number.NEGATIVE_INFINITY),d==null&&(d=0);const g=i.shape[0];return o=Math.min(o,g),assert$2(0<=a&&a<=1,()=>`iouThreshold must be in [0, 1], but was '${a}'`),assert$2(i.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${i.rank}'`),assert$2(i.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${i.shape[1]}`),assert$2(s.rank===1,()=>"scores must be a 1D tensor"),assert$2(s.shape[0]===g,()=>`scores has incompatible shape with boxes. Expected ${g}, but was ${s.shape[0]}`),assert$2(0<=d&&d<=1,()=>`softNmsSigma must be in [0, 1], but was '${d}'`),{maxOutputSize:o,iouThreshold:a,scoreThreshold:c,softNmsSigma:d}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppression_(i,s,o,a=.5,c=Number.NEGATIVE_INFINITY){const d=convertToTensor(i,"boxes","nonMaxSuppression"),g=convertToTensor(s,"scores","nonMaxSuppression"),b=nonMaxSuppSanityCheck(d,g,o,a,c);o=b.maxOutputSize,a=b.iouThreshold,c=b.scoreThreshold;const $={maxOutputSize:o,iouThreshold:a,scoreThreshold:c};return ENGINE.runKernel(NonMaxSuppressionV3,{boxes:d,scores:g},$)}const nonMaxSuppression=op({nonMaxSuppression_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function binaryInsert(i,s,o){const a=binarySearch(i,s,o),c=a<0?-(a+1):a;i.splice(c,0,s)}function binarySearch(i,s,o){return binarySearch_(i,s,o||defaultComparator)}function defaultComparator(i,s){return i>s?1:i<s?-1:0}function binarySearch_(i,s,o){let a=0,c=i.length,d=0,g=!1;for(;a<c;){d=a+(c-a>>>1);const b=o(s,i[d]);b>0?a=d+1:(c=d,g=!b)}return g?a:-a-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppressionV3Impl$2(i,s,o,a,c){return nonMaxSuppressionImpl_(i,s,o,a,c,0)}function nonMaxSuppressionV4Impl$2(i,s,o,a,c,d){return nonMaxSuppressionImpl_(i,s,o,a,c,0,!1,d,!0)}function nonMaxSuppressionV5Impl$2(i,s,o,a,c,d){return nonMaxSuppressionImpl_(i,s,o,a,c,d,!0)}function nonMaxSuppressionImpl_(i,s,o,a,c,d,g=!1,b=!1,$=!1){const _=[];for(let st=0;st<s.length;st++)s[st]>c&&_.push({score:s[st],boxIndex:st,suppressBeginIndex:0});_.sort(ascendingComparator);const _e=d>0?-.5/d:0,et=[],rt=[];for(;et.length<o&&_.length>0;){const st=_.pop(),{score:ot,boxIndex:ut,suppressBeginIndex:ht}=st;if(ot<c)break;let pt=!1;for(let it=et.length-1;it>=ht;--it){const yt=intersectionOverUnion(i,ut,et[it]);if(yt>=a){pt=!0;break}if(st.score=st.score*suppressWeight(a,_e,yt),st.score<=c)break}st.suppressBeginIndex=et.length,pt||(st.score===ot?(et.push(ut),rt.push(st.score)):st.score>c&&binaryInsert(_,st,ascendingComparator))}const tt=et.length,j=o-tt;b&&j>0&&(et.push(...new Array(j).fill(0)),rt.push(...new Array(j).fill(0)));const nt={selectedIndices:et};return g&&(nt.selectedScores=rt),$&&(nt.validOutputs=tt),nt}function intersectionOverUnion(i,s,o){const a=i.subarray(s*4,s*4+4),c=i.subarray(o*4,o*4+4),d=Math.min(a[0],a[2]),g=Math.min(a[1],a[3]),b=Math.max(a[0],a[2]),$=Math.max(a[1],a[3]),_=Math.min(c[0],c[2]),_e=Math.min(c[1],c[3]),et=Math.max(c[0],c[2]),rt=Math.max(c[1],c[3]),tt=(b-d)*($-g),j=(et-_)*(rt-_e);if(tt<=0||j<=0)return 0;const nt=Math.max(d,_),st=Math.max(g,_e),ot=Math.min(b,et),ut=Math.min($,rt),ht=Math.max(ot-nt,0)*Math.max(ut-st,0);return ht/(tt+j-ht)}function suppressWeight(i,s,o){const a=Math.exp(s*o*o);return o<=i?a:0}function ascendingComparator(i,s){return i.score-s.score||i.score===s.score&&s.boxIndex-i.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function nonMaxSuppressionAsync_(i,s,o,a=.5,c=Number.NEGATIVE_INFINITY){const d=convertToTensor(i,"boxes","nonMaxSuppressionAsync"),g=convertToTensor(s,"scores","nonMaxSuppressionAsync"),b=nonMaxSuppSanityCheck(d,g,o,a,c);o=b.maxOutputSize,a=b.iouThreshold,c=b.scoreThreshold;const $=await Promise.all([d.data(),g.data()]),_=$[0],_e=$[1],{selectedIndices:et}=nonMaxSuppressionV3Impl$2(_,_e,o,a,c);return d!==i&&d.dispose(),g!==s&&g.dispose(),tensor1d(et,"int32")}const nonMaxSuppressionAsync=nonMaxSuppressionAsync_;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppressionWithScore_(i,s,o,a=.5,c=Number.NEGATIVE_INFINITY,d=0){const g=convertToTensor(i,"boxes","nonMaxSuppression"),b=convertToTensor(s,"scores","nonMaxSuppression"),$=nonMaxSuppSanityCheck(g,b,o,a,c,d);o=$.maxOutputSize,a=$.iouThreshold,c=$.scoreThreshold,d=$.softNmsSigma;const _={boxes:g,scores:b},_e={maxOutputSize:o,iouThreshold:a,scoreThreshold:c,softNmsSigma:d},et=ENGINE.runKernel(NonMaxSuppressionV5,_,_e);return{selectedIndices:et[0],selectedScores:et[1]}}const nonMaxSuppressionWithScore=op({nonMaxSuppressionWithScore_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function nonMaxSuppressionWithScoreAsync_(i,s,o,a=.5,c=Number.NEGATIVE_INFINITY,d=0){const g=convertToTensor(i,"boxes","nonMaxSuppressionAsync"),b=convertToTensor(s,"scores","nonMaxSuppressionAsync"),$=nonMaxSuppSanityCheck(g,b,o,a,c,d);o=$.maxOutputSize,a=$.iouThreshold,c=$.scoreThreshold,d=$.softNmsSigma;const _=await Promise.all([g.data(),b.data()]),_e=_[0],et=_[1],{selectedIndices:rt,selectedScores:tt}=nonMaxSuppressionV5Impl$2(_e,et,o,a,c,d);return g!==i&&g.dispose(),b!==s&&b.dispose(),{selectedIndices:tensor1d(rt,"int32"),selectedScores:tensor1d(tt)}}const nonMaxSuppressionWithScoreAsync=nonMaxSuppressionWithScoreAsync_;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppressionPadded_(i,s,o,a=.5,c=Number.NEGATIVE_INFINITY,d=!1){const g=convertToTensor(i,"boxes","nonMaxSuppression"),b=convertToTensor(s,"scores","nonMaxSuppression"),$=nonMaxSuppSanityCheck(g,b,o,a,c,null),_=$.maxOutputSize,_e=$.iouThreshold,et=$.scoreThreshold,rt={boxes:g,scores:b},tt={maxOutputSize:_,iouThreshold:_e,scoreThreshold:et,padToMaxOutputSize:d},j=ENGINE.runKernel(NonMaxSuppressionV4,rt,tt);return{selectedIndices:j[0],validOutputs:j[1]}}const nonMaxSuppressionPadded=op({nonMaxSuppressionPadded_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function nonMaxSuppressionPaddedAsync_(i,s,o,a=.5,c=Number.NEGATIVE_INFINITY,d=!1){const g=convertToTensor(i,"boxes","nonMaxSuppressionAsync"),b=convertToTensor(s,"scores","nonMaxSuppressionAsync"),$=nonMaxSuppSanityCheck(g,b,o,a,c,null),_=$.maxOutputSize,_e=$.iouThreshold,et=$.scoreThreshold,[rt,tt]=await Promise.all([g.data(),b.data()]),{selectedIndices:j,validOutputs:nt}=nonMaxSuppressionV4Impl$2(rt,tt,_,_e,et,d);return g!==i&&g.dispose(),b!==s&&b.dispose(),{selectedIndices:tensor1d(j,"int32"),validOutputs:scalar(nt,"int32")}}const nonMaxSuppressionPaddedAsync=nonMaxSuppressionPaddedAsync_;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinear_(i,s,o=!1,a=!1){const c=convertToTensor(i,"images","resizeBilinear");assert$2(c.rank===3||c.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${c.rank}.`),assert$2(s.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${s}.`),assert$2(a===!1||o===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let d=c,g=!1;c.rank===3&&(g=!0,d=reshape$3(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const b={images:d},$={alignCorners:o,halfPixelCenters:a,size:s},_=ENGINE.runKernel(ResizeBilinear,b,$);return g?reshape$3(_,[_.shape[1],_.shape[2],_.shape[3]]):_}const resizeBilinear$2=op({resizeBilinear_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighbor_(i,s,o=!1,a=!1){const c=convertToTensor(i,"images","resizeNearestNeighbor");assert$2(c.rank===3||c.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${c.rank}.`),assert$2(s.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${s}.`),assert$2(c.dtype==="float32"||c.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),assert$2(a===!1||o===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let d=c,g=!1;c.rank===3&&(g=!0,d=reshape$3(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const b={images:d},$={alignCorners:o,halfPixelCenters:a,size:s},_=ENGINE.runKernel(ResizeNearestNeighbor,b,$);return g?reshape$3(_,[_.shape[1],_.shape[2],_.shape[3]]):_}const resizeNearestNeighbor$2=op({resizeNearestNeighbor_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bandPart_(i,s,o){assert$2(s%1===0,()=>`bandPart(): numLower must be an integer, got ${s}.`),assert$2(o%1===0,()=>`bandPart(): numUpper must be an integer, got ${o}.`);const a=convertToTensor(i,"a","bandPart");assert$2(a.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${a.rank}.`);const c=a.shape,[d,g]=a.shape.slice(-2);if(!(s<=d))throw new Error(`bandPart(): numLower (${s}) must not be greater than the number of rows (${d}).`);if(!(o<=g))throw new Error(`bandPart(): numUpper (${o}) must not be greater than the number of columns (${g}).`);s<0&&(s=d),o<0&&(o=g);const b=reshape$3(range$4(0,d,1,"int32"),[-1,1]),$=range$4(0,g,1,"int32"),_=sub$2(b,$),_e=logicalAnd$2(lessEqual$2(_,scalar(+s,"int32")),greaterEqual$2(_,scalar(-o,"int32"))),et=zeros$2([d,g],a.dtype);return reshape$3(stack(unstack(reshape$3(a,[-1,d,g])).map(rt=>where(_e,rt,et))),c)}const bandPart=op({bandPart_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gramSchmidt_(i){let s;if(Array.isArray(i)){s=!1,assert$2(i!=null&&i.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const c=i[0].shape[0];for(let d=1;d<i.length;++d)assert$2(i[d].shape[0]===c,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${i[d].shape[0]} vs. ${c})`)}else s=!0,i=split$1(i,i.shape[0],0).map(c=>squeeze(c,[0]));assert$2(i.length<=i[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${i.length}) exceeds number of dimensions (${i[0].shape[0]}).`);const o=[],a=i;for(let c=0;c<i.length;++c)o.push(ENGINE.tidy(()=>{let d=a[c];if(c>0)for(let g=0;g<c;++g){const b=mul(sum$2(mul(o[g],d)),o[g]);d=sub$2(d,b)}return div$1(d,norm(d,"euclidean"))}));return s?stack(o,0):o}const gramSchmidt=op({gramSchmidt_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qr_(i,s=!1){if(assert$2(i.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${i.rank}`),i.rank===2)return qr2d(i,s);{const o=i.shape.slice(0,i.shape.length-2).reduce(($,_)=>$*_),a=unstack(reshape$3(i,[o,i.shape[i.shape.length-2],i.shape[i.shape.length-1]]),0),c=[],d=[];a.forEach($=>{const[_,_e]=qr2d($,s);c.push(_),d.push(_e)});const g=reshape$3(stack(c,0),i.shape),b=reshape$3(stack(d,0),i.shape);return[g,b]}}function qr2d(i,s=!1){return ENGINE.tidy(()=>{assert$2(i.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${i.shape.length}D Tensor.`);const o=i.shape[0],a=i.shape[1];let c=eye(o),d=clone(i);const g=tensor2d([[1]],[1,1]);let b=clone(g);const $=o>=a?a:o;for(let _=0;_<$;++_){const _e=d,et=b,rt=c;[b,d,c]=ENGINE.tidy(()=>{const tt=slice$2(d,[_,_],[o-_,1]),j=norm(tt),nt=slice$2(d,[_,_],[1,1]),st=where(greater$3(nt,0),tensor2d([[-1]]),tensor2d([[1]])),ot=sub$2(nt,mul(st,j)),ut=div$1(tt,ot);ut.shape[0]===1?b=clone(g):b=concat$2([g,slice$2(ut,[1,0],[ut.shape[0]-1,ut.shape[1]])],0);const ht=neg$2(div$1(matMul$1(st,ot),j)),pt=slice$2(d,[_,0],[o-_,a]),it=mul(ht,b),yt=transpose$2(b);if(_===0)d=sub$2(pt,matMul$1(it,matMul$1(yt,pt)));else{const Tt=sub$2(pt,matMul$1(it,matMul$1(yt,pt)));d=concat$2([slice$2(d,[0,0],[_,a]),Tt],0)}const ft=transpose$2(it),bt=slice$2(c,[0,_],[o,c.shape[1]-_]);if(_===0)c=sub$2(bt,matMul$1(matMul$1(bt,b),ft));else{const Tt=sub$2(bt,matMul$1(matMul$1(bt,b),ft));c=concat$2([slice$2(c,[0,0],[o,_]),Tt],1)}return[b,d,c]}),dispose([_e,et,rt])}return!s&&o>a&&(c=slice$2(c,[0,0],[o,a]),d=slice$2(d,[0,0],[a,a])),[c,d]})}const qr=op({qr_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Reduction;(function(i){i[i.NONE=0]="NONE",i[i.MEAN=1]="MEAN",i[i.SUM=2]="SUM",i[i.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Reduction||(Reduction={}));function computeWeightedLoss_(i,s,o=Reduction.SUM_BY_NONZERO_WEIGHTS){const a=convertToTensor(i,"losses","computeWeightedLoss");let c=null;s!=null&&(c=convertToTensor(s,"weights","computeWeightedLoss"));const d=c==null?a:mul(a,c);if(o===Reduction.NONE)return d;if(o===Reduction.SUM)return sum$2(d);if(o===Reduction.MEAN){if(c==null)return mean$1(d);{const g=a.size/c.size,b=div$1(sum$2(d),sum$2(c));return g>1?div$1(b,scalar(g)):b}}if(o===Reduction.SUM_BY_NONZERO_WEIGHTS){if(c==null)return div$1(sum$2(d),scalar(a.size));{const g=mul(c,ones$1(a.shape)),b=cast$3(sum$2(notEqual$2(g,scalar(0))),"float32");return div$1(sum$2(d),b)}}throw Error(`Unknown reduction: ${o}`)}const computeWeightedLoss$1=op({computeWeightedLoss_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function absoluteDifference_(i,s,o,a=Reduction.SUM_BY_NONZERO_WEIGHTS){const c=convertToTensor(i,"labels","absoluteDifference"),d=convertToTensor(s,"predictions","absoluteDifference");let g=null;o!=null&&(g=convertToTensor(o,"weights","absoluteDifference")),assertShapesMatch(c.shape,d.shape,"Error in absoluteDifference: ");const b=abs$2(sub$2(c,d));return computeWeightedLoss$1(b,g,a)}const absoluteDifference=op({absoluteDifference_});function cosineDistance_(i,s,o,a,c=Reduction.SUM_BY_NONZERO_WEIGHTS){const d=convertToTensor(i,"labels","cosineDistance"),g=convertToTensor(s,"predictions","cosineDistance");let b=null;a!=null&&(b=convertToTensor(a,"weights","cosineDistance")),assertShapesMatch(d.shape,g.shape,"Error in cosineDistance: ");const $=scalar(1),_=sub$2($,sum$2(mul(d,g),o,!0));return computeWeightedLoss$1(_,b,c)}const cosineDistance=op({cosineDistance_});function hingeLoss_(i,s,o,a=Reduction.SUM_BY_NONZERO_WEIGHTS){let c=convertToTensor(i,"labels","hingeLoss");const d=convertToTensor(s,"predictions","hingeLoss");let g=null;o!=null&&(g=convertToTensor(o,"weights","hingeLoss")),assertShapesMatch(c.shape,d.shape,"Error in hingeLoss: ");const b=scalar(1);c=sub$2(mul(scalar(2),c),b);const $=relu$2(sub$2(b,mul(c,d)));return computeWeightedLoss$1($,g,a)}const hingeLoss=op({hingeLoss_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function huberLoss_(i,s,o,a=1,c=Reduction.SUM_BY_NONZERO_WEIGHTS){const d=convertToTensor(i,"labels","huberLoss"),g=convertToTensor(s,"predictions","huberLoss");let b=null;o!=null&&(b=convertToTensor(o,"weights","huberLoss")),assertShapesMatch(d.shape,g.shape,"Error in huberLoss: ");const $=scalar(a),_=abs$2(sub$2(g,d)),_e=minimum$3(_,$),et=sub$2(_,_e),rt=add$2(mul(scalar(.5),square$2(_e)),mul($,et));return computeWeightedLoss$1(rt,b,c)}const huberLoss=op({huberLoss_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logLoss_(i,s,o,a=1e-7,c=Reduction.SUM_BY_NONZERO_WEIGHTS){const d=convertToTensor(i,"labels","logLoss"),g=convertToTensor(s,"predictions","logLoss");let b=null;o!=null&&(b=convertToTensor(o,"weights","logLoss")),assertShapesMatch(d.shape,g.shape,"Error in logLoss: ");const $=scalar(1),_=scalar(a),_e=neg$2(mul(d,log$4(add$2(g,_)))),et=mul(sub$2($,d),log$4(add$2(sub$2($,g),_))),rt=sub$2(_e,et);return computeWeightedLoss$1(rt,b,c)}const logLoss=op({logLoss_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function meanSquaredError_(i,s,o,a=Reduction.SUM_BY_NONZERO_WEIGHTS){const c=convertToTensor(i,"labels","meanSquaredError"),d=convertToTensor(s,"predictions","meanSquaredError");let g=null;o!=null&&(g=convertToTensor(o,"weights","meanSquaredError")),assertShapesMatch(c.shape,d.shape,"Error in meanSquaredError: ");const b=squaredDifference$2(c,d);return computeWeightedLoss$1(b,g,a)}const meanSquaredError$2=op({meanSquaredError_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sigmoidCrossEntropyWithLogits_(i,s){const o=convertToTensor(i,"labels","sigmoidCrossEntropyWithLogits"),a=convertToTensor(s,"logits","sigmoidCrossEntropyWithLogits");assertShapesMatch(o.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const c=relu$2(a),d=mul(a,o),g=log1p$2(exp$2(neg$2(abs$2(a))));return add$2(sub$2(c,d),g)}function sigmoidCrossEntropy_(i,s,o,a=0,c=Reduction.SUM_BY_NONZERO_WEIGHTS){let d=convertToTensor(i,"multiClassLabels","sigmoidCrossEntropy");const g=convertToTensor(s,"logits","sigmoidCrossEntropy");let b=null;if(o!=null&&(b=convertToTensor(o,"weights","sigmoidCrossEntropy")),assertShapesMatch(d.shape,g.shape,"Error in sigmoidCrossEntropy: "),a>0){const _=scalar(a),_e=scalar(1),et=scalar(.5);d=add$2(mul(d,sub$2(_e,_)),mul(et,_))}const $=sigmoidCrossEntropyWithLogits_(d,g);return computeWeightedLoss$1($,b,c)}const sigmoidCrossEntropy=op({sigmoidCrossEntropy_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function softmaxCrossEntropyWithLogits_(i,s,o=-1){if(o===-1&&(o=s.rank-1),o!==s.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${s.rank} and dim was ${o}`);return customGrad((c,d,g)=>{const $=logSumExp(d,[o],!0),_=sub$2(cast$3(d,"float32"),$);g([c,_]);const _e=neg$2(mul(_,c));return{value:sum$2(_e,[o]),gradFunc:(tt,j)=>{const[nt,st]=j,ot=expandShapeToKeepDim(tt.shape,[o]);return[mul(reshape$3(tt,ot),sub$2(cast$3(nt,"float32"),exp$2(st))),mul(reshape$3(tt,ot),sub$2(exp$2(st),cast$3(nt,"float32")))]}}})(i,s)}function softmaxCrossEntropy_(i,s,o,a=0,c=Reduction.SUM_BY_NONZERO_WEIGHTS){let d=convertToTensor(i,"onehotLabels","softmaxCrossEntropy");const g=convertToTensor(s,"logits","softmaxCrossEntropy");let b=null;if(o!=null&&(b=convertToTensor(o,"weights","softmaxCrossEntropy")),assertShapesMatch(d.shape,g.shape,"Error in softmaxCrossEntropy: "),a>0){const _=scalar(a),_e=scalar(1),et=scalar(d.shape[1]);d=add$2(mul(d,sub$2(_e,_)),div$1(_,et))}const $=softmaxCrossEntropyWithLogits_(d,g);return computeWeightedLoss$1($,b,c)}const softmaxCrossEntropy=op({softmaxCrossEntropy_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const spectral$1={fft:fft$2,ifft:ifft$2,rfft,irfft},signal={hammingWindow,hannWindow,frame,stft},image$1={flipLeftRight,resizeNearestNeighbor:resizeNearestNeighbor$2,resizeBilinear:resizeBilinear$2,rotateWithOffset,cropAndResize:cropAndResize$2,nonMaxSuppression,nonMaxSuppressionAsync,nonMaxSuppressionWithScore,nonMaxSuppressionWithScoreAsync,nonMaxSuppressionPadded,nonMaxSuppressionPaddedAsync},linalg={bandPart,gramSchmidt,qr},losses={absoluteDifference,computeWeightedLoss:computeWeightedLoss$1,cosineDistance,hingeLoss,huberLoss,logLoss,meanSquaredError:meanSquaredError$2,sigmoidCrossEntropy,softmaxCrossEntropy};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Optimizer extends Serializable{minimize(s,o=!1,a){const{value:c,grads:d}=this.computeGradients(s,a);if(a!=null){const g=a.map(b=>({name:b.name,tensor:d[b.name]}));this.applyGradients(g)}else this.applyGradients(d);return dispose(d),o?c:(c.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(s,o){return variableGrads(s,o)}dispose(){this.iterations_!=null&&dispose(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:scalar(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(s){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(s){return this.iterations_=(await s[0].tensor.data())[0],s.slice(1)}}Object.defineProperty(Optimizer,Symbol.hasInstance,{value:i=>i.minimize!=null&&i.computeGradients!=null&&i.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AdadeltaOptimizer extends Optimizer{constructor(s,o,a=null){super(),this.learningRate=s,this.rho=o,this.epsilon=a,this.accumulatedGrads=[],this.accumulatedUpdates=[],a==null&&(this.epsilon=ENGINE.backend.epsilon())}applyGradients(s){(Array.isArray(s)?s.map(a=>a.name):Object.keys(s)).forEach((a,c)=>{const d=ENGINE.registeredVariables[a],g=!1;this.accumulatedGrads[c]==null&&(this.accumulatedGrads[c]={originalName:`${a}/accum_grad`,variable:tidy(()=>zerosLike$2(d).variable(g))}),this.accumulatedUpdates[c]==null&&(this.accumulatedUpdates[c]={originalName:`${a}/accum_var`,variable:tidy(()=>zerosLike$2(d).variable(g))});const b=Array.isArray(s)?s[c].tensor:s[a];if(b==null)return;const $=this.accumulatedGrads[c].variable,_=this.accumulatedUpdates[c].variable;tidy(()=>{const _e=add$2(mul($,this.rho),mul(square$2(b),1-this.rho)),et=mul(div$1(sqrt$2(add$2(_,this.epsilon)),sqrt$2(add$2($,this.epsilon))),b),rt=add$2(mul(_,this.rho),mul(square$2(et),1-this.rho));$.assign(_e),_.assign(rt);const tt=add$2(mul(et,-this.learningRate),d);d.assign(tt)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(dispose(this.accumulatedGrads.map(s=>s.variable)),dispose(this.accumulatedUpdates.map(s=>s.variable)))}async getWeights(){const s=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(s.map(o=>({name:o.originalName,tensor:o.variable})))}async setWeights(s){s=await this.extractIterations(s);const o=s.length/2,a=!1;this.accumulatedGrads=s.slice(0,o).map(c=>({originalName:c.name,variable:c.tensor.variable(a)})),this.accumulatedUpdates=s.slice(o,o*2).map(c=>({originalName:c.name,variable:c.tensor.variable(a)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(s,o){return new s(o.learningRate,o.rho,o.epsilon)}}AdadeltaOptimizer.className="Adadelta";registerClass(AdadeltaOptimizer);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AdagradOptimizer extends Optimizer{constructor(s,o=.1){super(),this.learningRate=s,this.initialAccumulatorValue=o,this.accumulatedGrads=[]}applyGradients(s){(Array.isArray(s)?s.map(a=>a.name):Object.keys(s)).forEach((a,c)=>{const d=ENGINE.registeredVariables[a];this.accumulatedGrads[c]==null&&(this.accumulatedGrads[c]={originalName:`${a}/accumulator`,variable:tidy(()=>fill$2(d.shape,this.initialAccumulatorValue).variable(!1))});const g=Array.isArray(s)?s[c].tensor:s[a];if(g==null)return;const b=this.accumulatedGrads[c].variable;tidy(()=>{const $=add$2(b,square$2(g));b.assign($);const _=add$2(mul(div$1(g,sqrt$2(add$2($,ENGINE.backend.epsilon()))),-this.learningRate),d);d.assign(_)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&dispose(this.accumulatedGrads.map(s=>s.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(s=>({name:s.originalName,tensor:s.variable})))}async setWeights(s){s=await this.extractIterations(s);const o=!1;this.accumulatedGrads=s.map(a=>({originalName:a.name,variable:a.tensor.variable(o)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(s,o){return new s(o.learningRate,o.initialAccumulatorValue)}}AdagradOptimizer.className="Adagrad";registerClass(AdagradOptimizer);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AdamOptimizer extends Optimizer{constructor(s,o,a,c=null){super(),this.learningRate=s,this.beta1=o,this.beta2=a,this.epsilon=c,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],tidy(()=>{this.accBeta1=scalar(o).variable(),this.accBeta2=scalar(a).variable()}),c==null&&(this.epsilon=ENGINE.backend.epsilon())}applyGradients(s){const o=Array.isArray(s)?s.map(a=>a.name):Object.keys(s);tidy(()=>{const a=sub$2(1,this.accBeta1),c=sub$2(1,this.accBeta2);o.forEach((d,g)=>{const b=ENGINE.registeredVariables[d],$=!1;this.accumulatedFirstMoment[g]==null&&(this.accumulatedFirstMoment[g]={originalName:`${d}/m`,variable:tidy(()=>zerosLike$2(b).variable($))}),this.accumulatedSecondMoment[g]==null&&(this.accumulatedSecondMoment[g]={originalName:`${d}/v`,variable:tidy(()=>zerosLike$2(b).variable($))});const _=Array.isArray(s)?s[g].tensor:s[d];if(_==null)return;const _e=this.accumulatedFirstMoment[g].variable,et=this.accumulatedSecondMoment[g].variable,rt=add$2(mul(_e,this.beta1),mul(_,1-this.beta1)),tt=add$2(mul(et,this.beta2),mul(square$2(_),1-this.beta2)),j=div$1(rt,a),nt=div$1(tt,c);_e.assign(rt),et.assign(tt);const st=add$2(mul(div$1(j,add$2(sqrt$2(nt),this.epsilon)),-this.learningRate),b);b.assign(st)}),this.accBeta1.assign(mul(this.accBeta1,this.beta1)),this.accBeta2.assign(mul(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&dispose(this.accumulatedFirstMoment.map(s=>s.variable)),this.accumulatedSecondMoment!=null&&dispose(this.accumulatedSecondMoment.map(s=>s.variable))}async getWeights(){const s=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(s.map(o=>({name:o.originalName,tensor:o.variable})))}async setWeights(s){s=await this.extractIterations(s),tidy(()=>{this.accBeta1.assign(pow$2(this.beta1,this.iterations_+1)),this.accBeta2.assign(pow$2(this.beta2,this.iterations_+1))});const o=s.length/2,a=!1;this.accumulatedFirstMoment=s.slice(0,o).map(c=>({originalName:c.name,variable:c.tensor.variable(a)})),this.accumulatedSecondMoment=s.slice(o,o*2).map(c=>({originalName:c.name,variable:c.tensor.variable(a)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(s,o){return new s(o.learningRate,o.beta1,o.beta2,o.epsilon)}}AdamOptimizer.className="Adam";registerClass(AdamOptimizer);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AdamaxOptimizer extends Optimizer{constructor(s,o,a,c=null,d=0){super(),this.learningRate=s,this.beta1=o,this.beta2=a,this.epsilon=c,this.decay=d,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],tidy(()=>{this.iteration=scalar(0).variable(),this.accBeta1=scalar(o).variable()}),c==null&&(this.epsilon=ENGINE.backend.epsilon())}applyGradients(s){const o=Array.isArray(s)?s.map(a=>a.name):Object.keys(s);tidy(()=>{const a=sub$2(1,this.accBeta1),c=div$1(-this.learningRate,add$2(mul(this.iteration,this.decay),1));o.forEach((d,g)=>{const b=ENGINE.registeredVariables[d],$=!1;this.accumulatedFirstMoment[g]==null&&(this.accumulatedFirstMoment[g]={originalName:`${d}/m`,variable:zerosLike$2(b).variable($)}),this.accumulatedWeightedInfNorm[g]==null&&(this.accumulatedWeightedInfNorm[g]={originalName:`${d}/v`,variable:zerosLike$2(b).variable($)});const _=Array.isArray(s)?s[g].tensor:s[d];if(_==null)return;const _e=this.accumulatedFirstMoment[g].variable,et=this.accumulatedWeightedInfNorm[g].variable,rt=add$2(mul(_e,this.beta1),mul(_,1-this.beta1)),tt=mul(et,this.beta2),j=abs$2(_),nt=maximum$3(tt,j);_e.assign(rt),et.assign(nt);const st=add$2(mul(div$1(c,a),div$1(rt,add$2(nt,this.epsilon))),b);b.assign(st)}),this.iteration.assign(add$2(this.iteration,1)),this.accBeta1.assign(mul(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&dispose(this.accumulatedFirstMoment.map(s=>s.variable)),this.accumulatedWeightedInfNorm!=null&&dispose(this.accumulatedWeightedInfNorm.map(s=>s.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(s){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(s,o){return new s(o.learningRate,o.beta1,o.beta2,o.epsilon,o.decay)}}AdamaxOptimizer.className="Adamax";registerClass(AdamaxOptimizer);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SGDOptimizer extends Optimizer{constructor(s){super(),this.learningRate=s,this.setLearningRate(s)}applyGradients(s){(Array.isArray(s)?s.map(a=>a.name):Object.keys(s)).forEach((a,c)=>{const d=Array.isArray(s)?s[c].tensor:s[a];if(d==null)return;const g=ENGINE.registeredVariables[a];tidy(()=>{const b=add$2(mul(this.c,d),g);g.assign(b)})}),this.incrementIterations()}setLearningRate(s){this.learningRate=s,this.c!=null&&this.c.dispose(),this.c=keep(scalar(-s))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(s){if(s=await this.extractIterations(s),s.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(s,o){return new s(o.learningRate)}}SGDOptimizer.className="SGD";registerClass(SGDOptimizer);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MomentumOptimizer extends SGDOptimizer{constructor(s,o,a=!1){super(s),this.learningRate=s,this.momentum=o,this.useNesterov=a,this.accumulations=[],this.m=scalar(this.momentum)}applyGradients(s){(Array.isArray(s)?s.map(a=>a.name):Object.keys(s)).forEach((a,c)=>{const d=ENGINE.registeredVariables[a];this.accumulations[c]==null&&(this.accumulations[c]={originalName:`${a}/momentum`,variable:tidy(()=>zerosLike$2(d).variable(!1))});const g=this.accumulations[c].variable,b=Array.isArray(s)?s[c].tensor:s[a];b!=null&&tidy(()=>{let $;const _=add$2(mul(this.m,g),b);this.useNesterov?$=add$2(mul(this.c,add$2(b,mul(_,this.m))),d):$=add$2(mul(this.c,_),d),g.assign(_),d.assign($)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&dispose(this.accumulations.map(s=>s.variable))}setMomentum(s){this.momentum=s}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(s=>({name:s.originalName,tensor:s.variable})))}async setWeights(s){s=await this.extractIterations(s);const o=!1;this.accumulations=s.map(a=>({originalName:a.name,variable:a.tensor.variable(o)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(s,o){return new s(o.learningRate,o.momentum,o.useNesterov)}}MomentumOptimizer.className="Momentum";registerClass(MomentumOptimizer);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RMSPropOptimizer extends Optimizer{constructor(s,o=.9,a=0,c=null,d=!1){if(super(),this.learningRate=s,this.decay=o,this.momentum=a,this.epsilon=c,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=d,c==null&&(this.epsilon=ENGINE.backend.epsilon()),s==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(s){(Array.isArray(s)?s.map(a=>a.name):Object.keys(s)).forEach((a,c)=>{const d=ENGINE.registeredVariables[a],g=!1;this.accumulatedMeanSquares[c]==null&&(this.accumulatedMeanSquares[c]={originalName:`${a}/rms`,variable:tidy(()=>zerosLike$2(d).variable(g))}),this.accumulatedMoments[c]==null&&(this.accumulatedMoments[c]={originalName:`${a}/momentum`,variable:tidy(()=>zerosLike$2(d).variable(g))}),this.accumulatedMeanGrads[c]==null&&this.centered&&(this.accumulatedMeanGrads[c]={originalName:`${a}/mg`,variable:tidy(()=>zerosLike$2(d).variable(g))});const b=Array.isArray(s)?s[c].tensor:s[a];if(b==null)return;const $=this.accumulatedMeanSquares[c].variable,_=this.accumulatedMoments[c].variable;tidy(()=>{const _e=add$2(mul($,this.decay),mul(square$2(b),1-this.decay));if(this.centered){const et=this.accumulatedMeanGrads[c].variable,rt=add$2(mul(et,this.decay),mul(b,1-this.decay)),tt=div$1(mul(b,this.learningRate),sqrt$2(sub$2(_e,add$2(square$2(rt),this.epsilon)))),j=add$2(mul(_,this.momentum),tt);$.assign(_e),et.assign(rt),_.assign(j);const nt=sub$2(d,j);d.assign(nt)}else{const et=add$2(mul($,this.decay),mul(square$2(b),1-this.decay)),rt=add$2(mul(_,this.momentum),div$1(mul(b,this.learningRate),sqrt$2(add$2(et,this.epsilon))));$.assign(et),_.assign(rt);const tt=sub$2(d,rt);d.assign(tt)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&dispose(this.accumulatedMeanSquares.map(s=>s.variable)),this.accumulatedMeanGrads!=null&&this.centered&&dispose(this.accumulatedMeanGrads.map(s=>s.variable)),this.accumulatedMoments!=null&&dispose(this.accumulatedMoments.map(s=>s.variable))}async getWeights(){const s=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&s.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(s.map(o=>({name:o.originalName,tensor:o.variable})))}async setWeights(s){s=await this.extractIterations(s);const o=this.centered?s.length/3:s.length/2,a=!1;this.accumulatedMeanSquares=s.slice(0,o).map(c=>({originalName:c.name,variable:c.tensor.variable(a)})),this.accumulatedMoments=s.slice(o,o*2).map(c=>({originalName:c.name,variable:c.tensor.variable(a)})),this.centered&&(this.accumulatedMeanGrads=s.slice(o*2,o*3).map(c=>({originalName:c.name,variable:c.tensor.variable(a)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(s,o){return new s(o.learningRate,o.decay,o.momentum,o.epsilon,o.centered)}}RMSPropOptimizer.className="RMSProp";registerClass(RMSPropOptimizer);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OptimizerConstructors{static sgd(s){return new SGDOptimizer(s)}static momentum(s,o,a=!1){return new MomentumOptimizer(s,o,a)}static rmsprop(s,o=.9,a=0,c=null,d=!1){return new RMSPropOptimizer(s,o,a,c,d)}static adam(s=.001,o=.9,a=.999,c=null){return new AdamOptimizer(s,o,a,c)}static adadelta(s=.001,o=.95,a=null){return new AdadeltaOptimizer(s,o,a)}static adamax(s=.002,o=.9,a=.999,c=null,d=0){return new AdamaxOptimizer(s,o,a,c,d)}static adagrad(s,o=.1){return new AdagradOptimizer(s,o)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const train={sgd:OptimizerConstructors.sgd,momentum:OptimizerConstructors.momentum,adadelta:OptimizerConstructors.adadelta,adagrad:OptimizerConstructors.adagrad,rmsprop:OptimizerConstructors.rmsprop,adamax:OptimizerConstructors.adamax,adam:OptimizerConstructors.adam};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const delayCallback=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:i=>i())();function nextFrame(){return new Promise(i=>delayCallback(()=>i()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function assertParamsConsistent(i,s){const o=i[0].length;i.forEach((c,d)=>{assert$2(c.length===o,()=>`Error in concat${o}D: rank of tensors[${d}] must be the same as the rank of the rest (${o})`)}),assert$2(s>=0&&s<o,()=>`Error in concat${o}D: axis must be between 0 and ${o-1}.`);const a=i[0];i.forEach((c,d)=>{for(let g=0;g<o;g++)assert$2(g===s||c[g]===a[g],()=>`Error in concat${o}D: Shape of tensors[${d}] (${c}) does not match the shape of the rest (${a}) along the non-concatenated axis ${d}.`)})}function computeOutShape$1(i,s){const o=i[0].slice();for(let a=1;a<i.length;a++)o[s]+=i[a][s];return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PARALLELIZE_THRESHOLD=30;function computeOptimalWindowSize(i){return i<=PARALLELIZE_THRESHOLD?i:nearestDivisor(i,Math.floor(Math.sqrt(i)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getImageCenter(i,s,o){const a=o*(typeof i=="number"?i:i[0]),c=s*(typeof i=="number"?i:i[1]);return[a,c]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getReshaped(i,s,o,a=!0){let c=[];if(a)c=c.concat(s.slice(0)),c.push(i[0]/o),c=c.concat(i.slice(1));else{c=c.concat(i[0]);const d=s.length;for(let g=0;g<d;++g)c=c.concat([i[g+1]/s[g],s[g]]);c=c.concat(i.slice(d+1))}return c}function getPermuted(i,s,o=!0){const a=[];if(o){a.push(s);for(let c=s+1;c<i;++c)c<=2*s?(a.push(c),a.push(c-(s+1))):a.push(c)}else{const c=[],d=[];for(let g=1;g<i;++g)g>=s*2+1||g%2===1?d.push(g):c.push(g);a.push(...c),a.push(0),a.push(...d)}return a}function getReshapedPermuted(i,s,o,a=!0){const c=[];a?c.push(i[0]/o):c.push(i[0]*o);for(let d=1;d<i.length;++d)d<=s.length?a?c.push(s[d-1]*i[d]):c.push(i[d]/s[d-1]):c.push(i[d]);return c}function getSliceBeginCoords(i,s){const o=[0];for(let a=0;a<s;++a)o.push(i[a][0]);return o}function getSliceSize(i,s,o){const a=i.slice(0,1);for(let c=0;c<o;++c)a.push(i[c+1]-s[c][0]-s[c][1]);return a}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SELU_SCALEALPHA=1.7580993408473768,SELU_SCALE=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ERF_P=.3275911,ERF_A1=.254829592,ERF_A2=-.284496736,ERF_A3=1.421413741,ERF_A4=-1.453152027,ERF_A5=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function warn$1(...i){env().getBool("IS_TEST")||console.warn(...i)}function log$3(...i){env().getBool("IS_TEST")||console.log(...i)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mergeRealAndImagArrays(i,s){if(i.length!==s.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${i.length}, imag: ${s.length}.`);const o=new Float32Array(i.length*2);for(let a=0;a<o.length;a+=2)o[a]=i[a/2],o[a+1]=s[a/2];return o}function splitRealAndImagArrays(i){const s=new Float32Array(i.length/2),o=new Float32Array(i.length/2);for(let a=0;a<i.length;a+=2)s[a/2]=i[a],o[a/2]=i[a+1];return{real:s,imag:o}}function complexWithEvenIndex(i){const s=Math.ceil(i.length/4),o=new Float32Array(s),a=new Float32Array(s);for(let c=0;c<i.length;c+=4)o[Math.floor(c/4)]=i[c],a[Math.floor(c/4)]=i[c+1];return{real:o,imag:a}}function complexWithOddIndex(i){const s=Math.floor(i.length/4),o=new Float32Array(s),a=new Float32Array(s);for(let c=2;c<i.length;c+=4)o[Math.floor(c/4)]=i[c],a[Math.floor(c/4)]=i[c+1];return{real:o,imag:a}}function getComplexWithIndex(i,s){const o=i[s*2],a=i[s*2+1];return{real:o,imag:a}}function assignToTypedArray(i,s,o,a){i[a*2]=s,i[a*2+1]=o}function exponents(i,s){const o=new Float32Array(i/2),a=new Float32Array(i/2);for(let c=0;c<Math.ceil(i/2);c++){const d=(s?2:-2)*Math.PI*(c/i);o[c]=Math.cos(d),a[c]=Math.sin(d)}return{real:o,imag:a}}function exponent(i,s,o){const a=(o?2:-2)*Math.PI*(i/s),c=Math.cos(a),d=Math.sin(a);return{real:c,imag:d}}function prepareSplitSize(i,s,o=0){let a=[];if(typeof s=="number")assert$2(i.shape[o]%s===0,()=>"Number of splits must evenly divide the axis."),a=new Array(s).fill(i.shape[o]/s);else{const c=s.reduce((g,b)=>(b===-1&&(g+=1),g),0);assert$2(c<=1,()=>"There should be only one negative value in split array.");const d=s.indexOf(-1);if(d!==-1){const g=s.reduce((b,$)=>$>0?b+$:b);s[d]=i.shape[o]-g}assert$2(i.shape[o]===s.reduce((g,b)=>g+b),()=>"The sum of sizes must match the size of the axis dimension."),a=s}return a}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function segOpComputeOptimalWindowSize(i,s){let o=!1,a;for(i<=PARALLELIZE_THRESHOLD?(a=i,o=!0):a=nearestDivisor(i,Math.floor(Math.sqrt(i)));!o;)a>s||a===i?o=!0:a=nearestDivisor(i,a+1);return a}function computeOutShape(i,s,o){const a=[],c=i.length;for(let d=0;d<c;d++)d!==s?a.push(i[d]):a.push(o);return a}function collectGatherOpShapeInfo(i,s,o,a){const c=s.shape.length,d=i.shape.length;if(a!==0&&(a<-c||a>c))throw new Error(`Expect batchDims in the range of [-${c}, ${c}], but got ${a}`);if(a<0&&(a+=c),a>d)throw new Error(`batchDims (${a}) must be less than rank(x) (
    ${d}).`);if(o<a)throw new Error(`batchDims (${a}) must be less than or equal to axis (${o}).`);for(let et=0;et<a;++et)if(i.shape[et]!==s.shape[et])throw new Error(`x.shape[${et}]: ${i.shape[et]} should be equal to indices.shape[${et}]: ${s.shape[et]}.`);const g=i.shape[o],b=[];let $=1,_=1,_e=1;for(let et=0;et<a;++et)b.push(i.shape[et]),$*=i.shape[et];for(let et=a;et<o;et++)b.push(i.shape[et]),_*=i.shape[et];for(let et=a;et<c;et++)b.push(s.shape[et]);for(let et=o+1;et<d;et++)b.push(i.shape[et]),_e*=i.shape[et];return{batchSize:$,sliceSize:_e,outerSize:_,dimSize:g,outputShape:b}}const segment_util=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo,computeOutShape,segOpComputeOptimalWindowSize},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function castTensor(i,s,o){if(s==="complex64"){if(i.dtype==="complex64")return i.clone();const a=zeros$2(i.shape),c=cast$3(i,"float32"),d=o.complex(c,a);return a.dispose(),c.dispose(),d}if(!hasEncodingLoss(i.dtype,s))return ENGINE.makeTensorFromDataId(i.dataId,i.shape,s);if(i.dtype==="complex64"){const a=o.real(i),c=cast$3(a,s);return a.dispose(),c}if(s==="int32")return o.int(i);if(s==="bool"){const a=scalar(0,i.dtype),c=o.notEqual(i,a);return a.dispose(),c}else throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${s}`)}function reshapeTensor(i,s){return ENGINE.makeTensorFromDataId(i.dataId,s,i.dtype)}function fromUint8ToStringArray(i){try{return i.map(s=>decodeString(s))}catch(s){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${s}`)}}function fromStringArrayToUint8(i){return i.map(s=>encodeString(s))}const backend_util=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1,ERF_A2,ERF_A3,ERF_A4,ERF_A5,ERF_P,PARALLELIZE_THRESHOLD,SELU_SCALE,SELU_SCALEALPHA,applyActivation:applyActivation$1,assertAndGetBroadcastShape,assertAxesAreInnerMostDims,assertParamsConsistent,assignToTypedArray,axesAreInnerMostDims,calculateShapes,castTensor,combineLocations,complexWithEvenIndex,complexWithOddIndex,computeConv2DInfo,computeConv3DInfo,computeDefaultPad,computeDilation2DInfo,computeOptimalWindowSize,computeOutAndReduceShapes,computeOutShape:computeOutShape$1,computePool2DInfo,computePool3DInfo,convertConv2DDataFormat,eitherStridesOrDilationsAreOne,expandShapeToKeepDim,exponent,exponents,fromStringArrayToUint8,fromUint8ToStringArray,getAxesPermutation,getBroadcastDims:getBroadcastDims$1,getComplexWithIndex,getFusedBiasGradient,getFusedDyActivation,getImageCenter,getInnerMostAxes,getPermuted,getReductionAxes,getReshaped,getReshapedPermuted,getSliceBeginCoords,getSliceSize,getUndoAxesPermutation,log:log$3,mergeRealAndImagArrays,prepareAndValidate,prepareSplitSize,reshapeTensor,segment_util,shouldFuse,slice_util,splitRealAndImagArrays,tupleValuesAreOne,upcastType,validateInput:validateInput$1,validateUpdateShape,warn:warn$1},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kernel_impls=Object.freeze(Object.defineProperty({__proto__:null,nonMaxSuppressionV3Impl:nonMaxSuppressionV3Impl$2,nonMaxSuppressionV4Impl:nonMaxSuppressionV4Impl$2,nonMaxSuppressionV5Impl:nonMaxSuppressionV5Impl$2,whereImpl:whereImpl$2},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const absGradConfig={kernelName:Abs$1,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>mul(i,step$2(cast$3(o,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const acosGradConfig={kernelName:Acos,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>{const a=square$2(cast$3(o,"float32")),c=sqrt$2(sub$2(scalar(1),a));return neg$2(div$1(i,c))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const acoshGradConfig={kernelName:Acosh,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>{const a=sqrt$2(sub$2(square$2(cast$3(o,"float32")),1));return div$1(i,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const addGradConfig={kernelName:Add$2,inputsToSave:["a","b"],gradFunc:(i,s)=>{const[o,a]=s,c=assertAndGetBroadcastShape(o.shape,a.shape);return{a:()=>{let b=i;const $=getReductionAxes(o.shape,c);return $.length>0&&(b=sum$2(b,$)),reshape$3(b,o.shape)},b:()=>{let b=i;const $=getReductionAxes(a.shape,c);return $.length>0&&(b=sum$2(b,$)),reshape$3(b,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const addNGradConfig={kernelName:AddN,saveAllInputs:!0,gradFunc:(i,s)=>{const o={};return s.forEach((a,c)=>{o[c]=()=>i.clone()}),o}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const argMaxGradConfig={kernelName:ArgMax,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>zerosLike$2(o)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const argMinGradConfig={kernelName:ArgMin,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>zerosLike$2(o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const asinGradConfig={kernelName:Asin,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>div$1(i,sqrt$2(sub$2(scalar(1),square$2(cast$3(o,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const asinhGradConfig={kernelName:Asinh,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>{const a=sqrt$2(add$2(scalar(1),square$2(cast$3(o,"float32"))));return div$1(i,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atan2GradConfig={kernelName:Atan2,inputsToSave:["a","b"],gradFunc:(i,s)=>{const[o,a]=s,c=assertAndGetBroadcastShape(o.shape,a.shape);return{a:()=>{const b=add$2(square$2(o),square$2(a));let $=mul(i,div$1(a,b));const _=getReductionAxes(o.shape,c);return _.length>0&&($=sum$2($,_)),reshape$3($,o.shape)},b:()=>{const b=add$2(square$2(o),square$2(a));let $=neg$2(mul(i,div$1(o,b)));const _=getReductionAxes(a.shape,c);return _.length>0&&($=sum$2($,_)),reshape$3($,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atanGradConfig={kernelName:Atan,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>div$1(i,add$2(square$2(cast$3(o,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atanhGradConfig={kernelName:Atanh,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>div$1(i,sub$2(scalar(1),square$2(cast$3(o,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3dGrad_(i,s,o,a,c=[1,1,1],d,g){const b=convertToTensor(i,"dy","avgPool3dGrad"),$=convertToTensor(s,"input","avgPool3dGrad");let _=b,_e=$,et=!1;$.rank===4&&(et=!0,_=reshape$3(b,[1,b.shape[0],b.shape[1],b.shape[2],b.shape[3]]),_e=reshape$3($,[1,$.shape[0],$.shape[1],$.shape[2],$.shape[3]])),assert$2(_.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${_.rank}.`),assert$2(_e.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${_e.rank}.`),assert$2(eitherStridesOrDilationsAreOne(a,c),()=>`Error in avgPool3dGrad: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`),g!=null&&assert$2(isInt(d),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${g} but got pad ${d}.`);const rt={dy:_,input:_e},tt={filterSize:o,strides:a,dilations:c,pad:d,dimRoundingMode:g},j=ENGINE.runKernel(AvgPool3DGrad,rt,tt);return et?reshape$3(j,[j.shape[1],j.shape[2],j.shape[3],j.shape[4]]):j}const avgPool3dGrad=op({avgPool3dGrad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const avgPool3DGradConfig$1={kernelName:AvgPool3D,inputsToSave:["x"],gradFunc:(i,s,o)=>{const[a]=s,{filterSize:c,strides:d,dilations:g,pad:b,dimRoundingMode:$}=o,_=g??[1,1,1];return{x:()=>avgPool3dGrad(i,a,c,d,_,b,$)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPoolGrad_(i,s,o,a,c){const d=convertToTensor(i,"dy","avgPoolGrad"),g=convertToTensor(s,"input","avgPoolGrad");assert$2(g.rank===d.rank,()=>`Rank of input (${g.rank}) does not match rank of dy (${d.rank})`);let b=g,$=d,_=!1;g.rank===3&&(_=!0,b=reshape$3(g,[1,g.shape[0],g.shape[1],g.shape[2]]),$=reshape$3(d,[1,d.shape[0],d.shape[1],d.shape[2]])),assert$2($.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${$.rank}.`),assert$2(b.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${b.rank}.`);const _e={dy:$,input:b},et={filterSize:o,strides:a,pad:c},rt=ENGINE.runKernel(AvgPoolGrad,_e,et);return _?reshape$3(rt,[rt.shape[1],rt.shape[2],rt.shape[3]]):rt}const avgPoolGrad$2=op({avgPoolGrad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const avgPoolGradConfig$2={kernelName:AvgPool,inputsToSave:["x"],gradFunc:(i,s,o)=>{const[a]=s,{filterSize:c,strides:d,pad:g}=o;return{x:()=>avgPoolGrad$2(i,a,c,d,g)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const batchMatMulGradConfig={kernelName:BatchMatMul,inputsToSave:["a","b"],gradFunc:(i,s,o)=>{const[a,c]=s,{transposeA:d,transposeB:g}=o;return!d&&!g?{a:()=>matMul$1(i,c,!1,!0),b:()=>matMul$1(a,i,!0,!1)}:!d&&g?{a:()=>matMul$1(i,c,!1,!1),b:()=>matMul$1(i,a,!0,!1)}:d&&!g?{a:()=>matMul$1(c,i,!1,!0),b:()=>matMul$1(a,i,!1,!1)}:{a:()=>matMul$1(c,i,!0,!0),b:()=>matMul$1(i,a,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const batchToSpaceNDGradConfig={kernelName:BatchToSpaceND,gradFunc:(i,s,o)=>{const{blockShape:a,crops:c}=o;return{x:()=>spaceToBatchND$2(i,a,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const broadcastToGradConfig={kernelName:BroadcastTo,gradFunc:(i,s,o)=>{const a=o,c=a.inputShape,d=a.shape,g=Array.from(d);for(let $=c.length-1;$>=0;$--)if(c[$]===d[$])g[$]=1;else if(c[$]!==1)throw new Error(`broadcastTo(): [${c}] cannot be broadcast to [${d}].`);const b=[];for(let $=0;$<g.length;$++)g[$]>1&&b.push($);return{x:()=>sum$2(i,b,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const castGradConfig={kernelName:Cast,gradFunc:i=>({x:()=>i.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ceilGradConfig={kernelName:Ceil,gradFunc:i=>({x:()=>zerosLike$2(i)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const clipByValueGradConfig={kernelName:ClipByValue,inputsToSave:["x"],gradFunc:(i,s,o)=>{const[a]=s,{clipValueMin:c,clipValueMax:d}=o;return{x:()=>where(logicalAnd$2(greaterEqual$2(a,c),lessEqual$2(a,d)),i,zerosLike$2(i))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const complexAbsGradConfig={kernelName:ComplexAbs,inputsToSave:["x"],gradFunc:absGradConfig.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const concatGradConfig={kernelName:Concat,saveAllInputs:!0,gradFunc:(i,s,o)=>{const a=s.map($=>$.shape),{axis:c}=o,d=parseAxisParam(c,s[0].shape)[0],g=a.map($=>$[d]);return split$1(i,g,d).map($=>()=>$)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const conv2DGradConfig={kernelName:Conv2D$1,inputsToSave:["x","filter"],gradFunc:(i,s,o)=>{const[a,c]=s,{dilations:d,strides:g,pad:b,dataFormat:$}=o;return assert$2(tupleValuesAreOne(d),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${d}'`),{x:()=>conv2DBackpropInput$2(a.shape,i,c,g,b,$),filter:()=>conv2DBackpropFilter$2(a,i,c.shape,g,b,$)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const conv2DBackpropInputGradConfig={kernelName:Conv2DBackpropInput,inputsToSave:["dy","filter"],gradFunc:(i,s,o)=>{const[a,c]=s,{strides:d,pad:g,dataFormat:b,dimRoundingMode:$}=o;return{dy:()=>conv2d$3(i,c,d,g,b,1,$),filter:()=>conv2DBackpropFilter$2(i,a,c.shape,d,g,b,$)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropFilter_(i,s,o,a,c){let d=i;i.rank===4&&(d=reshape$3(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]));let g=s;g.rank===4&&(g=reshape$3(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),assert$2(d.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${d.shape}.`),assert$2(g.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${g.shape}.`),assert$2(o.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${o}.`),assert$2(d.shape[4]===o[3],()=>`Error in conv3dDerFilter: depth of input ${d.shape[4]}) must match input depth in filter (${o[3]}.`),assert$2(g.shape[4]===o[4],()=>`Error in conv3dDerFilter: depth of dy (${g.shape[4]}) must match output depth for filter (${o[4]}).`);const b={x:d,dy:g},$={strides:a,pad:c,filterShape:o};return ENGINE.runKernel(Conv3DBackpropFilterV2,b,$)}const conv3DBackpropFilter=op({conv3DBackpropFilter_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const conv3DGradConfig={kernelName:Conv3D$1,inputsToSave:["x","filter"],gradFunc:(i,s,o)=>{const{dilations:a,strides:c,pad:d}=o;assert$2(tupleValuesAreOne(a),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);const[g,b]=s;return{x:()=>conv3DBackpropInput$1(g.shape,i,b,c,d),filter:()=>conv3DBackpropFilter(g,i,b.shape,c,d)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cosGradConfig={kernelName:Cos,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>mul(neg$2(sin$2(cast$3(o,"float32"))),i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const coshGradConfig={kernelName:Cosh,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>mul(sinh$2(cast$3(o,"float32")),i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cumsumGradConfig={kernelName:Cumsum,inputsToSave:["x"],gradFunc:(i,s,o)=>{const[a]=s,{axis:c,exclusive:d,reverse:g}=o;return{x:()=>{const b=getAxesPermutation([c],a.rank);let $=cumsum$2(i,c,d,!g);return b!=null&&($=transpose$2($,b)),$}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const depthwiseConv2dNativeGradConfig={kernelName:DepthwiseConv2dNative,inputsToSave:["x","filter"],gradFunc:(i,s,o)=>{const{dilations:a,strides:c,pad:d,dimRoundingMode:g}=o,b=a??[1,1];assert$2(tupleValuesAreOne(b),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${b}'`);const[$,_]=s;return assert$2($.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${$.rank}.`),assert$2(_.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${_.rank}.`),assert$2($.shape[3]===_.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${$.shape[3]}) must match the inChannels dimension in filter ${_.shape[2]}.`),assert$2(eitherStridesOrDilationsAreOne(c,b),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${c} and dilations '${b}'.`),g!=null&&assert$2(isInt(d),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${g} but got pad ${d}.`),{x:()=>depthwiseConv2dNativeBackpropInput$2($.shape,i,_,c,d,a,g),filter:()=>depthwiseConv2dNativeBackpropFilter$2($,i,_.shape,c,d,a,g)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dilation2dGradConfig={kernelName:Dilation2D,inputsToSave:["x","filter"],gradFunc:(i,s,o)=>{const[a,c]=s,d={x:a,filter:c,dy:i},g={x:a,filter:c,dy:i};return{x:()=>ENGINE.runKernel(Dilation2DBackpropInput,d,o),filter:()=>ENGINE.runKernel(Dilation2DBackpropFilter,g,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eluGradConfig$2={kernelName:Elu$1,outputsToSave:[!0],gradFunc:(i,s)=>{const[o]=s,a={dy:i,y:o};return{x:()=>ENGINE.runKernel(EluGrad,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const erfGradConfig={kernelName:Erf,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s,a=mul(exp$2(neg$2(square$2(o))),2/Math.sqrt(Math.PI));return{x:()=>mul(i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expGradConfig={kernelName:Exp,outputsToSave:[!0],gradFunc:(i,s)=>{const[o]=s;return{x:()=>mul(i,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expandDimsGradConfig={kernelName:ExpandDims,inputsToSave:["input"],gradFunc:(i,s)=>{const[o]=s;return{input:()=>reshape$3(i,o.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expm1GradConfig={kernelName:Expm1,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>mul(i,exp$2(o))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const floorGradConfig={kernelName:Floor,gradFunc:i=>({x:()=>zerosLike$2(i)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const floorDivGradConfig={kernelName:FloorDiv,inputsToSave:["a","b"],gradFunc:(i,s)=>{const[o,a]=s,c=assertAndGetBroadcastShape(o.shape,a.shape);return{a:()=>{const b=div$1(i,cast$3(a,"float32")),$=getReductionAxes(o.shape,c);return $.length>0?reshape$3(sum$2(b,$),o.shape):b},b:()=>{let b=mul(i,cast$3(o,"float32"));const $=getReductionAxes(a.shape,c);$.length>0&&(b=reshape$3(sum$2(b,$),a.shape));const _=square$2(a);return neg$2(div$1(b,cast$3(_,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fusedBatchNormGradConfig={kernelName:FusedBatchNorm,inputsToSave:["x","mean","variance","scale"],gradFunc:(i,s,o)=>{const{varianceEpsilon:a}=o,[c,d,g,b]=s,$=b??scalar(1),_=getReductionAxes(d.shape,c.shape),_e=[];if(d.rank===1){for(let pt=0;pt<c.shape.length-1;++pt)_e.push(c.shape[pt]);_e.push(1)}const et=sub$2(c,d),rt=mul(i,$),tt=rsqrt$2(add$2(g,scalar(a))),j=mul(mul(mul(tt,tt),tt),scalar(-.5));return{x:()=>d.rank===1?reshape$3(mul(mul(i,tile$3(reshape$3(tt,[1,1,1,d.shape[0]]),_e)),$),c.shape):reshape$3(mul(mul(i,tt),$),c.shape),mean:()=>{let pt=mul(mul(tt,scalar(-1)),rt);return d.rank===1&&(pt=sum$2(pt,_)),reshape$3(pt,d.shape)},variance:()=>{let pt=mul(mul(j,et),rt);return d.rank===1&&(pt=sum$2(pt,_)),reshape$3(pt,d.shape)},scale:()=>{const pt=mul(et,tt);let it=mul(i,pt);return d.rank===1&&(it=sum$2(it,_)),reshape$3(it,d.shape)},offset:()=>{let pt=i;return d.rank===1&&(pt=sum$2(pt,_)),reshape$3(pt,d.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gatherGradConfig={kernelName:GatherV2,inputsToSave:["x","indices"],gradFunc:(i,s,o)=>{const[a,c]=s,{axis:d}=o,g=parseAxisParam(d,a.shape)[0];return{x:()=>{const $=a.shape,_=c.size,_e=$.slice(0,g),et=_e.length,rt=$.slice(d,$.length).slice(1),tt=rt.length,j=arrayRange(0,et),nt=arrayRange(et+1,et+1+tt),st=arrayConcat([_e,[_],rt]),ot=reshape$3(i,st),ut=reshape$3(c,[_]),ht=arrayConcat([[et],j,nt]),pt=transpose$2(ot,ht);let it=unsortedSegmentSum$2(pt,ut,a.shape[g]);const yt=getUndoAxesPermutation(ht);return it=transpose$2(it,yt),it},indices:()=>c}}};function arrayRange(i,s){const o=[];for(let a=i;a<s;++a)o.push(a);return o}function arrayConcat(i){const s=[];for(let o=0;o<i.length;++o)for(let a=0;a<i[o].length;++a)s.push(i[o][a]);return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const greaterEqualGradConfig={kernelName:GreaterEqual,inputsToSave:["a","b"],gradFunc:(i,s)=>{const[o,a]=s;return{a:()=>zerosLike$2(o),b:()=>zerosLike$2(a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const identityGradConfig={kernelName:Identity$1,gradFunc:i=>({x:()=>cast$3(i,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isFiniteGradConfig={kernelName:IsFinite,gradFunc:i=>({x:()=>zerosLike$2(i)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isInfGradConfig={kernelName:IsInf,gradFunc:i=>({x:()=>zerosLike$2(i)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isNanGradConfig={kernelName:IsNan,gradFunc:i=>({x:()=>zerosLike$2(i)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const leakyReluGradConfig={kernelName:LeakyRelu,inputsToSave:["x"],gradFunc:(i,s,o)=>{const[a]=s,{alpha:c}=o,d=greater$3(a,0);return{x:()=>where(d,i,mul(i,c))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const log1pGradConfig={kernelName:Log1p,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>div$1(i,add$2(o,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logGradConfig={kernelName:Log,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>div$1(i,cast$3(o,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logSoftmaxGradConfig={kernelName:LogSoftmax$1,inputsToSave:[],outputsToSave:[!0],gradFunc:(i,s,o)=>{const[a]=s,{axis:c}=o;return{logits:()=>{const g=exp$2(a);return sub$2(i,mul(sum$2(i,c,!0),g))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function localResponseNormalizationBackprop_(i,s,o,a=5,c=1,d=1,g=.5){const b={x:i,y:s,dy:o},$={depthRadius:a,bias:c,alpha:d,beta:g};return ENGINE.runKernel(LRNGrad,b,$)}const localResponseNormalizationBackprop=op({localResponseNormalizationBackprop_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lrnGradConfig={kernelName:LRN,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(i,s,o)=>{const[a,c]=s,{depthRadius:d,bias:g,alpha:b,beta:$}=o;return{x:()=>localResponseNormalizationBackprop(a,c,i,d,g,b,$)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gradForMinAndMax(i,s,o,a){return s.rank<o.rank&&(s=reshape$3(s,expandShapeToKeepDim(s.shape,a))),i.rank<o.rank&&(i=reshape$3(i,expandShapeToKeepDim(i.shape,a))),{x:()=>mul(i,cast$3(equal$2(o,s),i.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxGradConfig={kernelName:Max,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(i,s,o)=>{const a=o,{reductionIndices:c}=a,d=s[0],g=s[1],b=parseAxisParam(c,d.shape),$=gradForMinAndMax(i,g,d,b);return{x:()=>$.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maximumGradConfig={kernelName:Maximum$1,inputsToSave:["a","b"],gradFunc:(i,s)=>{const[o,a]=s;return{a:()=>mul(i,cast$3(greaterEqual$2(o,a),"float32")),b:()=>mul(i,cast$3(less$3(o,a),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3dGrad_(i,s,o,a,c,d=[1,1,1],g,b){const $=convertToTensor(i,"dy","maxPool3dGrad"),_=convertToTensor(s,"input","maxPool3dGrad"),_e=convertToTensor(o,"output","maxPool3dGrad");let et=$,rt=_,tt=_e,j=!1;_.rank===4&&(j=!0,et=reshape$3($,[1,$.shape[0],$.shape[1],$.shape[2],$.shape[3]]),rt=reshape$3(_,[1,_.shape[0],_.shape[1],_.shape[2],_.shape[3]]),tt=reshape$3(_e,[1,_e.shape[0],_e.shape[1],_e.shape[2],_e.shape[3]])),assert$2(et.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${et.rank}.`),assert$2(rt.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${rt.rank}.`),assert$2(tt.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${tt.rank}.`),assert$2(eitherStridesOrDilationsAreOne(c,d),()=>`Error in maxPool3dGrad: Either strides or dilations must be 1. Got strides ${c} and dilations '${d}'`),b!=null&&assert$2(isInt(g),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${b} but got pad ${g}.`);const nt={dy:et,input:rt,output:tt},st={filterSize:a,strides:c,dilations:d,pad:g,dimRoundingMode:b},ot=ENGINE.runKernel(MaxPool3DGrad,nt,st);return j?reshape$3(ot,[ot.shape[1],ot.shape[2],ot.shape[3],ot.shape[4]]):ot}const maxPool3dGrad=op({maxPool3dGrad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxPool3DGradConfig$1={kernelName:MaxPool3D,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(i,s,o)=>{const[a,c]=s,{filterSize:d,strides:g,dilations:b,pad:$,dimRoundingMode:_}=o,_e=b??[1,1,1];return{x:()=>maxPool3dGrad(i,a,c,d,g,_e,$,_)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolGrad_(i,s,o,a,c,d,g){const b=convertToTensor(i,"dy","maxPoolGrad"),$=convertToTensor(s,"input","maxPoolGrad"),_=convertToTensor(o,"output","maxPoolGrad");assert$2($.rank===b.rank,()=>`Rank of input (${$.rank}) does not match rank of dy (${b.rank})`),assert$2(b.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${b.rank}.`),assert$2($.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${$.rank}.`),g!=null&&assert$2(isInt(d),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${g} but got pad ${d}.`);const _e={dy:b,input:$,output:_},et={filterSize:a,strides:c,pad:d,dimRoundingMode:g};return ENGINE.runKernel(MaxPoolGrad,_e,et)}const maxPoolGrad$2=op({maxPoolGrad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxPoolGradConfig$2={kernelName:MaxPool,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(i,s,o)=>{const[a,c]=s,{filterSize:d,strides:g,pad:b}=o;return{x:()=>maxPoolGrad$2(i,a,c,d,g,b)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const meanGradConfig={kernelName:Mean,inputsToSave:["x"],gradFunc:(i,s,o)=>{const[a]=s,{axis:c}=o,d=parseAxisParam(c,a.shape),b=computeOutAndReduceShapes(a.shape,d)[1],$=sizeFromShape(b);return{x:()=>{const _e=a.shape.slice();d.forEach(tt=>{_e[tt]=1});const et=reshape$3(i,_e);return div$1(mul(et,ones$1(a.shape,"float32")),$)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const minGradConfig={kernelName:Min,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(i,s,o)=>{const a=o,{axis:c}=a,[d,g]=s,b=parseAxisParam(c,d.shape),$=gradForMinAndMax(i,g,d,b);return{x:()=>$.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const minimumGradConfig={kernelName:Minimum$1,inputsToSave:["a","b"],gradFunc:(i,s)=>{const[o,a]=s;return{a:()=>mul(i,cast$3(lessEqual$2(o,a),"float32")),b:()=>mul(i,cast$3(greater$3(o,a),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mirrorPadGradConfig={kernelName:MirrorPad,inputsToSave:["x"],gradFunc:(i,s,o)=>{const a=s[0],{paddings:c}=o,d=c.map(g=>g[0]);return{x:()=>slice$2(i,d,a.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const modGradConfig={kernelName:Mod,inputsToSave:["a","b"],gradFunc:(i,s)=>{const[o,a]=s,c=assertAndGetBroadcastShape(o.shape,a.shape);return{a:()=>{const b=getReductionAxes(o.shape,c);return b.length>0?reshape$3(sum$2(i,b),o.shape):i},b:()=>{const b=mul(i,neg$2(floor$2(div$1(o,a)))),$=getReductionAxes(a.shape,c);return $.length>0?reshape$3(sum$2(b,$),a.shape):b}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const multiplyGradConfig={kernelName:Multiply$2,inputsToSave:["a","b"],gradFunc:(i,s)=>{const[o,a]=s,c=assertAndGetBroadcastShape(o.shape,a.shape);return{a:()=>{const b=mul(i,cast$3(a,"float32")),$=getReductionAxes(o.shape,c);return $.length>0?reshape$3(sum$2(b,$),o.shape):b},b:()=>{const b=mul(i,cast$3(o,"float32")),$=getReductionAxes(a.shape,c);return $.length>0?reshape$3(sum$2(b,$),a.shape):b}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const negGradConfig={kernelName:Neg,gradFunc:i=>({x:()=>neg$2(i)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oneHotGradConfig={kernelName:OneHot,inputsToSave:["indices"],gradFunc:(i,s)=>{const o=s[0];return{indices:()=>zeros$2(o.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const onesLikeGradConfig={kernelName:OnesLike,gradFunc:i=>({x:()=>zerosLike$2(i)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const packGradConfig={kernelName:Pack,saveAllInputs:!0,gradFunc:(i,s,o)=>{const{axis:a}=o;return unstack(i,a).map(d=>()=>d)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const padV2GradConfig={kernelName:PadV2,inputsToSave:["x"],gradFunc:(i,s,o)=>{const a=s[0],{paddings:c}=o,d=c.map(g=>g[0]);return{x:()=>slice$2(i,d,a.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const powGradConfig={kernelName:Pow$1,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(i,s)=>{const[o,a,c]=s,d=o,g=a,b=assertAndGetBroadcastShape(d.shape,g.shape);return{a:()=>{const _e=cast$3(g,"float32");let et=mul(i,mul(_e,pow$2(d,sub$2(_e,scalar(1)))));const rt=getReductionAxes(d.shape,b);return rt.length>0&&(et=sum$2(et,rt)),reshape$3(et,d.shape)},b:()=>{const _e=greater$3(d,0),et=where(_e,log$4(d),zerosLike$2(d));let rt=mul(i,mul(c,et));const tt=getReductionAxes(g.shape,b);return tt.length>0&&(rt=sum$2(rt,tt)),reshape$3(rt,g.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const preluGradConfig={kernelName:Prelu,inputsToSave:["x","alpha"],gradFunc:(i,s)=>{const[o,a]=s,c=greater$3(o,0);return{x:()=>where(c,i,mul(i,a)),alpha:()=>{let d=where(c,zerosLike$2(i),mul(i,o));const g=getReductionAxes(a.shape,i.shape);return g.length>0&&(d=sum$2(d,g)),reshape$3(d,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const divGradConfig={kernelName:RealDiv,inputsToSave:["a","b"],gradFunc:(i,s)=>{const[o,a]=s,c=assertAndGetBroadcastShape(o.shape,a.shape);return{a:()=>{const b=div$1(i,cast$3(a,"float32")),$=getReductionAxes(o.shape,c);return $.length>0?reshape$3(sum$2(b,$),o.shape):b},b:()=>{let b=mul(i,cast$3(o,"float32"));const $=getReductionAxes(a.shape,c);$.length>0&&(b=reshape$3(sum$2(b,$),a.shape));const _=square$2(a);return neg$2(div$1(b,cast$3(_,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reciprocalGradConfig={kernelName:Reciprocal,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>div$1(i,neg$2(square$2(o)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const relu6GradConfig={kernelName:Relu6$1,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s,a=mul(lessEqual$2(o,6),step$2(o));return{x:()=>mul(i,cast$3(a,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reluGradConfig={kernelName:Relu$1,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>mul(i,cast$3(step$2(o),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reshapeGradConfig={kernelName:Reshape$1,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>reshape$3(i,o.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const resizeBilinearGradConfig$2={kernelName:ResizeBilinear,inputsToSave:["images"],gradFunc:(i,s,o)=>{const[a]=s,c={dy:i,images:a};return{images:()=>ENGINE.runKernel(ResizeBilinearGrad,c,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const resizeNearestNeighborGradConfig$2={kernelName:ResizeNearestNeighbor,inputsToSave:["images"],gradFunc:(i,s,o)=>{const[a]=s,c={dy:i,images:a};return{images:()=>ENGINE.runKernel(ResizeNearestNeighborGrad,c,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reverseGradConfig={kernelName:Reverse,gradFunc:(i,s,o)=>{const{dims:a}=o,c=parseAxisParam(a,i.shape);return{x:()=>reverse$2(i,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const roundGradConfig={kernelName:Round,gradFunc:i=>({x:()=>zerosLike$2(i)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rsqrtGradConfig={kernelName:Rsqrt,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>neg$2(div$1(i,mul(pow$2(o,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const selectGradConfig={kernelName:Select,inputsToSave:["condition"],gradFunc:(i,s)=>{const[o]=s;return{condition:()=>cast$3(zerosLike$2(o),"float32"),t:()=>mul(i,cast$3(o,i.dtype)),e:()=>mul(i,cast$3(logicalNot$2(o),i.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const seluGradConfig={kernelName:Selu$1,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>{const a=greater$3(o,scalar(0)),c=scalar(SELU_SCALEALPHA),d=scalar(SELU_SCALE),g=mul(i,d),b=mul(mul(i,c),exp$2(cast$3(o,"float32")));return where(a,g,b)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sigmoidGradConfig={kernelName:Sigmoid$1,outputsToSave:[!0],gradFunc:(i,s)=>{const[o]=s;return{x:()=>mul(i,mul(o,sub$2(scalar(1),o)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const signGradConfig={kernelName:Sign,gradFunc:i=>({x:()=>zerosLike$2(i)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sinGradConfig={kernelName:Sin,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>mul(cos$2(cast$3(o,"float32")),i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sinhGradConfig={kernelName:Sinh,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>mul(cosh$2(cast$3(o,"float32")),i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sliceGradConfig={kernelName:Slice,inputsToSave:["x"],gradFunc:(i,s,o)=>{const[a]=s,{begin:c,size:d}=o,g=a.shape,[b,$]=parseSliceParams(a,c,d),_=[];for(let _e=0;_e<i.rank;_e++)_.push([b[_e],g[_e]-b[_e]-$[_e]]);return{x:()=>pad(i,_)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const softmaxGradConfig={kernelName:Softmax$2,outputsToSave:[!0],gradFunc:(i,s,o)=>{const[a]=s,{dim:c}=o,d=!0,g=mul(i,a);return{logits:()=>sub$2(g,mul(sum$2(g,[c],d),a))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const softplusGradConfig={kernelName:Softplus$1,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>mul(i,sigmoid$2(o))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const spaceToBatchNDGradConfig={kernelName:SpaceToBatchND,gradFunc:(i,s,o)=>{const{blockShape:a,paddings:c}=o;return{x:()=>batchToSpaceND$2(i,a,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const splitVGradConfig={kernelName:SplitV,gradFunc:(i,s,o)=>{const{axis:a}=o;return{x:()=>concat$2(i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sqrtGradConfig={kernelName:Sqrt,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>div$1(i,mul(sqrt$2(cast$3(o,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const squareGradConfig={kernelName:Square,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>mul(i,mul(cast$3(o,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const squaredDifferenceGradConfig={kernelName:SquaredDifference,inputsToSave:["a","b"],gradFunc:(i,s)=>{const[o,a]=s,c=scalar(2);return{a:()=>mul(i,mul(c,sub$2(o,a))),b:()=>mul(i,mul(c,sub$2(a,o)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const stepGradConfig={kernelName:Step,gradFunc:i=>({x:()=>zerosLike$2(i)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const subGradConfig={kernelName:Sub,inputsToSave:["a","b"],gradFunc:(i,s)=>{const[o,a]=s,c=assertAndGetBroadcastShape(o.shape,a.shape);return{a:()=>{let b=i;const $=getReductionAxes(o.shape,c);return $.length>0&&(b=sum$2(b,$)),reshape$3(b,o.shape)},b:()=>{let b=i;const $=getReductionAxes(a.shape,c);return $.length>0&&(b=sum$2(b,$)),reshape$3(neg$2(b),a.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sumGradConfig={kernelName:Sum,inputsToSave:["x"],gradFunc:(i,s,o)=>{const[a]=s,c=a.shape.slice(),{axis:d}=o;parseAxisParam(d,a.shape).forEach(_=>{c[_]=1});const b=reshape$3(i,c),$=mul(b,ones$1(a.shape,"float32"));return{x:()=>$}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tanGradConfig={kernelName:Tan,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>div$1(i,square$2(cos$2(o)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tanhGradConfig={kernelName:Tanh$1,outputsToSave:[!0],gradFunc:(i,s)=>{const[o]=s;return{x:()=>mul(sub$2(scalar(1),square$2(o)),i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tileGradConfig={kernelName:Tile,inputsToSave:["x"],gradFunc:(i,s,o)=>{const[a]=s,{reps:c}=o;return{x:()=>{let g=zerosLike$2(a);if(a.rank===1)for(let b=0;b<c[0];++b)g=add$2(g,slice$2(i,[b*a.shape[0]],[a.shape[0]]));else if(a.rank===2)for(let b=0;b<c[0];++b)for(let $=0;$<c[1];++$)g=add$2(g,slice$2(i,[b*a.shape[0],$*a.shape[1]],[a.shape[0],a.shape[1]]));else if(a.rank===3)for(let b=0;b<c[0];++b)for(let $=0;$<c[1];++$)for(let _=0;_<c[2];++_)g=add$2(g,slice$2(i,[b*a.shape[0],$*a.shape[1],_*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else if(a.rank===4)for(let b=0;b<c[0];++b)for(let $=0;$<c[1];++$)for(let _=0;_<c[2];++_)for(let _e=0;_e<c[3];++_e)g=add$2(g,slice$2(i,[b*a.shape[0],$*a.shape[1],_*a.shape[2],_e*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${a.rank} tensors yet.`);return g}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const transposeGradConfig={kernelName:Transpose,gradFunc:(i,s,o)=>{const a=o,{perm:c}=a,d=getUndoAxesPermutation(c);return{x:()=>transpose$2(i,d)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const unpackGradConfig={kernelName:Unpack,gradFunc:(i,s,o)=>{const a=o,{axis:c}=a;return{value:()=>stack(i,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const unsortedSegmentSumGradConfig={kernelName:UnsortedSegmentSum,inputsToSave:["segmentIds"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>gatherDropNegatives(i,o)}}};function gatherDropNegatives(i,s){const o=maximum$3(s,zerosLike$2(s)),a=gather$1(i,o);let c=greaterEqual$2(s,scalar(0,"int32"));const d=a.rank-c.rank;for(let b=0;b<d;++b)c=expandDims$3(c,b+1);c=logicalAnd$2(c,ones$1(a.shape,"bool"));const g=zerosLike$2(a);return where(c,a,g)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zerosLikeGradConfig={kernelName:ZerosLike,gradFunc:i=>({x:()=>zerosLike$2(i)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gradConfigs=[absGradConfig,acosGradConfig,acoshGradConfig,addGradConfig,addNGradConfig,argMaxGradConfig,argMinGradConfig,asinGradConfig,asinhGradConfig,atan2GradConfig,atanGradConfig,atanhGradConfig,avgPool3DGradConfig$1,avgPoolGradConfig$2,batchMatMulGradConfig,batchToSpaceNDGradConfig,broadcastToGradConfig,castGradConfig,ceilGradConfig,clipByValueGradConfig,complexAbsGradConfig,concatGradConfig,conv2DBackpropInputGradConfig,conv2DGradConfig,conv3DGradConfig,cosGradConfig,coshGradConfig,cumsumGradConfig,depthwiseConv2dNativeGradConfig,dilation2dGradConfig,divGradConfig,eluGradConfig$2,erfGradConfig,expGradConfig,expandDimsGradConfig,expm1GradConfig,floorDivGradConfig,floorGradConfig,fusedBatchNormGradConfig,gatherGradConfig,greaterEqualGradConfig,identityGradConfig,isFiniteGradConfig,isInfGradConfig,isNanGradConfig,leakyReluGradConfig,log1pGradConfig,logGradConfig,logSoftmaxGradConfig,lrnGradConfig,maxGradConfig,maxGradConfig,maximumGradConfig,maxPool3DGradConfig$1,maxPoolGradConfig$2,meanGradConfig,minGradConfig,minimumGradConfig,mirrorPadGradConfig,modGradConfig,multiplyGradConfig,negGradConfig,oneHotGradConfig,onesLikeGradConfig,packGradConfig,padV2GradConfig,padV2GradConfig,powGradConfig,preluGradConfig,reciprocalGradConfig,relu6GradConfig,reluGradConfig,reshapeGradConfig,resizeBilinearGradConfig$2,resizeNearestNeighborGradConfig$2,reverseGradConfig,roundGradConfig,rsqrtGradConfig,selectGradConfig,seluGradConfig,sigmoidGradConfig,signGradConfig,sinGradConfig,sinhGradConfig,sliceGradConfig,softmaxGradConfig,softplusGradConfig,spaceToBatchNDGradConfig,spaceToBatchNDGradConfig,splitVGradConfig,splitVGradConfig,sqrtGradConfig,squaredDifferenceGradConfig,squareGradConfig,stepGradConfig,subGradConfig,sumGradConfig,tanGradConfig,tanhGradConfig,tileGradConfig,transposeGradConfig,unpackGradConfig,unsortedSegmentSumGradConfig,zerosLikeGradConfig];for(const i of gradConfigs)registerGradient(i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.abs=function(){return this.throwIfDisposed(),abs$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.acos=function(){return this.throwIfDisposed(),acos$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.acosh=function(){return this.throwIfDisposed(),acosh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.addStrict=function(i){return this.throwIfDisposed(),addStrict(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.add=function(i){return this.throwIfDisposed(),add$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.all=function(i,s){return this.throwIfDisposed(),all$2(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.any=function(i,s){return this.throwIfDisposed(),any$2(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.argMax=function(i){return this.throwIfDisposed(),argMax$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.argMin=function(i){return this.throwIfDisposed(),argMin$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.asScalar=function(){return this.throwIfDisposed(),assert$2(this.size===1,()=>"The array must have only 1 element."),reshape$3(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.asType=function(i){return this.throwIfDisposed(),cast$3(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.as1D=function(){return this.throwIfDisposed(),reshape$3(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.as2D=function(i,s){return this.throwIfDisposed(),reshape$3(this,[i,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.as3D=function(i,s,o){return this.throwIfDisposed(),reshape$3(this,[i,s,o])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.as4D=function(i,s,o,a){return this.throwIfDisposed(),reshape$3(this,[i,s,o,a])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.as5D=function(i,s,o,a,c){return this.throwIfDisposed(),reshape$3(this,[i,s,o,a,c])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.asin=function(){return this.throwIfDisposed(),asin$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.asinh=function(){return this.throwIfDisposed(),asinh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.atan=function(){return this.throwIfDisposed(),atan$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.atan2=function(i){return this.throwIfDisposed(),atan2$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.atanh=function(){return this.throwIfDisposed(),atanh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.avgPool=function(i,s,o,a){return this.throwIfDisposed(),avgPool$2(this,i,s,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.batchToSpaceND=function(i,s){return this.throwIfDisposed(),batchToSpaceND$2(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.batchNorm=function(i,s,o,a,c){return this.throwIfDisposed(),batchNorm$2(this,i,s,o,a,c)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.broadcastTo=function(i){return this.throwIfDisposed(),broadcastTo(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.cast=function(i){return this.throwIfDisposed(),cast$3(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.ceil=function(){return this.throwIfDisposed(),ceil$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.clipByValue=function(i,s){return this.throwIfDisposed(),clipByValue$1(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.concat=function(i,s){return this.throwIfDisposed(),i instanceof Tensor&&(i=[i]),concat$2([this,...i],s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.conv1d=function(i,s,o,a,c,d){return this.throwIfDisposed(),conv1d$1(this,i,s,o,a,c,d)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.conv2dTranspose=function(i,s,o,a,c){return this.throwIfDisposed(),conv2dTranspose$1(this,i,s,o,a,c)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.conv2d=function(i,s,o,a,c,d){return this.throwIfDisposed(),conv2d$3(this,i,s,o,a,c,d)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.cos=function(){return this.throwIfDisposed(),cos$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.cosh=function(){return this.throwIfDisposed(),cosh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.cumsum=function(i,s,o){return this.throwIfDisposed(),cumsum$2(this,i,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.depthToSpace=function(i,s){return this.throwIfDisposed(),depthToSpace$2(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.depthwiseConv2D=function(i,s,o,a,c,d){return deprecationWarn("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),depthwiseConv2d$3(this,i,s,o,a,c,d)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.depthwiseConv2d=function(i,s,o,a,c,d){return this.throwIfDisposed(),depthwiseConv2d$3(this,i,s,o,a,c,d)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.dilation2d=function(i,s,o,a,c){return this.throwIfDisposed(),dilation2d(this,i,s,o,a,c)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.divNoNan=function(i){return this.throwIfDisposed(),divNoNan(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.divStrict=function(i){return this.throwIfDisposed(),divStrict(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.div=function(i){return this.throwIfDisposed(),div$1(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.dot=function(i){return this.throwIfDisposed(),dot$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.elu=function(){return this.throwIfDisposed(),elu$4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.equalStrict=function(i){return this.throwIfDisposed(),equalStrict(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.equal=function(i){return this.throwIfDisposed(),equal$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.erf=function(){return this.throwIfDisposed(),erf$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.exp=function(){return this.throwIfDisposed(),exp$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.expandDims=function(i){return this.throwIfDisposed(),expandDims$3(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.expm1=function(){return this.throwIfDisposed(),expm1$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.fft=function(){return this.throwIfDisposed(),fft$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.flatten=function(){return this.throwIfDisposed(),reshape$3(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.floor=function(){return this.throwIfDisposed(),floor$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.floorDiv=function(i){return this.throwIfDisposed(),floorDiv$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.gather=function(i,s){return this.throwIfDisposed(),gather$1(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.greaterEqualStrict=function(i){return this.throwIfDisposed(),greaterEqualStrict(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.greaterEqual=function(i){return this.throwIfDisposed(),greaterEqual$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.greaterStrict=function(i){return this.throwIfDisposed(),greaterStrict(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.greater=function(i){return this.throwIfDisposed(),greater$3(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.ifft=function(){return this.throwIfDisposed(),ifft$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.irfft=function(){return this.throwIfDisposed(),irfft(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.isFinite=function(){return this.throwIfDisposed(),isFinite$3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.isInf=function(){return this.throwIfDisposed(),isInf$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.isNaN=function(){return this.throwIfDisposed(),isNaN$3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.leakyRelu=function(i){return this.throwIfDisposed(),leakyRelu$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.lessEqualStrict=function(i){return this.throwIfDisposed(),lessEqualStrict(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.lessEqual=function(i){return this.throwIfDisposed(),lessEqual$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.lessStrict=function(i){return this.throwIfDisposed(),lessStrict(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.less=function(i){return this.throwIfDisposed(),less$3(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.localResponseNormalization=function(i,s,o,a){return this.throwIfDisposed(),localResponseNormalization(this,i,s,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.logSigmoid=function(){return this.throwIfDisposed(),logSigmoid(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.logSoftmax=function(i){return this.throwIfDisposed(),logSoftmax(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.logSumExp=function(i,s){return this.throwIfDisposed(),logSumExp(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.log=function(){return this.throwIfDisposed(),log$4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.log1p=function(){return this.throwIfDisposed(),log1p$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.logicalAnd=function(i){return this.throwIfDisposed(),logicalAnd$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.logicalNot=function(){return this.throwIfDisposed(),logicalNot$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.logicalOr=function(i){return this.throwIfDisposed(),logicalOr$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.logicalXor=function(i){return this.throwIfDisposed(),logicalXor(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.matMul=function(i,s,o){return this.throwIfDisposed(),matMul$1(this,i,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.maxPool=function(i,s,o,a){return this.throwIfDisposed(),maxPool$2(this,i,s,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.max=function(i,s){return this.throwIfDisposed(),max$3(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.maximumStrict=function(i){return this.throwIfDisposed(),maximumStrict(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.maximum=function(i){return this.throwIfDisposed(),maximum$3(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.mean=function(i,s){return this.throwIfDisposed(),mean$1(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.min=function(i,s){return this.throwIfDisposed(),min$3(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.minimumStrict=function(i){return this.throwIfDisposed(),minimumStrict(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.minimum=function(i){return this.throwIfDisposed(),minimum$3(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.mirrorPad=function(i,s){return this.throwIfDisposed(),mirrorPad$1(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.modStrict=function(i){return this.throwIfDisposed(),modStrict(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.mod=function(i){return this.throwIfDisposed(),mod$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.mulStrict=function(i){return this.throwIfDisposed(),mulStrict(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.mul=function(i){return this.throwIfDisposed(),mul(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.neg=function(){return this.throwIfDisposed(),neg$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.norm=function(i,s,o){return this.throwIfDisposed(),norm(this,i,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.notEqualStrict=function(i){return this.throwIfDisposed(),notEqualStrict(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.notEqual=function(i){return this.throwIfDisposed(),notEqual$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.oneHot=function(i,s=1,o=0){return this.throwIfDisposed(),oneHot$2(this,i,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.onesLike=function(){return this.throwIfDisposed(),onesLike$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.pad=function(i,s){return this.throwIfDisposed(),pad(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.pool=function(i,s,o,a,c){return this.throwIfDisposed(),pool$1(this,i,s,o,a,c)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.powStrict=function(i){return this.throwIfDisposed(),powStrict(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.pow=function(i){return this.throwIfDisposed(),pow$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.prelu=function(i){return this.throwIfDisposed(),prelu$3(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.prod=function(i,s){return this.throwIfDisposed(),prod$2(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.reciprocal=function(){return this.throwIfDisposed(),reciprocal$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.relu=function(){return this.throwIfDisposed(),relu$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.relu6=function(){return this.throwIfDisposed(),relu6$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.reshapeAs=function(i){return this.throwIfDisposed(),reshape$3(this,i.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.reshape=function(i){return this.throwIfDisposed(),reshape$3(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.resizeBilinear=function(i,s,o){return this.throwIfDisposed(),resizeBilinear$2(this,i,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.resizeNearestNeighbor=function(i,s,o){return this.throwIfDisposed(),resizeNearestNeighbor$2(this,i,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.reverse=function(i){return this.throwIfDisposed(),reverse$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.rfft=function(){return this.throwIfDisposed(),rfft(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.round=function(){return this.throwIfDisposed(),round$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.rsqrt=function(){return this.throwIfDisposed(),rsqrt$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.selu=function(){return this.throwIfDisposed(),selu$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.separableConv2d=function(i,s,o,a,c,d){return this.throwIfDisposed(),separableConv2d$1(this,i,s,o,a,c,d)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.sigmoid=function(){return this.throwIfDisposed(),sigmoid$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.sign=function(){return this.throwIfDisposed(),sign$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.sin=function(){return this.throwIfDisposed(),sin$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.sinh=function(){return this.throwIfDisposed(),sinh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.slice=function(i,s){return this.throwIfDisposed(),slice$2(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.softmax=function(i){return this.throwIfDisposed(),softmax$3(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.softplus=function(){return this.throwIfDisposed(),softplus$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.spaceToBatchND=function(i,s){return this.throwIfDisposed(),spaceToBatchND$2(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.split=function(i,s){return this.throwIfDisposed(),split$1(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.sqrt=function(){return this.throwIfDisposed(),sqrt$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.square=function(){return this.throwIfDisposed(),square$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.squaredDifference=function(i){return this.throwIfDisposed(),squaredDifference$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.squaredDifferenceStrict=function(i){return this.throwIfDisposed(),squaredDifferenceStrict(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.squeeze=function(i){return this.throwIfDisposed(),squeeze(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.stack=function(i,s){this.throwIfDisposed();const o=i instanceof Tensor?[this,i]:[this,...i];return stack(o,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.step=function(i){return this.throwIfDisposed(),step$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.stridedSlice=function(i,s,o,a,c,d,g,b){return this.throwIfDisposed(),stridedSlice$2(this,i,s,o,a,c,d,g,b)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.subStrict=function(i){return this.throwIfDisposed(),subStrict(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.sub=function(i){return this.throwIfDisposed(),sub$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.sum=function(i,s){return this.throwIfDisposed(),sum$2(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.tan=function(){return this.throwIfDisposed(),tan$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.tanh=function(){return this.throwIfDisposed(),tanh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.tile=function(i){return this.throwIfDisposed(),tile$3(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.toBool=function(){return this.throwIfDisposed(),cast$3(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.toFloat=function(){return this.throwIfDisposed(),cast$3(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.toInt=function(){return this.throwIfDisposed(),cast$3(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.topk=function(i,s){return this.throwIfDisposed(),topk(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.transpose=function(i){return this.throwIfDisposed(),transpose$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.unique=function(i){return this.throwIfDisposed(),unique$3(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.unsortedSegmentSum=function(i,s){return this.throwIfDisposed(),unsortedSegmentSum$2(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.unstack=function(i){return this.throwIfDisposed(),unstack(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.where=function(i,s){return this.throwIfDisposed(),where(i,this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.zerosLike=function(){return this.throwIfDisposed(),zerosLike$2(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let _epsilon;function epsilon$1(){return _epsilon==null&&(_epsilon=backend().epsilon()),_epsilon}function imageDataFormat(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class AttributeError extends Error{constructor(s){super(s),Object.setPrototypeOf(this,AttributeError.prototype)}}class RuntimeError extends Error{constructor(s){super(s),Object.setPrototypeOf(this,RuntimeError.prototype)}}class ValueError extends Error{constructor(s){super(s),Object.setPrototypeOf(this,ValueError.prototype)}}class NotImplementedError extends Error{constructor(s){super(s),Object.setPrototypeOf(this,NotImplementedError.prototype)}}class AssertionError extends Error{constructor(s){super(s),Object.setPrototypeOf(this,AssertionError.prototype)}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pyListRepeat(i,s){if(Array.isArray(i)){let o=[];for(let a=0;a<s;a++)o=o.concat(i);return o}else{const o=new Array(s);return o.fill(i),o}}function assert$1(i,s){if(!i)throw new AssertionError(s)}function count(i,s){let o=0;for(const a of i)a===s&&o++;return o}function singletonOrArray(i){return i.length===1?i[0]:i}function toList(i){return Array.isArray(i)?i:[i]}function toSnakeCase(i){const o=i.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return o[0]!=="_"?o:"private"+o}function toCamelCase(i){return i.length<=1||i.indexOf("_")===-1?i:i.replace(/[_]+(\w|$)/g,(s,o)=>o.toUpperCase())}let _GLOBAL_CUSTOM_OBJECTS={};function serializeKerasObject(i){if(i==null)return null;const s={};return s.className=i.getClassName(),s.config=i.getConfig(),s}function convertNDArrayScalarsInConfig(i){if(!(i==null||typeof i!="object"))if(Array.isArray(i))i.forEach(s=>convertNDArrayScalarsInConfig(s));else{const s=Object.keys(i);for(const o of s){const a=i[o];a!=null&&typeof a=="object"&&(!Array.isArray(a)&&a.type==="ndarray"&&typeof a.value=="number"?i[o]=a.value:convertNDArrayScalarsInConfig(a))}}}function deserializeKerasObject(i,s={},o={},a="object",c=!1){if(typeof i=="string"){const d=i;let g;if(d in o)g=o[d];else if(d in _GLOBAL_CUSTOM_OBJECTS)g=_GLOBAL_CUSTOM_OBJECTS[d];else if(g=s[d],g==null)throw new ValueError(`Unknown ${a}: ${i}. This may be due to one of the following reasons:
1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return g}else{const d=i;if(d.className==null||d.config==null)throw new ValueError(`${a}: Improper config format: ${JSON.stringify(d)}.
'className' and 'config' must set.`);const g=d.className;let b,$;if(g in o?[b,$]=o[g]:g in _GLOBAL_CUSTOM_OBJECTS?[b,$]=_GLOBAL_CUSTOM_OBJECTS.className:g in s&&([b,$]=s[g]),b==null)throw new ValueError(`Unknown ${a}: ${g}. This may be due to one of the following reasons:
1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if($!=null){const _={};for(const tt of Object.keys(_GLOBAL_CUSTOM_OBJECTS))_[tt]=_GLOBAL_CUSTOM_OBJECTS[tt];for(const tt of Object.keys(o))_[tt]=o[tt];const _e=d.config;_e.customObjects=_;const et=Object.assign({},_GLOBAL_CUSTOM_OBJECTS);for(const tt of Object.keys(o))_GLOBAL_CUSTOM_OBJECTS[tt]=o[tt];convertNDArrayScalarsInConfig(d.config);const rt=$(b,d.config,o,c);return _GLOBAL_CUSTOM_OBJECTS=Object.assign({},et),rt}else{const _=Object.assign({},_GLOBAL_CUSTOM_OBJECTS);for(const et of Object.keys(o))_GLOBAL_CUSTOM_OBJECTS[et]=o[et];const _e=new b(d.config);return _GLOBAL_CUSTOM_OBJECTS=Object.assign({},_),_e}}}function numberCompare(i,s){return i<s?-1:i>s?1:0}function reverseNumberCompare(i,s){return-1*numberCompare(i,s)}function unique$2(i){if(i==null)return i;const s=[];for(const o of i)s.indexOf(o)===-1&&s.push(o);return s}function isObjectEmpty(i){if(i==null)throw new ValueError(`Invalid value in obj: ${JSON.stringify(i)}`);for(const s in i)if(i.hasOwnProperty(s))return!1;return!0}function checkStringTypeUnionValue(i,s,o){if(o!=null&&i.indexOf(o)<0)throw new ValueError(`${o} is not a valid ${s}.  Valid values are ${i} or null/undefined.`)}function checkArrayTypeAndLength(i,s,o=0,a=1/0){return assert$1(o>=0),assert$1(a>=o),Array.isArray(i)&&i.length>=o&&i.length<=a&&i.every(c=>typeof c===s)}function assertPositiveInteger(i,s){Array.isArray(i)?(assert$2(i.length>0,()=>`${s} is unexpectedly an empty array.`),i.forEach((o,a)=>assertPositiveInteger(o,`element ${a+1} of ${s}`))):assert$2(Number.isInteger(i)&&i>0,()=>`Expected ${s} to be a positive integer, but got ${formatAsFriendlyString(i)}.`)}function formatAsFriendlyString(i){return i===null?"null":Array.isArray(i)?"["+i.map(s=>formatAsFriendlyString(s)).join(",")+"]":typeof i=="string"?`"${i}"`:`${i}`}function debounce(i,s){let o=now$1(),a;return(...d)=>{const g=now$1();return g-o<s||(o=g,a=i(...d)),a}}function mapActivationToFusedKernel(i){return i==="relu"?"relu":i==="linear"?"linear":i==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function calcL2Norms(i,s){return tidy(()=>sqrt$2(sum$2(mul(i,i),s,!0)))}class Constraint extends Serializable{getConfig(){return{}}}class MaxNorm extends Constraint{constructor(s){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=s.maxValue!=null?s.maxValue:this.defaultMaxValue,this.axis=s.axis!=null?s.axis:this.defaultAxis}apply(s){return tidy(()=>{const o=calcL2Norms(s,this.axis),a=clipByValue$1(o,0,this.maxValue);return mul(s,div$1(a,add$2(epsilon$1(),o)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}MaxNorm.className="MaxNorm";registerClass(MaxNorm);class UnitNorm extends Constraint{constructor(s){super(),this.defaultAxis=0,this.axis=s.axis!=null?s.axis:this.defaultAxis}apply(s){return tidy(()=>div$1(s,add$2(epsilon$1(),calcL2Norms(s,this.axis))))}getConfig(){return{axis:this.axis}}}UnitNorm.className="UnitNorm";registerClass(UnitNorm);class NonNeg extends Constraint{apply(s){return relu$2(s)}}NonNeg.className="NonNeg";registerClass(NonNeg);class MinMaxNorm extends Constraint{constructor(s){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=s.minValue!=null?s.minValue:this.defaultMinValue,this.maxValue=s.maxValue!=null?s.maxValue:this.defaultMaxValue,this.rate=s.rate!=null?s.rate:this.defaultRate,this.axis=s.axis!=null?s.axis:this.defaultAxis}apply(s){return tidy(()=>{const o=calcL2Norms(s,this.axis),a=add$2(mul(this.rate,clipByValue$1(o,this.minValue,this.maxValue)),mul(1-this.rate,o));return mul(s,div$1(a,add$2(epsilon$1(),o)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}MinMaxNorm.className="MinMaxNorm";registerClass(MinMaxNorm);const CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function serializeConstraint(i){return serializeKerasObject(i)}function deserializeConstraint(i,s={}){return deserializeKerasObject(i,SerializationMap.getMap().classNameMap,s,"constraint")}function getConstraint(i){if(i==null)return null;if(typeof i=="string"){const o={className:i in CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP?CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP[i]:i,config:{}};return deserializeConstraint(o)}else return i instanceof Constraint?i:deserializeConstraint(i)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function maxNorm(i){return new MaxNorm(i)}function unitNorm(i){return new UnitNorm(i)}function nonNeg(){return new NonNeg}function minMaxNorm(i){return new MinMaxNorm(i)}const exports_constraints=Object.freeze(Object.defineProperty({__proto__:null,maxNorm,minMaxNorm,nonNeg,unitNorm},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const VALID_DATA_FORMAT_VALUES=["channelsFirst","channelsLast"],VALID_INTERPOLATION_FORMAT_VALUES=["nearest","bilinear"],VALID_PADDING_MODE_VALUES=["valid","same","causal"],VALID_POOL_MODE_VALUES=["max","avg"],VALID_BIDIRECTIONAL_MERGE_MODES=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const nameMap=new Map;function checkDataFormat(i){checkStringTypeUnionValue(VALID_DATA_FORMAT_VALUES,"DataFormat",i)}function checkInterpolationFormat(i){checkStringTypeUnionValue(VALID_INTERPOLATION_FORMAT_VALUES,"InterpolationFormat",i)}function checkPaddingMode(i){checkStringTypeUnionValue(VALID_PADDING_MODE_VALUES,"PaddingMode",i)}function checkPoolMode(i){checkStringTypeUnionValue(VALID_POOL_MODE_VALUES,"PoolMode",i)}const _nameScopeStack=[],_nameScopeDivider="/";function nameScope(i,s){_nameScopeStack.push(i);try{const o=s();return _nameScopeStack.pop(),o}catch(o){throw _nameScopeStack.pop(),o}}function currentNameScopePrefix(){return _nameScopeStack.length===0?"":_nameScopeStack.join(_nameScopeDivider)+_nameScopeDivider}function getScopedTensorName(i){if(!isValidTensorName(i))throw new Error("Not a valid tensor name: '"+i+"'");return currentNameScopePrefix()+i}function getUniqueTensorName(i){if(!isValidTensorName(i))throw new Error("Not a valid tensor name: '"+i+"'");nameMap.has(i)||nameMap.set(i,0);const s=nameMap.get(i);if(nameMap.set(i,nameMap.get(i)+1),s>0){const o=`${i}_${s}`;return nameMap.set(o,1),o}else return i}const tensorNameRegex=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function isValidTensorName(i){return!!i.match(tensorNameRegex)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function isInteger(i){return i===parseInt(i.toString(),10)}function arrayProd(i,s,o){s==null&&(s=0),o==null&&(o=i.length);let a=1;for(let c=s;c<o;++c)a*=i[c];return a}function toArray1D(i){return i=Array.isArray(i)?new Float32Array(i):i,tensor1d(i)}function min$2(i){return min$3(toArray1D(i)).dataSync()[0]}function max$2(i){return max$3(toArray1D(i)).dataSync()[0]}function range$3(i,s){if(s<i)throw new ValueError(`end (${s}) < begin (${i}) is forbidden.`);const o=[];for(let a=i;a<s;++a)o.push(a);return o}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function cast$2(i,s){return i.asType(s)}function expandDims$2(i,s=-1){const o=i.shape.slice();return s<0&&(s=o.length+s+1),o.splice(s,0,1),i.reshape(o)}function repeat(i,s){return tidy(()=>{if(i.shape.length!==2)throw new ValueError(`repeat() expects a rank-2 tensor, but received a rank-${i.shape.length} tensor.`);const o=expandDims$2(i,1);return tile$2(o,[1,s,1])})}function flatten$1(i){const s=[arrayProd(i.shape)];return i.reshape(s)}function batchFlatten(i){if(i.rank<=1)throw new ValueError(`batchFlatten requires a minimum rank of 2. Got rank: ${i.rank}.`);const s=[i.shape[0],arrayProd(i.shape,1)];return i.reshape(s)}function sliceAlongFirstAxis(i,s,o){return tidy(()=>{switch(i.rank){case 1:return slice1d(i,s,o);case 2:return slice2d(i,[s,0],[o,i.shape[1]]);case 3:return slice3d(i,[s,0,0],[o,i.shape[1],i.shape[2]]);case 4:return slice4d(i,[s,0,0,0],[o,i.shape[1],i.shape[2],i.shape[3]]);case 5:return slice$2(i,[s,0,0,0,0],[o,i.shape[1],i.shape[2],i.shape[3],i.shape[4]]);case 6:return slice$2(i,[s,0,0,0,0,0],[o,i.shape[1],i.shape[2],i.shape[3],i.shape[4],i.shape[5]]);default:throw new ValueError(`sliceAlongFirstAxis() received an unsupported tensor rank: ${i.rank}`)}})}function sliceAlongLastAxis(i,s,o){return tidy(()=>{switch(i.rank){case 1:return slice1d(i,s,o);case 2:return slice2d(i,[0,s],[i.shape[0],o]);case 3:return slice3d(i,[0,0,s],[i.shape[0],i.shape[1],o]);case 4:return slice4d(i,[0,0,0,s],[i.shape[0],i.shape[1],i.shape[2],o]);default:throw new ValueError(`sliceAlongLastAxis() received an unsupported tensor rank: ${i.rank}`)}})}function sliceAlongAxis(i,s,o,a){return tidy(()=>{switch(i.rank){case 1:return slice1d(i,s,o);case 2:switch(a){case 1:return sliceAlongFirstAxis(i,s,o);case 2:return sliceAlongLastAxis(i,s,o);default:throw new ValueError(`The axis is not within the rank of the tensor ${a}`)}case 3:switch(a){case 1:return sliceAlongFirstAxis(i,s,o);case 2:return slice3d(i,[0,s,0],[i.shape[0],o,i.shape[2]]);case 3:return sliceAlongLastAxis(i,s,o);default:throw new ValueError(`The axis is not within the rank of the tensor ${a}`)}case 4:switch(a){case 1:return sliceAlongFirstAxis(i,s,o);case 2:return slice4d(i,[0,s,0,0],[i.shape[0],o,i.shape[2],i.shape[3]]);case 3:return slice4d(i,[0,0,s,0],[i.shape[0],i.shape[1],o,i.shape[3]]);case 4:return sliceAlongLastAxis(i,s,o);default:throw new ValueError(`The axis is not within the rank of the tensor ${a}`)}default:throw new ValueError(`sliceAlongLastAxis() received an unsupported tensor rank: ${i.rank}`)}})}function concatenate$1(i,s=-1){let o;return s<0&&(o=i[0].rank,o!==0?s=o:s=0),s===i[0].rank&&(s=-1),concat$2(i,s)}function concatAlongFirstAxis(i,s){switch(i.rank){case 1:return concat1d([i,s]);case 2:return concat2d([i,s],0);case 3:return concat3d([i,s],0);case 4:return concat4d([i,s],0);default:throw new ValueError(`concatAlongFirstAxis() received an unsupported tensor rank: ${i.rank}`)}}function tile$2(i,s){if(Array.isArray(s)||(s=[s]),i.rank!==s.length)throw new ValueError(`The length of input n (${s.length}) does not match the number of dimensions in input x (${i.rank})`);return tile$3(i,s)}function randomNormal$1(i,s=0,o=1,a,c){return randomNormal$2(i,s,o,a,c)}function dot$1(i,s,o,a){if(i.rank<2||s.rank<2)throw new NotImplementedError(`dot requires both inputs to be rank >= 2 but got x shape = ${i.shape} and y shape = ${s.shape}`);if(s.rank>=3){const c=i.shape.slice(-1)[0],d=s.shape.slice(-2)[0];if(c!==d)throw new NotImplementedError(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${i.shape} and  y shape = ${s.shape}`)}if(i.rank===2&&s.rank===2)return matMul({a:i,b:s,transposeA:!1,transposeB:!1,bias:a?reshapeBias(i.rank,a,imageDataFormat()):null,activation:o});{const c=i.shape.slice(),d=c.pop();i=i.reshape([-1,d]);const g=s.shape.slice(),b=g.pop(),$=g.pop(),_=[...g,b],_e=Array.from({length:s.rank},(j,nt)=>nt===0?s.rank-2:nt<=s.rank-2?nt-1:nt);s=s.transpose(_e).reshape([$,-1]);const et=[...c,..._];return matMul({a:i,b:s,transposeA:!1,transposeB:!1,bias:a?reshapeBias(i.rank,a,imageDataFormat()):null,activation:o}).reshape(et)}}function gather(i,s,o){return tidy(()=>(Array.isArray(s)?s=tensor1d(s,"int32"):s=s.toInt(),gather$1(i,s,o)))}function square$1(i){return mul(i,i)}function reshapeBias(i,s,o){const a=s.shape;if(s.rank!==1&&s.rank!==i)throw new ValueError(`Unexpected bias dimensions: ${s.rank}; expected it to be 1 or ${i}`);if(i===5){if(o==="channelsFirst")return a.length===1?s.reshape([1,a[0],1,1,1]):s.reshape([1,a[3],a[0],a[1],a[2]]);if(o==="channelsLast")return a.length===1?s.reshape([1,1,1,1,a[0]]):s.reshape([1].concat(a))}else if(i===4){if(o==="channelsFirst")return a.length===1?s.reshape([1,a[0],1,1]):s.reshape([1,a[2],a[0],a[1]]);if(o==="channelsLast")return a.length===1?s.reshape([1,1,1,a[0]]):s.reshape([1].concat(a))}else if(i===3){if(o==="channelsFirst")return a.length===1?s.reshape([1,a[0],1]):s.reshape([1,a[1],a[0]]);if(o==="channelsLast")return a.length===1?s.reshape([1,1,a[0]]):s.reshape([1].concat(a))}else if(i<3)return s;throw new ValueError(`Unsupported input rank by biasAdd: ${s.rank}`)}function biasAdd(i,s,o){return tidy(()=>(o==null&&(o=imageDataFormat()),checkDataFormat(o),i.add(reshapeBias(i.rank,s,o))))}function elu$3(i,s=1){if(s!==1)throw new NotImplementedError(`Support for alpha values other than 1 (${s}) is not implemented yet.`);return elu$4(i)}function softsign(i){return tidy(()=>div$1(i,abs$2(i).add(1)))}function dropout$1(i,s,o,a){return tidy(()=>dropout$2(i,s,o,a))}function hardSigmoid(i){return tidy(()=>{const s=add$2(.5,mul(.2,i));return clipByValue$1(s,0,1)})}function inTrainPhase(i,s,o=!1){return o?i():s()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const VALID_FAN_MODE_VALUES=["fanIn","fanOut","fanAvg"],VALID_DISTRIBUTION_VALUES=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function checkFanMode(i){checkStringTypeUnionValue(VALID_FAN_MODE_VALUES,"FanMode",i)}function checkDistribution(i){checkStringTypeUnionValue(VALID_DISTRIBUTION_VALUES,"Distribution",i)}class Initializer extends Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Zeros extends Initializer{apply(s,o){return zeros$2(s,o)}}Zeros.className="Zeros";registerClass(Zeros);class Ones extends Initializer{apply(s,o){return ones$1(s,o)}}Ones.className="Ones";registerClass(Ones);class Constant extends Initializer{constructor(s){if(super(),typeof s!="object")throw new ValueError(`Expected argument of type ConstantConfig but got ${s}`);if(s.value===void 0)throw new ValueError(`config must have value set but got ${s}`);this.value=s.value}apply(s,o){return tidy(()=>mul(scalar(this.value),ones$1(s,o)))}getConfig(){return{value:this.value}}}Constant.className="Constant";registerClass(Constant);class RandomUniform extends Initializer{constructor(s){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=s.minval||this.DEFAULT_MINVAL,this.maxval=s.maxval||this.DEFAULT_MAXVAL,this.seed=s.seed}apply(s,o){return randomUniform$1(s,this.minval,this.maxval,o)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}RandomUniform.className="RandomUniform";registerClass(RandomUniform);class RandomNormal extends Initializer{constructor(s){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=s.mean||this.DEFAULT_MEAN,this.stddev=s.stddev||this.DEFAULT_STDDEV,this.seed=s.seed}apply(s,o){if(o=o||"float32",o!=="float32"&&o!=="int32")throw new NotImplementedError(`randomNormal does not support dType ${o}.`);return randomNormal$1(s,this.mean,this.stddev,o,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}RandomNormal.className="RandomNormal";registerClass(RandomNormal);class TruncatedNormal extends Initializer{constructor(s){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=s.mean||this.DEFAULT_MEAN,this.stddev=s.stddev||this.DEFAULT_STDDEV,this.seed=s.seed}apply(s,o){if(o=o||"float32",o!=="float32"&&o!=="int32")throw new NotImplementedError(`truncatedNormal does not support dType ${o}.`);return truncatedNormal$1(s,this.mean,this.stddev,o,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}TruncatedNormal.className="TruncatedNormal";registerClass(TruncatedNormal);class Identity extends Initializer{constructor(s){super(),this.gain=s.gain!=null?s.gain:1}apply(s,o){return tidy(()=>{if(s.length!==2||s[0]!==s[1])throw new ValueError("Identity matrix initializer can only be used for 2D square matrices.");return mul(this.gain,eye(s[0]))})}getConfig(){return{gain:this.gain}}}Identity.className="Identity";registerClass(Identity);function computeFans(i,s="channelsLast"){let o,a;if(checkDataFormat(s),i.length===2)o=i[0],a=i[1];else if([3,4,5].indexOf(i.length)!==-1){if(s==="channelsFirst"){const c=arrayProd(i,2);o=i[1]*c,a=i[0]*c}else if(s==="channelsLast"){const c=arrayProd(i,0,i.length-2);o=i[i.length-2]*c,a=i[i.length-1]*c}}else{const c=arrayProd(i);o=Math.sqrt(c),a=Math.sqrt(c)}return[o,a]}class VarianceScaling extends Initializer{constructor(s){if(super(),s.scale<0)throw new ValueError(`scale must be a positive float. Got: ${s.scale}`);this.scale=s.scale==null?1:s.scale,this.mode=s.mode==null?"fanIn":s.mode,checkFanMode(this.mode),this.distribution=s.distribution==null?"normal":s.distribution,checkDistribution(this.distribution),this.seed=s.seed}apply(s,o){const a=computeFans(s),c=a[0],d=a[1];let g=this.scale;if(this.mode==="fanIn"?g/=Math.max(1,c):this.mode==="fanOut"?g/=Math.max(1,d):g/=Math.max(1,(c+d)/2),this.distribution==="normal"){const b=Math.sqrt(g);if(o=o||"float32",o!=="float32"&&o!=="int32")throw new NotImplementedError(`${this.getClassName()} does not support dType ${o}.`);return truncatedNormal$1(s,0,b,o,this.seed)}else{const b=Math.sqrt(3*g);return randomUniform$1(s,-b,b,o)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}VarianceScaling.className="VarianceScaling";registerClass(VarianceScaling);class GlorotUniform extends VarianceScaling{constructor(s){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:s==null?null:s.seed})}getClassName(){return VarianceScaling.className}}GlorotUniform.className="GlorotUniform";registerClass(GlorotUniform);class GlorotNormal extends VarianceScaling{constructor(s){super({scale:1,mode:"fanAvg",distribution:"normal",seed:s==null?null:s.seed})}getClassName(){return VarianceScaling.className}}GlorotNormal.className="GlorotNormal";registerClass(GlorotNormal);class HeNormal extends VarianceScaling{constructor(s){super({scale:2,mode:"fanIn",distribution:"normal",seed:s==null?null:s.seed})}getClassName(){return VarianceScaling.className}}HeNormal.className="HeNormal";registerClass(HeNormal);class HeUniform extends VarianceScaling{constructor(s){super({scale:2,mode:"fanIn",distribution:"uniform",seed:s==null?null:s.seed})}getClassName(){return VarianceScaling.className}}HeUniform.className="HeUniform";registerClass(HeUniform);class LeCunNormal extends VarianceScaling{constructor(s){super({scale:1,mode:"fanIn",distribution:"normal",seed:s==null?null:s.seed})}getClassName(){return VarianceScaling.className}}LeCunNormal.className="LeCunNormal";registerClass(LeCunNormal);class LeCunUniform extends VarianceScaling{constructor(s){super({scale:1,mode:"fanIn",distribution:"uniform",seed:s==null?null:s.seed})}getClassName(){return VarianceScaling.className}}LeCunUniform.className="LeCunNormal";registerClass(LeCunUniform);class Orthogonal extends Initializer{constructor(s){if(super(),this.DEFAULT_GAIN=1,this.gain=s.gain==null?this.DEFAULT_GAIN:s.gain,this.seed=s.seed,this.seed!=null)throw new NotImplementedError("Random seed is not implemented for Orthogonal Initializer yet.")}apply(s,o){return tidy(()=>{if(s.length<2)throw new NotImplementedError("Shape must be at least 2D.");s[0]*s[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${s[0]*s[1]}) elements: Slowness may result.`);const a=s[0]>s[1]?[s[1],s[0]]:s,c=randomNormal$1(a,0,1,"float32");let d=linalg.gramSchmidt(c);return s[0]>s[1]&&(d=d.transpose()),mul(this.gain,d)})}getConfig(){return{gain:this.gain,seed:this.seed}}}Orthogonal.className="Orthogonal";registerClass(Orthogonal);const INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function deserializeInitializer(i,s={}){return deserializeKerasObject(i,SerializationMap.getMap().classNameMap,s,"initializer")}function serializeInitializer(i){return serializeKerasObject(i)}function getInitializer(i){if(typeof i=="string"){const s=i in INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP?INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[i]:i;if(s==="GlorotNormal")return new GlorotNormal;if(s==="GlorotUniform")return new GlorotUniform;if(s==="HeNormal")return new HeNormal;if(s==="HeUniform")return new HeUniform;if(s==="LeCunNormal")return new LeCunNormal;if(s==="LeCunUniform")return new LeCunUniform;{const o={};return o.className=s,o.config={},deserializeInitializer(o)}}else return i instanceof Initializer?i:deserializeInitializer(i)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function zeros$1(){return new Zeros}function ones(){return new Ones}function constant(i){return new Constant(i)}function randomUniform(i){return new RandomUniform(i)}function randomNormal(i){return new RandomNormal(i)}function truncatedNormal(i){return new TruncatedNormal(i)}function identity$2(i){return new Identity(i)}function varianceScaling(i){return new VarianceScaling(i)}function glorotUniform(i){return new GlorotUniform(i)}function glorotNormal(i){return new GlorotNormal(i)}function heNormal(i){return new HeNormal(i)}function heUniform(i){return new HeUniform(i)}function leCunNormal(i){return new LeCunNormal(i)}function leCunUniform(i){return new LeCunUniform(i)}function orthogonal(i){return new Orthogonal(i)}const exports_initializers=Object.freeze(Object.defineProperty({__proto__:null,constant,glorotNormal,glorotUniform,heNormal,heUniform,identity:identity$2,leCunNormal,leCunUniform,ones,orthogonal,randomNormal,randomUniform,truncatedNormal,varianceScaling,zeros:zeros$1},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let _nextUniqueTensorId=0;function getNextUniqueTensorId(){return _nextUniqueTensorId++}const _uidPrefixes={};function getUid(i=""){return i in _uidPrefixes||(_uidPrefixes[i]=0),_uidPrefixes[i]+=1,i+_uidPrefixes[i].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function isArrayOfShapes(i){return Array.isArray(i)&&Array.isArray(i[0])}function normalizeShapeList(i){return i.length===0?[]:Array.isArray(i[0])?i:[i]}function getExactlyOneTensor(i){let s;if(Array.isArray(i)){if(i.length!==1)throw new ValueError(`Expected Tensor length to be 1; got ${i.length}`);s=i[0]}else s=i;return s}function getExactlyOneShape(i){if(Array.isArray(i)&&Array.isArray(i[0])){if(i.length===1)return i=i,i[0];throw new ValueError(`Expected exactly 1 Shape; got ${i.length}`)}else return i}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function countParamsInWeights(i){let s=0;for(const o of i)o.shape.length===0?s+=1:s+=o.shape.reduce((a,c)=>a*c);return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const DEFAULT_VARIABLE_NAME_PREFIX="Variable";class LayerVariable{constructor(s,o="float32",a=DEFAULT_VARIABLE_NAME_PREFIX,c=!0,d=null){this.dtype=o??"float32",this.shape=s.shape,this.id=getNextUniqueTensorId(),a=a??DEFAULT_VARIABLE_NAME_PREFIX,this.originalName=getScopedTensorName(a),this.name=getUniqueTensorName(this.originalName),this.trainable_=c,this.constraint=d,this.val=variable(s,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(s){return this.assertNotDisposed(),checkShapesMatch(this.val,s),this.val.id!==s.id&&(this.val.assign(s),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(s){this.trainable_=s,this.val.trainable=s}}function checkShapesMatch(i,s){if(i.shape.toString()!==s.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(i.shape)+" vs. "+JSON.stringify(s.shape))}function batchGetValue(i){return i.map(s=>s.read())}function batchSetValue(i){i.forEach(s=>{s[0].write(s[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class InputSpec{constructor(s){this.dtype=s.dtype,this.shape=s.shape,s.shape!=null?this.ndim=s.shape.length:this.ndim=s.ndim,this.maxNDim=s.maxNDim,this.minNDim=s.minNDim,this.axes=s.axes||{}}}class SymbolicTensor{constructor(s,o,a,c,d,g,b){this.dtype=s,this.shape=o,this.sourceLayer=a,this.inputs=c,this.callArgs=d,this.outputTensorIndex=b,this.id=getNextUniqueTensorId(),g!=null&&(this.originalName=getScopedTensorName(g),this.name=getUniqueTensorName(this.originalName)),this.rank=o.length}}let _nextNodeID=0;class Node{constructor(s,o){this.callArgs=o,this.id=_nextNodeID++,this.outboundLayer=s.outboundLayer,this.inboundLayers=s.inboundLayers,this.nodeIndices=s.nodeIndices,this.tensorIndices=s.tensorIndices,this.inputTensors=s.inputTensors,this.outputTensors=s.outputTensors,this.inputMasks=s.inputMasks,this.outputMasks=s.outputMasks,this.inputShapes=s.inputShapes,this.outputShapes=s.outputShapes;for(const a of s.inboundLayers)a!=null&&a.outboundNodes.push(this);s.outboundLayer.inboundNodes.push(this)}getConfig(){const s=[];for(const o of this.inboundLayers)o!=null?s.push(o.name):s.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:s,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let _nextLayerID=0;class Layer extends Serializable{constructor(s={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=_nextLayerID++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let o=s.name;if(!o){const a=this.getClassName();o=toSnakeCase(a)+"_"+getUid(a)}if(this.name=o,this.trainable_=s.trainable==null?!0:s.trainable,s.inputShape!=null||s.batchInputShape!=null){let a;if(s.batchInputShape!=null)a=s.batchInputShape;else if(s.inputShape!=null){let d=null;s.batchSize!=null&&(d=s.batchSize),a=[d].concat(s.inputShape)}this.batchInputShape=a;let c=s.dtype;c==null&&(c=s.inputDType),c==null&&(c="float32"),this.dtype=c}s.weights!=null?this.initialWeights=s.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(s,o){return s.name+"_ib-"+o.toString()}getNodeAtIndex(s,o){if(this.inboundNodes.length===0)throw new RuntimeError(`The layer has never been called and thus has no defined ${o}.`);if(this.inboundNodes.length<=s)throw new ValueError(`Asked to get ${o} at node ${s}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[s]}getInputAt(s){return singletonOrArray(this.getNodeAtIndex(s,"input").inputTensors)}getOutputAt(s){return singletonOrArray(this.getNodeAtIndex(s,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new AttributeError(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new AttributeError(`Layer ${this.name} is not connected, no input to return.`);return singletonOrArray(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new AttributeError(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new AttributeError(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return singletonOrArray(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(s=>s())}get updates(){return this._updates}get built(){return this._built}set built(s){this._built=s}get trainable(){return this.trainable_}set trainable(s){this._trainableWeights.forEach(o=>o.trainable=s),this.trainable_=s}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(s=>s.trainable):[]}set trainableWeights(s){this._trainableWeights=s}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(s=>!s.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(s){this._nonTrainableWeights=s}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(s){if(s=toList(s),this.inputSpec==null||this.inputSpec.length===0)return;const o=toList(this.inputSpec);if(s.length!==o.length)throw new ValueError(`Layer ${this.name} expects ${o.length} inputs, but it received ${s.length} input tensors. Input received: ${s}`);for(let a=0;a<s.length;a++){const c=s[a],d=o[a];if(d==null)continue;const g=c.rank;if(d.ndim!=null&&g!==d.ndim)throw new ValueError(`Input ${a} is incompatible with layer ${this.name}: expected ndim=${d.ndim}, found ndim=${g}`);if(d.maxNDim!=null&&g>d.maxNDim)throw new ValueError(`Input ${a} is incompatible with layer ${this.name}: expected max_ndim=${d.maxNDim}, found ndim=${g}`);if(d.minNDim!=null&&g<d.minNDim)throw new ValueError(`Input ${a} is incompatible with layer ${this.name}: expected min_ndim=${d.minNDim}, found ndim=${g}.`);if(d.dtype!=null&&c.dtype!==d.dtype)throw new ValueError(`Input ${a} is incompatible with layer ${this.name} : expected dtype=${d.dtype}, found dtype=${c.dtype}.`);if(d.axes){const b=c.shape;for(const $ in d.axes){const _=Number($),_e=d.axes[$],et=_>=0?b[_]:b[b.length+_];if(_e!=null&&[_e,null].indexOf(et)===-1)throw new ValueError(`Input ${a} is incompatible with layer ${this.name}: expected axis ${_} of input shape to have value ${_e} but got shape ${b}.`)}}if(d.shape!=null)for(let b=0;b<d.shape.length;++b){const $=d.shape[b],_=c.shape[b];if($!=null&&_!=null&&$!==_)throw new ValueError(`Input ${a} is incompatible with layer ${this.name}: expected shape=${d.shape}, found shape=${c.shape}.`)}}}call(s,o){return s}invokeCallHook(s,o){this._callHook!=null&&this._callHook(s,o)}setCallHook(s){this._callHook=s}clearCallHook(){this._callHook=null}apply(s,o){o=o||{},this.assertNotDisposed();const a=toList(s);let c=!0;for(const g of a)if(!(g instanceof SymbolicTensor)){c=!1;break}let d=!0;for(const g of a)if(g instanceof SymbolicTensor){d=!1;break}if(c===d)throw new ValueError("Arguments to apply() must be all SymbolicTensors or all Tensors");return nameScope(this.name,()=>{if(!this.built){this.assertInputCompatibility(s);const g=[];for(const b of toList(s))g.push(b.shape);this.build(singletonOrArray(g)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&d&&(this._refCount=1)}if(this.assertInputCompatibility(s),d){let g=this.call(s,o);const b=toList(g),$=[];for(let _ of b)a.indexOf(_)!==-1&&(_=_.clone()),$.push(_);if(g=singletonOrArray($),this.activityRegularizer!=null)throw new NotImplementedError("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return g}else{const g=collectInputShape(s),b=this.computeOutputShape(g);let $;const _=guessOutputDType(s);if(this.warnOnIncompatibleInputShape(Array.isArray(s)?g[0]:g),b!=null&&b.length>0&&Array.isArray(b[0])?$=b.map((_e,et)=>new SymbolicTensor(_,_e,this,toList(s),o,this.name,et)):$=new SymbolicTensor(_,b,this,toList(s),o,this.name),this.addInboundNode(s,$,null,null,g,b,o),this._refCount++,this.activityRegularizer!=null)throw new NotImplementedError("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return $}})}warnOnIncompatibleInputShape(s){if(this.batchInputShape!=null)if(s.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(s)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let o=!1;this.batchInputShape.forEach((a,c)=>{a!=null&&s[c]!=null&&s[c]!==a&&(o=!0)}),o&&console.warn(`The shape of the input tensor (${JSON.stringify(s)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new AttributeError(`The layer ${this.name} has never been called and thus has no defined output shape.`);const s=[];for(const o of this.inboundNodes){const a=JSON.stringify(o.outputShapes);s.indexOf(a)===-1&&s.push(a)}if(s.length===1){const o=this.inboundNodes[0].outputShapes;return Array.isArray(o)&&Array.isArray(o[0])&&o.length===1?o[0]:o}else throw new AttributeError(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new RuntimeError(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return countParamsInWeights(this.weights)}build(s){this.built=!0}getWeights(s=!1){return batchGetValue(s?this.trainableWeights:this.weights)}setWeights(s){tidy(()=>{const o=this.weights;if(o.length!==s.length)throw new ValueError(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${s.length}, but the layer was expecting ${o.length} weights. Provided weights: ${s}...`);if(o.length===0)return;const a=[],c=batchGetValue(o);for(let d=0;d<c.length;++d){const g=c[d],b=o[d],$=s[d];if(!arraysEqual(g.shape,$.shape))throw new ValueError(`Layer weight shape ${g.shape} not compatible with provided weight shape ${$.shape}`);a.push([b,$])}batchSetValue(a)})}addWeight(s,o,a,c,d,g,b){if(this._addedWeightNames.indexOf(s)!==-1)throw new ValueError(`Duplicate weight name ${s} for layer ${this.name}`);this._addedWeightNames.push(s),a==null&&(a="float32"),this.fastWeightInitDuringBuild&&(c=getInitializer("zeros"));const $=c.apply(o,a),_=new LayerVariable($,a,s,g,b);return $.dispose(),d!=null&&this.addLoss(()=>d.apply(_.read())),g==null&&(g=!0),g?this._trainableWeights.push(_):this._nonTrainableWeights.push(_),_}setFastWeightInitDuringBuild(s){this.fastWeightInitDuringBuild=s}addLoss(s){s==null||Array.isArray(s)&&s.length===0||(s=toList(s),this._losses!==void 0&&this._losses!==null&&this.losses.push(...s))}computeOutputShape(s){return s}computeMask(s,o){if(!this.supportsMasking){if(o!=null)if(Array.isArray(o))o.forEach(a=>{if(a!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return o}addInboundNode(s,o,a,c,d,g,b=null){const $=toList(s);o=toList(o),a=toList(a),c=toList(c),d=normalizeShapeList(d),g=normalizeShapeList(g);const _=[],_e=[],et=[];for(const rt of $)_.push(rt.sourceLayer),_e.push(rt.nodeIndex),et.push(rt.tensorIndex);new Node({outboundLayer:this,inboundLayers:_,nodeIndices:_e,tensorIndices:et,inputTensors:$,outputTensors:o,inputMasks:a,outputMasks:c,inputShapes:d,outputShapes:g},b);for(let rt=0;rt<o.length;rt++)o[rt].sourceLayer=this,o[rt].nodeIndex=this.inboundNodes.length-1,o[rt].tensorIndex=rt}getConfig(){const s={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(s.batchInputShape=this.batchInputShape),this.dtype!=null&&(s.dtype=this.dtype),s}disposeWeights(){return this.weights.forEach(s=>s.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let s=0;return--this._refCount===0&&(s=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:s}}}function collectInputShape(i){i=toList(i);const s=[];for(const o of i)s.push(o.shape);return singletonOrArray(s)}function guessOutputDType(i){return"float32"}function getSourceInputs(i,s,o){if((s==null||o!=null&&o>0)&&(s=i.sourceLayer,o=i.nodeIndex),s.inboundNodes.length===0)return[i];{const a=s.inboundNodes[o];if(a.inboundLayers.length===0)return a.inputTensors;{const c=[];for(let d=0;d<a.inboundLayers.length;d++){const g=a.inputTensors[d],b=a.inboundLayers[d],$=a.nodeIndices[d],_=getSourceInputs(g,b,$);for(const _e of _)c.indexOf(_e)===-1&&c.push(_e)}return c}}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class InputLayer extends Layer{constructor(s){if(super({dtype:s.dtype,name:s.name!=null?s.name:getUid("input").toString()}),s.batchSize==null&&(s.batchSize=null),s.sparse==null&&(s.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=s.sparse,s.inputShape!=null&&s.batchInputShape!=null)throw new ValueError("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let o=s.batchInputShape;if(o==null){if(s.inputShape==null)throw new ValueError("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");o=[s.batchSize].concat(s.inputShape)}else if(s.batchSize!=null)throw new ValueError("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const a=s.dtype||"float32";this.batchInputShape=o,this.dtype=a,this.inputSpec=[{shape:o}];const c=new SymbolicTensor(this.dtype,this.batchInputShape,this,[],{},this.name);c.nodeIndex=0,c.tensorIndex=0,new Node({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[c],outputTensors:[c],inputMasks:[null],outputMasks:[null],inputShapes:[o],outputShapes:[o]})}apply(s,o){throw new ValueError(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}InputLayer.className="InputLayer";registerClass(InputLayer);function Input(i){if(i.batchShape==null&&i.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(i.batchShape!=null&&i.shape!=null)throw new ValueError("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let s=i.batchShape;i.shape!=null&&s==null&&(s=[null].concat(i.shape));let o=i.dtype;return o==null&&(o="float32"),new InputLayer({batchInputShape:s,name:i.name,dtype:o,sparse:i.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function resolveScalarsInLogs(i){if(i==null)return;const s=[],o=[],a=[];for(const c in i){const d=i[c];if(typeof d!="number"){const g=d;s.push(g.data()),o.push(c),a.push(g)}}if(s.length>0){const c=await Promise.all(s);for(let d=0;d<c.length;++d)i[o[d]]=c[d][0];dispose(a)}}function disposeTensorsInLogs(i){if(i!=null)for(const s in i){const o=i[s];typeof o!="number"&&o.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var ModelLoggingVerbosity;(function(i){i[i.SILENT=0]="SILENT",i[i.VERBOSE=1]="VERBOSE"})(ModelLoggingVerbosity||(ModelLoggingVerbosity={}));const DEFAULT_YIELD_EVERY_MS=125;class BaseCallback{constructor(){this.validationData=null}setParams(s){this.params=s}async onEpochBegin(s,o){}async onEpochEnd(s,o){}async onBatchBegin(s,o){}async onBatchEnd(s,o){}async onTrainBegin(s){}async onTrainEnd(s){}setModel(s){}}class CallbackList{constructor(s,o=10){s==null&&(s=[]),this.callbacks=s,this.queueLength=o}append(s){this.callbacks.push(s)}setParams(s){for(const o of this.callbacks)o.setParams(s)}setModel(s){for(const o of this.callbacks)o.setModel(s)}async onEpochBegin(s,o){o==null&&(o={});for(const a of this.callbacks)await a.onEpochBegin(s,o)}async onEpochEnd(s,o){o==null&&(o={});for(const a of this.callbacks)await a.onEpochEnd(s,o)}async onBatchBegin(s,o){o==null&&(o={});for(const a of this.callbacks)await a.onBatchBegin(s,o)}async onBatchEnd(s,o){o==null&&(o={});for(const a of this.callbacks)await a.onBatchEnd(s,o)}async onTrainBegin(s){s==null&&(s={});for(const o of this.callbacks)await o.onTrainBegin(s)}async onTrainEnd(s){s==null&&(s={});for(const o of this.callbacks)await o.onTrainEnd(s)}}class BaseLogger extends BaseCallback{constructor(){super()}async onEpochBegin(s){this.seen=0,this.totals={}}async onBatchEnd(s,o){o==null&&(o={});const a=o.size==null?0:o.size;this.seen+=a;for(const c in o){const d=o[c];if(typeof d=="number")this.totals.hasOwnProperty(c)||(this.totals[c]=0),this.totals[c]=this.totals[c]+d*a;else{let g;c in this.totals?g=this.totals[c]:this.totals[c]=0;const b=tidy(()=>add$2(this.totals[c],mul(d,a)));this.totals[c]=b,g!=null&&g.dispose()}}}async onEpochEnd(s,o){if(o!=null)for(const a of this.params.metrics)this.totals[a]!=null&&(typeof this.totals[a]=="number"?o[a]=this.totals[a]/this.seen:tidy(()=>{const c=mul(div$1(1,this.seen),this.totals[a]);o[a]=c,this.totals[a].dispose(),keep(o[a])}))}}class History extends BaseCallback{async onTrainBegin(s){this.epoch=[],this.history={}}async onEpochEnd(s,o){o==null&&(o={}),this.epoch.push(s);for(const a in o)this.history[a]==null&&(this.history[a]=[]),this.history[a].push(o[a])}async syncData(){const s=[],o=[],a=[];for(const d in this.history){const g=this.history[d];for(let b=0;b<g.length;++b)if(typeof g[b]!="number"){const $=g[b];s.push($.data()),o.push(d),a.push(b)}}const c=await Promise.all(s);for(let d=0;d<c.length;++d)this.history[o[d]][a[d]].dispose(),this.history[o[d]][a[d]]=c[d][0]}}class CustomCallback extends BaseCallback{constructor(s,o){if(super(),this.currentEpoch=0,this.yieldEvery=o||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=DEFAULT_YIELD_EVERY_MS),this.yieldEvery==="never"&&s.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");isNumber$1(this.yieldEvery)&&(this.maybeWait=debounce(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=s.onTrainBegin,this.trainEnd=s.onTrainEnd,this.epochBegin=s.onEpochBegin,this.epochEnd=s.onEpochEnd,this.batchBegin=s.onBatchBegin,this.batchEnd=s.onBatchEnd,this.yield=s.onYield}async maybeWait(s,o,a){const c=[];this.yield!=null&&(await resolveScalarsInLogs(a),c.push(this.yield(s,o,a))),c.push(nextFrame()),await Promise.all(c)}async onEpochBegin(s,o){this.currentEpoch=s,this.epochBegin!=null&&(await resolveScalarsInLogs(o),await this.epochBegin(s,o))}async onEpochEnd(s,o){const a=[];this.epochEnd!=null&&(await resolveScalarsInLogs(o),a.push(this.epochEnd(s,o))),this.yieldEvery==="epoch"&&a.push(nextFrame()),await Promise.all(a)}async onBatchBegin(s,o){this.batchBegin!=null&&(await resolveScalarsInLogs(o),await this.batchBegin(s,o))}async onBatchEnd(s,o){const a=[];this.batchEnd!=null&&(await resolveScalarsInLogs(o),a.push(this.batchEnd(s,o))),this.yieldEvery==="batch"?a.push(nextFrame()):isNumber$1(this.yieldEvery)&&a.push(this.maybeWait(this.currentEpoch,s,o)),await Promise.all(a)}async onTrainBegin(s){this.trainBegin!=null&&(await resolveScalarsInLogs(s),await this.trainBegin(s))}async onTrainEnd(s){this.trainEnd!=null&&(await resolveScalarsInLogs(s),await this.trainEnd(s))}}function standardizeCallbacks(i,s){return i==null&&(i={}),i instanceof BaseCallback?[i]:Array.isArray(i)&&i[0]instanceof BaseCallback?i:toList(i).map(a=>new CustomCallback(a,s))}class CallbackConstructorRegistry{constructor(){}static registerCallbackConstructor(s,o){assert$2(s>=0&&Number.isInteger(s),()=>`Verbosity level is expected to be an integer >= 0, but got ${s}`),CallbackConstructorRegistry.checkForDuplicate(o),CallbackConstructorRegistry.constructors[s]==null&&(CallbackConstructorRegistry.constructors[s]=[]),CallbackConstructorRegistry.constructors[s].push(o)}static checkForDuplicate(s){for(const o in CallbackConstructorRegistry.constructors)CallbackConstructorRegistry.constructors[+o].forEach(c=>{if(c===s)throw new ValueError("Duplicate callback constructor.")})}static clear(){CallbackConstructorRegistry.constructors={}}static createCallbacks(s){const o=[];for(const a in CallbackConstructorRegistry.constructors){const c=+a;s>=c&&o.push(...CallbackConstructorRegistry.constructors[c])}return o.map(a=>new a)}}CallbackConstructorRegistry.constructors={};function configureCallbacks(i,s,o,a,c,d,g,b,$){const _=new History,_e=[new BaseLogger,...CallbackConstructorRegistry.createCallbacks(s)];i!=null&&_e.push(...i),_e.push(_);const et=new CallbackList(_e);return et.setParams({epochs:o,initialEpoch:a,samples:c,steps:d,batchSize:g,verbose:s,doValidation:b,metrics:$}),{callbackList:et,history:_}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function deserialize(i,s={},o=!1){return deserializeKerasObject(i,SerializationMap.getMap().classNameMap,s,"layer",o)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function l2Normalize(i,s){return tidy(()=>{i.dtype!=="float32"&&(i=i.asType("float32"));const o=sum$2(square$1(i),s,!0),a=fill$2(o.shape,epsilon$1()),c=sqrt$2(maximum$3(o,a));return div$1(i,c)})}function meanSquaredError$1(i,s){return tidy(()=>mean$1(square$1(sub$2(s,i)),-1))}function meanAbsoluteError$1(i,s){return tidy(()=>mean$1(abs$2(sub$2(s,i)),-1))}function meanAbsolutePercentageError$1(i,s){return tidy(()=>{const o=sub$2(i,s),a=clipByValue$1(abs$2(i),epsilon$1(),Number.MAX_VALUE),c=abs$2(div$1(o,a));return mul(100,mean$1(c,-1))})}function meanSquaredLogarithmicError(i,s){return tidy(()=>{const o=clipByValue$1(s,epsilon$1(),Number.MAX_VALUE),a=log$4(add$2(1,o)),c=clipByValue$1(i,epsilon$1(),Number.MAX_VALUE),d=log$4(add$2(1,c));return mean$1(square$1(sub$2(a,d)),-1)})}function squaredHinge(i,s){return tidy(()=>{const o=maximum$3(0,sub$2(1,mul(i,s)));return mean$1(square$1(o),-1)})}function hinge(i,s){return tidy(()=>{const o=maximum$3(0,sub$2(1,mul(i,s)));return mean$1(o,-1)})}function categoricalHinge(i,s){return tidy(()=>{const o=sum$2(mul(i,s),-1),a=max$3(mul(sub$2(1,i),s),-1);return maximum$3(0,add$2(1,sub$2(a,o)))})}function logcosh(i,s){return tidy(()=>{const o=Math.log(2),a=sub$2(s,i),c=sub$2(add$2(a,softplus$2(mul(-2,a))),o);return mean$1(c,-1)})}function categoricalCrossentropy$2(i,s,o=!1){return tidy(()=>{if(o)s=softmax$3(s);else{const a=sum$2(s,s.shape.length-1,!0);s=div$1(s,a)}return s=clipByValue$1(s,epsilon$1(),1-epsilon$1()),neg$2(sum$2(mul(i.toFloat(),log$4(s)),s.shape.length-1))})}function sparseCategoricalCrossentropy$1(i,s,o=!1){return tidy(()=>{const a=floor$2(flatten$1(i)).toInt();s=clipByValue$1(s,epsilon$1(),1-epsilon$1());const c=s.shape,d=oneHot$2(a,c[c.length-1]).reshape(c);return categoricalCrossentropy$2(d,s,o)})}function sigmoidCrossEntropyWithLogits(i,s){if(!arraysEqual(i.shape,s.shape))throw new ValueError(`logits and labels must have the same shape, but got shapes ${JSON.stringify(i.shape)} and ${JSON.stringify(s.shape)}`);return tidy(()=>{const o=s.relu(),a=s.abs().neg();return o.sub(s.mul(i)).add(a.exp().log1p())})}function binaryCrossentropy$2(i,s){return tidy(()=>{let o;return o=clipByValue$1(s,epsilon$1(),1-epsilon$1()),o=log$4(div$1(o,sub$2(1,o))),mean$1(sigmoidCrossEntropyWithLogits(i,o),-1)})}function kullbackLeiblerDivergence(i,s){return tidy(()=>{const o=clipByValue$1(i,epsilon$1(),1),a=clipByValue$1(s,epsilon$1(),1);return sum$2(mul(i,log$4(div$1(o,a))),-1)})}function poisson(i,s){return tidy(()=>{const o=log$4(add$2(epsilon$1(),s));return mean$1(sub$2(s,mul(i,o)),-1)})}function cosineProximity$1(i,s){return tidy(()=>{const o=l2Normalize(i,-1),a=l2Normalize(s,-1),c=mul(o,a);return neg$2(sum$2(c,-1))})}const lossesMap={meanSquaredError:meanSquaredError$1,meanAbsoluteError:meanAbsoluteError$1,meanAbsolutePercentageError:meanAbsolutePercentageError$1,meanSquaredLogarithmicError,squaredHinge,hinge,categoricalHinge,logcosh,categoricalCrossentropy:categoricalCrossentropy$2,sparseCategoricalCrossentropy:sparseCategoricalCrossentropy$1,binaryCrossentropy:binaryCrossentropy$2,kullbackLeiblerDivergence,poisson,cosineProximity:cosineProximity$1};function get$1(i){if(typeof i=="string"){if(i in lossesMap)return lossesMap[i];let s=`Unknown loss ${i}`;throw i.toLowerCase().includes("softmaxcrossentropy")&&(s=`Unknown loss ${i}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new ValueError(s)}else return i}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function binaryAccuracy$1(i,s){return tidy(()=>{const o=mul(.5,onesLike$2(s)),a=cast$2(greater$3(s,o),i.dtype);return mean$1(equal$2(i,a),-1)})}function categoricalAccuracy$1(i,s){return tidy(()=>cast$2(equal$2(argMax$2(i,-1),argMax$2(s,-1)),"float32"))}function truePositives(i,s){return tidy(()=>logicalAnd$2(i.equal(1),s.equal(1)).sum().cast("float32"))}function falseNegatives(i,s){return tidy(()=>logicalAnd$2(i.equal(1),s.equal(0)).sum().cast("float32"))}function falsePositives(i,s){return tidy(()=>logicalAnd$2(i.equal(0),s.equal(1)).sum().cast("float32"))}function precision$1(i,s){return tidy(()=>{const o=truePositives(i,s),a=falsePositives(i,s),c=o.add(a);return where(greater$3(c,0),o.div(c),0).cast("float32")})}function recall$1(i,s){return tidy(()=>{const o=truePositives(i,s),a=falseNegatives(i,s),c=o.add(a);return where(greater$3(c,0),o.div(c),0).cast("float32")})}function binaryCrossentropy$1(i,s){return binaryCrossentropy$2(i,s)}function sparseCategoricalAccuracy$1(i,s){return i.rank===s.rank&&(i=i.squeeze([i.rank-1])),s=s.argMax(-1),s.dtype!==i.dtype&&(s=s.asType(i.dtype)),equal$2(i,s).asType("float32")}const mse$1=meanSquaredError$1,MSE$1=meanSquaredError$1,mae=meanAbsoluteError$1,MAE=meanAbsoluteError$1,mape$1=meanAbsolutePercentageError$1,MAPE$1=meanAbsolutePercentageError$1,categoricalCrossentropy$1=categoricalCrossentropy$2,cosine=cosineProximity$1,sparseCategoricalCrossentropy=sparseCategoricalCrossentropy$1,metricsMap={binaryAccuracy:binaryAccuracy$1,categoricalAccuracy:categoricalAccuracy$1,precision:precision$1,categoricalCrossentropy:categoricalCrossentropy$1,sparseCategoricalCrossentropy,mse:mse$1,MSE:MSE$1,mae,MAE,mape:mape$1,MAPE:MAPE$1,cosine};function get(i){if(typeof i=="string"&&i in metricsMap)return metricsMap[i];if(typeof i!="string"&&i!=null)return i;throw new ValueError(`Unknown metric ${i}`)}function getLossOrMetricName(i){if(assert$1(i!==null,`Unknown LossOrMetricFn ${i}`),typeof i=="string")return i;{let s;for(const o of Object.keys(lossesMap))if(lossesMap[o]===i){s=o;break}if(s!==void 0)return s;for(const o of Object.keys(metricsMap))if(metricsMap[o]===i){s=o;break}return s!==void 0?s:i.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function getOptimizer(i){const s={Adagrad:()=>train.adagrad(.01),Adadelta:()=>train.adadelta(1,.95,epsilon$1()),Adam:()=>train.adam(.001,.9,.999,epsilon$1()),Adamax:()=>train.adamax(.002,.9,.999,epsilon$1(),0),RMSProp:()=>train.rmsprop(.001,.9,0,epsilon$1()),SGD:()=>train.sgd(.01)};if(s.adagrad=s.Adagrad,s.adadelta=s.Adadelta,s.adam=s.Adam,s.adamax=s.Adamax,s.rmsprop=s.RMSProp,s.sgd=s.SGD,i in s)return s[i]();throw new ValueError(`Unknown Optimizer ${i}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const MAX_USER_DEFINED_METADATA_SERIALIZED_LENGTH=1*1024*1024;function checkUserDefinedMetadata(i,s,o=!1){if(i==null||typeof i!="object"||Object.getPrototypeOf(i)!==Object.prototype||!plainObjectCheck(i))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(o){const a=JSON.stringify(i);a.length>MAX_USER_DEFINED_METADATA_SERIALIZED_LENGTH&&console.warn(`User-defined metadata of model "${s}" is too large in size (length=${a.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${MAX_USER_DEFINED_METADATA_SERIALIZED_LENGTH}.`)}}function plainObjectCheck(i){if(i===null)return!0;if(typeof i=="object")if(Object.getPrototypeOf(i)===Object.prototype){const s=Object.keys(i);for(const o of s)if(typeof o!="string"||!plainObjectCheck(i[o]))return!1;return!0}else if(Array.isArray(i)){for(const s of i)if(!plainObjectCheck(s))return!1;return!0}else return!1;else{const s=typeof i;return s==="string"||s==="number"||s==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function printSummary(i,s,o,a=console.log){const c=isModelSequentialLike(i),d=["Layer (type)","Output shape","Param #"];c?(s=s||65,o=o||[.45,.85,1]):(s=s||98,o=o||[.33,.55,.67,1]),o[o.length-1]<=1&&(o=o.map(_e=>Math.floor(s*_e)));let g;if(!c){d.push("Receives inputs"),g=[];for(const _e in i.nodesByDepth)g.push(...i.nodesByDepth[_e])}a("_".repeat(s)),printRow(d,o,a),a("=".repeat(s));const b=i.layers;for(let _e=0;_e<b.length;++_e)c?printLayerSummary(b[_e],o,a):printLayerSummaryWithConnections(b[_e],o,g,a),a((_e===b.length-1?"=":"_").repeat(s));i.checkTrainableWeightsConsistency();const $=countTrainableParams(i),_=countParamsInWeights(i.nonTrainableWeights);a(`Total params: ${$+_}`),a(`Trainable params: ${$}`),a(`Non-trainable params: ${_}`),a("_".repeat(s))}function countTrainableParams(i){let s;return i.collectedTrainableWeights!=null?s=countParamsInWeights(i.collectedTrainableWeights):s=countParamsInWeights(i.trainableWeights),s}function isModelSequentialLike(i){let s=!0;const o=[],a=[];for(const c in i.nodesByDepth)o.push(i.nodesByDepth[c]);for(const c of o){if(c.length>1||c.length===1&&c[0].inboundLayers.length>1){s=!1;break}a.push(...c)}if(s)for(const c of i.layers){let d=!1;for(const g of c.inboundNodes)if(a.indexOf(g)!==-1)if(d){s=!1;break}else d=!0;if(!s)break}return s}function printRow(i,s,o=console.log){let a="";for(let c=0;c<i.length;++c)c>0&&(a=a.slice(0,a.length-1)+" "),a+=i[c],a=a.slice(0,s[c]),a+=" ".repeat(s[c]-a.length);o(a)}function printLayerSummary(i,s,o){let a;try{a=JSON.stringify(i.outputShape)}catch{a="multiple"}const c=i.name,d=i.getClassName(),g=[`${c} (${d})`,a,i.countParams().toString()];printRow(g,s,o)}function printLayerSummaryWithConnections(i,s,o,a){let c;try{c=JSON.stringify(i.outputShape)}catch{c="multiple"}const d=[];for(const _e of i.inboundNodes)if(!(o!=null&&o.length>0&&o.indexOf(_e)===-1))for(let et=0;et<_e.inboundLayers.length;++et){const rt=_e.inboundLayers[et].name,tt=_e.nodeIndices[et],j=_e.tensorIndices[et];d.push(`${rt}[${tt}][${j}]`)}const g=i.name,b=i.getClassName(),$=d.length===0?"":d[0],_=[`${g} (${b})`,c,i.countParams().toString(),$];printRow(_,s,a);for(let _e=1;_e<d.length;++_e)printRow(["","","",d[_e]],s,a)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function isArrayItemInputOrOutputName(i,s,o){return(i==="inboundNodes"||i==="outputLayers"||i==="inputLayers")&&s===0&&typeof o=="string"}function convertPythonicToTs(i,s){if(i===null)return null;if(typeof i=="string")return toCamelCase(i);if(typeof i=="number"||typeof i=="boolean")return i;if(i instanceof Array){const o=[],a=i.length;for(let c=0;c<a;++c){const d=i[c];isArrayItemInputOrOutputName(s,c,d)?o.push(d):o.push(convertPythonicToTs(d,s))}return o}else{const o={};for(const a of Object.keys(i)){const c=i[a];if(a==="name"&&typeof c=="string")o[a]=c;else{const d=toCamelCase(a);o[d]=convertPythonicToTs(c,d)}}return o}}function convertTsToPythonic(i,s){if(i==null)return null;if(typeof i=="string")return toSnakeCase(i);if(typeof i=="number"||typeof i=="boolean")return i;if(i instanceof Array){const o=[],a=i.length;for(let c=0;c<a;++c){const d=i[c];isArrayItemInputOrOutputName(s,c,d)?o.push(d):o.push(convertTsToPythonic(d,s))}return o}else{const o={};for(const a of Object.keys(i)){const c=i[a],d=toSnakeCase(a);(a==="name"||a==="className")&&typeof c=="string"?o[d]=c:o[d]=convertTsToPythonic(c,a)}return o}}/** @license See the LICENSE file. */const version$7="2.8.6";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function assertFeedCompatibility(i,s){if(i.dtype==null||i.dtype===s.dtype)return s;try{return cast$3(s,i.dtype)}catch{throw new ValueError(`The dtype of the feed (${s.dtype}) can not be cast to the dtype of the key '${i.name}' (${i.dtype}).`)}}class FeedDict{constructor(s){if(this.id2Value={},this.id2Mask={},this.name2Id={},s instanceof FeedDict)for(const o in s.id2Value)this.id2Value[o]=s.id2Value[o],o in s.id2Mask&&(this.id2Mask[o]=s.id2Mask[o]);else{if(s==null)return;for(const o of s)this.add(o.key,o.value)}}add(s,o,a){if(this.id2Value[s.id]==null)this.id2Value[s.id]=assertFeedCompatibility(s,o),this.name2Id[s.name]=s.id,a!=null&&(this.id2Mask[s.id]=a);else throw new ValueError(`Duplicate key: name=${s.name}, id=${s.id}`);return this}addFeed(s){this.add(s.key,s.value)}hasKey(s){return this.id2Value[s.id]!=null}names(){return Object.keys(this.name2Id)}getValue(s){if(s instanceof SymbolicTensor){if(this.id2Value[s.id]==null)throw new ValueError(`Nonexistent key: ${s.name}`);return this.id2Value[s.id]}else{const o=this.name2Id[s];if(o==null)throw new ValueError(`Feed dict has no SymbolicTensor name: ${s}`);return this.id2Value[o]}}getMask(s){if(s instanceof SymbolicTensor){if(this.id2Value[s.id]==null)throw new ValueError(`Nonexistent key: ${s.name}`);return this.id2Mask[s.id]}else{const o=this.name2Id[s];if(o==null)throw new ValueError(`Feed dict has no SymbolicTensor name: ${s}`);return this.id2Mask[o]}}disposeMasks(){this.id2Mask!=null&&dispose(this.id2Mask)}}const cachedSorted={},cachedRecipientCounts={};function execute(i,s,o,a){const c=o==null?!1:o.training,d=Array.isArray(i),g=d?i:[i],b=g.map(j=>j.name),$=[],_=s.names();for(const j of b)_.indexOf(j)!==-1?$.push(s.getValue(j)):$.push(null);a!=null&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const _e=b.join(",")+"|"+s.names().join(",");let et,rt;if(cachedSorted[_e]==null){const j=getTopologicalSortAndRecipientCounts(g,s);et=j.sorted,rt=j.recipientCounts,cachedSorted[_e]=et,cachedRecipientCounts[_e]=rt}et=cachedSorted[_e],rt={},c||Object.assign(rt,cachedRecipientCounts[_e]);const tt=new FeedDict(s);for(let j=0;j<et.length;++j){if(a!=null){const Tt=memory().numTensors;Tt>a.maxNumTensors&&(a.maxNumTensors=Tt),Tt<a.minNumTensors&&(a.minNumTensors=Tt)}const nt=et[j],st=nt.sourceLayer;if(st instanceof InputLayer)continue;const ot=[],ut=[],ht=[];let pt=!1;for(const Tt of nt.inputs){const Ct=tt.getValue(Tt),_t=tt.getMask(Tt);ot.push(Ct),ut.push(_t),_t!=null&&(pt=!0),c||(rt[Tt.name]--,rt[Tt.name]===0&&!s.hasKey(Tt)&&b.indexOf(Tt.name)===-1&&!Ct.isDisposed&&Tt.sourceLayer.stateful!==!0&&ht.push(Ct))}pt&&(o=o||{},o.mask=ut[0]);const it=toList(st.apply(ot,o));let yt=null;st.supportsMasking&&(yt=st.computeMask(ot,ut));const ft=getNodeOutputs(nt),bt=Array.isArray(ft)?ft:[ft];for(let Tt=0;Tt<bt.length;++Tt){tt.hasKey(bt[Tt])||tt.add(bt[Tt],it[Tt],Array.isArray(yt)?yt[0]:yt);const Ct=b.indexOf(bt[Tt].name);Ct!==-1&&($[Ct]=it[Tt])}c||dispose(ht)}return tt.disposeMasks(),d?$:$[0]}function getTopologicalSortAndRecipientCounts(i,s){assert$2(i!=null&&i.length>0,()=>"Expected at least one fetch, got none");let o=[],a={};if(i.length===1){const c=getTopologicalSortAndRecipientCountsForOneFetch(i[0],s);o=c.sorted,a=c.recipientMap}else{const c=new Set;for(const d of i){const{sorted:g,recipientMap:b}=getTopologicalSortAndRecipientCountsForOneFetch(d,s);for(const $ of g)c.has($.name)||(o.push($),c.add($.name));for(const $ in b)a[$]==null&&(a[$]=new Set),b[$].forEach(_=>a[$].add(_))}}return{sorted:o,recipientCounts:recipientMap2Counts(a)}}function recipientMap2Counts(i){const s={};for(const o in i)s[o]=i[o].size;return s}function getTopologicalSortAndRecipientCountsForOneFetch(i,s){const o=new Set,a=[],c={};for(const b of s.names())o.add(b);const d=[],g=[];for(d.push(i);d.length>0;){const b=d[d.length-1];if(o.has(b.name)){d.pop();continue}const $=g[g.length-1]===d.length-1;if(b.inputs.length===0||$)d.pop(),a.push(b),o.add(b.name),$&&g.pop();else{g.push(d.length-1);for(const _ of b.inputs)c[_.name]==null&&(c[_.name]=new Set),c[_.name].add(b.name),!o.has(_.name)&&d.push(_)}}return{sorted:a,recipientMap:c}}function getNodeOutputs(i){let s;if(i.sourceLayer.inboundNodes.length===1)s=i.sourceLayer.output;else{let o=null;for(let a=0;a<i.sourceLayer.inboundNodes.length;++a)for(const c of i.sourceLayer.inboundNodes[a].outputTensors)if(c.id===i.id){o=a;break}s=i.sourceLayer.getOutputAt(o)}return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Container extends Layer{constructor(s){if(super({}),this.containerNodes=new Set,this.name=s.name,this.name==null){const ut=this.getClassName().toLowerCase();this.name=getUid(ut)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(s.inputs)?this.inputs=s.inputs.slice():this.inputs=[s.inputs],Array.isArray(s.outputs)?this.outputs=s.outputs.slice():this.outputs=[s.outputs],unique$2(this.inputs).length!==this.inputs.length)throw new ValueError(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(ut=>ut.name)}`);unique$2(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(ut=>ut.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const ut of this.outputs){const ht=ut.sourceLayer,pt=ut.nodeIndex,it=ut.tensorIndex;this.outputLayers.push(ht),this.outputLayersNodeIndices.push(pt),this.outputLayersTensorIndices.push(it)}for(const ut of this.inputs){const ht=ut.sourceLayer,pt=ut.nodeIndex,it=ut.tensorIndex;assert$1(pt===0,"input layer has >1 nodes"),assert$1(it===0,"input layer has >1 tensors"),this.inputLayers.push(ht),this.inputLayersNodeIndices.push(pt),this.inputLayersTensorIndices.push(it)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let ut=0;ut<this.inputLayers.length;ut++){const ht=this.inputLayers[ut];if(!(ht instanceof InputLayer))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${s.inputs}. Input ${ut} (0-based) originates from layer type ${ht.getClassName()}.`);this.inputNames.push(ht.name),this.feedInputShapes.push(ht.batchInputShape),this.feedInputNames.push(ht.name)}for(const ut of this.outputLayers)this.outputNames.push(ut.name);this.internalInputShapes=this.inputs.map(ut=>ut.shape),this.internalOutputShapes=this.outputs.map(ut=>ut.shape);const o={},a={},c={},d={},g={},b=[],$=(ut,ht,pt,it,yt,ft)=>{(it==null||yt==null||ft==null)&&(it=ut.sourceLayer,yt=ut.nodeIndex,ft=ut.tensorIndex);const bt=it.inboundNodes[yt];if(pt.indexOf(bt)!==-1)throw new RuntimeError(`The tensor ${ut.name} at layer "${it.name}" is part of a cycle.`);if(ht.indexOf(bt)!==-1)return;this.containerNodes.add(Container.nodeKey(it,yt)),it.id in g||(g[it.id]=Object.keys(g).length),pt.indexOf(bt)===-1&&pt.push(bt);const Tt=bt.inboundLayers.length;for(let Ct=0;Ct<Tt;Ct++){const _t=bt.inputTensors[Ct],Ot=bt.inboundLayers[Ct],kt=bt.nodeIndices[Ct],Rt=bt.tensorIndices[Ct];$(_t,ht,pt,Ot,kt,Rt)}for(ht.push(bt);pt.indexOf(bt)>=0;)pt.splice(pt.indexOf(bt),1);b.push(bt)},_=[],_e=[];for(const ut of this.outputs)$(ut,_,_e);const et=b.slice().reverse();for(const ut of et){a[ut.id]=ut,ut.id in o||(o[ut.id]=0);let ht=o[ut.id];const pt=c[ut.outboundLayer.id]==null?0:c[ut.outboundLayer.id];ht=Math.max(ht,pt),c[ut.outboundLayer.id]=ht,d[ut.outboundLayer.id]=ut.outboundLayer,o[ut.id]=ht;for(let it=0;it<ut.inboundLayers.length;it++){const yt=ut.inboundLayers[it],ft=ut.nodeIndices[it],bt=yt.inboundNodes[ft],Tt=o[bt.id]==null?0:o[bt.id];o[bt.id]=Math.max(ht+1,Tt),a[bt.id]=bt}}const rt={};for(const ut in o){const ht=o[ut];ht in rt||(rt[ht]=[]),rt[ht].push(a[ut])}const tt={};for(const ut in c){const ht=c[ut];ht in tt||(tt[ht]=[]),tt[ht].push(d[ut])}let j=Object.keys(tt).map(ut=>parseInt(ut,10)).sort(reverseNumberCompare);this.layers=[];for(const ut of j){const ht=tt[ut];ht.sort((pt,it)=>{const yt=g[pt.id],ft=g[it.id];return yt<ft?-1:yt>ft?1:0});for(const pt of ht)pt instanceof Container&&this.internalContainerRefs.push(pt),this.layers.push(pt)}this.layersByDepth=tt,j=Object.keys(rt).map(ut=>parseInt(ut,10)).sort(reverseNumberCompare);const nt=this.inputs.slice(),st=[];for(const ut of j)for(const ht of rt[ut]){const pt=ht.outboundLayer;if(pt!=null){for(const it of ht.inputTensors)if(nt.indexOf(it)===-1)throw new RuntimeError(`Graph disconnected: cannot obtain value for tensor ${it} at layer "${pt.name}". The following previous layers were accessed without issue: ${st}`);for(const it of ht.outputTensors)nt.push(it);st.push(pt.name)}}this.nodesByDepth=rt;const ot=this.layers.map(ut=>ut.name);for(const ut of ot){const ht=ot.filter(pt=>pt===ut).length;if(ht!==1)throw new RuntimeError(`The name "${ut}" is used ${ht} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(ot))}this.outboundNodes=[],this.inboundNodes=[],new Node({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(ut=>null),outputMasks:this.outputs.map(ut=>null),inputShapes:this.inputs.map(ut=>ut.shape),outputShapes:this.outputs.map(ut=>ut.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const s={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const o of this.layers)s.numDisposedVariables+=o.dispose().numDisposedVariables;for(const o of this.internalContainerRefs)s.numDisposedVariables+=o.dispose().numDisposedVariables}return s.refCountAfterDispose=this._refCount,s}get trainable(){return this.trainable_}set trainable(s){this.layers.forEach(o=>{o._trainableWeights.forEach(a=>a.trainable=s)}),this.trainable_=s}get trainableWeights(){if(this._trainableWeights.length>0)throw new ValueError("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let s=[];for(const o of this.layers)s=s.concat(o.trainableWeights);return s}get nonTrainableWeights(){const s=[];for(const o of this.layers)s.push(...o.nonTrainableWeights);if(!this.trainable){const o=[];for(const a of this.layers)o.push(...a.trainableWeights);return o.concat(s)}return s}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(s,o=!0){const a={};let c=0;for(const g of this.layers)for(const b of g.weights){if(a[b.originalName]!=null)throw new ValueError(`Duplicate weight name: ${b.originalName}`);a[b.originalName]=b,c++}const d=[];for(const g in s){let b=g;if(a[g]==null){const $=g.split("/");b=$.slice(0,-2).concat([$[$.length-1]]).join("/")}if(a[b]!=null)d.push([a[b],s[g]]);else if(o)throw new ValueError(`Provided weight data has no target variable: ${g}`);delete a[b]}if(o){const g=[];for(const b in a)g.push(b);if(g.length>0)throw new ValueError(`${g.length} of ${c} weights are not set: ${g}`)}batchSetValue(d)}updatedConfig(){const s=this.getConfig(),o={};return o.className=this.getClassName(),o.config=s,o.kerasVersion=`tfjs-layers ${version$7}`,o.backend="TensorFlow.js",o}toJSON(s,o=!0){const a=convertTsToPythonic(this.updatedConfig());return o?JSON.stringify(a):a}call(s,o){return tidy(()=>{s=toList(s);const a=new FeedDict;for(let c=0;c<this.inputs.length;++c)a.add(this.inputs[c],s[c]);return execute(this.outputs,a,o)})}computeMask(s,o){return tidy(()=>{s=toList(s);let a;return o==null?a=pyListRepeat(null,s.length):a=toList(o),this.runInternalGraph(s,a)[1]})}computeOutputShape(s){const o=normalizeShapeList(s);if(o.length!==this.inputLayers.length)throw new ValueError(`Invalid inputShape argument ${s}: model has ${this.inputLayers.length} tensor inputs.`);const a={};for(let b=0;b<o.length;b++){const $=this.inputLayers[b],_=o[b],_e=$.name+"_0_0";a[_e]=_}const c=Object.keys(this.nodesByDepth).map(b=>parseInt(b,10)).sort(reverseNumberCompare);if(c.length>1)for(const b of c){const $=this.nodesByDepth[b];for(const _ of $){const _e=_.outboundLayer;if(this.inputLayers.map(nt=>nt.id).indexOf(_e.id)!==-1)continue;const et=[];for(let nt=0;nt<_.inboundLayers.length;nt++){const st=_.inboundLayers[nt],ot=_.nodeIndices[nt],ut=_.tensorIndices[nt],ht=`${st.name}_${ot}_${ut}`,pt=a[ht];et.push(pt)}const rt=_e.computeOutputShape(singletonOrArray(et)),tt=normalizeShapeList(rt),j=_e.inboundNodes.indexOf(_);for(let nt=0;nt<tt.length;nt++){const st=`${_e.name}_${j}_${nt}`;a[st]=tt[nt]}}}const d=[],g=[];for(let b=0;b<this.outputLayers.length;b++){const $=this.outputLayers[b],_=this.outputLayersNodeIndices[b],_e=this.outputLayersTensorIndices[b],et=`${$.name}_${_}_${_e}`;g.push(et)}for(let b=0;b<g.length;b++){const $=g[b];assert$1($ in a),d.push(a[$])}return singletonOrArray(d)}runInternalGraph(s,o){o==null&&(o=pyListRepeat(null,s.length));const a={};for(let $=0;$<this.inputs.length;++$){const _=this.inputs[$],_e=s[$],et=o[$];a[_.id]=[_e,et]}const c=Object.keys(this.nodesByDepth).map($=>parseInt($,10)).sort(reverseNumberCompare);for(const $ of c){const _=this.nodesByDepth[$];for(const _e of _){const et=_e.outboundLayer,rt=_e.inputTensors,tt=_e.outputTensors,j=new Array;for(const nt of rt)nt.id in a&&j.push(a[nt.id]);if(j.length===rt.length){let nt={},st,ot,ut,ht;if(_e.callArgs!=null&&(nt=_e.callArgs),j.length===1){const[pt,it]=j[0];nt.mask==null&&(nt.mask=it),ut=toList(et.call(pt,nt)),ht=toList(et.computeMask(pt,it)),st=[pt],ot=[it]}else st=j.map(pt=>pt[0]),ot=j.map(pt=>pt[1]),nt.mask==null&&(nt.mask=ot),ut=toList(et.call(st,nt)),ht=toList(et.computeMask(st,ot));if(et.activityRegularizer)throw new NotImplementedError("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let pt=0;pt<tt.length;++pt){const it=tt[pt],yt=ut[pt],ft=ht[pt];a[it.id]=[yt,ft]}}}}const d=[],g=[],b=[];for(const $ of this.outputs){assert$1($.id in a,`Could not compute output ${$.name} : ${$.id}`);const[_,_e]=a[$.id];b.push(_.shape),d.push(_),g.push(_e)}return[d,g,b]}buildNodeConversionMap(s){const o={};let a;for(const c of this.layers){a=c instanceof Container?1:0;for(let d=0;d<c.inboundNodes.length;d++){const g=Container.nodeKey(c,d);this.containerNodes.has(g)&&(o[g]=a,a+=1)}}return o}getLayer(s,o){if(o!=null){if(this.layers.length<=o)throw new ValueError(`Was asked to retrieve layer at index ${o}, but model only has ${this.layers.length} layer(s).`);return this.layers[o]}else if(s==null)throw new ValueError("Provide either a layer name or layer index");for(const a of this.layers)if(a.name===s)return a;throw new ValueError(`No such layer: ${s}`)}calculateLosses(){return tidy(()=>{const s=[];for(const o of this.layers)for(let a=0;a<o.inboundNodes.length;++a){const c=Container.nodeKey(o,a);this.containerNodes.has(c)&&s.push(...o.calculateLosses())}return s})}getConfig(){const s={name:this.name},o=this.buildNodeConversionMap(this.layers),a=[];for(const g of this.layers){const b=g.getClassName(),$=g.getConfig(),_=[];for(let et=0;et<g.inboundNodes.length;et++){const rt=g.inboundNodes[et],tt=Container.nodeKey(g,et);let j={};if(this.containerNodes.has(tt)){if(rt.callArgs)try{JSON.stringify(rt.callArgs),j=rt.callArgs}catch{console.warn(`Layer ${g.name} was passed non-serializable keyword arguments: ${rt.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),j={}}if(rt.inboundLayers.length>0){const nt=[];for(let st=0;st<rt.inboundLayers.length;st++){const ot=rt.inboundLayers[st],ut=rt.nodeIndices[st],ht=rt.tensorIndices[st],pt=Container.nodeKey(ot,ut);let it=o[pt];it==null&&(it=0),nt.push([ot.name,it,ht,j])}_.push(nt)}}}const _e={};_e.name=g.name,_e.className=b,_e.config=$,_e.inboundNodes=_,a.push(_e)}s.layers=a;const c=[];for(let g=0;g<this.inputLayers.length;g++){const b=this.inputLayers[g],$=this.inputLayersNodeIndices[g],_=Container.nodeKey(b,$);if(!this.containerNodes.has(_))continue;let _e=o[_];_e==null&&(_e=0);const et=this.inputLayersTensorIndices[g];c.push([b.name,_e,et])}s.inputLayers=c;const d=[];for(let g=0;g<this.outputLayers.length;g++){const b=this.outputLayers[g],$=this.outputLayersNodeIndices[g],_=Container.nodeKey(b,$);if(!this.containerNodes.has(_))continue;let _e=o[_];_e==null&&(_e=0);const et=this.outputLayersTensorIndices[g];d.push([b.name,_e,et])}return s.outputLayers=d,s}static fromConfig(s,o,a={},c=!1){const d={},g={};function b(st,ot){st.name in g?g[st.name].push(ot):g[st.name]=[ot]}function $(st,ot){const ut=[];let ht;for(const pt of ot){const it=pt[0],yt=pt[1],ft=pt[2];if(ht=pt[3]==null?{}:pt[3],!(it in d)){b(st,ot);return}const bt=d[it];if(bt.inboundNodes.length<=yt){b(st,ot);return}const Tt=bt.inboundNodes[yt];ut.push(Tt.outputTensors[ft])}ut.length>0&&st.apply(singletonOrArray(ut),ht)}function _(st){const ot=st.name,ut=deserialize(st,o.customObjects!=null?o.customObjects:{});ut.setFastWeightInitDuringBuild(c),d[ot]=ut,st.inboundNodes.forEach(pt=>{if(!(pt instanceof Array))throw new ValueError(`Corrupted configuration, expected array for nodeData: ${pt}`);b(ut,pt)})}const _e=o.name,et=o.layers;for(const st of et)_(st);for(;!isObjectEmpty(g);)for(const st of et){const ot=d[st.name];if(ot.name in g){const ut=g[ot.name];delete g[ot.name];for(const ht of ut)$(ot,ht)}}const rt=[],tt=[],j=o.inputLayers;for(const st of j){const ot=st[0],ut=st[1],ht=st[2];assert$1(ot in d);const it=d[ot].inboundNodes[ut].outputTensors;rt.push(it[ht])}const nt=o.outputLayers;for(const st of nt){const ot=st[0],ut=st[1],ht=st[2];assert$1(ot in d);const it=d[ot].inboundNodes[ut].outputTensors;tt.push(it[ht])}return new s({inputs:rt,outputs:tt,name:_e})}get stateful(){if(this._stateful)throw new ValueError("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const s of this.layers)if(s.stateful)return!0;return!1}resetStates(){tidy(()=>{this.layers.forEach(s=>{s.stateful&&s.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function standardizeSampleOrClassWeights(i,s,o){const a=s.length;if(i==null||Array.isArray(i)&&i.length===0)return s.map(c=>null);if(a===1)return Array.isArray(i)&&i.length===1?i:typeof i=="object"&&s[0]in i?[i[s[0]]]:[i];if(Array.isArray(i)){if(i.length!==a)throw new Error(`Provided ${o} is an array of ${i.length} element(s), but the model has ${a} outputs. Make sure a set of weights is provided for each model output.`);return i}else if(typeof i=="object"&&Object.keys(i).length>0&&typeof i[Object.keys(i)[0]]=="object"){const c=[];return s.forEach(d=>{d in i?c.push(i[d]):c.push(null)}),c}else throw new Error(`The model has multiple (${a}) outputs, so ${o} must be either an array with ${a} elements or an object with ${s} keys. Provided ${o} not understood: ${JSON.stringify(i)}`)}function standardizeClassWeights(i,s){return standardizeSampleOrClassWeights(i,s,"classWeight")}async function standardizeWeights(i,s,o,a){if(s!=null||a!=null)throw new Error("Support sampleWeight is not implemented yet");if(o!=null){const c=tidy(()=>{if(i.shape.length===1)return i.clone();if(i.shape.length===2){if(i.shape[1]>1)return i.argMax(1);if(i.shape[1]===1)return i.reshape([i.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${i.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${i.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),d=Array.from(await c.data());dispose(c);const g=[];return d.forEach(b=>{if(o[b]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${b} exists in the data but not in classWeight`);g.push(o[b])}),tensor1d(g,"float32")}else return null}function computeWeightedLoss(i,s){return mul(i,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const DEFAULT_VALIDATION_BATCH_SIZE=32;function standardizeDataIteratorOutput(i,s){let o,a;const c=s;o=c.xs,a=c.ys,assert$2(o!=null&&a!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${s}`);const d=flattenTensorOrArrayOrMap("input",i.inputNames,o),g=flattenTensorOrArrayOrMap("output",i.outputNames,a),b=d[0].shape[0];assert$2(d.length===i.inputs.length,()=>`LayersModel has ${i.inputs.length} inputs, but the dataset provides ${d.length} inputs.  (Expected input keys: ${JSON.stringify(i.inputNames)})`),assert$2(g.length===i.outputs.length,()=>`LayersModel has ${i.outputs.length} outputs, but the dataset provides ${g.length} outputs.  (Expected output keys: ${JSON.stringify(i.outputNames)})`);for(let $=0;$<d.length;$++)assert$2(d[$].shape[0]===b,()=>`Batch size mismatch: input ${i.inputNames[$]} has ${d[$].shape[0]}; expected  ${b} based on input ${i.inputNames[0]}.`);for(let $=0;$<g.length;$++)assert$2(g[$].shape[0]===b,()=>`Batch size mismatch: output ${i.outputNames[$]} has ${g[$].shape[0]}; expected  ${b} based on input ${i.inputNames[0]}.`);return{xs:d,ys:g}}function flattenTensorOrArrayOrMap(i,s,o){if(o instanceof Tensor)return[o];if(Array.isArray(o))return assert$2(o.length===s.length,()=>`Received an array of ${o.length} Tensors, but expected ${s.length} to match the ${i} keys ${s}.`),o;{const a=[];for(const c of s){if(o[c]==null)throw new ValueError(`The feature data generated by the dataset lacks the required ${i} key '${c}'.`);a.push(o[c])}return a}}function standardizeTensorValidationData(i){if(i.length===3)throw new NotImplementedError("Validation with sample weights is not implemented yet.");return{xs:i[0],ys:i[1]}}async function fitDataset(i,s,o){const a=o.batchesPerEpoch!=null;if(assert$2(i.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),assert$2(o!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),assert$2(o.epochs!=null&&o.epochs>0&&Number.isInteger(o.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${o.epochs}`),assert$2(!a||o.batchesPerEpoch>0&&Number.isInteger(o.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${o.batchesPerEpoch}`),assert$2(o.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),i.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");i.isTraining=!0;try{const c=o.validationData!=null;let d,g;if(c)if(isDatasetObject(o.validationData))assert$2(o.validationBatches==null||o.validationBatches>0&&Number.isInteger(o.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${o.validationBatches}`);else{const st=standardizeTensorValidationData(o.validationData);d=st.xs,g=st.ys}const b=i.makeTrainFunction(),$=i.getDedupedMetricsNames();let _;c?_=$.slice().concat($.map(st=>"val_"+st)):_=$.slice();const _e=standardizeCallbacks(o.callbacks,o.yieldEvery),et=o.verbose==null?1:o.verbose,{callbackList:rt,history:tt}=configureCallbacks(_e,et,o.epochs,null,null,getStepsPerEpoch(s,o),null,c,_);rt.setModel(i),i.history=tt,await rt.onTrainBegin(),i.stopTraining_=!1;let j=o.initialEpoch==null?0:o.initialEpoch,nt=await s.iterator();for(;j<o.epochs;){const st={};await rt.onEpochBegin(j);let ot=0,ut=0;for(a||(nt=await s.iterator());!a||ot<o.batchesPerEpoch;){const ht=await nt.next();if(a&&ht.done){console.warn(`You provided \`batchesPerEpoch\` as ${o.batchesPerEpoch}, but your dataset iterator ran out of data after ${ot} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${o.batchesPerEpoch*o.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(ht.value!=null){const{xs:pt,ys:it}=standardizeDataIteratorOutput(i,ht.value),yt={};yt.batch=ut,yt.size=pt[0].shape[0],await rt.onBatchBegin(ut,yt);const ft=[];if(o.classWeight!=null){const Ct=standardizeClassWeights(o.classWeight,i.outputNames);for(let _t=0;_t<Ct.length;++_t)ft.push(await standardizeWeights(it[_t],null,Ct[_t]))}const bt=pt.concat(it).concat(ft),Tt=b(bt);dispose(bt);for(let Ct=0;Ct<$.length;++Ct){const _t=$[Ct],Ot=Tt[Ct];yt[_t]=Ot,keep(Ot)}await rt.onBatchEnd(ut,yt),disposeTensorsInLogs(yt),ut++,ot++}if(a?ot>=o.batchesPerEpoch:ht.done){if(c){let pt;isDatasetObject(o.validationData)?pt=toList(await i.evaluateDataset(o.validationData,{batches:o.validationBatches})):pt=toList(i.evaluate(d,g,{batchSize:o.validationBatchSize==null?DEFAULT_VALIDATION_BATCH_SIZE:o.validationBatchSize,verbose:0}));for(let it=0;it<i.metricsNames.length;++it)st[`val_${i.metricsNames[it]}`]=pt[it]}break}if(i.stopTraining_)break}if(await rt.onEpochEnd(j,st),j++,i.stopTraining_)break}return await rt.onTrainEnd(),await i.history.syncData(),i.history}finally{i.isTraining=!1}}function getStepsPerEpoch(i,s){let o=null;return s.batchesPerEpoch!=null?o=s.batchesPerEpoch:Number.isFinite(i.size)&&(o=i.size),o}function isDatasetObject(i){return typeof i.iterator=="function"}function isLazyIteratorObject(i){return typeof i.next=="function"}async function evaluateDataset(i,s,o){o=o||{};const a=o.batches!=null,c=i.testFunction;let d=[];if(o.verbose>0)throw new NotImplementedError("Verbose mode is not implemented yet.");assert$2(!a||o.batches>0&&Number.isInteger(o.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(o.batches)}`);const g=isLazyIteratorObject(s)?s:await s.iterator();let b=0,$=0;for(;!a||$<o.batches;){const _=await g.next();if(d=tidy(()=>{if(_.value){const{xs:_e,ys:et}=standardizeDataIteratorOutput(i,_.value),rt=_e.concat(et),tt=tidy(()=>c(rt));if(dispose(rt),$===0)for(let nt=0;nt<tt.length;++nt)d.push(scalar(0));const j=rt[0].shape[0];for(let nt=0;nt<tt.length;++nt){const st=tt[nt],ot=d[nt];d[nt]=tidy(()=>add$2(d[nt],mul(j,st))),$>0&&dispose(ot)}dispose(tt),b+=j,++$}return d}),_.done){a&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${o.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let _=0;_<d.length;++_){const _e=d[_];d[_]=div$1(d[_],b),dispose(_e)}return singletonOrArray(d)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function checkBatchSize(i){assert$2(i>0&&Number.isInteger(i),()=>`batchSize is required to be a positive integer, but got ${i}`)}function sliceArrays(i,s,o){return i==null?[null]:Array.isArray(i)?i.map(a=>sliceAlongFirstAxis(a,s,o-s)):sliceAlongFirstAxis(i,s,o-s)}function sliceArraysByIndices(i,s){return tidy(()=>i==null?null:Array.isArray(i)?i.map(o=>sliceArraysByIndices(o,s)):gather(i,s.dtype==="int32"?s:s.toInt()))}function makeBatches(i,s){const o=[];let a=0,c=null;for(;a<i;)c=a+s,c>=i&&(c=i),o.push([a,c]),a=c;return o}async function fitLoop(i,s,o,a,c,d,g,b,$,_,_e,et,rt,tt,j){c==null&&(c=32),d==null&&(d=1),_e==null&&(_e=!0),rt==null&&(rt=0);let nt=!1;if($!=null&&_!=null&&(nt=!0),j!=null&&(nt=!0,tt==null))throw new ValueError("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const st=i.checkNumSamples(o,c,tt,"steps_per_epoch");let ot;st!=null&&(ot=range$3(0,st)),g==null&&(g=1);const{callbackList:ut,history:ht}=configureCallbacks(b,g,d,rt,st,tt,c,nt,et);ut.setModel(i),i.history=ht,await ut.onTrainBegin(),i.stopTraining_=!1;for(let pt=rt;pt<d;++pt){await ut.onEpochBegin(pt);const it={};if(tt!=null)throw new NotImplementedError("stepsPerEpoch mode is not implemented yet.");{if(_e==="batch")throw new NotImplementedError("batch shuffling is not implemneted yet");_e&&shuffle(ot);const yt=tensor1d(ot),ft=makeBatches(st,c);for(let bt=0;bt<ft.length;++bt){const Tt={};if(await ut.onBatchBegin(bt,Tt),tidy(()=>{const Ct=ft[bt][0],_t=ft[bt][1],Ot=sliceAlongFirstAxis(yt,Ct,_t-Ct);Tt.batch=bt,Tt.size=_t-Ct;const kt=sliceArraysByIndices(o,Ot),Rt=s(kt);for(let jt=0;jt<a.length;++jt){const Gt=a[jt],Bt=Rt[jt];Tt[Gt]=Bt,keep(Bt)}if(bt===ft.length-1&&nt){const jt=i.testLoop($,_,c);for(let Gt=0;Gt<a.length;++Gt){const Bt=a[Gt],zt=jt[Gt];keep(zt),it["val_"+Bt]=zt}}}),await ut.onBatchEnd(bt,Tt),disposeTensorsInLogs(Tt),i.stopTraining_)break}yt.dispose()}if(await ut.onEpochEnd(pt,it),i.stopTraining_)break}return await ut.onTrainEnd(),await i.history.syncData(),i.history}async function fitTensors(i,s,o,a={}){if(i.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");i.isTraining=!0;let c,d,g,b,$,_,_e;try{const et=a.batchSize==null?32:a.batchSize;checkBatchSize(et);const rt=!1,tt=await i.standardizeUserData(s,o,a.sampleWeight,a.classWeight,rt,et);c=tt[0],d=tt[1],_e=tt[2];let j=!1,nt;if(a.validationData!=null&&a.validationData.length>0){if(j=!0,a.validationData.length===2)g=a.validationData[0],b=a.validationData[1];else throw a.validationData.length===3?new NotImplementedError("validationData including sample weights is not supported yet."):new ValueError(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${a.validationData} is invalid.`);const ft=!0,bt=await i.standardizeUserData(g,b,null,null,ft,et);$=bt[0],_=bt[1],nt=$.concat(_)}else if(a.validationSplit!=null&&a.validationSplit>0&&a.validationSplit<1){j=!0;const ft=Math.floor(c[0].shape[0]*(1-a.validationSplit)),bt=c[0].shape[0];$=sliceArrays(c,ft,bt),c=sliceArrays(c,0,ft),_=sliceArrays(d,ft,bt),d=sliceArrays(d,0,ft),nt=$.concat(_)}else a.validationSteps!=null&&(j=!0);const st=c.concat(d).concat(_e);i.checkTrainableWeightsConsistency();const ot=i.makeTrainFunction(),ut=i.getDedupedMetricsNames();let ht,pt;j?(i.makeTestFunction(),ht=i.testFunction,pt=ut.slice().concat(ut.map(ft=>"val_"+ft))):(ht=null,nt=[],pt=ut.slice());const it=standardizeCallbacks(a.callbacks,a.yieldEvery);return await fitLoop(i,ot,st,ut,et,a.epochs,a.verbose,it,ht,nt,a.shuffle,pt,a.initialEpoch,null,null)}finally{i.isTraining=!1,disposeNewTensors(c,s),disposeNewTensors(d,o),disposeNewTensors($,g),disposeNewTensors(_,b),_e!=null&&dispose(_e)}}function ensureTensorsRank2OrHigher(i){const s=[];i instanceof Tensor&&(i=[i]);for(let o=0;o<i.length;++o){const a=i[o];if(a.rank===1)s.push(expandDims$2(a,1));else{if(a.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");s.push(a)}}return s}function disposeNewTensors(i,s){if(i==null)return;const o=[];if(s instanceof Tensor)o.push(s.id);else if(Array.isArray(s))s.forEach(c=>o.push(c.id));else if(s!=null)for(const c in s){const d=s[c];o.push(d.id)}const a=[];if(i instanceof Tensor)o.indexOf(i.id)===-1&&a.push(i);else if(Array.isArray(i))i.forEach(c=>{o.indexOf(c.id)===-1&&a.push(c)});else if(i!=null)for(const c in i){const d=i[c];o.indexOf(d.id)===-1&&a.push(d)}a.forEach(c=>{c.isDisposed||c.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function isDataTensor(i){return i instanceof Tensor}function isDataArray(i){return Array.isArray(i)}function isDataDict(i){return!isDataTensor(i)&&!isDataArray(i)}function standardizeInputData(i,s,o,a=!0,c=""){if(s==null||s.length===0){if(i!=null){let g=!1;if(isDataArray(i)&&i.length>0)g=!0;else if(isDataDict(i)){for(const b in i)if(i.hasOwnProperty(b)){g=!0;break}}else g=!0;if(g)throw new ValueError(`Error when checking model ${c} expected no data, but got ${i}`)}return[]}if(i==null)return s.map(g=>null);let d;if(isDataDict(i)){i=i,d=[];for(const g of s){if(i[g]==null)throw new ValueError(`No data provided for "${g}". Need data for each key in: ${s}`);d.push(i[g])}}else if(isDataArray(i)){if(i=i,i.length!==s.length)throw new ValueError(`Error when checking model ${c}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${s.length} Tensor(s), but instead got the following list of Tensor(s): ${i}`);d=i}else{if(i=i,s.length>1)throw new ValueError(`The model ${c} expects ${s.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${i.shape}`);d=[i]}if(d=ensureTensorsRank2OrHigher(d),o!=null)for(let g=0;g<s.length;++g){if(o[g]==null)continue;const b=d[g];if(b.shape.length!==o[g].length)throw new ValueError(`Error when checking ${c}: expected ${s[g]} to have ${o[g].length} dimension(s). but got array with shape ${b.shape}`);for(let $=0;$<o[g].length;++$){if($===0&&!a)continue;const _=b.shape[$],_e=o[g][$];if(_e!=null&&_e>=0&&_!==_e)throw new ValueError(`Error when checking ${c}: expected ${s[g]} to have shape [${o[g]}], but got array with shape [${b.shape}].`)}}return d}function checkArrayLengths(i,s,o){const a=unique$2(i.map(d=>d.shape[0]));a.sort();const c=unique$2(s.map(d=>d.shape[0]));if(c.sort(),a.length>1)throw new ValueError(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(i.map(d=>d.shape))}`);if(c.length>1)throw new ValueError(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(s.map(d=>d.shape))}`);if(a.length>0&&c.length>0&&!arraysEqual(a,c))throw new ValueError(`Input Tensors should have the same number of samples as target Tensors. Found ${a[0]} input sample(s) and ${c[0]} target sample(s).`)}function checkLossAndTargetCompatibility(i,s,o){const a=[meanSquaredError$1,binaryCrossentropy$2,categoricalCrossentropy$2];for(let c=0;c<i.length;++c){const d=i[c],g=s[c],b=o[c];if(g!=null){if(g===categoricalCrossentropy$2&&d.shape[d.shape.length-1]===1)throw new ValueError(`You are passing a target array of shape ${d.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(a.indexOf(g)!==-1){const $=d.shape.slice(1),_=b.slice(1);for(let _e=0;_e<$.length;++_e){const et=$[_e],rt=_[_e];if(rt!=null&&et!==rt)throw new ValueError(`A target Tensor with shape ${d.shape} was passed for an output of shape ${b}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function checkInputData(i,s,o,a=!0,c=""){let d;if(Array.isArray(i)){if(i.length!==s.length)throw new ValueError(`Error when checking model ${c}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${s.length} Tensor(s), but instead got ${i.length} Tensors(s).`);d=i}else{if(s.length>1)throw new ValueError(`The model expects ${s.length} ${c} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(i.shape)}.`);d=[i]}if(o!=null)for(let g=0;g<s.length;++g){if(o[g]==null)continue;const b=d[g];if(b.shape.length!==o[g].length)throw new ValueError(`Error when checking ${c}: expected ${s[g]} to have ${o[g].length} dimension(s), but got array with shape ${JSON.stringify(b.shape)}`);for(let $=0;$<o[g].length;++$){if($===0&&!a)continue;const _=b.shape[$],_e=o[g][$];if(_e!=null&&_e!==_)throw new ValueError(`Error when checking ${c}: expected ${s[g]} to have shape ${JSON.stringify(o[g])} but got array with shape ${JSON.stringify(b.shape)}.`)}}}function collectMetrics(i,s){if(i==null||Array.isArray(i)&&i.length===0)return s.map(a=>[]);let o;if(typeof i=="string"||typeof i=="function")o=[i];else if(Array.isArray(i)||typeof i=="object")o=i;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${i}`);if(Array.isArray(o))return s.map(a=>o);{const a=[];for(const c of s){let d=o.hasOwnProperty(c)?o[c]:[];Array.isArray(d)||(d=[d]),a.push(d)}return a}}const LAYERS_MODEL_FORMAT_NAME="layers-model";class LayersModel extends Container{constructor(s){super(s),this.isTraining=!1}summary(s,o,a=console.log){if(!this.built)throw new ValueError("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");printSummary(this,s,o,a)}compile(s){if(s.loss==null&&(s.loss=[]),this.loss=s.loss,typeof s.optimizer=="string")this.optimizer_=getOptimizer(s.optimizer),this.isOptimizerOwned=!0;else{if(!(s.optimizer instanceof Optimizer))throw new ValueError("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=s.optimizer,this.isOptimizerOwned=!1}let o=[];if(!Array.isArray(s.loss)&&typeof s.loss!="string"&&typeof s.loss!="function"){s.loss=s.loss;for(const g in s.loss)if(this.outputNames.indexOf(g)===-1)throw new ValueError(`Unknown entry in loss dictionary: "${g}". Only expected the following keys: ${this.outputNames}`);for(const g of this.outputNames)s.loss[g]==null&&console.warn(`Output "${g}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${g} during training`),o.push(get$1(s.loss[g]))}else if(Array.isArray(s.loss)){if(s.loss.length!==this.outputs.length)throw new ValueError(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${s.loss}.`);o=s.loss.map(b=>get$1(b))}else{const g=get$1(s.loss);this.outputs.forEach(b=>{o.push(g)})}this.lossFunctions=o,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let g=0;g<this.outputs.length;++g){const b=this.internalOutputShapes[g],$=this.outputNames[g];this.feedOutputNames.push($),this.feedOutputShapes.push(b),this.feedLossFns.push(this.lossFunctions[g])}const a=[];this.metrics=s.metrics,this.metricsNames=["loss"],this.metricsTensors=[],nameScope("loss",()=>{for(let g=0;g<this.outputs.length;++g){if(a.indexOf(g)!==-1)continue;const b=this.lossFunctions[g];this.outputs.length>1&&(this.metricsTensors.push([b,g]),this.metricsNames.push(this.outputNames[g]+"_loss"))}});const c=collectMetrics(s.metrics,this.outputNames),d=(g,b,$)=>{this.outputNames.length>1&&(b=this.outputNames[g]+"_"+b),this.metricsNames.push(b),this.metricsTensors.push([$,g])};nameScope("metric",()=>{for(let g=0;g<this.outputs.length;++g){if(a.indexOf(g)!==-1)continue;const b=c[g];(_=>{const _e="";let et,rt,tt;for(const j of _){if(typeof j=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(j)!==-1){const st=this.internalOutputShapes[g];st[st.length-1]===1||this.lossFunctions[g]===binaryCrossentropy$2?["accuracy","acc"].indexOf(j)!==-1?rt=binaryAccuracy$1:["crossentropy","ce"].indexOf(j)!==-1&&(rt=binaryCrossentropy$1):this.lossFunctions[g]===sparseCategoricalCrossentropy$1?["accuracy","acc"].indexOf(j)!==-1?rt=sparseCategoricalAccuracy$1:["crossentropy","ce"].indexOf(j)!==-1&&(rt=sparseCategoricalCrossentropy):["accuracy","acc"].indexOf(j)!==-1?rt=categoricalAccuracy$1:["crossentropy","ce"].indexOf(j)!==-1&&(rt=categoricalCrossentropy$1);let ot;["accuracy","acc"].indexOf(j)!==-1?ot="acc":["crossentropy","ce"].indexOf(j)!==-1&&(ot="ce"),tt=rt,et=_e+ot}else tt=get(j),et=_e+getLossOrMetricName(j);let nt;nameScope(et,()=>{nt=tt}),d(g,et,nt)}})(b)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(s,o,a={}){const c=a.batchSize==null?32:a.batchSize;checkBatchSize(c);const d=!0,g=this.standardizeUserDataXY(s,o,d,c);try{const b=g[0].concat(g[1]);this.makeTestFunction();const $=this.testFunction,_=this.testLoop($,b,c,a.verbose,a.steps);return singletonOrArray(_)}finally{disposeNewTensors(g[0],s),disposeNewTensors(g[1],o)}}async evaluateDataset(s,o){return this.makeTestFunction(),evaluateDataset(this,s,o)}checkNumSamples(s,o,a,c="steps"){let d;if(a!=null){if(d=null,o!=null)throw new ValueError(`If ${c} is set, batchSize must be null or undefined.Got batchSize = ${o}`)}else if(s!=null)Array.isArray(s)?d=s[0].shape[0]:d=s.shape[0];else throw new ValueError(`Either the input data should have a defined shape, or ${c} shoud be specified.`);return d}execute(s,o){if(Array.isArray(o)&&o.length===0)throw new ValueError("`outputs` is an empty Array, which is not allowed.");const a=Array.isArray(o),c=a?o:[o],d=this.retrieveSymbolicTensors(c),g=new FeedDict;if(s instanceof Tensor&&(s=[s]),Array.isArray(s)){if(s.length!==this.inputs.length)throw new ValueError(`The number of inputs provided (${s.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let $=0;$<this.inputs.length;++$)g.add(this.inputs[$],s[$])}else for(const $ of this.inputs){const _=s[$.name];if(_==null)throw new ValueError(`No value is provided for the model's input ${$.name}`);g.add($,_)}const b=execute(d,g);return a?b:b[0]}retrieveSymbolicTensors(s){const o=pyListRepeat(null,s.length);let a=s.length;for(const c of this.layers){const d=Array.isArray(c.output)?c.output:[c.output],g=d.map(b=>b.name);for(let b=0;b<s.length;++b){const $=g.indexOf(s[b]);if($!==-1&&(o[b]=d[$],a--),a===0)break}if(a===0)break}if(a>0){const c=[];throw o.forEach((d,g)=>{d==null&&c.push(s[g])}),new ValueError(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(c)}`)}return o}predictLoop(s,o=32,a=!1){return tidy(()=>{const c=this.checkNumSamples(s);if(a)throw new NotImplementedError("Verbose predictLoop() is not implemented yet.");const d=makeBatches(c,o),g=this.outputs.map(b=>[]);for(let b=0;b<d.length;++b)tidy(()=>{const _=d[b][0],_e=d[b][1],et=sliceArrays(s,_,_e),rt=[];if(Array.isArray(et))for(let j=0;j<et.length;++j)rt.push({key:this.inputs[j],value:et[j]});else rt.push({key:this.inputs[0],value:et});const tt=new FeedDict(rt);return execute(this.outputs,tt)}).forEach((_,_e)=>g[_e].push(_));return singletonOrArray(g.map(b=>concat$2(b,0)))})}predict(s,o={}){const a=ensureTensorsRank2OrHigher(s);checkInputData(a,this.inputNames,this.feedInputShapes,!1);try{const c=o.batchSize==null?32:o.batchSize;return checkBatchSize(c),this.predictLoop(a,c)}finally{disposeNewTensors(a,s)}}predictOnBatch(s){checkInputData(s,this.inputNames,this.feedInputShapes,!0);const o=(Array.isArray(s)?s[0]:s).shape[0];return this.predictLoop(s,o)}standardizeUserDataXY(s,o,a=!0,c){if(this.optimizer_==null)throw new RuntimeError("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const d=[];for(let g=0;g<this.feedOutputShapes.length;++g){const b=this.feedOutputShapes[g];this.feedLossFns[g]===sparseCategoricalCrossentropy$1?d.push(b.slice(0,b.length-1).concat([1])):d.push(b)}if(s=standardizeInputData(s,this.feedInputNames,this.feedInputShapes,!1,"input"),o=standardizeInputData(o,this.feedOutputNames,d,!1,"target"),checkArrayLengths(s,o),checkLossAndTargetCompatibility(o,this.feedLossFns,this.feedOutputShapes),this.stateful&&c!=null&&c>0&&s[0].shape[0]%c!==0)throw new ValueError(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${c}. Found: ${s[0].shape[0]} sample(s).`);return[s,o]}async standardizeUserData(s,o,a,c,d=!0,g){const[b,$]=this.standardizeUserDataXY(s,o,d,g);if(a!=null)throw new Error("sample weight is not supported yet.");let _=null;if(c!=null){const _e=standardizeClassWeights(c,this.outputNames);_=[];for(let et=0;et<_e.length;++et)_.push(await standardizeWeights($[et],null,_e[et]))}return[b,$,_]}testLoop(s,o,a,c=0,d){return tidy(()=>{const g=this.checkNumSamples(o,a,d,"steps"),b=[];if(c>0)throw new NotImplementedError("Verbose mode is not implemented yet.");if(d!=null)throw new NotImplementedError("steps mode in testLoop() is not implemented yet");{const $=makeBatches(g,a),_=tensor1d(range$3(0,g));for(let _e=0;_e<$.length;++_e){const et=$[_e][0],rt=$[_e][1],tt=sliceAlongFirstAxis(_,et,rt-et),j=sliceArraysByIndices(o,tt),nt=s(j);if(_e===0)for(let st=0;st<nt.length;++st)b.push(scalar(0));for(let st=0;st<nt.length;++st){const ot=nt[st];b[st]=add$2(b[st],mul(rt-et,ot))}}for(let _e=0;_e<b.length;++_e)b[_e]=div$1(b[_e],g)}return b})}getDedupedMetricsNames(){const s=this.metricsNames,o=[];for(let a=0;a<s.length;++a){const c=s[a];let d=c;if(count(s,c)>1){const g=count(s.slice(0,a),c);d+=`_${g}`}o.push(d)}return o}makeTrainFunction(){return s=>{const o=[],a=s.slice(0,this.inputs.length),c=s.slice(this.inputs.length,this.inputs.length+this.outputs.length),d=s.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),g=[],b=()=>{const et=[];for(let nt=0;nt<this.inputs.length;++nt)et.push({key:this.inputs[nt],value:a[nt]});const rt=new FeedDict(et),tt=execute(this.outputs,rt,{training:!0});let j;for(let nt=0;nt<this.lossFunctions.length;++nt){const st=this.lossFunctions[nt];let ot=st(c[nt],tt[nt]);d[nt]!=null&&(ot=computeWeightedLoss(ot,d[nt]));const ut=mean$1(ot);o.push(ut),nt===0?j=ot:j=add$2(j,ot)}for(let nt=0;nt<this.metricsTensors.length;++nt){let st;if(this.outputs.length>1&&nt<this.outputs.length)st=o[nt];else{const ot=this.metricsTensors[nt][0],ut=this.metricsTensors[nt][1];st=mean$1(ot(c[ut],tt[ut]))}keep(st),g.push(st)}return j=mean$1(j),this.calculateLosses().forEach(nt=>{j=add$2(j,nt)}),j},$=this.collectedTrainableWeights.map(et=>et.read()),_=!0;return[this.optimizer_.minimize(b,_,$)].concat(g)}}makeTestFunction(){this.testFunction=s=>tidy(()=>{const o=[];let a;const c=s.slice(0,this.inputs.length),d=s.slice(this.inputs.length,this.inputs.length+this.outputs.length),g=[];for(let _=0;_<this.inputs.length;++_)g.push({key:this.inputs[_],value:c[_]});const b=new FeedDict(g),$=execute(this.outputs,b);for(let _=0;_<this.lossFunctions.length;++_){const _e=this.lossFunctions[_],et=mean$1(_e(d[_],$[_]));_===0?a=et:a=add$2(a,et),o.push(a)}for(let _=0;_<this.metricsTensors.length;++_){const _e=this.metricsTensors[_][0],et=this.metricsTensors[_][1],rt=mean$1(_e(d[et],$[et]));o.push(rt)}return o})}async fit(s,o,a={}){return fitTensors(this,s,o,a)}async fitDataset(s,o){return fitDataset(this,s,o)}async trainOnBatch(s,o){const a=await this.standardizeUserData(s,o),c=a[0],d=a[1],b=this.makeTrainFunction()(c.concat(d)),$=[];for(const _ of b){const _e=await _.data();$.push(_e[0])}return dispose(b),singletonOrArray($)}getNamedWeights(s){const o=[],a=s!=null&&s.trainableOnly,c=a?this.trainableWeights:this.weights,d=this.getWeights(a);for(let g=0;g<c.length;++g)a&&!c[g].trainable||o.push({name:c[g].originalName,tensor:d[g]});return o}set stopTraining(s){this.stopTraining_=s}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(s){this.optimizer_!==s&&(this.optimizer_=s,this.isOptimizerOwned=!1)}dispose(){const s=super.dispose();if(s.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const o=memory().numTensors;this.optimizer_.dispose(),s.numDisposedVariables+=o-memory().numTensors}return s}getLossIdentifiers(){let s;if(typeof this.loss=="string")s=toSnakeCase(this.loss);else if(Array.isArray(this.loss)){for(const o of this.loss)if(typeof o!="string")throw new Error("Serialization of non-string loss is not supported.");s=this.loss.map(o=>toSnakeCase(o))}else{const o=Object.keys(this.loss);s={};const a=this.loss;for(const c of o)if(typeof a[c]=="string")s[c]=toSnakeCase(a[c]);else throw new Error("Serialization of non-string loss is not supported.")}return s}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[toSnakeCase(getLossOrMetricName(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(s=>toSnakeCase(getLossOrMetricName(s)));{const s={};for(const o in this.metrics)s[o]=toSnakeCase(getLossOrMetricName(this.metrics[o]));return s}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(s){if(s.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(s.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(s.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const o=convertPythonicToTs(s.optimizer_config),a=deserialize(o);let c;if(typeof s.loss=="string")c=toCamelCase(s.loss);else if(Array.isArray(s.loss))c=s.loss.map(g=>toCamelCase(g));else if(s.loss!=null){c={};for(const g in s.loss)c[g]=toCamelCase(s.loss[g])}let d;if(Array.isArray(s.metrics))d=s.metrics.map(g=>toCamelCase(g));else if(s.metrics!=null){d={};for(const g in s.metrics)d[g]=toCamelCase(s.metrics[g])}this.compile({loss:c,metrics:d,optimizer:a})}async save(s,o){if(typeof s=="string"){const _=getSaveHandlers(s);if(_.length===0)throw new ValueError(`Cannot find any save handlers for URL '${s}'`);if(_.length>1)throw new ValueError(`Found more than one (${_.length}) save handlers for URL '${s}'`);s=_[0]}if(s.save==null)throw new ValueError("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const a=await encodeWeights(this.getNamedWeights(o)),c=!1,d=null,b={modelTopology:this.toJSON(d,c),format:LAYERS_MODEL_FORMAT_NAME,generatedBy:`TensorFlow.js tfjs-layers v${version$7}`,convertedBy:null};if((o==null?!1:o.includeOptimizer)&&this.optimizer!=null){b.trainingConfig=this.getTrainingConfig();const _="optimizer",{data:_e,specs:et}=await encodeWeights(await this.optimizer.getWeights(),_);a.specs.push(...et),a.data=concatenateArrayBuffers([a.data,_e])}return this.userDefinedMetadata!=null&&(checkUserDefinedMetadata(this.userDefinedMetadata,this.name,!0),b.userDefinedMetadata=this.userDefinedMetadata),b.weightData=a.data,b.weightSpecs=a.specs,s.save(b)}setUserDefinedMetadata(s){checkUserDefinedMetadata(s,this.name),this.userDefinedMetadata=s}getUserDefinedMetadata(){return this.userDefinedMetadata}}LayersModel.className="Model";registerClass(LayersModel);class Functional extends LayersModel{}Functional.className="Functional";registerClass(Functional);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function modelFromJSON(i,s){"modelTopology"in i||(i={modelTopology:i}),i=i;let o=i.modelTopology;o.model_config!=null&&(o=o.model_config);const a=convertPythonicToTs(o),c=deserialize(a,s);if(i.weightsManifest!=null){const d=await loadWeights(i.weightsManifest,i.pathPrefix,c.weights.map(b=>b.originalName)),g={};for(const b of c.weights)g[b.originalName]=d[b.originalName];c.loadWeights(g),dispose(d)}return c}async function loadLayersModelInternal(i,s){if(s==null&&(s={}),typeof i=="string"){const o=getLoadHandlers(i,s);if(o.length===0)o.push(browserHTTPRequest(i,s));else if(o.length>1)throw new ValueError(`Found more than one (${o.length}) load handlers for URL '${i}'`);i=o[0]}return loadLayersModelFromIOHandler(i,void 0,s)}async function loadLayersModelFromIOHandler(i,s,o){if(o==null&&(o={}),i.load==null)throw new ValueError("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const a=await i.load();let c=a.modelTopology;c.model_config!=null&&(c=c.model_config);const d=o.strict==null?!0:o.strict,g=a.weightData!=null&&a.weightSpecs!=null&&d,b=deserialize(convertPythonicToTs(c),s,g),$=a.trainingConfig;if($!=null&&b.loadTrainingConfig($),a.userDefinedMetadata!=null&&b.setUserDefinedMetadata(a.userDefinedMetadata),a.weightData!=null){if(a.weightSpecs==null)throw new ValueError("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:_,optimizerWeights:_e}=decodeModelAndOptimizerWeights(a.weightData,a.weightSpecs);b.loadWeights(_,d),b.optimizer!=null&&_e.length>0&&await b.optimizer.setWeights(_e),dispose(_),dispose(_e.map(et=>et.tensor))}return b}function decodeModelAndOptimizerWeights(i,s){const o=decodeWeights(i,s),a={},c=[];return s.forEach(d=>{d.group==="optimizer"?c.push({name:d.name,tensor:o[d.name]}):a[d.name]=o[d.name]}),{modelWeights:a,optimizerWeights:c}}class Sequential extends LayersModel{constructor(s){if(super({inputs:[],outputs:[]}),s=s||{},this.trainable=!0,this.built=!1,this.name=s.name!=null?s.name:getUid("sequential_"),s.layers!=null)for(const o of s.layers)this.add(o)}checkShape(s){if(s.inboundNodes[0].outputTensors[0].shape.some(a=>a<0))throw new ValueError(`Negative dimension size caused by adding layer ${s.name} with input shape [${s.inboundNodes[0].inputTensors[0].shape}]`)}add(s){const o=s instanceof Sequential||s instanceof LayersModel;let a;if(o){if(a=s,a.outputs.length!==1)throw new ValueError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(a.inputs.length!==1)throw new ValueError("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(s.inboundNodes.length===0){if(s.batchInputShape==null)throw new ValueError("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const c=Input({batchShape:s.batchInputShape,dtype:s.dtype,name:s.name+"_input"});s.apply(c)}if(o)this.outputs=a.outputs,this.inputs=a.inputs;else{if(s.inboundNodes.length!==1)throw new ValueError(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${s.name} which has ${s.inboundNodes.length} pre-existing inbound connections.`);if(s.inboundNodes[0].outputTensors.length!==1)throw new ValueError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(s),this.outputs=[s.inboundNodes[0].outputTensors[0]],this.inputs=getSourceInputs(this.outputs[0])}this.inboundNodes=[],new Node({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:pyListRepeat(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(c=>c.shape),outputShapes:this.outputs[0].shape})}else{const c=s.apply(this.outputs[0]);if(Array.isArray(c))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(s),this.outputs=[c],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(s),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const s=this.layers.length-1;this.layers[s].outboundNodes=[],this.outputs=[this.layers[s].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(s,o){return this.model==null&&this.build(),this.model.call(s,o)}build(s){if(getExactlyOneShape(s),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new LayersModel({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(s,o,a=console.log){this.built||this.build(),super.summary(s,o,a)}setWeights(s){this.model==null&&this.build(),this.model.setWeights(s)}evaluate(s,o,a={}){if(!this.built)throw new RuntimeError("The model needs to be compiled before being used.");return this.model.evaluate(s,o,a)}async evaluateDataset(s,o){if(!this.built)throw new RuntimeError("The model needs to be compiled before being used.");return this.model.evaluateDataset(s,o)}predict(s,o={}){return this.model==null&&this.build(),this.model.predict(s,o)}predictOnBatch(s){return this.model==null&&this.build(),this.model.predictOnBatch(s)}compile(s){this.build(),this.model.compile(s),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(s){this.model.optimizer=s}async fit(s,o,a={}){if(!this.built)throw new RuntimeError("The model needs to be compiled before being used.");return this.model.fit(s,o,a)}async fitDataset(s,o){if(!this.built)throw new RuntimeError("The model needs to be compiled before being used.");return this.model.fitDataset(s,o)}async trainOnBatch(s,o){return this.model.trainOnBatch(s,o)}static fromConfig(s,o,a={},c=!1){let d,g={};if(o instanceof Array){if(o[0].className==null||o[0].className==="Merge")throw new ValueError("Legacy serialization format not supported yet.");d=o}else assert$2(o.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),d=o.layers,delete o.layers,g=o;const b=new s(g);if(!(b instanceof Sequential))throw new NotImplementedError(`Sequential.fromConfig called on non-Sequential input: ${b}`);for(const $ of d){const _e=deserialize($,void 0,c);c&&_e.setFastWeightInitDuringBuild(!0),b.add(_e)}return b}set stopTraining(s){if(this.model==null)throw new ValueError("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=s}get stopTraining(){if(this.model==null)throw new ValueError("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const s=[];for(const o of this.layers){const a={};a.className=o.getClassName(),a.config=o.getConfig(),s.push(a)}return{name:this.name,layers:s}}}Sequential.className="Sequential";registerClass(Sequential);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function model(i){return new LayersModel(i)}function sequential(i){return new Sequential(i)}function loadLayersModel(i,s){return s==null&&(s={}),loadLayersModelInternal(i,s)}function input(i){return Input(i)}function registerCallbackConstructor(i,s){CallbackConstructorRegistry.registerCallbackConstructor(i,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Activation$1=class extends Serializable{getConfig(){return{}}};class Elu extends Activation$1{apply(s,o=1){return elu$3(s,o)}}Elu.className="elu";registerClass(Elu);class Selu extends Activation$1{apply(s){return selu$2(s)}}Selu.className="selu";registerClass(Selu);class Relu extends Activation$1{apply(s){return relu$2(s)}}Relu.className="relu";registerClass(Relu);class Relu6 extends Activation$1{apply(s){return tidy(()=>minimum$3(6,relu$2(s)))}}Relu6.className="relu6";registerClass(Relu6);class Linear extends Activation$1{apply(s){return s}}Linear.className="linear";registerClass(Linear);class Sigmoid extends Activation$1{apply(s){return sigmoid$2(s)}}Sigmoid.className="sigmoid";registerClass(Sigmoid);class HardSigmoid extends Activation$1{apply(s){return hardSigmoid(s)}}HardSigmoid.className="hardSigmoid";registerClass(HardSigmoid);class Softplus extends Activation$1{apply(s){return softplus$2(s)}}Softplus.className="softplus";registerClass(Softplus);class Softsign extends Activation$1{apply(s){return softsign(s)}}Softsign.className="softsign";registerClass(Softsign);class Tanh extends Activation$1{apply(s){return tanh$2(s)}}Tanh.className="tanh";registerClass(Tanh);let Softmax$1=class extends Activation$1{apply(s,o=-1){return softmax$3(s,o)}};Softmax$1.className="softmax";registerClass(Softmax$1);class LogSoftmax extends Activation$1{apply(s,o=-1){return logSoftmax(s,o)}}LogSoftmax.className="logSoftmax";registerClass(LogSoftmax);class Swish extends Activation$1{apply(s,o=1){return tidy(()=>sigmoid$2(s.mul(o)).mul(s))}}Swish.className="swish";registerClass(Swish);function serializeActivation(i){return i.getClassName()}function deserializeActivation(i,s={}){return deserializeKerasObject(i,SerializationMap.getMap().classNameMap,s,"activation")}function getActivation(i){if(i==null){const s={};return s.className="linear",s.config={},deserializeActivation(s)}if(typeof i=="string"){const s={};return s.className=i,s.config={},deserializeActivation(s)}else return i instanceof Activation$1?i:deserializeActivation(i)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function assertObjectArgs(i){if(i!=null&&typeof i!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${i}`)}class Regularizer extends Serializable{}class L1L2 extends Regularizer{constructor(s){super(),assertObjectArgs(s),this.l1=s==null||s.l1==null?.01:s.l1,this.l2=s==null||s.l2==null?.01:s.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(s){return tidy(()=>{let o=zeros$2([1]);return this.hasL1&&(o=add$2(o,sum$2(mul(this.l1,abs$2(s))))),this.hasL2&&(o=add$2(o,sum$2(mul(this.l2,square$1(s))))),o.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(s,o){return new s({l1:o.l1,l2:o.l2})}}L1L2.className="L1L2";registerClass(L1L2);function l1$1(i){return assertObjectArgs(i),new L1L2({l1:i!=null?i.l1:null,l2:0})}function l2$1(i){return assertObjectArgs(i),new L1L2({l2:i!=null?i.l2:null,l1:0})}const REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP={l1l2:"L1L2"};function serializeRegularizer(i){return serializeKerasObject(i)}function deserializeRegularizer(i,s={}){return deserializeKerasObject(i,SerializationMap.getMap().classNameMap,s,"regularizer")}function getRegularizer(i){if(i==null)return null;if(typeof i=="string"){const o={className:i in REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP?REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[i]:i,config:{}};return deserializeRegularizer(o)}else return i instanceof Regularizer?i:deserializeRegularizer(i)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ReLU extends Layer{constructor(s){super(s??{}),this.supportsMasking=!0,s!=null&&(this.maxValue=s.maxValue)}call(s,o){s=getExactlyOneTensor(s);let a=relu$2(s);return this.maxValue!=null&&(a=clipByValue$1(a,0,this.maxValue)),a}computeOutputShape(s){return s}getConfig(){const s={maxValue:this.maxValue},o=super.getConfig();return Object.assign(s,o),s}}ReLU.className="ReLU";registerClass(ReLU);class LeakyReLU extends Layer{constructor(s){super(s??{}),this.DEFAULT_ALPHA=.3,s==null&&(s={}),this.alpha=s.alpha==null?this.DEFAULT_ALPHA:s.alpha}call(s,o){const a=getExactlyOneTensor(s);return leakyRelu$2(a,this.alpha)}computeOutputShape(s){return s}getConfig(){const s={alpha:this.alpha},o=super.getConfig();return Object.assign(s,o),s}}LeakyReLU.className="LeakyReLU";registerClass(LeakyReLU);class PReLU extends Layer{constructor(s){if(super(s??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",s==null&&(s={}),this.supportsMasking=!0,this.alphaInitializer=getInitializer(s.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=getRegularizer(s.alphaRegularizer),this.alphaConstraint=getConstraint(s.alphaConstraint),s.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(s.sharedAxes))this.sharedAxes=s.sharedAxes;else if(typeof s.sharedAxes=="number")this.sharedAxes=[s.sharedAxes];else throw new ValueError(`Expected sharedAxes to be a number or an array of numbers, but got ${s.sharedAxes}`)}build(s){s=getExactlyOneShape(s);const o=s.slice(1);if(this.sharedAxes!=null)for(const c of this.sharedAxes)o[c-1]=1;this.alpha=this.addWeight("alpha",o,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const a={};if(this.sharedAxes!=null)for(let c=1;c<s.length;++c)a[c]=s[c];this.inputSpec=[new InputSpec({ndim:s.length,axes:a})],this.built=!0}call(s,o){return s=getExactlyOneTensor(s),prelu$3(s,this.alpha.read())}getConfig(){const s={alphaInitializer:serializeInitializer(this.alphaInitializer),alphaRegularizer:serializeRegularizer(this.alphaRegularizer),alphaConstraint:serializeConstraint(this.alphaConstraint),sharedAxes:this.sharedAxes},o=super.getConfig();return Object.assign(s,o),s}}PReLU.className="PReLU";registerClass(PReLU);let ELU$3=class extends Layer{constructor(s){if(super(s??{}),this.DEFAULT_ALPHA=1,s==null&&(s={}),s.alpha!=null&&s.alpha!==this.DEFAULT_ALPHA)throw new NotImplementedError(`Non-default alpha value (${s.alpha}) is not supported by the ELU layer yet.`);this.alpha=s.alpha==null?this.DEFAULT_ALPHA:s.alpha}call(s,o){const a=getExactlyOneTensor(s);return elu$4(a)}computeOutputShape(s){return s}getConfig(){const s={alpha:this.alpha},o=super.getConfig();return Object.assign(s,o),s}};ELU$3.className="ELU";registerClass(ELU$3);class ThresholdedReLU extends Layer{constructor(s){super(s??{}),this.DEFAULT_THETA=1,s==null&&(s={}),this.theta=s.theta==null?this.DEFAULT_THETA:s.theta}call(s,o){const a=getExactlyOneTensor(s);return a.mul(cast$2(a.greater(this.theta),"float32"))}computeOutputShape(s){return s}getConfig(){const s={theta:this.theta},o=super.getConfig();return Object.assign(s,o),s}}ThresholdedReLU.className="ThresholdedReLU";registerClass(ThresholdedReLU);class Softmax extends Layer{constructor(s){super(s??{}),this.DEFAULT_AXIS=1,s==null&&(s={}),this.softmax=new Softmax$1().apply,this.axis=s.axis==null?this.DEFAULT_AXIS:s.axis}call(s,o){const a=getExactlyOneTensor(s);return this.softmax(a,this.axis)}computeOutputShape(s){return s}getConfig(){const s={axis:this.axis},o=super.getConfig();return Object.assign(s,o),s}}Softmax.className="Softmax";registerClass(Softmax);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function normalizeArray(i,s,o){if(typeof i=="number")return pyListRepeat(i,s);if(i.length!==s)throw new ValueError(`The ${o} argument must be an integer or tuple of ${s} integers. Received: ${i.length} elements.`);for(let a=0;a<s;++a){const c=i[a];if(!isInteger(c))throw new ValueError(`The ${o} argument must be an integer or tuple of ${s} integers. Received: ${JSON.stringify(i)} including a non-integer number ${c}`)}return i}function convOutputLength(i,s,o,a,c=1){if(i==null)return i;const d=s+(s-1)*(c-1);let g;return o==="same"?g=i:g=i-d+1,Math.floor((g+a-1)/a)}function deconvLength(i,s,o,a){if(i==null)return null;if(a==="valid")i=i*s+max$2([o-s,0]);else if(a==="same")i=i*s;else throw new ValueError(`Unsupport padding mode: ${a}.`);return i}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function preprocessConv2DInput(i,s){return tidy(()=>(checkDataFormat(s),s==="channelsFirst"?transpose$2(i,[0,2,3,1]):i))}function preprocessConv3DInput(i,s){return tidy(()=>(checkDataFormat(s),s==="channelsFirst"?transpose$2(i,[0,2,3,4,1]):i))}function conv1dWithBias(i,s,o,a=1,c="valid",d,g=1){return tidy(()=>{if(d==null&&(d=imageDataFormat()),checkDataFormat(d),i.shape.length!==3)throw new ValueError(`The input of a conv1dWithBias operation should be 3, but is ${i.shape.length} instead.`);if(s.shape.length!==3)throw new ValueError(`The kernel for a conv1dWithBias operation should be 3, but is ${s.shape.length} instead`);if(o!=null&&o.shape.length!==1)throw new ValueError(`The bias for a conv1dWithBias operation should be 1, but is ${s.shape.length} instead`);if(d==="channelsFirst"&&(i=transpose$2(i,[0,2,1])),c==="causal")throw new NotImplementedError("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let b=conv1d$1(i,s,a,c==="same"?"same":"valid","NWC",g);return o!=null&&(b=biasAdd(b,o)),b})}function conv2dWithBiasActivation(i,s,o,a=[1,1],c="valid",d,g,b=null){return tidy(()=>{if(d==null&&(d=imageDataFormat()),checkDataFormat(d),i.rank!==3&&i.rank!==4)throw new ValueError(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${i.rank}.`);if(s.rank!==3&&s.rank!==4)throw new ValueError(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${i.rank}.`);let $=preprocessConv2DInput(i,d);if(c==="causal")throw new NotImplementedError("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return $=conv2d$2({x:$,filter:s,strides:a,pad:c==="same"?"same":"valid",dilations:g,dataFormat:"NHWC",bias:o,activation:b}),d==="channelsFirst"&&($=transpose$2($,[0,3,1,2])),$})}function conv3dWithBias(i,s,o,a=[1,1,1],c="valid",d,g){return tidy(()=>{if(d==null&&(d=imageDataFormat()),checkDataFormat(d),i.rank!==4&&i.rank!==5)throw new ValueError(`conv3dWithBias expects input to be of rank 4 or 5, but received ${i.rank}.`);if(s.rank!==4&&s.rank!==5)throw new ValueError(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${i.rank}.`);let b=preprocessConv3DInput(i,d);if(c==="causal")throw new NotImplementedError("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return b=conv3d$1(b,s,a,c==="same"?"same":"valid","NDHWC",g),o!=null&&(b=biasAdd(b,o)),d==="channelsFirst"&&(b=transpose$2(b,[0,4,1,2,3])),b})}class BaseConv extends Layer{constructor(s,o){if(super(o),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",BaseConv.verifyArgs(o),this.rank=s,assertPositiveInteger(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new NotImplementedError(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=normalizeArray(o.kernelSize,s,"kernelSize"),this.strides=normalizeArray(o.strides==null?1:o.strides,s,"strides"),this.padding=o.padding==null?"valid":o.padding,checkPaddingMode(this.padding),this.dataFormat=o.dataFormat==null?"channelsLast":o.dataFormat,checkDataFormat(this.dataFormat),this.activation=getActivation(o.activation),this.useBias=o.useBias==null?!0:o.useBias,this.biasInitializer=getInitializer(o.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=getConstraint(o.biasConstraint),this.biasRegularizer=getRegularizer(o.biasRegularizer),this.activityRegularizer=getRegularizer(o.activityRegularizer),this.dilationRate=normalizeArray(o.dilationRate==null?1:o.dilationRate,s,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new ValueError(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new ValueError(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new ValueError(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(s){if(assert$1("kernelSize"in s,"required key 'kernelSize' not in config"),typeof s.kernelSize!="number"&&!checkArrayTypeAndLength(s.kernelSize,"number",1,3))throw new ValueError(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(s.kernelSize)}.`)}getConfig(){const s={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:serializeActivation(this.activation),useBias:this.useBias,biasInitializer:serializeInitializer(this.biasInitializer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),biasConstraint:serializeConstraint(this.biasConstraint)},o=super.getConfig();return Object.assign(s,o),s}}class Conv extends BaseConv{constructor(s,o){super(s,o),this.kernel=null,Conv.verifyArgs(o),this.filters=o.filters,assertPositiveInteger(this.filters,"filters"),this.kernelInitializer=getInitializer(o.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=getConstraint(o.kernelConstraint),this.kernelRegularizer=getRegularizer(o.kernelRegularizer)}build(s){s=getExactlyOneShape(s);const o=this.dataFormat==="channelsFirst"?1:s.length-1;if(s[o]==null)throw new ValueError(`The channel dimension of the input should be defined. Found ${s[o]}`);const a=s[o],c=this.kernelSize.concat([a,this.filters]);this.kernel=this.addWeight("kernel",c,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[o]:a}}],this.built=!0}call(s,o){return tidy(()=>{s=getExactlyOneTensor(s);let a;const c=this.bias==null?null:this.bias.read(),d=mapActivationToFusedKernel(this.activation.getClassName());if(d!=null&&this.rank===2)a=conv2dWithBiasActivation(s,this.kernel.read(),c,this.strides,this.padding,this.dataFormat,this.dilationRate,d);else{if(this.rank===1)a=conv1dWithBias(s,this.kernel.read(),c,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)a=conv2dWithBiasActivation(s,this.kernel.read(),c,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)a=conv3dWithBias(s,this.kernel.read(),c,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new NotImplementedError("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(a=this.activation.apply(a))}return a})}computeOutputShape(s){s=getExactlyOneShape(s);const o=[],a=this.dataFormat==="channelsLast"?s.slice(1,s.length-1):s.slice(2);for(let d=0;d<a.length;++d){const g=convOutputLength(a[d],this.kernelSize[d],this.padding,this.strides[d],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[d]);o.push(g)}let c=[s[0]];return this.dataFormat==="channelsLast"?(c=c.concat(o),c.push(this.filters)):(c.push(this.filters),c=c.concat(o)),c}getConfig(){const s={filters:this.filters,kernelInitializer:serializeInitializer(this.kernelInitializer),kernelRegularizer:serializeRegularizer(this.kernelRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint)},o=super.getConfig();return Object.assign(s,o),s}static verifyArgs(s){if(!("filters"in s)||typeof s.filters!="number"||s.filters<1)throw new ValueError(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(s.filters)}`)}}class Conv2D extends Conv{constructor(s){super(2,s),Conv2D.verifyArgs(s)}getConfig(){const s=super.getConfig();return delete s.rank,s}static verifyArgs(s){if(typeof s.kernelSize!="number"&&!checkArrayTypeAndLength(s.kernelSize,"number",1,2))throw new ValueError(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(s.kernelSize)}.`)}}Conv2D.className="Conv2D";registerClass(Conv2D);class Conv3D extends Conv{constructor(s){super(3,s),Conv3D.verifyArgs(s)}getConfig(){const s=super.getConfig();return delete s.rank,s}static verifyArgs(s){if(typeof s.kernelSize!="number"&&!(Array.isArray(s.kernelSize)&&(s.kernelSize.length===1||s.kernelSize.length===3)))throw new ValueError(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(s.kernelSize)}.`)}}Conv3D.className="Conv3D";registerClass(Conv3D);class Conv2DTranspose extends Conv2D{constructor(s){if(super(s),this.inputSpec=[new InputSpec({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new ValueError(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(s){if(s=getExactlyOneShape(s),s.length!==4)throw new ValueError("Input should have rank 4; Received input shape: "+JSON.stringify(s));const o=this.dataFormat==="channelsFirst"?1:s.length-1;if(s[o]==null)throw new ValueError("The channel dimension of the inputs should be defined. Found `None`.");const a=s[o],c=this.kernelSize.concat([this.filters,a]);this.kernel=this.addWeight("kernel",c,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new InputSpec({ndim:4,axes:{[o]:a}})],this.built=!0}call(s,o){return tidy(()=>{let a=getExactlyOneTensor(s);if(a.shape.length!==4)throw new ValueError(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${a.shape.length}`);const c=a.shape,d=c[0];let g,b;this.dataFormat==="channelsFirst"?(g=2,b=3):(g=1,b=2);const $=c[g],_=c[b],_e=this.kernelSize[0],et=this.kernelSize[1],rt=this.strides[0],tt=this.strides[1],j=deconvLength($,rt,_e,this.padding),nt=deconvLength(_,tt,et,this.padding),st=[d,j,nt,this.filters];this.dataFormat!=="channelsLast"&&(a=transpose$2(a,[0,2,3,1]));let ot=conv2dTranspose$1(a,this.kernel.read(),st,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(ot=transpose$2(ot,[0,3,1,2])),this.bias!=null&&(ot=biasAdd(ot,this.bias.read(),this.dataFormat)),this.activation!=null&&(ot=this.activation.apply(ot)),ot})}computeOutputShape(s){s=getExactlyOneShape(s);const o=s.slice();let a,c,d;this.dataFormat==="channelsFirst"?(a=1,c=2,d=3):(a=3,c=1,d=2);const g=this.kernelSize[0],b=this.kernelSize[1],$=this.strides[0],_=this.strides[1];return o[a]=this.filters,o[c]=deconvLength(o[c],$,g,this.padding),o[d]=deconvLength(o[d],_,b,this.padding),o}getConfig(){const s=super.getConfig();return delete s.dilationRate,s}}Conv2DTranspose.className="Conv2DTranspose";registerClass(Conv2DTranspose);class SeparableConv extends Conv{constructor(s,o){if(super(s,o),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,o.filters==null)throw new ValueError("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(o.kernelInitializer!=null||o.kernelRegularizer!=null||o.kernelConstraint!=null)throw new ValueError("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(o.padding!=null&&o.padding!=="same"&&o.padding!=="valid")throw new ValueError(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(o.padding)}`);this.depthMultiplier=o.depthMultiplier==null?1:o.depthMultiplier,this.depthwiseInitializer=getInitializer(o.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=getRegularizer(o.depthwiseRegularizer),this.depthwiseConstraint=getConstraint(o.depthwiseConstraint),this.pointwiseInitializer=getInitializer(o.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=getRegularizer(o.pointwiseRegularizer),this.pointwiseConstraint=getConstraint(o.pointwiseConstraint)}build(s){if(s=getExactlyOneShape(s),s.length<this.rank+2)throw new ValueError(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(s)}`);const o=this.dataFormat==="channelsFirst"?1:s.length-1;if(s[o]==null||s[o]<0)throw new ValueError(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(s[o])}`);const a=s[o],c=this.kernelSize.concat([a,this.depthMultiplier]),d=[];for(let b=0;b<this.rank;++b)d.push(1);d.push(a*this.depthMultiplier,this.filters);const g=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",c,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,g,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",d,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,g,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,g,this.biasConstraint):this.bias=null,this.inputSpec=[new InputSpec({ndim:this.rank+2,axes:{[o]:a}})],this.built=!0}call(s,o){return tidy(()=>{s=getExactlyOneTensor(s);let a;if(this.rank===1)throw new NotImplementedError("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(s=transpose$2(s,[0,2,3,1])),a=separableConv2d$1(s,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(a=biasAdd(a,this.bias.read(),this.dataFormat)),this.activation!=null&&(a=this.activation.apply(a)),this.dataFormat==="channelsFirst"&&(a=transpose$2(a,[0,3,1,2])),a})}getConfig(){const s=super.getConfig();return delete s.rank,delete s.kernelInitializer,delete s.kernelRegularizer,delete s.kernelConstraint,s.depthwiseInitializer=serializeInitializer(this.depthwiseInitializer),s.pointwiseInitializer=serializeInitializer(this.pointwiseInitializer),s.depthwiseRegularizer=serializeRegularizer(this.depthwiseRegularizer),s.pointwiseRegularizer=serializeRegularizer(this.pointwiseRegularizer),s.depthwiseConstraint=serializeConstraint(this.depthwiseConstraint),s.pointwiseConstraint=serializeConstraint(this.pointwiseConstraint),s}}SeparableConv.className="SeparableConv";class SeparableConv2D extends SeparableConv{constructor(s){super(2,s)}}SeparableConv2D.className="SeparableConv2D";registerClass(SeparableConv2D);class Conv1D extends Conv{constructor(s){super(1,s),Conv1D.verifyArgs(s),this.inputSpec=[{ndim:3}]}getConfig(){const s=super.getConfig();return delete s.rank,delete s.dataFormat,s}static verifyArgs(s){if(typeof s.kernelSize!="number"&&!checkArrayTypeAndLength(s.kernelSize,"number",1,1))throw new ValueError(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(s.kernelSize)}.`)}}Conv1D.className="Conv1D";registerClass(Conv1D);class Cropping2D extends Layer{constructor(s){super(s),typeof s.cropping=="number"?this.cropping=[[s.cropping,s.cropping],[s.cropping,s.cropping]]:typeof s.cropping[0]=="number"?this.cropping=[[s.cropping[0],s.cropping[0]],[s.cropping[1],s.cropping[1]]]:this.cropping=s.cropping,this.dataFormat=s.dataFormat===void 0?"channelsLast":s.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(s){return this.dataFormat==="channelsFirst"?[s[0],s[1],s[2]-this.cropping[0][0]-this.cropping[0][1],s[3]-this.cropping[1][0]-this.cropping[1][1]]:[s[0],s[1]-this.cropping[0][0]-this.cropping[0][1],s[2]-this.cropping[1][0]-this.cropping[1][1],s[3]]}call(s,o){return tidy(()=>{if(s=getExactlyOneTensor(s),this.dataFormat==="channelsLast"){const a=sliceAlongAxis(s,this.cropping[0][0],s.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return sliceAlongAxis(a,this.cropping[1][0],s.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const a=sliceAlongAxis(s,this.cropping[0][0],s.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return sliceAlongAxis(a,this.cropping[1][0],s.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const s={cropping:this.cropping,dataFormat:this.dataFormat},o=super.getConfig();return Object.assign(s,o),s}}Cropping2D.className="Cropping2D";registerClass(Cropping2D);class UpSampling2D extends Layer{constructor(s){super(s),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=s.size==null?this.DEFAULT_SIZE:s.size,this.dataFormat=s.dataFormat==null?"channelsLast":s.dataFormat,checkDataFormat(this.dataFormat),this.interpolation=s.interpolation==null?"nearest":s.interpolation,checkInterpolationFormat(this.interpolation)}computeOutputShape(s){if(this.dataFormat==="channelsFirst"){const o=s[2]==null?null:this.size[0]*s[2],a=s[3]==null?null:this.size[1]*s[3];return[s[0],s[1],o,a]}else{const o=s[1]==null?null:this.size[0]*s[1],a=s[2]==null?null:this.size[1]*s[2];return[s[0],o,a,s[3]]}}call(s,o){return tidy(()=>{let a=getExactlyOneTensor(s);const c=a.shape;if(this.dataFormat==="channelsFirst"){a=transpose$2(a,[0,2,3,1]);const d=this.size[0]*c[2],g=this.size[1]*c[3],b=this.interpolation==="nearest"?a.resizeNearestNeighbor([d,g]):a.resizeBilinear([d,g]);return transpose$2(b,[0,3,1,2])}else{const d=this.size[0]*c[1],g=this.size[1]*c[2];return this.interpolation==="nearest"?a.resizeNearestNeighbor([d,g]):a.resizeBilinear([d,g])}})}getConfig(){const s={size:this.size,dataFormat:this.dataFormat},o=super.getConfig();return Object.assign(s,o),s}}UpSampling2D.className="UpSampling2D";registerClass(UpSampling2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function depthwiseConv2d$1(i,s,o=[1,1],a="valid",c,d){return tidy(()=>{c==null&&(c=imageDataFormat()),checkDataFormat(c);let g=preprocessConv2DInput(i,c);if(i.rank!==4)throw new ValueError(`Input for depthwiseConv2d is required to be 4-D, but is instead ${i.rank}-D`);if(s.rank!==4)throw new ValueError(`depthwiseKernel is required to be 4-D, but is instead ${s.rank}-D`);return g=depthwiseConv2d$3(g,s,o,a==="same"?"same":"valid","NHWC",d),c==="channelsFirst"&&(g=transpose$2(g,[0,3,1,2])),g})}class DepthwiseConv2D extends BaseConv{constructor(s){super(2,s),this.depthwiseKernel=null,this.depthMultiplier=s.depthMultiplier==null?1:s.depthMultiplier,this.depthwiseInitializer=getInitializer(s.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=getConstraint(s.depthwiseConstraint),this.depthwiseRegularizer=getRegularizer(s.depthwiseRegularizer)}build(s){if(s=getExactlyOneShape(s),s.length<4)throw new ValueError(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(s)}.`);const o=this.dataFormat==="channelsFirst"?1:3;if(s[o]==null||s[o]<0)throw new ValueError(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${s[o]}).`);const a=s[o],c=[this.kernelSize[0],this.kernelSize[1],a,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",c,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[a*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(s,o){return tidy(()=>{s=getExactlyOneTensor(s);let a=depthwiseConv2d$1(s,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(a=biasAdd(a,this.bias.read(),this.dataFormat)),this.activation!=null&&(a=this.activation.apply(a)),a})}computeOutputShape(s){s=getExactlyOneShape(s);const o=this.dataFormat==="channelsFirst"?s[2]:s[1],a=this.dataFormat==="channelsFirst"?s[3]:s[2],c=this.dataFormat==="channelsFirst"?s[1]*this.depthMultiplier:s[3]*this.depthMultiplier,d=convOutputLength(o,this.kernelSize[0],this.padding,this.strides[0]),g=convOutputLength(a,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[s[0],c,d,g]:[s[0],d,g,c]}getConfig(){const s=super.getConfig();return s.depthMultiplier=this.depthMultiplier,s.depthwiseInitializer=serializeInitializer(this.depthwiseInitializer),s.depthwiseRegularizer=serializeRegularizer(this.depthwiseRegularizer),s.depthwiseConstraint=serializeConstraint(this.depthwiseRegularizer),s}}DepthwiseConv2D.className="DepthwiseConv2D";registerClass(DepthwiseConv2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function standardizeArgs(i,s,o,a){if(Array.isArray(i)){if(s!=null||o!=null)throw new ValueError("When inputs is an array, neither initialState or constants should be provided");a!=null&&(o=i.slice(i.length-a,i.length),i=i.slice(0,i.length-a)),i.length>1&&(s=i.slice(1,i.length)),i=i[0]}function c(d){return d==null||Array.isArray(d)?d:[d]}return s=c(s),o=c(o),{inputs:i,initialState:s,constants:o}}function rnn$1(i,s,o,a=!1,c,d,g=!1,b=!1){return tidy(()=>{const $=s.shape.length;if($<3)throw new ValueError(`Input should be at least 3D, but is ${$}D.`);const _=[1,0].concat(range$3(2,$));if(s=transpose$2(s,_),d!=null)throw new NotImplementedError("The rnn() functoin of the deeplearn.js backend does not support constants yet.");g&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),c!=null&&(c=c.asType("bool").asType("float32"),c.rank===$-1&&(c=expandDims$3(c,-1)),c=transpose$2(c,_)),a&&(s=reverse$2(s,0),c!=null&&(c=reverse$2(c,0)));const _e=[];let et,rt=o;const tt=s.shape[0],j=unstack(s);let nt;c!=null&&(nt=unstack(c));for(let ot=0;ot<tt;++ot){const ut=j[ot],ht=tidy(()=>i(ut,rt));if(c==null)et=ht[0],rt=ht[1];else{const pt=tidy(()=>{const it=nt[ot],yt=onesLike$2(it).sub(it),ft=ht[0].mul(it).add(rt[0].mul(yt)),bt=rt.map((Tt,Ct)=>ht[1][Ct].mul(it).add(Tt.mul(yt)));return{output:ft,newStates:bt}});et=pt.output,rt=pt.newStates}b&&_e.push(et)}let st;return b&&(st=stack(_e,1)),[et,st,rt]})}class RNN extends Layer{constructor(s){super(s);let o;if(s.cell==null)throw new ValueError("cell property is missing for the constructor of RNN.");if(Array.isArray(s.cell)?o=new StackedRNNCells({cells:s.cell}):o=s.cell,o.stateSize==null)throw new ValueError("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=o,this.returnSequences=s.returnSequences==null?!1:s.returnSequences,this.returnState=s.returnState==null?!1:s.returnState,this.goBackwards=s.goBackwards==null?!1:s.goBackwards,this._stateful=s.stateful==null?!1:s.stateful,this.unroll=s.unroll==null?!1:s.unroll,this.supportsMasking=!0,this.inputSpec=[new InputSpec({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return range$3(0,s).map(o=>null)}else return this.states_}setStates(s){this.states_=s}computeOutputShape(s){isArrayOfShapes(s)&&(s=s[0]),s=s;let o=this.cell.stateSize;Array.isArray(o)||(o=[o]);const a=o[0];let c;if(this.returnSequences?c=[s[0],s[1],a]:c=[s[0],a],this.returnState){const d=[];for(const g of o)d.push([s[0],g]);return[c].concat(d)}else return c}computeMask(s,o){return tidy(()=>{Array.isArray(o)&&(o=o[0]);const a=this.returnSequences?o:null;if(this.returnState){const c=this.states.map(d=>null);return[a].concat(c)}else return a})}get states(){if(this.states_==null){const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,o=[];for(let a=0;a<s;++a)o.push(null);return o}else return this.states_}set states(s){this.states_=s}build(s){if(this.numConstants!=null)throw new NotImplementedError("Constants support is not implemented in RNN yet.");isArrayOfShapes(s)&&(s=s[0]),s=s;const o=this.stateful?s[0]:null,a=s.slice(2);this.inputSpec[0]=new InputSpec({shape:[o,null,...a]});const c=[s[0]].concat(s.slice(2));this.cell.build(c);let d;if(Array.isArray(this.cell.stateSize)?d=this.cell.stateSize:d=[this.cell.stateSize],this.stateSpec!=null){if(!arraysEqual(this.stateSpec.map(g=>g.shape[g.shape.length-1]),d))throw new ValueError(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=d.map(g=>new InputSpec({shape:[null,g]}));this.stateful&&this.resetStates()}resetStates(s,o=!1){tidy(()=>{if(!this.stateful)throw new AttributeError("Cannot call resetStates() on an RNN Layer that is not stateful.");const a=this.inputSpec[0].shape[0];if(a==null)throw new ValueError("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(c=>zeros$2([a,c])):this.states_=[zeros$2([a,this.cell.stateSize])];else if(s==null)dispose(this.states_),this.keptStates!=null&&(dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(c=>zeros$2([a,c])):this.states_[0]=zeros$2([a,this.cell.stateSize]);else{if(Array.isArray(s)||(s=[s]),s.length!==this.states_.length)throw new ValueError(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${s.length} state value(s). Input received: ${s}`);o===!0?this.keptStates.push(this.states_.slice()):dispose(this.states_);for(let c=0;c<this.states_.length;++c){const d=s[c],g=Array.isArray(this.cell.stateSize)?this.cell.stateSize[c]:this.cell.stateSize,b=[a,g];if(!arraysEqual(d.shape,b))throw new ValueError(`State ${c} is incompatible with layer ${this.name}: expected shape=${b}, received shape=${d.shape}`);this.states_[c]=d}}this.states_=this.states_.map(c=>keep(c.clone()))})}apply(s,o){let a=o==null?null:o.initialState,c=o==null?null:o.constants;o==null&&(o={});const d=standardizeArgs(s,a,c,this.numConstants);s=d.inputs,a=d.initialState,c=d.constants;let g=[],b=[];if(a!=null){o.initialState=a,g=g.concat(a),this.stateSpec=[];for(const _ of a)this.stateSpec.push(new InputSpec({shape:_.shape}));b=b.concat(this.stateSpec)}if(c!=null&&(o.constants=c,g=g.concat(c),this.numConstants=c.length),g[0]instanceof SymbolicTensor){const _=[s].concat(g),_e=this.inputSpec.concat(b),et=this.inputSpec;this.inputSpec=_e;const rt=super.apply(_,o);return this.inputSpec=et,rt}else return super.apply(s,o)}call(s,o){return tidy(()=>{const a=o==null?null:o.mask,c=o==null?null:o.training;let d=o==null?null:o.initialState;s=getExactlyOneTensor(s),d==null&&(this.stateful?d=this.states_:d=this.getInitialState(s));const g=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(d.length!==g)throw new ValueError(`RNN Layer has ${g} state(s) but was passed ${d.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const b={training:c},_=rnn$1((j,nt)=>{const st=this.cell.call([j].concat(nt),b);return[st[0],st.slice(1)]},s,d,this.goBackwards,a,null,this.unroll,this.returnSequences),_e=_[0],et=_[1],rt=_[2];this.stateful&&this.resetStates(rt,c);const tt=this.returnSequences?et:_e;return this.returnState?[tt].concat(rt):tt})}getInitialState(s){return tidy(()=>{let o=zeros$2(s.shape);return o=sum$2(o,[1,2]),o=expandDims$2(o),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(a=>a>1?tile$2(o,[1,a]):o):this.cell.stateSize>1?[tile$2(o,[1,this.cell.stateSize])]:[o]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(s){super.setFastWeightInitDuringBuild(s),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(s)}getConfig(){const s=super.getConfig(),o={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(o.numConstants=this.numConstants);const a=this.cell.getConfig();return this.getClassName()===RNN.className&&(o.cell={className:this.cell.getClassName(),config:a}),Object.assign({},a,s,o)}static fromConfig(s,o,a={}){const c=o.cell,d=deserialize(c,a);return new s(Object.assign(o,{cell:d}))}}RNN.className="RNN";registerClass(RNN);class RNNCell extends Layer{}class SimpleRNNCell extends RNNCell{constructor(s){super(s),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=s.units,assertPositiveInteger(this.units,"units"),this.activation=getActivation(s.activation==null?this.DEFAULT_ACTIVATION:s.activation),this.useBias=s.useBias==null?!0:s.useBias,this.kernelInitializer=getInitializer(s.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=getInitializer(s.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=getInitializer(s.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=getRegularizer(s.kernelRegularizer),this.recurrentRegularizer=getRegularizer(s.recurrentRegularizer),this.biasRegularizer=getRegularizer(s.biasRegularizer),this.kernelConstraint=getConstraint(s.kernelConstraint),this.recurrentConstraint=getConstraint(s.recurrentConstraint),this.biasConstraint=getConstraint(s.biasConstraint),this.dropout=min$2([1,max$2([0,s.dropout==null?0:s.dropout])]),this.recurrentDropout=min$2([1,max$2([0,s.recurrentDropout==null?0:s.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(s){s=getExactlyOneShape(s),this.kernel=this.addWeight("kernel",[s[s.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(s,o){return tidy(()=>{if(s=s,s.length!==2)throw new ValueError(`SimpleRNNCell expects 2 input Tensors, got ${s.length}.`);let a=s[1];s=s[0];const c=o.training==null?!1:o.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=generateDropoutMask({ones:()=>onesLike$2(s),rate:this.dropout,training:c})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=generateDropoutMask({ones:()=>onesLike$2(a),rate:this.recurrentDropout,training:c}));let d;const g=this.dropoutMask,b=this.recurrentDropoutMask;g!=null?d=dot$1(mul(s,g),this.kernel.read()):d=dot$1(s,this.kernel.read()),this.bias!=null&&(d=biasAdd(d,this.bias.read())),b!=null&&(a=mul(a,b));let $=add$2(d,dot$1(a,this.recurrentKernel.read()));return this.activation!=null&&($=this.activation.apply($)),[$,$]})}getConfig(){const s=super.getConfig(),o={units:this.units,activation:serializeActivation(this.activation),useBias:this.useBias,kernelInitializer:serializeInitializer(this.kernelInitializer),recurrentInitializer:serializeInitializer(this.recurrentInitializer),biasInitializer:serializeInitializer(this.biasInitializer),kernelRegularizer:serializeRegularizer(this.kernelRegularizer),recurrentRegularizer:serializeRegularizer(this.recurrentRegularizer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint),recurrentConstraint:serializeConstraint(this.recurrentConstraint),biasConstraint:serializeConstraint(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},s,o)}}SimpleRNNCell.className="SimpleRNNCell";registerClass(SimpleRNNCell);class SimpleRNN extends RNN{constructor(s){s.cell=new SimpleRNNCell(s),super(s)}call(s,o){return tidy(()=>{this.cell.dropoutMask!=null&&(dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const a=o==null?null:o.mask,c=o==null?null:o.training,d=o==null?null:o.initialState;return super.call(s,{mask:a,training:c,initialState:d})})}static fromConfig(s,o){return new s(o)}}SimpleRNN.className="SimpleRNN";registerClass(SimpleRNN);class GRUCell extends RNNCell{constructor(s){if(super(s),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",s.resetAfter)throw new ValueError("GRUCell does not support reset_after parameter set to true.");this.units=s.units,assertPositiveInteger(this.units,"units"),this.activation=getActivation(s.activation===void 0?this.DEFAULT_ACTIVATION:s.activation),this.recurrentActivation=getActivation(s.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:s.recurrentActivation),this.useBias=s.useBias==null?!0:s.useBias,this.kernelInitializer=getInitializer(s.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=getInitializer(s.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=getInitializer(s.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=getRegularizer(s.kernelRegularizer),this.recurrentRegularizer=getRegularizer(s.recurrentRegularizer),this.biasRegularizer=getRegularizer(s.biasRegularizer),this.kernelConstraint=getConstraint(s.kernelConstraint),this.recurrentConstraint=getConstraint(s.recurrentConstraint),this.biasConstraint=getConstraint(s.biasConstraint),this.dropout=min$2([1,max$2([0,s.dropout==null?0:s.dropout])]),this.recurrentDropout=min$2([1,max$2([0,s.recurrentDropout==null?0:s.recurrentDropout])]),this.implementation=s.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(s){s=getExactlyOneShape(s);const o=s[s.length-1];this.kernel=this.addWeight("kernel",[o,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(s,o){return tidy(()=>{if(s=s,s.length!==2)throw new ValueError(`GRUCell expects 2 input Tensors (inputs, h, c), got ${s.length}.`);const a=o.training==null?!1:o.training;let c=s[1];s=s[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=generateDropoutMask({ones:()=>onesLike$2(s),rate:this.dropout,training:a,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=generateDropoutMask({ones:()=>onesLike$2(c),rate:this.recurrentDropout,training:a,count:3}));const d=this.dropoutMask,g=this.recurrentDropoutMask;let b,$,_;0<this.dropout&&this.dropout<1&&(s=mul(s,d[0]));let _e=dot$1(s,this.kernel.read());this.useBias&&(_e=biasAdd(_e,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(c=mul(c,g[0]));const et=this.recurrentKernel.read(),[rt,tt]=split$1(et,[2*this.units,this.units],et.rank-1),j=dot$1(c,rt),[nt,st,ot]=split$1(_e,3,_e.rank-1),[ut,ht]=split$1(j,2,j.rank-1);b=this.recurrentActivation.apply(add$2(nt,ut)),$=this.recurrentActivation.apply(add$2(st,ht));const pt=dot$1(mul($,c),tt);_=this.activation.apply(add$2(ot,pt));const it=add$2(mul(b,c),mul(add$2(1,neg$2(b)),_));return[it,it]})}getConfig(){const s=super.getConfig(),o={units:this.units,activation:serializeActivation(this.activation),recurrentActivation:serializeActivation(this.recurrentActivation),useBias:this.useBias,kernelInitializer:serializeInitializer(this.kernelInitializer),recurrentInitializer:serializeInitializer(this.recurrentInitializer),biasInitializer:serializeInitializer(this.biasInitializer),kernelRegularizer:serializeRegularizer(this.kernelRegularizer),recurrentRegularizer:serializeRegularizer(this.recurrentRegularizer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint),recurrentConstraint:serializeConstraint(this.recurrentConstraint),biasConstraint:serializeConstraint(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},s,o)}}GRUCell.className="GRUCell";registerClass(GRUCell);class GRU extends RNN{constructor(s){s.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),s.cell=new GRUCell(s),super(s)}call(s,o){return tidy(()=>{this.cell.dropoutMask!=null&&(dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const a=o==null?null:o.mask,c=o==null?null:o.training,d=o==null?null:o.initialState;return super.call(s,{mask:a,training:c,initialState:d})})}static fromConfig(s,o){return o.implmentation===0&&(o.implementation=1),new s(o)}}GRU.className="GRU";registerClass(GRU);class LSTMCell extends RNNCell{constructor(s){super(s),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=s.units,assertPositiveInteger(this.units,"units"),this.activation=getActivation(s.activation===void 0?this.DEFAULT_ACTIVATION:s.activation),this.recurrentActivation=getActivation(s.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:s.recurrentActivation),this.useBias=s.useBias==null?!0:s.useBias,this.kernelInitializer=getInitializer(s.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=getInitializer(s.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=getInitializer(s.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=s.unitForgetBias,this.kernelRegularizer=getRegularizer(s.kernelRegularizer),this.recurrentRegularizer=getRegularizer(s.recurrentRegularizer),this.biasRegularizer=getRegularizer(s.biasRegularizer),this.kernelConstraint=getConstraint(s.kernelConstraint),this.recurrentConstraint=getConstraint(s.recurrentConstraint),this.biasConstraint=getConstraint(s.biasConstraint),this.dropout=min$2([1,max$2([0,s.dropout==null?0:s.dropout])]),this.recurrentDropout=min$2([1,max$2([0,s.recurrentDropout==null?0:s.recurrentDropout])]),this.implementation=s.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(s){var o;s=getExactlyOneShape(s);const a=s[s.length-1];this.kernel=this.addWeight("kernel",[a,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let c;if(this.useBias){if(this.unitForgetBias){const d=this.biasInitializer,g=this.units;c=new(o=class extends Initializer{apply($,_){const _e=d.apply([g]),et=new Ones().apply([g]),rt=d.apply([g*2]);return concatAlongFirstAxis(concatAlongFirstAxis(_e,et),rt)}},o.className="CustomInit",o)}else c=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,c,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(s,o){return tidy(()=>{const a=o.training==null?!1:o.training;if(s=s,s.length!==3)throw new ValueError(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${s.length}.`);let c=s[1];const d=s[2];s=s[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=generateDropoutMask({ones:()=>onesLike$2(s),rate:this.dropout,training:a,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=generateDropoutMask({ones:()=>onesLike$2(c),rate:this.recurrentDropout,training:a,count:4}));const g=this.dropoutMask,b=this.recurrentDropoutMask;let $,_,_e,et;0<this.dropout&&this.dropout<1&&(s=mul(s,g[0]));let rt=dot$1(s,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(c=mul(c,b[0])),rt=add$2(rt,dot$1(c,this.recurrentKernel.read())),this.useBias&&(rt=biasAdd(rt,this.bias.read()));const[tt,j,nt,st]=split$1(rt,4,rt.rank-1);$=this.recurrentActivation.apply(tt),_=this.recurrentActivation.apply(j),_e=add$2(mul(_,d),mul($,this.activation.apply(nt))),et=this.recurrentActivation.apply(st);const ot=mul(et,this.activation.apply(_e));return[ot,ot,_e]})}getConfig(){const s=super.getConfig(),o={units:this.units,activation:serializeActivation(this.activation),recurrentActivation:serializeActivation(this.recurrentActivation),useBias:this.useBias,kernelInitializer:serializeInitializer(this.kernelInitializer),recurrentInitializer:serializeInitializer(this.recurrentInitializer),biasInitializer:serializeInitializer(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:serializeRegularizer(this.kernelRegularizer),recurrentRegularizer:serializeRegularizer(this.recurrentRegularizer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint),recurrentConstraint:serializeConstraint(this.recurrentConstraint),biasConstraint:serializeConstraint(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},s,o)}}LSTMCell.className="LSTMCell";registerClass(LSTMCell);class LSTM extends RNN{constructor(s){s.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),s.cell=new LSTMCell(s),super(s)}call(s,o){return tidy(()=>{this.cell.dropoutMask!=null&&(dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const a=o==null?null:o.mask,c=o==null?null:o.training,d=o==null?null:o.initialState;return super.call(s,{mask:a,training:c,initialState:d})})}static fromConfig(s,o){return o.implmentation===0&&(o.implementation=1),new s(o)}}LSTM.className="LSTM";registerClass(LSTM);class StackedRNNCells extends RNNCell{constructor(s){super(s),this.cells=s.cells}get stateSize(){const s=[];for(const o of this.cells.slice().reverse())Array.isArray(o.stateSize)?s.push(...o.stateSize):s.push(o.stateSize);return s}call(s,o){return tidy(()=>{s=s;let a=s.slice(1);const c=[];for(const b of this.cells.slice().reverse())Array.isArray(b.stateSize)?c.push(a.splice(0,b.stateSize.length)):c.push(a.splice(0,1));c.reverse();const d=[];let g;for(let b=0;b<this.cells.length;++b){const $=this.cells[b];a=c[b],b===0?g=[s[0]].concat(a):g=[g[0]].concat(a),g=$.call(g,o),d.push(g.slice(1))}a=[];for(const b of d.slice().reverse())a.push(...b);return[g[0]].concat(a)})}build(s){isArrayOfShapes(s)&&(s=s[0]),s=s;let o;this.cells.forEach((a,c)=>{nameScope(`RNNCell_${c}`,()=>{a.build(s),Array.isArray(a.stateSize)?o=a.stateSize[0]:o=a.stateSize,s=[s[0],o]})}),this.built=!0}getConfig(){const s=super.getConfig(),o=d=>({className:d.getClassName(),config:d.getConfig()}),c={cells:this.cells.map(o)};return Object.assign({},s,c)}static fromConfig(s,o,a={}){const c=[];for(const d of o.cells)c.push(deserialize(d,a));return new s({cells:c})}get trainableWeights(){if(!this.trainable)return[];const s=[];for(const o of this.cells)s.push(...o.trainableWeights);return s}get nonTrainableWeights(){const s=[];for(const o of this.cells)s.push(...o.nonTrainableWeights);if(!this.trainable){const o=[];for(const a of this.cells)o.push(...a.trainableWeights);return o.concat(s)}return s}getWeights(){const s=[];for(const o of this.cells)s.push(...o.weights);return batchGetValue(s)}setWeights(s){const o=[];for(const a of this.cells){const c=a.weights.length,d=s.splice(c);for(let g=0;g<a.weights.length;++g)o.push([a.weights[g],d[g]])}batchSetValue(o)}}StackedRNNCells.className="StackedRNNCells";registerClass(StackedRNNCells);function generateDropoutMask(i){const{ones:s,rate:o,training:a=!1,count:c=1}=i,d=()=>dropout$1(s(),o),g=()=>inTrainPhase(d,s,a);return!c||c<=1?keep(g().clone()):Array(c).fill(void 0).map(g).map($=>keep($.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var __rest=globalThis&&globalThis.__rest||function(i,s){var o={};for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&s.indexOf(a)<0&&(o[a]=i[a]);if(i!=null&&typeof Object.getOwnPropertySymbols=="function")for(var c=0,a=Object.getOwnPropertySymbols(i);c<a.length;c++)s.indexOf(a[c])<0&&Object.prototype.propertyIsEnumerable.call(i,a[c])&&(o[a[c]]=i[a[c]]);return o};class ConvRNN2D extends RNN{constructor(s){if(s.unroll)throw new NotImplementedError("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(s.cell))throw new NotImplementedError("It is not possible at the moment to stack convolutional cells.");super(s),this.inputSpec=[new InputSpec({ndim:5})]}call(s,o){return tidy(()=>{if(this.cell.dropoutMask!=null&&(dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),o&&o.constants)throw new ValueError("ConvRNN2D cell does not support constants");const a=o==null?null:o.mask,c=o==null?null:o.training,d=o==null?null:o.initialState;return super.call(s,{mask:a,training:c,initialState:d})})}computeOutputShape(s){let o=this.computeSingleOutputShape(s);return this.returnSequences||(o=[o[0],...o.slice(2)]),this.returnState&&(o=[o,...Array(2).fill([s[0],...o.slice(-3)])]),o}getInitialState(s){return tidy(()=>{const{stateSize:o}=this.cell,a=s.shape,c=this.computeSingleOutputShape(a),d=[c[0],...c.slice(2)],g=zeros$2(d);return Array.isArray(o)?Array(o.length).fill(g):[g]})}resetStates(s,o=!1){tidy(()=>{if(!this.stateful)throw new AttributeError("Cannot call resetStates() on an RNN Layer that is not stateful.");const a=this.inputSpec[0].shape,c=this.computeSingleOutputShape(a),d=[c[0],...c.slice(2)];if(a[0]==null)throw new ValueError("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>zeros$2(d)):this.states_=[zeros$2(d)];else if(s==null)dispose(this.states_),this.keptStates!=null&&(dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>zeros$2(d)):this.states_[0]=zeros$2(d);else{if(Array.isArray(s)||(s=[s]),s.length!==this.states_.length)throw new ValueError(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${s.length} state value(s). Input received: ${s}`);o?this.keptStates.push(this.states_.slice()):dispose(this.states_);for(let b=0;b<this.states_.length;++b){const $=s[b],_=d;if(!arraysEqual($.shape,_))throw new ValueError(`State ${b} is incompatible with layer ${this.name}: expected shape=${_}, received shape=${$.shape}`);this.states_[b]=$}}this.states_=this.states_.map(b=>keep(b.clone()))})}computeSingleOutputShape(s){const{dataFormat:o,filters:a,kernelSize:c,padding:d,strides:g,dilationRate:b}=this.cell,$=o==="channelsFirst",_=s[$?3:2],_e=s[$?4:3],et=convOutputLength(_,c[0],d,g[0],b[0]),rt=convOutputLength(_e,c[1],d,g[1],b[1]);return[...s.slice(0,2),...$?[a,et,rt]:[et,rt,a]]}}ConvRNN2D.className="ConvRNN2D";class ConvLSTM2DCell extends LSTMCell{constructor(s){const{filters:o,kernelSize:a,strides:c,padding:d,dataFormat:g,dilationRate:b}=s;super(Object.assign({},s,{units:o})),this.filters=o,assertPositiveInteger(this.filters,"filters"),this.kernelSize=normalizeArray(a,2,"kernelSize"),this.kernelSize.forEach($=>assertPositiveInteger($,"kernelSize")),this.strides=normalizeArray(c||1,2,"strides"),this.strides.forEach($=>assertPositiveInteger($,"strides")),this.padding=d||"valid",checkPaddingMode(this.padding),this.dataFormat=g||"channelsLast",checkDataFormat(this.dataFormat),this.dilationRate=normalizeArray(b||1,2,"dilationRate"),this.dilationRate.forEach($=>assertPositiveInteger($,"dilationRate"))}build(s){var o;s=getExactlyOneShape(s);const a=this.dataFormat==="channelsFirst"?1:s.length-1;if(s[a]==null)throw new ValueError(`The channel dimension of the input should be defined. Found ${s[a]}`);const c=s[a],d=4,g=this.kernelSize.concat([c,this.filters*d]);this.kernel=this.addWeight("kernel",g,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const b=this.kernelSize.concat([this.filters,this.filters*d]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",b,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let $;if(this.unitForgetBias){const _=this.biasInitializer,_e=this.filters;$=new(o=class extends Initializer{apply(rt,tt){const j=_.apply([_e]),nt=ones$1([_e]),st=_.apply([_e*2]);return concatenate$1([j,nt,st])}},o.className="CustomInit",o)}else $=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*d],null,$,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(s,o){return tidy(()=>{if(s.length!==3)throw new ValueError(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${s.length}.`);const a=o.training||!1,c=s[0],d=s[1],g=s[2],b=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=generateDropoutMask({ones:()=>onesLike$2(c),rate:this.dropout,training:a,count:b}));const $=this.dropoutMask,_=(Qt,tn,sn)=>!tn||!tn[sn]?Qt:mul(tn[sn],Qt);let _e=_(c,$,0),et=_(c,$,1),rt=_(c,$,2),tt=_(c,$,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=generateDropoutMask({ones:()=>onesLike$2(d),rate:this.recurrentDropout,training:a,count:b}));const j=this.recurrentDropoutMask;let nt=_(d,j,0),st=_(d,j,1),ot=_(d,j,2),ut=_(d,j,3);const ht=3,[pt,it,yt,ft]=split$1(this.kernel.read(),b,ht),[bt,Tt,Ct,_t]=this.useBias?split$1(this.bias.read(),b):[null,null,null,null];_e=this.inputConv(_e,pt,bt,this.padding),et=this.inputConv(et,it,Tt,this.padding),rt=this.inputConv(rt,yt,Ct,this.padding),tt=this.inputConv(tt,ft,_t,this.padding);const[Ot,kt,Rt,jt]=split$1(this.recurrentKernel.read(),b,ht);nt=this.recurrentConv(nt,Ot),st=this.recurrentConv(st,kt),ot=this.recurrentConv(ot,Rt),ut=this.recurrentConv(ut,jt);const Gt=this.recurrentActivation.apply(add$2(_e,nt)),Bt=this.recurrentActivation.apply(add$2(et,st)),zt=add$2(mul(Bt,g),mul(Gt,this.activation.apply(add$2(rt,ot)))),Ut=mul(this.recurrentActivation.apply(add$2(tt,ut)),this.activation.apply(zt));return[Ut,Ut,zt]})}getConfig(){const s=super.getConfig(),o=__rest(s,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},o,a)}inputConv(s,o,a,c){const d=conv2d$3(s,o,this.strides,c||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return a?biasAdd(d,a,this.dataFormat):d}recurrentConv(s,o){return conv2d$3(s,o,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}ConvLSTM2DCell.className="ConvLSTM2DCell";registerClass(ConvLSTM2DCell);class ConvLSTM2D extends ConvRNN2D{constructor(s){const o=new ConvLSTM2DCell(s);super(Object.assign({},s,{cell:o}))}static fromConfig(s,o){return new s(o)}}ConvLSTM2D.className="ConvLSTM2D";registerClass(ConvLSTM2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Dropout extends Layer{constructor(s){super(s),this.rate=Math.max(Math.min(s.rate,1),0),this.noiseShape=s.noiseShape,this.seed=s.seed,this.supportsMasking=!0}getNoiseShape(s){if(this.noiseShape==null)return this.noiseShape;const o=s.shape,a=[];for(let c=0;c<this.noiseShape.length;++c)a.push(this.noiseShape[c]==null?o[c]:this.noiseShape[c]);return a}call(s,o){return tidy(()=>{this.invokeCallHook(s,o);const a=getExactlyOneTensor(s);if(0<this.rate&&this.rate<1){const c=o.training==null?!1:o.training,d=this.getNoiseShape(a);return inTrainPhase(()=>dropout$1(a,this.rate,d,this.seed),()=>a,c)}return s})}getConfig(){const s={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},o=super.getConfig();return Object.assign(s,o),s}dispose(){return super.dispose()}}Dropout.className="Dropout";registerClass(Dropout);class SpatialDropout1D extends Dropout{constructor(s){super(s),this.inputSpec=[{ndim:3}]}getNoiseShape(s){const o=s.shape;return[o[0],1,o[2]]}}SpatialDropout1D.className="SpatialDropout1D";registerClass(SpatialDropout1D);class Dense extends Layer{constructor(s){if(super(s),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",s.batchInputShape==null&&s.inputShape==null&&s.inputDim!=null){let o=null;s.batchSize!=null&&(o=s.batchSize),this.batchInputShape=[o,s.inputDim]}this.units=s.units,assertPositiveInteger(this.units,"units"),this.activation=getActivation(s.activation),s.useBias!=null&&(this.useBias=s.useBias),this.kernelInitializer=getInitializer(s.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=getInitializer(s.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=getConstraint(s.kernelConstraint),this.biasConstraint=getConstraint(s.biasConstraint),this.kernelRegularizer=getRegularizer(s.kernelRegularizer),this.biasRegularizer=getRegularizer(s.biasRegularizer),this.activityRegularizer=getRegularizer(s.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(s){s=getExactlyOneShape(s);const o=s[s.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[o,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:o}}],this.built=!0}computeOutputShape(s){s=getExactlyOneShape(s);const o=s.slice();return o[o.length-1]=this.units,o}call(s,o){return tidy(()=>{this.invokeCallHook(s,o);const a=getExactlyOneTensor(s),c=mapActivationToFusedKernel(this.activation.getClassName());let d;return c!=null?d=dot$1(a,this.kernel.read(),c,this.bias?this.bias.read():null):(d=dot$1(a,this.kernel.read()),this.bias!=null&&(d=biasAdd(d,this.bias.read())),this.activation!=null&&(d=this.activation.apply(d))),d})}getConfig(){const s={units:this.units,activation:serializeActivation(this.activation),useBias:this.useBias,kernelInitializer:serializeInitializer(this.kernelInitializer),biasInitializer:serializeInitializer(this.biasInitializer),kernelRegularizer:serializeRegularizer(this.kernelRegularizer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint),biasConstraint:serializeConstraint(this.biasConstraint)},o=super.getConfig();return Object.assign(s,o),s}}Dense.className="Dense";registerClass(Dense);class Flatten extends Layer{constructor(s){s=s||{},super(s),this.inputSpec=[{minNDim:3}],this.dataFormat=s.dataFormat}computeOutputShape(s){s=getExactlyOneShape(s);for(const o of s.slice(1))if(o==null)throw new ValueError(`The shape of the input to "Flatten" is not fully defined (got ${s.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[s[0],arrayProd(s,1)]}call(s,o){return tidy(()=>{this.invokeCallHook(s,o);let a=getExactlyOneTensor(s);if(this.dataFormat==="channelsFirst"&&a.rank>1){const c=[0];for(let d=2;d<a.rank;++d)c.push(d);c.push(1),a=a.transpose(c)}return batchFlatten(a)})}getConfig(){const s={};this.dataFormat!=null&&(s.dataFormat=this.dataFormat);const o=super.getConfig();return Object.assign(s,o),s}}Flatten.className="Flatten";registerClass(Flatten);class Activation extends Layer{constructor(s){super(s),this.supportsMasking=!0,this.activation=getActivation(s.activation)}call(s,o){return tidy(()=>{this.invokeCallHook(s,o);const a=getExactlyOneTensor(s);return this.activation.apply(a)})}getConfig(){const s={activation:serializeActivation(this.activation)},o=super.getConfig();return Object.assign(s,o),s}}Activation.className="Activation";registerClass(Activation);class RepeatVector extends Layer{constructor(s){super(s),this.n=s.n,this.inputSpec=[{ndim:2}]}computeOutputShape(s){return[s[0],this.n,s[1]]}call(s,o){return tidy(()=>(s=getExactlyOneTensor(s),repeat(s,this.n)))}getConfig(){const s={n:this.n},o=super.getConfig();return Object.assign(s,o),s}}RepeatVector.className="RepeatVector";registerClass(RepeatVector);class Reshape extends Layer{constructor(s){super(s),this.targetShape=s.targetShape;for(let o=0;o<this.targetShape.length;++o)this.isUnknown(this.targetShape[o])&&(this.targetShape[o]=null)}isUnknown(s){return s<0||s==null}fixUnknownDimension(s,o){const a="Total size of new array must be unchanged.",c=o.slice();let d=1,g=null;for(let $=0;$<c.length;++$){const _=c[$];if(this.isUnknown(_))if(g===null)g=$;else throw new ValueError("Can only specifiy one unknown dimension.");else d*=_}const b=arrayProd(s);if(g!==null){if(d===0||b%d!==0)throw new ValueError(a);c[g]=b/d}else if(b!==d)throw new ValueError(a);return c}computeOutputShape(s){let o=!1;for(let a=0;a<s.length;++a)if(this.isUnknown(s[a])){o=!0;break}return o?s.slice(0,1).concat(this.targetShape):s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape))}call(s,o){return tidy(()=>{this.invokeCallHook(s,o);const a=getExactlyOneTensor(s),c=a.shape,d=c.slice(0,1).concat(this.fixUnknownDimension(c.slice(1),this.targetShape));return a.reshape(d)})}getConfig(){const s={targetShape:this.targetShape},o=super.getConfig();return Object.assign(s,o),s}}Reshape.className="Reshape";registerClass(Reshape);class Permute extends Layer{constructor(s){if(super(s),s.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(s.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${s.dims} instead.`);const o=range$3(1,s.dims.length+1);if(!arraysEqual(s.dims.slice().sort(),o))throw new Error("Invalid permutation `dims`: "+JSON.stringify(s.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=s.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new InputSpec({ndim:this.dims.length+1})]}computeOutputShape(s){s=getExactlyOneShape(s);const o=s.slice();return this.dims.forEach((a,c)=>{o[c+1]=s[a]}),o}call(s,o){return transpose$2(getExactlyOneTensor(s),this.dimsIncludingBatch)}getConfig(){const s={dims:this.dims},o=super.getConfig();return Object.assign(s,o),s}}Permute.className="Permute";registerClass(Permute);class Masking extends Layer{constructor(s){super(s??{}),this.supportsMasking=!0,s!=null?this.maskValue=s.maskValue==null?0:s.maskValue:this.maskValue=0}computeOutputShape(s){return s}getConfig(){const s=super.getConfig(),o={maskValue:this.maskValue};return Object.assign(o,s),o}computeMask(s,o){const a=getExactlyOneTensor(s),c=-1;return any$2(notEqual$2(a,this.maskValue),c)}call(s,o){return tidy(()=>{this.invokeCallHook(s,o);const a=getExactlyOneTensor(s),c=-1,d=!0,g=any$2(notEqual$2(a,this.maskValue),c,d);return a.mul(g.asType(a.dtype))})}}Masking.className="Masking";registerClass(Masking);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Embedding extends Layer{constructor(s){if(super(s),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",s.batchInputShape==null&&s.inputShape==null){let o=null;s.batchSize!=null&&(o=s.batchSize),s.inputLength==null?this.batchInputShape=[o,null]:this.batchInputShape=[o].concat(toList(s.inputLength))}this.inputDim=s.inputDim,assertPositiveInteger(this.inputDim,"inputDim"),this.outputDim=s.outputDim,assertPositiveInteger(this.outputDim,"outputDim"),this.embeddingsInitializer=getInitializer(s.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=getRegularizer(s.embeddingsRegularizer),this.activityRegularizer=getRegularizer(s.activityRegularizer),this.embeddingsConstraint=getConstraint(s.embeddingsConstraint),this.maskZero=s.maskZero,this.supportsMasking=s.maskZero,this.inputLength=s.inputLength}build(s){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(s){}computeMask(s,o){return tidy(()=>this.maskZero?(s=getExactlyOneTensor(s),notEqual$2(s,zerosLike$2(s))):null)}computeOutputShape(s){if(s=getExactlyOneShape(s),this.inputLength==null)return[...s,this.outputDim];const o=toList(this.inputLength);if(o.length!==s.length-1)throw new ValueError(`"inputLength" is ${this.inputLength}, but received input shape has shape ${s}`);{let a=0;for(let c=0;c<o.length;++c){const d=o[c],g=s[c+1];if(d!=null&&g!=null&&d!==g)throw new ValueError(`"inputLength" is ${this.inputLength}, but received input shape has shape ${s}`);d==null&&(o[a]=g),a++}}return[s[0],...o,this.outputDim]}call(s,o){return tidy(()=>{this.invokeCallHook(s,o);let a=getExactlyOneTensor(s);return a.dtype!=="int32"&&(a=cast$2(a,"int32")),gather(this.embeddings.read(),a.as1D()).reshape(getExactlyOneShape(this.computeOutputShape(a.shape)))})}getConfig(){const s={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:serializeInitializer(this.embeddingsInitializer),embeddingsRegularizer:serializeRegularizer(this.embeddingsRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),embeddingsConstraint:serializeConstraint(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},o=super.getConfig();return Object.assign(s,o),s}}Embedding.className="Embedding";registerClass(Embedding);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Merge$1=class extends Layer{constructor(s){super(s||{}),this.supportsMasking=!0}mergeFunction(s){throw new NotImplementedError}computeElementwiseOpOutputShape(s,o){if(s==null||o==null)return null;if(s.length<o.length)return this.computeElementwiseOpOutputShape(o,s);if(o.length===0)return s;const a=s.slice(0,s.length-o.length);for(let c=0;c<o.length;++c){const d=s[s.length-o.length+c],g=o[c];if(d==null||g==null||d<0||g<0)a.push(null);else if(d===1)a.push(g);else if(g===1)a.push(d);else{if(d!==g)throw new ValueError("Operands could not be broadcast together with shapes "+JSON.stringify(s)+" "+JSON.stringify(o));a.push(d)}}return a}build(s){if(Array.isArray(s)&&!Array.isArray(s[0])&&(s=[getExactlyOneShape(s)]),s=s,s.length<2)throw new ValueError(`A merge layer should be called on an Array of at least 2 inputs. Got ${s.length} input(s).`);let o=[];for(const d of s)d!=null&&d[0]!==null&&o.push(d[0]);if(o=unique$2(o),o.length>1)throw new ValueError(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(s)}.`);let a=s[0]==null?null:s[0].slice(1);for(let d=1;d<s.length;++d){const g=s[d]==null?null:s[d].slice(1);a=this.computeElementwiseOpOutputShape(a,g)}const c=s.map(d=>d.length);s.indexOf(null)===-1&&unique$2(c).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(s,o){return tidy(()=>{if(s=s,this.reshapeRequired){const a=[],c=s.map(d=>d.rank);if(c.indexOf(null)===-1){const d=max$2(c);for(let g of s){const b=g.rank;for(let $=0;$<d-b;++$)g=expandDims$2(g,1);a.push(g)}return this.mergeFunction(a)}else{let d=!1;for(const $ of s){const _=$.rank;if(_==null){const _e=$.shape,et=_e[0],rt=_e.slice(1).concat([et]);let tt=$.reshape([et].concat(arrayProd(_e.slice(1))));tt=transpose$2(tt,[1,0]),tt=tt.reshape(rt),a.push(tt),d=!0}else if(_>1){const _e=range$3(1,_).concat([0]);a.push(transpose$2($,_e)),d=!0}else a.push($)}let g=this.mergeFunction(a);const b=g.rank;if(d){if(b==null){const $=g.shape,_=$.length,_e=$[_-1],et=[_e].concat($.slice(0,$.length-1));g=transpose$2(g.reshape([-1,_e]),[1,0]).reshape(et)}else if(b>1){const $=[b-1].concat(range$3(0,b-1));g=transpose$2(g,$)}}return g}}else return this.mergeFunction(s)})}computeOutputShape(s){s=s;let o;s[0]==null?o=null:o=s[0].slice(1);for(let c=1;c<s.length;++c){const d=s[c]==null?null:s[c].slice(1);o=this.computeElementwiseOpOutputShape(o,d)}let a=[];for(const c of s)c!=null&&c[0]!==null&&a.push(c[0]);return a=unique$2(a),a.length===1?o=a.concat(o):o=[null].concat(o),o}computeMask(s,o){return tidy(()=>{if(o==null)return null;if(!Array.isArray(o))throw new ValueError("`mask` should be an Array");if(!Array.isArray(s))throw new ValueError("`inputs` should be an Array");if(o.length!==s.length)throw new ValueError(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${s.length} vs ${o.length})`);if(o.every(c=>c==null))return null;o=o.map(c=>c==null?c:expandDims$3(c,0));let a=o[0];for(let c=1;c<o.length-1;++c)a=logicalAnd$2(a,o[c]);return a})}},Add$1=class extends Merge$1{constructor(s){super(s)}mergeFunction(s){return tidy(()=>{let o=s[0].clone();for(let a=1;a<s.length;++a)o=add$2(o,s[a]);return o})}};Add$1.className="Add";registerClass(Add$1);let Multiply$1=class extends Merge$1{constructor(s){super(s)}mergeFunction(s){return tidy(()=>{let o=s[0].clone();for(let a=1;a<s.length;++a)o=mul(o,s[a]);return o})}};Multiply$1.className="Multiply";registerClass(Multiply$1);class Average extends Merge$1{constructor(s){super(s)}mergeFunction(s){return tidy(()=>{let o=s[0].clone();for(let a=1;a<s.length;++a)o=add$2(o,s[a]);return mul(1/s.length,o)})}}Average.className="Average";registerClass(Average);class Maximum extends Merge$1{constructor(s){super(s)}mergeFunction(s){return tidy(()=>{let o=s[0];for(let a=1;a<s.length;++a)o=maximum$3(o,s[a]);return o})}}Maximum.className="Maximum";registerClass(Maximum);class Minimum extends Merge$1{constructor(s){super(s)}mergeFunction(s){return tidy(()=>{let o=s[0];for(let a=1;a<s.length;++a)o=minimum$3(o,s[a]);return o})}}Minimum.className="Minimum";registerClass(Minimum);class Concatenate extends Merge$1{constructor(s){super(s),this.DEFAULT_AXIS=-1,s==null&&(s={}),this.axis=s.axis==null?this.DEFAULT_AXIS:s.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(s){if(!(Array.isArray(s)&&Array.isArray(s[0]))||s.length===1)throw new ValueError("A `Concatenate` layer should be called on a list of at least 2 inputs");s=s;let o=!0;for(const c of s)if(c!=null){o=!1;break}if(o)return;const a=[];for(let c=0;c<s.length;++c){const d=s[c].slice();d.splice(this.axis,1);let g=!1;for(const b of a)if(arraysEqual(b,d)){g=!0;break}g||a.push(d)}if(a.length>1)throw new ValueError("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(s))}mergeFunction(s){return tidy(()=>concatenate$1(s,this.axis))}computeOutputShape(s){if(!(Array.isArray(s)&&Array.isArray(s[0])))throw new ValueError("A `Concatenate` layer should be called on a list of inputs.");const o=s,a=o[0].slice(),c=this.axis<0?a.length+this.axis:this.axis;for(const d of o.slice(1)){if(a[c]==null||d[c]==null){a[c]=null;break}a[c]+=d[c]}return a}computeMask(s,o){if(o==null)return null;if(!Array.isArray(o))throw new ValueError("`mask` should be an array for Concatenate");if(!Array.isArray(s))throw new ValueError("`inputs` should be an array for Concatenate");if(o.length!==s.length)throw new ValueError(`Mismatch in the length of mask (${o.length}) and the legnth of inputs (${s.length})`);return tidy(()=>{let a=!0;if(o.forEach(g=>{if(g!=null){a=!1;return}}),a)return null;const c=[];for(let g=0;g<s.length;++g)o[g]==null?c.push(onesLike$2(s[g]).asType("bool")):o[g].rank<s[g].rank?c.push(expandDims$3(o[g],-1)):c.push(o[g]);const d=concat$2(c,this.axis);return all$2(d,-1,!1)})}getConfig(){const s={axis:this.axis},o=super.getConfig();return Object.assign(s,o),s}}Concatenate.className="Concatenate";registerClass(Concatenate);function interpretAxis(i,s){for(;i<0;)i+=s;return i}function batchDot(i,s,o){if(i.shape.length>3||s.shape.length>3)throw new NotImplementedError("batchDot is not implemented for tensors of 4D or higher rank yet");if(assert$2(i.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${i.shape.length}`),assert$2(i.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${s.shape.length}`),typeof o=="number"&&(o=[o,o]),i.dtype==="complex64"||s.dtype==="complex64")throw new NotImplementedError("batchDot is not implemented for complex64-type Tensors yet.");const a=i.shape.length,c=s.shape.length;o==null&&(o=[a-1,c-2]);const d=o;return tidy(()=>{let g;if(a>c){g=a-c;const $=[];for(let _=0;_<g;++_)$.push(1);s=s.reshape(s.shape.concat($))}else if(c>a){g=c-a;const $=[];for(let _=0;_<g;++_)$.push(1);i=i.reshape(i.shape.concat($))}else g=0;let b;if(i.shape.length===2&&s.shape.length===2)d[0]===d[1]?b=i.mul(s).sum(d[0]):b=i.transpose([1,0]).mul(s).sum(d[1]);else{const $=d[0]!==i.shape.length-1,_=d[1]===s.shape.length-1;b=i.matMul(s,$,_)}if(g>0){let $;a>c?$=a+c-3:$=a-1;const _=[];for(let _e=$;_e<$+g;++_e)_.push(_e);b=b.squeeze(_)}return b.shape.length===1&&(b=b.expandDims(1)),b})}class Dot extends Merge$1{constructor(s){super(s),this.axes=s.axes,this.normalize=s.normalize==null?!1:s.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(s){assert$2(Array.isArray(s)&&s.length===2&&Array.isArray(s[0])&&Array.isArray(s[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const o=s[0],a=s[1];if(o.length>3||a.length>3)throw new NotImplementedError("Dot layer does not support tensors of 4D or higher rank yet.");const c=this.interpretAxes(o,a);if(o[c[0]]!==a[c[1]])throw new ValueError(`Dimension incompatibility: ${o[c[0]]} !== ${a[c[1]]}`)}mergeFunction(s){if(s.length!==2)throw new ValueError(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${s.length} input(s).`);let o=s[0],a=s[1],c;return Array.isArray(this.axes)?c=this.axes.map((d,g)=>interpretAxis(d,s[g].shape.length)):c=[interpretAxis(this.axes,o.shape.length),interpretAxis(this.axes,a.shape.length)],this.normalize&&(o=l2Normalize(o,c[0]),a=l2Normalize(a,c[1])),batchDot(o,a,c)}interpretAxes(s,o){let a;return Array.isArray(this.axes)?a=this.axes:a=[interpretAxis(this.axes,s.length),interpretAxis(this.axes,o.length)],a}computeOutputShape(s){assert$2(Array.isArray(s)&&s.length===2&&Array.isArray(s[0])&&Array.isArray(s[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const o=s[0].slice(),a=s[1].slice();if(o.length>3||a.length>3)throw new NotImplementedError("Dot layer does not support tensors of 4D or higher rank yet.");const c=this.interpretAxes(o,a);o.splice(c[0],1),a.splice(c[1],1),a.splice(0,1);const d=o.concat(a);return d.length===1&&d.push(1),d}computeMask(s,o){return null}getConfig(){const s={axes:this.axes,normalize:this.normalize},o=super.getConfig();return Object.assign(s,o),s}}Dot.className="Dot";registerClass(Dot);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class GaussianNoise extends Layer{constructor(s){super(s),this.supportsMasking=!0,this.stddev=s.stddev}computeOutputShape(s){return s}getConfig(){const s=super.getConfig(),o={stddev:this.stddev};return Object.assign(o,s),o}call(s,o){return tidy(()=>{this.invokeCallHook(s,o);const a=getExactlyOneTensor(s);return inTrainPhase(()=>randomNormal$1(a.shape,0,this.stddev).add(a),()=>a,o.training||!1)})}}GaussianNoise.className="GaussianNoise";registerClass(GaussianNoise);class GaussianDropout extends Layer{constructor(s){super(s),this.supportsMasking=!0,this.rate=s.rate}computeOutputShape(s){return s}getConfig(){const s=super.getConfig(),o={rate:this.rate};return Object.assign(o,s),o}call(s,o){return tidy(()=>{this.invokeCallHook(s,o);const a=getExactlyOneTensor(s);return this.rate>0&&this.rate<1?inTrainPhase(()=>{const d=Math.sqrt(this.rate/(1-this.rate));return a.mul(randomNormal$1(a.shape,1,d))},()=>a,o.training||!1):a})}}GaussianDropout.className="GaussianDropout";registerClass(GaussianDropout);class AlphaDropout extends Layer{constructor(s){super(s),this.supportsMasking=!0,this.rate=s.rate,this.noiseShape=s.noiseShape}_getNoiseShape(s){return this.noiseShape||getExactlyOneTensor(s).shape}computeOutputShape(s){return s}getConfig(){const s=super.getConfig(),o={rate:this.rate};return Object.assign(o,s),o}call(s,o){return tidy(()=>{if(this.rate<1&&this.rate>0){const a=this._getNoiseShape(s);return inTrainPhase(()=>{const d=getExactlyOneTensor(s),g=1.6732632423543772,b=1.0507009873554805,$=-g*b;let _=greaterEqual$2(randomUniform$1(a),this.rate);_=cast$2(_,"float32");const _e=((1-this.rate)*(1+this.rate*$**2))**-.5,et=-_e*$*this.rate;return d.mul(_).add(_.add(-1).mul($)).mul(_e).add(et)},()=>getExactlyOneTensor(s),o.training||!1)}return s})}}AlphaDropout.className="AlphaDropout";registerClass(AlphaDropout);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function batchNormalization$1(i,s,o,a,c,d=.001){let g;if(i.rank===2)g=batchNorm2d(i,s,o,a,c,d);else if(i.rank===3)g=batchNorm3d(i,s,o,a,c,d);else if(i.rank===4)g=batchNorm4d(i,s,o,a,c,d);else throw new NotImplementedError(`batchNormalization is not implemented for array of rank ${i.rank} yet`);return g}function regularNormalizeBatchInTraining(i,s,o,a,c=.001){return tidy(()=>{const d=moments(i,a),g=d.mean,b=d.variance;return[batchNormalization$1(i,g,b,o,s,c),g,b]})}function broadcastNormalizeBatchInTraining(i,s,o,a,c=.001){return tidy(()=>{const d=moments(i,a),g=d.mean,b=d.variance,$=[];for(const j of range$3(0,i.rank))a.indexOf(j)!==-1?$.push(1):$.push(i.shape[j]);const _=g.reshape($),_e=b.reshape($),et=s==null?null:s.reshape($),rt=o==null?null:o.reshape($);return[batchNormalization$1(i,_,_e,rt,et,c),g,b]})}function normalizeBatchInTraining(i,s,o,a,c=.001){return arraysEqual(a.slice().sort(),range$3(0,i.rank-1))?regularNormalizeBatchInTraining(i,s,o,a,c):broadcastNormalizeBatchInTraining(i,s,o,a,c)}class BatchNormalization extends Layer{constructor(s){s==null&&(s={}),super(s),this.supportsMasking=!0,this.axis=s.axis==null?-1:s.axis,this.momentum=s.momentum==null?.99:s.momentum,this.epsilon=s.epsilon==null?.001:s.epsilon,this.center=s.center==null?!0:s.center,this.scale=s.scale==null?!0:s.scale,this.betaInitializer=getInitializer(s.betaInitializer||"zeros"),this.gammaInitializer=getInitializer(s.gammaInitializer||"ones"),this.movingMeanInitializer=getInitializer(s.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=getInitializer(s.movingVarianceInitializer||"ones"),this.betaConstraint=getConstraint(s.betaConstraint),this.gammaConstraint=getConstraint(s.gammaConstraint),this.betaRegularizer=getRegularizer(s.betaRegularizer),this.gammaRegularizer=getRegularizer(s.gammaRegularizer)}build(s){s=getExactlyOneShape(s);const o=this.axis>=0?this.axis:this.axis+s.length,a=s[o];if(a==null)throw new ValueError(`Axis ${o} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(s)}.`);this.inputSpec=[new InputSpec({ndim:s.length,axes:{[o]:a}})];const c=[a];this.scale&&(this.gamma=this.addWeight("gamma",c,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",c,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",c,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",c,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(s,o){return tidy(()=>{const a=o.training==null?!1:o.training,c=getExactlyOneTensor(s),d=c.shape,g=d.length,b=range$3(0,g),$=this.axis>=0?this.axis:this.axis+g;b.splice($,1);const _=pyListRepeat(1,g);_[$]=d[$];const _e=b.slice();_e.sort();const et=!arraysEqual(_e,range$3(0,g).slice(0,g-1)),rt=()=>{if(et){const ut=this.movingMean.read().reshape(_),ht=this.movingVariance.read().reshape(_),pt=this.center?this.beta.read().reshape(_):null,it=this.scale?this.gamma.read().reshape(_):null;return batchNormalization$1(c,ut,ht,pt,it,this.epsilon)}else return batchNormalization$1(c,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!a)return rt();const[tt,j,nt]=normalizeBatchInTraining(c,this.gamma.read(),this.beta.read(),b,this.epsilon),st=(ut,ht,pt)=>{tidy(()=>{const it=1-pt,yt=ut.read(),ft=yt.sub(ht).mul(it);ut.write(yt.sub(ft))})};return(()=>{st(this.movingMean,j,this.momentum),st(this.movingVariance,nt,this.momentum)})(),tt})}getConfig(){const s={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:serializeInitializer(this.betaInitializer),gammaInitializer:serializeInitializer(this.gammaInitializer),movingMeanInitializer:serializeInitializer(this.movingMeanInitializer),movingVarianceInitializer:serializeInitializer(this.movingVarianceInitializer),betaRegularizer:serializeRegularizer(this.betaRegularizer),gammaRegularizer:serializeRegularizer(this.gammaRegularizer),betaConstraint:serializeConstraint(this.betaConstraint),gammaConstraint:serializeConstraint(this.gammaConstraint)},o=super.getConfig();return Object.assign(s,o),s}}BatchNormalization.className="BatchNormalization";registerClass(BatchNormalization);class LayerNormalization extends Layer{constructor(s){if(s==null&&(s={}),super(s),this.axis=s.axis==null?-1:s.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const o of this.axis)if(!Number.isInteger(o))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=s.epsilon==null?.001:s.epsilon,this.center=s.center==null?!0:s.center,this.scale=s.scale==null?!0:s.scale,this.betaInitializer=getInitializer(s.betaInitializer||"zeros"),this.gammaInitializer=getInitializer(s.gammaInitializer||"ones"),this.betaRegularizer=getRegularizer(s.betaRegularizer),this.gammaRegularizer=getRegularizer(s.gammaRegularizer),this.supportsMasking=!0}build(s){s=getExactlyOneShape(s);const o=s.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let d=0;d<this.axis.length;++d)this.axis[d]<0&&(this.axis[d]+=o);for(const d of this.axis)if(d<0||d>=o)throw new Error(`Invalid axis: ${d}`);if(this.axis.length!==unique$2(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const a=this.axis.map(d=>s[d]),c=!0;this.scale?this.gamma=this.addWeight("gamma",a,"float32",this.gammaInitializer,this.gammaRegularizer,c):this.gamma=null,this.center?this.beta=this.addWeight("beta",a,"float32",this.betaInitializer,this.betaRegularizer,c):this.beta=null,this.built=!0}call(s,o){const a=getExactlyOneTensor(s),c=a.shape,d=c.length;return tidy(()=>{let{mean:b,variance:$}=moments(a,this.axis,!0);const _=pyListRepeat(1,d);for(const nt of this.axis)_[nt]=c[nt];const _e=nt=>nt!=null&&nt.shape.length!==d&&this.axis!==[d-1]?nt.reshape(_):nt;let et=_e(this.gamma.read()),rt=_e(this.beta.read());const tt=[],j=[];for(let nt=0;nt<d;++nt)this.axis.indexOf(nt)!==-1?(tt.push(c[nt]),j.push(1)):(tt.push(1),j.push(c[nt]));return b=b.tile(tt),$=$.tile(tt),et=et.tile(j),rt=rt.tile(j),batchNormalization$1(a,b,$,rt,et,this.epsilon)})}getConfig(){const s={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:serializeInitializer(this.betaInitializer),gammaInitializer:serializeInitializer(this.gammaInitializer),betaRegularizer:serializeRegularizer(this.betaRegularizer),gammaRegularizer:serializeRegularizer(this.gammaRegularizer)},o=super.getConfig();return Object.assign(s,o),s}}LayerNormalization.className="LayerNormalization";registerClass(LayerNormalization);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function spatial2dPadding(i,s,o){return tidy(()=>{if(i.rank!==4)throw new ValueError(`temporalPadding expects input tensor to be 4-D, but received a ${i.rank}-D tensor.`);if(s==null&&(s=[[1,1],[1,1]]),s.length!==2||s[0].length!==2||s[1].length!==2)throw new ValueError("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(o==null&&(o=imageDataFormat()),o!=="channelsLast"&&o!=="channelsFirst")throw new ValueError(`Unknown data format: ${o}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let a;return o==="channelsFirst"?a=[[0,0],[0,0],s[0],s[1]]:a=[[0,0],s[0],s[1],[0,0]],pad(i,a)})}class ZeroPadding2D extends Layer{constructor(s){if(s==null&&(s={}),super(s),this.dataFormat=s.dataFormat==null?imageDataFormat():s.dataFormat,s.padding==null)this.padding=[[1,1],[1,1]];else if(typeof s.padding=="number")this.padding=[[s.padding,s.padding],[s.padding,s.padding]];else{if(s.padding=s.padding,s.padding.length!==2)throw new ValueError(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${s.padding.length} array.`);let o,a;if(typeof s.padding[0]=="number")o=[s.padding[0],s.padding[0]],a=[s.padding[1],s.padding[1]];else{if(s.padding=s.padding,s.padding[0].length!==2)throw new ValueError(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${s.padding[0].length} array.`);if(o=s.padding[0],s.padding[1].length!==2)throw new ValueError(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${s.padding[1].length} array.`);a=s.padding[1]}this.padding=[o,a]}this.inputSpec=[new InputSpec({ndim:4})]}computeOutputShape(s){s=getExactlyOneShape(s);let o,a;return this.dataFormat==="channelsFirst"?(s[2]!=null&&s[2]>=0?o=s[2]+this.padding[0][0]+this.padding[0][1]:o=null,s[3]!=null&&s[3]>=0?a=s[3]+this.padding[1][0]+this.padding[1][1]:a=null,[s[0],s[1],o,a]):(s[1]!=null&&s[1]>=0?o=s[1]+this.padding[0][0]+this.padding[0][1]:o=null,s[2]!=null&&s[2]>=0?a=s[2]+this.padding[1][0]+this.padding[1][1]:a=null,[s[0],o,a,s[3]])}call(s,o){return tidy(()=>spatial2dPadding(getExactlyOneTensor(s),this.padding,this.dataFormat))}getConfig(){const s={padding:this.padding,dataFormat:this.dataFormat},o=super.getConfig();return Object.assign(s,o),s}}ZeroPadding2D.className="ZeroPadding2D";registerClass(ZeroPadding2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pool2d(i,s,o,a,c,d){return tidy(()=>{checkDataFormat(c),checkPoolMode(d),checkPaddingMode(a),o==null&&(o=[1,1]),a==null&&(a="valid"),c==null&&(c=imageDataFormat()),d==null&&(d="max"),i=preprocessConv2DInput(i,c);let g;const b=a==="same"?"same":"valid";return d==="max"?g=maxPool$2(i,s,o,b):g=avgPool$2(i,s,o,b),c==="channelsFirst"&&(g=transpose$2(g,[0,3,1,2])),g})}function pool3d$1(i,s,o,a,c,d){return tidy(()=>{checkDataFormat(c),checkPoolMode(d),checkPaddingMode(a),o==null&&(o=[1,1,1]),a==null&&(a="valid"),c==null&&(c=imageDataFormat()),d==null&&(d="max"),i=preprocessConv3DInput(i,c);let g;const b=a==="same"?"same":"valid";return d==="max"?g=maxPool3d$1(i,s,o,b):g=avgPool3d$1(i,s,o,b),c==="channelsFirst"&&(g=transpose$2(g,[0,4,1,2,3])),g})}class Pooling1D extends Layer{constructor(s){if(s.poolSize==null&&(s.poolSize=2),super(s),typeof s.poolSize=="number")this.poolSize=[s.poolSize];else if(Array.isArray(s.poolSize)&&s.poolSize.length===1&&typeof s.poolSize[0]=="number")this.poolSize=s.poolSize;else throw new ValueError(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(s.poolSize)}`);if(assertPositiveInteger(this.poolSize,"poolSize"),s.strides==null)this.strides=this.poolSize;else if(typeof s.strides=="number")this.strides=[s.strides];else if(Array.isArray(s.strides)&&s.strides.length===1&&typeof s.strides[0]=="number")this.strides=s.strides;else throw new ValueError(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(s.strides)}`);assertPositiveInteger(this.strides,"strides"),this.padding=s.padding==null?"valid":s.padding,checkPaddingMode(this.padding),this.inputSpec=[new InputSpec({ndim:3})]}computeOutputShape(s){s=getExactlyOneShape(s);const o=convOutputLength(s[1],this.poolSize[0],this.padding,this.strides[0]);return[s[0],o,s[2]]}call(s,o){return tidy(()=>{this.invokeCallHook(s,o),s=expandDims$2(getExactlyOneTensor(s),2);const a=this.poolingFunction(getExactlyOneTensor(s),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return squeeze(a,[2])})}getConfig(){const s={poolSize:this.poolSize,padding:this.padding,strides:this.strides},o=super.getConfig();return Object.assign(s,o),s}}class MaxPooling1D extends Pooling1D{constructor(s){super(s)}poolingFunction(s,o,a,c,d){return checkDataFormat(d),checkPaddingMode(c),pool2d(s,o,a,c,d,"max")}}MaxPooling1D.className="MaxPooling1D";registerClass(MaxPooling1D);class AveragePooling1D extends Pooling1D{constructor(s){super(s)}poolingFunction(s,o,a,c,d){return checkDataFormat(d),checkPaddingMode(c),pool2d(s,o,a,c,d,"avg")}}AveragePooling1D.className="AveragePooling1D";registerClass(AveragePooling1D);class Pooling2D extends Layer{constructor(s){if(s.poolSize==null&&(s.poolSize=[2,2]),super(s),this.poolSize=Array.isArray(s.poolSize)?s.poolSize:[s.poolSize,s.poolSize],s.strides==null)this.strides=this.poolSize;else if(Array.isArray(s.strides)){if(s.strides.length!==2)throw new ValueError(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${s.strides.length}.`);this.strides=s.strides}else this.strides=[s.strides,s.strides];assertPositiveInteger(this.poolSize,"poolSize"),assertPositiveInteger(this.strides,"strides"),this.padding=s.padding==null?"valid":s.padding,this.dataFormat=s.dataFormat==null?"channelsLast":s.dataFormat,checkDataFormat(this.dataFormat),checkPaddingMode(this.padding),this.inputSpec=[new InputSpec({ndim:4})]}computeOutputShape(s){s=getExactlyOneShape(s);let o=this.dataFormat==="channelsFirst"?s[2]:s[1],a=this.dataFormat==="channelsFirst"?s[3]:s[2];return o=convOutputLength(o,this.poolSize[0],this.padding,this.strides[0]),a=convOutputLength(a,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[s[0],s[1],o,a]:[s[0],o,a,s[3]]}call(s,o){return tidy(()=>(this.invokeCallHook(s,o),this.poolingFunction(getExactlyOneTensor(s),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const s={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},o=super.getConfig();return Object.assign(s,o),s}}class MaxPooling2D extends Pooling2D{constructor(s){super(s)}poolingFunction(s,o,a,c,d){return checkDataFormat(d),checkPaddingMode(c),pool2d(s,o,a,c,d,"max")}}MaxPooling2D.className="MaxPooling2D";registerClass(MaxPooling2D);class AveragePooling2D extends Pooling2D{constructor(s){super(s)}poolingFunction(s,o,a,c,d){return checkDataFormat(d),checkPaddingMode(c),pool2d(s,o,a,c,d,"avg")}}AveragePooling2D.className="AveragePooling2D";registerClass(AveragePooling2D);class Pooling3D extends Layer{constructor(s){if(s.poolSize==null&&(s.poolSize=[2,2,2]),super(s),this.poolSize=Array.isArray(s.poolSize)?s.poolSize:[s.poolSize,s.poolSize,s.poolSize],s.strides==null)this.strides=this.poolSize;else if(Array.isArray(s.strides)){if(s.strides.length!==3)throw new ValueError(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${s.strides.length}.`);this.strides=s.strides}else this.strides=[s.strides,s.strides,s.strides];assertPositiveInteger(this.poolSize,"poolSize"),assertPositiveInteger(this.strides,"strides"),this.padding=s.padding==null?"valid":s.padding,this.dataFormat=s.dataFormat==null?"channelsLast":s.dataFormat,checkDataFormat(this.dataFormat),checkPaddingMode(this.padding),this.inputSpec=[new InputSpec({ndim:5})]}computeOutputShape(s){s=getExactlyOneShape(s);let o=this.dataFormat==="channelsFirst"?s[2]:s[1],a=this.dataFormat==="channelsFirst"?s[3]:s[2],c=this.dataFormat==="channelsFirst"?s[4]:s[3];return o=convOutputLength(o,this.poolSize[0],this.padding,this.strides[0]),a=convOutputLength(a,this.poolSize[1],this.padding,this.strides[1]),c=convOutputLength(c,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[s[0],s[1],o,a,c]:[s[0],o,a,c,s[4]]}call(s,o){return tidy(()=>(this.invokeCallHook(s,o),this.poolingFunction(getExactlyOneTensor(s),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const s={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},o=super.getConfig();return Object.assign(s,o),s}}class MaxPooling3D extends Pooling3D{constructor(s){super(s)}poolingFunction(s,o,a,c,d){return checkDataFormat(d),checkPaddingMode(c),pool3d$1(s,o,a,c,d,"max")}}MaxPooling3D.className="MaxPooling3D";registerClass(MaxPooling3D);class AveragePooling3D extends Pooling3D{constructor(s){super(s)}poolingFunction(s,o,a,c,d){return checkDataFormat(d),checkPaddingMode(c),pool3d$1(s,o,a,c,d,"avg")}}AveragePooling3D.className="AveragePooling3D";registerClass(AveragePooling3D);class GlobalPooling1D extends Layer{constructor(s){super(s),this.inputSpec=[new InputSpec({ndim:3})]}computeOutputShape(s){return[s[0],s[2]]}call(s,o){throw new NotImplementedError}}class GlobalAveragePooling1D extends GlobalPooling1D{constructor(s){super(s||{})}call(s,o){return tidy(()=>{const a=getExactlyOneTensor(s);return mean$1(a,1)})}}GlobalAveragePooling1D.className="GlobalAveragePooling1D";registerClass(GlobalAveragePooling1D);class GlobalMaxPooling1D extends GlobalPooling1D{constructor(s){super(s||{})}call(s,o){return tidy(()=>{const a=getExactlyOneTensor(s);return max$3(a,1)})}}GlobalMaxPooling1D.className="GlobalMaxPooling1D";registerClass(GlobalMaxPooling1D);class GlobalPooling2D extends Layer{constructor(s){super(s),this.dataFormat=s.dataFormat==null?"channelsLast":s.dataFormat,checkDataFormat(this.dataFormat),this.inputSpec=[new InputSpec({ndim:4})]}computeOutputShape(s){return s=s,this.dataFormat==="channelsLast"?[s[0],s[3]]:[s[0],s[1]]}call(s,o){throw new NotImplementedError}getConfig(){const s={dataFormat:this.dataFormat},o=super.getConfig();return Object.assign(s,o),s}}class GlobalAveragePooling2D extends GlobalPooling2D{call(s,o){return tidy(()=>{const a=getExactlyOneTensor(s);return this.dataFormat==="channelsLast"?mean$1(a,[1,2]):mean$1(a,[2,3])})}}GlobalAveragePooling2D.className="GlobalAveragePooling2D";registerClass(GlobalAveragePooling2D);class GlobalMaxPooling2D extends GlobalPooling2D{call(s,o){return tidy(()=>{const a=getExactlyOneTensor(s);return this.dataFormat==="channelsLast"?max$3(a,[1,2]):max$3(a,[2,3])})}}GlobalMaxPooling2D.className="GlobalMaxPooling2D";registerClass(GlobalMaxPooling2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Wrapper extends Layer{constructor(s){super(s),this.layer=s.layer}build(s){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(s){this.layer!=null&&(this.layer.trainable=s)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(s){this.layer.setWeights(s)}getConfig(){const s={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},o=super.getConfig();return Object.assign(s,o),s}setFastWeightInitDuringBuild(s){super.setFastWeightInitDuringBuild(s),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(s)}static fromConfig(s,o,a={}){const c=o.layer,d=deserialize(c,a);delete o.layer;const g={layer:d};return Object.assign(g,o),new s(g)}}class TimeDistributed extends Wrapper{constructor(s){super(s),this.supportsMasking=!0}build(s){if(s=getExactlyOneShape(s),s.length<3)throw new ValueError(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(s)}`);this.inputSpec=[{shape:s}];const o=[s[0]].concat(s.slice(2));this.layer.built||(this.layer.build(o),this.layer.built=!0),super.build(s)}computeOutputShape(s){s=getExactlyOneShape(s);const o=[s[0]].concat(s.slice(2)),a=this.layer.computeOutputShape(o),c=s[1];return[a[0],c].concat(a.slice(1))}call(s,o){return tidy(()=>(s=getExactlyOneTensor(s),rnn$1((g,b)=>[getExactlyOneTensor(this.layer.call(g,o)),[]],s,[],!1,null,null,!1,!0)[1]))}}TimeDistributed.className="TimeDistributed";registerClass(TimeDistributed);function checkBidirectionalMergeMode(i){checkStringTypeUnionValue(VALID_BIDIRECTIONAL_MERGE_MODES,"BidirectionalMergeMode",i)}const DEFAULT_BIDIRECTIONAL_MERGE_MODE="concat";class Bidirectional extends Wrapper{constructor(s){super(s);const o=s.layer.getConfig(),a={};a.className=s.layer.getClassName(),a.config=o,this.forwardLayer=deserialize(a),o.goBackwards=o.goBackwards!==!0;const c={};if(c.className=s.layer.getClassName(),c.config=o,this.backwardLayer=deserialize(c),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=s.mergeMode===void 0?DEFAULT_BIDIRECTIONAL_MERGE_MODE:s.mergeMode,checkBidirectionalMergeMode(this.mergeMode),s.weights)throw new NotImplementedError("weights support is not implemented for Bidirectional layer yet.");this._stateful=s.layer.stateful,this.returnSequences=s.layer.returnSequences,this.returnState=s.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=s.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(s){this._trainable=s,this.forwardLayer!=null&&(this.forwardLayer.trainable=s),this.backwardLayer!=null&&(this.backwardLayer.trainable=s)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(s){const o=s.length,a=Math.floor(o/2);this.forwardLayer.setWeights(s.slice(0,a)),this.backwardLayer.setWeights(s.slice(a))}computeOutputShape(s){let o=this.forwardLayer.computeOutputShape(s);Array.isArray(o)&&Array.isArray(o[0])||(o=[o]),o=o;let a,c,d;return this.returnState&&(d=o.slice(1)),a=o[0],a=a,this.mergeMode==="concat"?(a[a.length-1]*=2,c=[a]):this.mergeMode==null?c=[a,a.slice()]:c=[a],this.returnState?this.mergeMode==null?c.concat(d).concat(d.slice()):[a].concat(d).concat(d.slice()):singletonOrArray(c)}apply(s,o){let a=o==null?null:o.initialState,c=o==null?null:o.constants;o==null&&(o={});const d=standardizeArgs(s,a,c,this.numConstants);if(s=d.inputs,a=d.initialState,c=d.constants,Array.isArray(s)&&(a=s.slice(1),s=s[0]),(a==null||a.length===0)&&c==null)return super.apply(s,o);const g=[],b=[];if(a!=null){const _=a.length;if(_%2>0)throw new ValueError("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");o.initialState=a,g.push(...a);const _e=a.map(et=>new InputSpec({shape:et.shape}));this.forwardLayer.stateSpec=_e.slice(0,_/2),this.backwardLayer.stateSpec=_e.slice(_/2),b.push(..._e)}if(c!=null)throw new NotImplementedError("Support for constants in Bidirectional layers is not implemented yet.");const $=g[0]instanceof SymbolicTensor;for(const _ of g)if(_ instanceof SymbolicTensor!==$)throw new ValueError("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if($){const _=[s].concat(g),_e=this.inputSpec.concat(b),et=this.inputSpec;this.inputSpec=_e;const rt=super.apply(_,o);return this.inputSpec=et,rt}else return super.apply(s,o)}call(s,o){return tidy(()=>{const a=o.initialState;let c,d;if(a==null)c=this.forwardLayer.call(s,o),d=this.backwardLayer.call(s,o);else{const $=a.slice(0,a.length/2),_=a.slice(a.length/2);c=this.forwardLayer.call(s,Object.assign(o,{initialState:$})),d=this.backwardLayer.call(s,Object.assign(o,{initialState:_}))}let g;this.returnState&&(Array.isArray(c)&&(g=c.slice(1).concat(d.slice(1))),c=c[0],d=d[0]),this.returnSequences&&(d=reverse$2(d,1));let b;return this.mergeMode==="concat"?b=concatenate$1([c,d]):this.mergeMode==="sum"?b=add$2(c,d):this.mergeMode==="ave"?b=mul(.5,add$2(c,d)):this.mergeMode==="mul"?b=mul(c,d):this.mergeMode==null&&(b=[c,d]),this.returnState?this.mergeMode==null?b.concat(g):[b].concat(g):b})}resetStates(s){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(s){nameScope(this.forwardLayer.name,()=>{this.forwardLayer.build(s)}),nameScope(this.backwardLayer.name,()=>{this.backwardLayer.build(s)}),this.built=!0}computeMask(s,o){Array.isArray(o)&&(o=o[0]);let a;if(this.returnSequences?this.mergeMode==null?a=[o,o]:a=o:this.mergeMode==null?a=[null,null]:a=null,this.returnState){const d=this.forwardLayer.states.map(g=>null);return Array.isArray(a)?a.concat(d).concat(d):[a].concat(d).concat(d)}else return a}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(s){super.setFastWeightInitDuringBuild(s),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(s),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(s)}getConfig(){const s={mergeMode:this.mergeMode},o=super.getConfig();return Object.assign(s,o),s}static fromConfig(s,o){const a=deserialize(o.layer);if(delete o.layer,o.numConstants!=null)throw new NotImplementedError("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const c=o;return c.layer=a,new s(c)}}Bidirectional.className="Bidirectional";registerClass(Bidirectional);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function inputLayer(i){return new InputLayer(i)}function elu$2(i){return new ELU$3(i)}function reLU(i){return new ReLU(i)}function leakyReLU(i){return new LeakyReLU(i)}function prelu$2(i){return new PReLU(i)}function softmax$2(i){return new Softmax(i)}function thresholdedReLU(i){return new ThresholdedReLU(i)}function conv1d(i){return new Conv1D(i)}function conv2d$1(i){return new Conv2D(i)}function conv2dTranspose(i){return new Conv2DTranspose(i)}function conv3d(i){return new Conv3D(i)}function separableConv2d(i){return new SeparableConv2D(i)}function cropping2D(i){return new Cropping2D(i)}function upSampling2d(i){return new UpSampling2D(i)}function depthwiseConv2d(i){return new DepthwiseConv2D(i)}function activation(i){return new Activation(i)}function dense(i){return new Dense(i)}function dropout(i){return new Dropout(i)}function spatialDropout1d(i){return new SpatialDropout1D(i)}function flatten(i){return new Flatten(i)}function repeatVector(i){return new RepeatVector(i)}function reshape$2(i){return new Reshape(i)}function permute(i){return new Permute(i)}function embedding(i){return new Embedding(i)}function add$1(i){return new Add$1(i)}function average(i){return new Average(i)}function concatenate(i){return new Concatenate(i)}function maximum$2(i){return new Maximum(i)}function minimum$2(i){return new Minimum(i)}function multiply$3(i){return new Multiply$1(i)}function dot(i){return new Dot(i)}function batchNormalization(i){return new BatchNormalization(i)}function layerNormalization(i){return new LayerNormalization(i)}function zeroPadding2d(i){return new ZeroPadding2D(i)}function averagePooling1d(i){return new AveragePooling1D(i)}function avgPool1d(i){return averagePooling1d(i)}function avgPooling1d(i){return averagePooling1d(i)}function averagePooling2d(i){return new AveragePooling2D(i)}function avgPool2d(i){return averagePooling2d(i)}function avgPooling2d(i){return averagePooling2d(i)}function averagePooling3d(i){return new AveragePooling3D(i)}function avgPool3d(i){return averagePooling3d(i)}function avgPooling3d(i){return averagePooling3d(i)}function globalAveragePooling1d(i){return new GlobalAveragePooling1D(i)}function globalAveragePooling2d(i){return new GlobalAveragePooling2D(i)}function globalMaxPooling1d(i){return new GlobalMaxPooling1D(i)}function globalMaxPooling2d(i){return new GlobalMaxPooling2D(i)}function maxPooling1d(i){return new MaxPooling1D(i)}function maxPooling2d(i){return new MaxPooling2D(i)}function maxPooling3d(i){return new MaxPooling3D(i)}function gru(i){return new GRU(i)}function gruCell(i){return new GRUCell(i)}function lstm(i){return new LSTM(i)}function lstmCell(i){return new LSTMCell(i)}function simpleRNN(i){return new SimpleRNN(i)}function simpleRNNCell(i){return new SimpleRNNCell(i)}function convLstm2d(i){return new ConvLSTM2D(i)}function convLstm2dCell(i){return new ConvLSTM2DCell(i)}function rnn(i){return new RNN(i)}function stackedRNNCells(i){return new StackedRNNCells(i)}function bidirectional(i){return new Bidirectional(i)}function timeDistributed(i){return new TimeDistributed(i)}const globalMaxPool1d=globalMaxPooling1d,globalMaxPool2d=globalMaxPooling2d,maxPool1d=maxPooling1d,maxPool2d=maxPooling2d;function gaussianNoise(i){return new GaussianNoise(i)}function gaussianDropout(i){return new GaussianDropout(i)}function alphaDropout(i){return new AlphaDropout(i)}function masking(i){return new Masking(i)}const exports_layers=Object.freeze(Object.defineProperty({__proto__:null,Layer,RNN,RNNCell,activation,add:add$1,alphaDropout,average,averagePooling1d,averagePooling2d,averagePooling3d,avgPool1d,avgPool2d,avgPool3d,avgPooling1d,avgPooling2d,avgPooling3d,batchNormalization,bidirectional,concatenate,conv1d,conv2d:conv2d$1,conv2dTranspose,conv3d,convLstm2d,convLstm2dCell,cropping2D,dense,depthwiseConv2d,dot,dropout,elu:elu$2,embedding,flatten,gaussianDropout,gaussianNoise,globalAveragePooling1d,globalAveragePooling2d,globalMaxPool1d,globalMaxPool2d,globalMaxPooling1d,globalMaxPooling2d,gru,gruCell,input,inputLayer,layerNormalization,leakyReLU,lstm,lstmCell,masking,maxPool1d,maxPool2d,maxPooling1d,maxPooling2d,maxPooling3d,maximum:maximum$2,minimum:minimum$2,multiply:multiply$3,permute,prelu:prelu$2,reLU,repeatVector,reshape:reshape$2,rnn,separableConv2d,simpleRNN,simpleRNNCell,softmax:softmax$2,spatialDropout1d,stackedRNNCells,thresholdedReLU,timeDistributed,upSampling2d,zeroPadding2d},Symbol.toStringTag,{value:"Module"}));function binaryAccuracy(i,s){return binaryAccuracy$1(i,s)}function binaryCrossentropy(i,s){return binaryCrossentropy$1(i,s)}function sparseCategoricalAccuracy(i,s){return sparseCategoricalAccuracy$1(i,s)}function categoricalAccuracy(i,s){return categoricalAccuracy$1(i,s)}function categoricalCrossentropy(i,s){return categoricalCrossentropy$1(i,s)}function precision(i,s){return precision$1(i,s)}function recall(i,s){return recall$1(i,s)}function cosineProximity(i,s){return cosineProximity$1(i,s)}function meanAbsoluteError(i,s){return meanAbsoluteError$1(i,s)}function meanAbsolutePercentageError(i,s){return meanAbsolutePercentageError$1(i,s)}function MAPE(i,s){return meanAbsolutePercentageError$1(i,s)}function mape(i,s){return meanAbsolutePercentageError$1(i,s)}function meanSquaredError(i,s){return meanSquaredError$1(i,s)}function MSE(i,s){return meanSquaredError$1(i,s)}function mse(i,s){return meanSquaredError$1(i,s)}const exports_metrics=Object.freeze(Object.defineProperty({__proto__:null,MAPE,MSE,binaryAccuracy,binaryCrossentropy,categoricalAccuracy,categoricalCrossentropy,cosineProximity,mape,meanAbsoluteError,meanAbsolutePercentageError,meanSquaredError,mse,precision,recall,sparseCategoricalAccuracy},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const exports_models=Object.freeze(Object.defineProperty({__proto__:null,modelFromJSON},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function l1l2(i){return new L1L2(i)}function l1(i){return l1$1(i)}function l2(i){return l2$1(i)}const exports_regularizers=Object.freeze(Object.defineProperty({__proto__:null,l1,l1l2,l2},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Callback extends BaseCallback{constructor(){super(...arguments),this.model=null}setModel(s){if(!(s instanceof LayersModel))throw new Error("model must be a LayersModel, not some other Container");this.model=s}}function less$2(i,s){return i<s}function greater$2(i,s){return i>s}class EarlyStopping extends Callback{constructor(s){if(super(),s==null&&(s={}),s.restoreBestWeights)throw new NotImplementedError("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=s.monitor||"val_loss",this.minDelta=Math.abs(s.minDelta||0),this.patience=s.patience||0,this.verbose=s.verbose||0,this.mode=s.mode||"auto",this.baseline=s.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=less$2:this.mode==="max"?this.monitorFunc=greater$2:this.monitor.indexOf("acc")!==-1?this.monitorFunc=greater$2:this.monitorFunc=less$2,this.monitorFunc===less$2&&(this.minDelta*=-1)}async onTrainBegin(s){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===less$2?1/0:-1/0}async onEpochEnd(s,o){await resolveScalarsInLogs(o);const a=this.getMonitorValue(o);a!=null&&(this.monitorFunc(a-this.minDelta,this.best)?(this.best=a,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=s,this.model.stopTraining=!0)))}async onTrainEnd(s){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(s){s==null&&(s={});const o=s[this.monitor];return o==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(s)}`),o}}function earlyStopping(i){return new EarlyStopping(i)}const callbacks={earlyStopping};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var DataType;(function(i){i[i.DT_INVALID=0]="DT_INVALID",i[i.DT_FLOAT=1]="DT_FLOAT",i[i.DT_DOUBLE=2]="DT_DOUBLE",i[i.DT_INT32=3]="DT_INT32",i[i.DT_UINT8=4]="DT_UINT8",i[i.DT_INT16=5]="DT_INT16",i[i.DT_INT8=6]="DT_INT8",i[i.DT_STRING=7]="DT_STRING",i[i.DT_COMPLEX64=8]="DT_COMPLEX64",i[i.DT_INT64=9]="DT_INT64",i[i.DT_BOOL=10]="DT_BOOL",i[i.DT_QINT8=11]="DT_QINT8",i[i.DT_QUINT8=12]="DT_QUINT8",i[i.DT_QINT32=13]="DT_QINT32",i[i.DT_BFLOAT16=14]="DT_BFLOAT16",i[i.DT_FLOAT_REF=101]="DT_FLOAT_REF",i[i.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",i[i.DT_INT32_REF=103]="DT_INT32_REF",i[i.DT_UINT8_REF=104]="DT_UINT8_REF",i[i.DT_INT16_REF=105]="DT_INT16_REF",i[i.DT_INT8_REF=106]="DT_INT8_REF",i[i.DT_STRING_REF=107]="DT_STRING_REF",i[i.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",i[i.DT_INT64_REF=109]="DT_INT64_REF",i[i.DT_BOOL_REF=110]="DT_BOOL_REF",i[i.DT_QINT8_REF=111]="DT_QINT8_REF",i[i.DT_QUINT8_REF=112]="DT_QUINT8_REF",i[i.DT_QINT32_REF=113]="DT_QINT32_REF",i[i.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"})(DataType||(DataType={}));var SaverDef;(function(i){(function(s){s[s.LEGACY=0]="LEGACY",s[s.V1=1]="V1",s[s.V2=2]="V2"})(i.CheckpointFormatVersion||(i.CheckpointFormatVersion={}))})(SaverDef||(SaverDef={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CUSTOM_OPS={};function registerOp(i,s){const o={tfOpName:i,category:"custom",inputs:[],attrs:[],customExecutor:s};CUSTOM_OPS[i]=o}function getRegisteredOp(i){return CUSTOM_OPS[i]}function deregisterOp(i){delete CUSTOM_OPS[i]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getParamValue(i,s,o,a,c){const d=s.inputParams[i];if(d&&d.inputIndexStart!==void 0){const b=d.inputIndexStart,$=d.inputIndexEnd===0?void 0:d.inputIndexEnd===void 0?b+1:d.inputIndexEnd;if(d.type==="tensor")return getTensor(s.inputNames[d.inputIndexStart],o,a,c);if(d.type==="tensors")return s.inputNames.slice(b,$).map(rt=>getTensor(rt,o,a,c));const _=getTensor(s.inputNames.slice(b)[0],o,a,c),_e=_.dataSync();return d.type==="number"?_e[0]:toNestedArray(_.shape,_e)}const g=s.attrParams[i];return g&&g.value}function getTensor(i,s,o,a){const[c,d]=parseNodeName(i);if(a!=null){const b=a.getHashTableHandleByName(c);if(b!=null)return b}const g=o.currentContextIds.find(b=>!!s[getNodeNameWithContextId(c,b)]);return g!==void 0?s[getNodeNameWithContextId(c,g)][d]:void 0}function getTensorsForCurrentContenxt(i,s,o){return s[getNodeNameWithContextId(i,o.currentContextId)]}function getNodeNameAndIndex(i,s){const[o,a]=parseNodeName(i);return[getNodeNameWithContextId(o,s&&s.currentContextId),a]}function getNodeNameWithContextId(i,s){return s?`${i}-${s}`:i}function parseNodeName(i){const s=i.split(":");return s.length===1?[i,0]:[s[0],Number(s[s.length-1])]}function getPadding(i,s,o){let a=getParamValue("pad",i,s,o);if(a==="explicit"){a=getParamValue("explicitPaddings",i,s,o);const c=[[0,0],[0,0],[0,0],[0,0]];for(let d=0;d<4;d++)c[d][0]=a[d*2],c[d][1]=a[d*2+1];return c}return a}function cloneTensor(i){return i.kept?i:clone(i)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$g=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],arithmetic=Object.freeze(Object.defineProperty({__proto__:null,json:json$g},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$f=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],basicMath=Object.freeze(Object.defineProperty({__proto__:null,json:json$f},Symbol.toStringTag,{value:"Module"})),json$e=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],control=Object.freeze(Object.defineProperty({__proto__:null,json:json$e},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$d=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],convolution=Object.freeze(Object.defineProperty({__proto__:null,json:json$d},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$c=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],creation=Object.freeze(Object.defineProperty({__proto__:null,json:json$c},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$b=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],dynamic=Object.freeze(Object.defineProperty({__proto__:null,json:json$b},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$a=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],evaluation=Object.freeze(Object.defineProperty({__proto__:null,json:json$a},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$9=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],graph=Object.freeze(Object.defineProperty({__proto__:null,json:json$9},Symbol.toStringTag,{value:"Module"})),json$8=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}],hashTable=Object.freeze(Object.defineProperty({__proto__:null,json:json$8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$7=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],image=Object.freeze(Object.defineProperty({__proto__:null,json:json$7},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$6=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],logical=Object.freeze(Object.defineProperty({__proto__:null,json:json$6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$5=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],matrices=Object.freeze(Object.defineProperty({__proto__:null,json:json$5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$4=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],normalization=Object.freeze(Object.defineProperty({__proto__:null,json:json$4},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$3=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],reduction=Object.freeze(Object.defineProperty({__proto__:null,json:json$3},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$2=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],sliceJoin=Object.freeze(Object.defineProperty({__proto__:null,json:json$2},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$1=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],spectral=Object.freeze(Object.defineProperty({__proto__:null,json:json$1},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}],transformation=Object.freeze(Object.defineProperty({__proto__:null,json},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OperationMapper{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const s=[arithmetic,basicMath,control,convolution,creation,dynamic,evaluation,logical,image,graph,matrices,normalization,reduction,sliceJoin,spectral,transformation,hashTable],o=[].concat(...s.map(a=>a.json));this.opMappers=o.reduce((a,c)=>(a[c.tfOpName]=c,a),{})}transformGraph(s,o={}){const a=s.node,c=[],d=[],g=[],b=a.reduce((nt,st)=>(nt[st.name]=this.mapNode(st),st.op.startsWith("Placeholder")?c.push(nt[st.name]):st.op==="Const"?d.push(nt[st.name]):(st.input==null||st.input.length===0)&&g.push(nt[st.name]),nt),{});let $=[];const _=[];let _e={},et={};o!=null&&(_e=this.mapSignatureEntries(o.inputs),et=this.mapSignatureEntries(o.outputs));const rt=Object.keys(b);rt.forEach(nt=>{const st=b[nt];st.inputNames.forEach(ot=>{const[ut]=getNodeNameAndIndex(ot);st.inputs.push(b[ut]),b[ut].children.push(st)})}),Object.keys(et).length===0?rt.forEach(nt=>{const st=b[nt];st.children.length===0&&_.push(st)}):Object.keys(et).forEach(nt=>{const[st]=getNodeNameAndIndex(nt),ot=b[st];ot!=null&&(ot.signatureKey=et[nt],_.push(ot))}),Object.keys(_e).length>0?Object.keys(_e).forEach(nt=>{const[st]=getNodeNameAndIndex(nt),ot=b[st];ot&&(ot.signatureKey=_e[nt],$.push(ot))}):$=c;let tt={};s.library!=null&&s.library.function!=null&&(tt=s.library.function.reduce((nt,st)=>(nt[st.signature.name]=this.mapFunction(st),nt),{}));const j={nodes:b,inputs:$,outputs:_,weights:d,placeholders:c,signature:o,functions:tt};return g.length>0&&(j.initNodes=g),j}mapSignatureEntries(s){return Object.keys(s||{}).reduce((o,a)=>(o[s[a].name]=a,o),{})}mapNode(s){const o=getRegisteredOp(s.op)||this.opMappers[s.op]||{};s.attr==null&&(s.attr={});const a={name:s.name,op:s.op,category:o.category,inputNames:(s.input||[]).map(c=>c.startsWith("^")?c.substr(1):c),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:s.attr};return o.inputs!=null&&(a.inputParams=o.inputs.reduce((c,d)=>(c[d.name]={type:d.type,inputIndexStart:d.start,inputIndexEnd:d.end},c),{})),o.attrs!=null&&(a.attrParams=o.attrs.reduce((c,d)=>{const g=d.type;let b;switch(d.type){case"string":b=getStringParam(s.attr,d.tfName,d.defaultValue),b===void 0&&d.tfDeprecatedName&&(b=getStringParam(s.attr,d.tfDeprecatedName,d.defaultValue));break;case"string[]":b=getStringArrayParam(s.attr,d.tfName,d.defaultValue),b===void 0&&d.tfDeprecatedName&&(b=getStringArrayParam(s.attr,d.tfDeprecatedName,d.defaultValue));break;case"number":b=getNumberParam(s.attr,d.tfName,d.defaultValue||0),b===void 0&&d.tfDeprecatedName&&(b=getNumberParam(s.attr,d.tfDeprecatedName,d.defaultValue));break;case"number[]":b=getNumericArrayParam(s.attr,d.tfName,d.defaultValue),b===void 0&&d.tfDeprecatedName&&(b=getNumericArrayParam(s.attr,d.tfDeprecatedName,d.defaultValue));break;case"bool":b=getBoolParam(s.attr,d.tfName,d.defaultValue),b===void 0&&d.tfDeprecatedName&&(b=getBoolParam(s.attr,d.tfDeprecatedName,d.defaultValue));break;case"bool[]":b=getBoolArrayParam(s.attr,d.tfName,d.defaultValue),b===void 0&&d.tfDeprecatedName&&(b=getBoolArrayParam(s.attr,d.tfDeprecatedName,d.defaultValue));break;case"shape":b=getTensorShapeParam(s.attr,d.tfName,d.defaultValue),b===void 0&&d.tfDeprecatedName&&(b=getTensorShapeParam(s.attr,d.tfDeprecatedName,d.defaultValue));break;case"shape[]":b=getTensorShapeArrayParam(s.attr,d.tfName,d.defaultValue),b===void 0&&d.tfDeprecatedName&&(b=getTensorShapeArrayParam(s.attr,d.tfDeprecatedName,d.defaultValue));break;case"dtype":b=getDtypeParam(s.attr,d.tfName,d.defaultValue),b===void 0&&d.tfDeprecatedName&&(b=getDtypeParam(s.attr,d.tfDeprecatedName,d.defaultValue));break;case"dtype[]":b=getDtypeArrayParam(s.attr,d.tfName,d.defaultValue),b===void 0&&d.tfDeprecatedName&&(b=getDtypeArrayParam(s.attr,d.tfDeprecatedName,d.defaultValue));break;case"func":b=getFuncParam(s.attr,d.tfName,d.defaultValue),b===void 0&&d.tfDeprecatedName&&(b=getFuncParam(s.attr,d.tfDeprecatedName,d.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${d.type} for op: ${s.op}`)}return c[d.name]={value:b,type:g},c},{})),a}mapFunction(s){const o=s.nodeDef,a=[],c=[];let d={};o!=null&&(d=o.reduce((et,rt)=>(et[rt.name]=this.mapNode(rt),rt.op==="Const"&&c.push(et[rt.name]),et),{}));const g=[],b=[];s.signature.inputArg.forEach(et=>{const[rt]=getNodeNameAndIndex(et.name),tt={name:rt,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:parseDtypeParam(et.type),type:"dtype"}},children:[]};tt.signatureKey=et.name,g.push(tt),d[rt]=tt}),Object.keys(d).forEach(et=>{const rt=d[et];rt.inputNames.forEach(tt=>{const[j]=getNodeNameAndIndex(tt);rt.inputs.push(d[j]),d[j].children.push(rt)})});const _=s.ret;s.signature.outputArg.forEach(et=>{const[rt,tt]=getNodeNameAndIndex(_[et.name]),j=d[rt];j!=null&&(j.defaultOutput=tt,b.push(j))});const _e=this.mapArgsToSignature(s);return{nodes:d,inputs:g,outputs:b,weights:c,placeholders:a,signature:_e}}mapArgsToSignature(s){return{methodName:s.signature.name,inputs:s.signature.inputArg.reduce((o,a)=>(o[a.name]=this.mapArgToTensorInfo(a),o),{}),outputs:s.signature.outputArg.reduce((o,a)=>(o[a.name]=this.mapArgToTensorInfo(a,s.ret),o),{})}}mapArgToTensorInfo(s,o){let a=s.name;return o!=null&&(a=o[a]),{name:a,dtype:s.type}}}function decodeBase64(i){const s=env().global;if(typeof s.atob<"u")return s.atob(i);if(typeof Buffer<"u")return new Buffer(i,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function parseStringParam(i,s){const o=Array.isArray(i)?String.fromCharCode.apply(null,i):decodeBase64(i);return s?o:o.toLowerCase()}function getStringParam(i,s,o,a=!1){const c=i[s];return c!=null?parseStringParam(c.s,a):o}function getBoolParam(i,s,o){const a=i[s];return a?a.b:o}function getNumberParam(i,s,o){const a=i[s]||{},c=a.i!=null?a.i:a.f!=null?a.f:o;return typeof c=="number"?c:parseInt(c,10)}function parseDtypeParam(i){switch(typeof i=="string"&&(i=DataType[i]),i){case DataType.DT_FLOAT:return"float32";case DataType.DT_INT32:case DataType.DT_INT64:case DataType.DT_INT8:case DataType.DT_UINT8:return"int32";case DataType.DT_BOOL:return"bool";case DataType.DT_DOUBLE:return"float32";case DataType.DT_STRING:return"string";default:return null}}function getFuncParam(i,s,o){const a=i[s];return a&&a.func?a.func.name:o}function getDtypeParam(i,s,o){const a=i[s];return a&&a.type?parseDtypeParam(a.type):o}function getDtypeArrayParam(i,s,o){const a=i[s];return a&&a.list&&a.list.type?a.list.type.map(c=>parseDtypeParam(c)):o}function parseTensorShapeParam(i){if(!i.unknownRank)return i.dim!=null?i.dim.map(s=>typeof s.size=="number"?s.size:parseInt(s.size,10)):[]}function getTensorShapeParam(i,s,o){const a=i[s];return a&&a.shape?parseTensorShapeParam(a.shape):o}function getNumericArrayParam(i,s,o){const a=i[s];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map(c=>typeof c=="number"?c:parseInt(c,10)):o}function getStringArrayParam(i,s,o,a=!1){const c=i[s];return c&&c.list&&c.list.s?c.list.s.map(d=>parseStringParam(d,a)):o}function getTensorShapeArrayParam(i,s,o){const a=i[s];return a&&a.list&&a.list.shape?a.list.shape.map(c=>parseTensorShapeParam(c)):o}function getBoolArrayParam(i,s,o){const a=i[s];return a&&a.list&&a.list.b?a.list.b:o}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NodeValueImpl{constructor(s,o,a){this.node=s,this.tensorMap=o,this.context=a,this.inputs=[],this.attrs={},this.inputs=s.inputNames.map(c=>this.getInput(c)),s.rawAttrs!=null&&(this.attrs=Object.keys(s.rawAttrs).reduce((c,d)=>(c[d]=this.getAttr(d),c),{}))}getInput(s){return getTensor(s,this.tensorMap,this.context)}getAttr(s,o){const a=this.node.rawAttrs[s];if(a.tensor!=null)return getTensor(s,this.tensorMap,this.context);if(a.i!=null||a.f!=null)return getNumberParam(this.node.rawAttrs,s,o);if(a.s!=null)return getStringParam(this.node.rawAttrs,s,o);if(a.b!=null)return getBoolParam(this.node.rawAttrs,s,o);if(a.shape!=null)return getTensorShapeParam(this.node.rawAttrs,s,o);if(a.type!=null)return getDtypeParam(this.node.rawAttrs,s,o);if(a.list!=null){if(a.list.i!=null||a.list.f!=null)return getNumericArrayParam(this.node.rawAttrs,s,o);if(a.list.s!=null)return getStringArrayParam(this.node.rawAttrs,s,o);if(a.list.shape!=null)return getTensorShapeArrayParam(this.node.rawAttrs,s,o);if(a.list.b!=null)return getBoolArrayParam(this.node.rawAttrs,s,o);if(a.list.type!=null)return getDtypeArrayParam(this.node.rawAttrs,s,o)}return o}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$h=(i,s,o)=>{switch(i.op){case"BiasAdd":case"AddV2":case"Add":return[add$2(getParamValue("a",i,s,o),getParamValue("b",i,s,o))];case"AddN":return[addN$2(getParamValue("tensors",i,s,o))];case"FloorMod":case"Mod":return[mod$2(getParamValue("a",i,s,o),getParamValue("b",i,s,o))];case"Mul":return[mul(getParamValue("a",i,s,o),getParamValue("b",i,s,o))];case"RealDiv":case"Div":return[div$1(getParamValue("a",i,s,o),getParamValue("b",i,s,o))];case"DivNoNan":return[divNoNan(getParamValue("a",i,s,o),getParamValue("b",i,s,o))];case"FloorDiv":return[floorDiv$2(getParamValue("a",i,s,o),getParamValue("b",i,s,o))];case"Sub":return[sub$2(getParamValue("a",i,s,o),getParamValue("b",i,s,o))];case"Minimum":return[minimum$3(getParamValue("a",i,s,o),getParamValue("b",i,s,o))];case"Maximum":return[maximum$3(getParamValue("a",i,s,o),getParamValue("b",i,s,o))];case"Pow":return[pow$2(getParamValue("a",i,s,o),getParamValue("b",i,s,o))];case"SquaredDifference":return[squaredDifference$2(getParamValue("a",i,s,o),getParamValue("b",i,s,o))];default:throw TypeError(`Node type ${i.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$g=(i,s,o)=>{switch(i.op){case"Abs":case"ComplexAbs":return[abs$2(getParamValue("x",i,s,o))];case"Acos":return[acos$2(getParamValue("x",i,s,o))];case"Acosh":return[acosh$2(getParamValue("x",i,s,o))];case"Asin":return[asin$2(getParamValue("x",i,s,o))];case"Asinh":return[asinh$2(getParamValue("x",i,s,o))];case"Atan":return[atan$2(getParamValue("x",i,s,o))];case"Atan2":return[atan2$2(getParamValue("x",i,s,o),getParamValue("y",i,s,o))];case"Atanh":return[atanh$2(getParamValue("x",i,s,o))];case"Ceil":return[ceil$2(getParamValue("x",i,s,o))];case"Complex":return[complex$2(getParamValue("real",i,s,o),getParamValue("imag",i,s,o))];case"Cos":return[cos$2(getParamValue("x",i,s,o))];case"Cosh":return[cosh$2(getParamValue("x",i,s,o))];case"Elu":return[elu$4(getParamValue("x",i,s,o))];case"Erf":return[erf$2(getParamValue("x",i,s,o))];case"Exp":return[exp$2(getParamValue("x",i,s,o))];case"Expm1":return[expm1$2(getParamValue("x",i,s,o))];case"Floor":return[floor$2(getParamValue("x",i,s,o))];case"Log":return[log$4(getParamValue("x",i,s,o))];case"Log1p":return[log1p$2(getParamValue("x",i,s,o))];case"Imag":return[imag$2(getParamValue("x",i,s,o))];case"Neg":return[neg$2(getParamValue("x",i,s,o))];case"Reciprocal":return[reciprocal$2(getParamValue("x",i,s,o))];case"Real":return[real$2(getParamValue("x",i,s,o))];case"Relu":return[relu$2(getParamValue("x",i,s,o))];case"Round":return[round$2(getParamValue("x",i,s,o))];case"Selu":return[selu$2(getParamValue("x",i,s,o))];case"Sigmoid":return[sigmoid$2(getParamValue("x",i,s,o))];case"Sin":return[sin$2(getParamValue("x",i,s,o))];case"Sign":return[sign$2(getParamValue("x",i,s,o))];case"Sinh":return[sinh$2(getParamValue("x",i,s,o))];case"Softplus":return[softplus$2(getParamValue("x",i,s,o))];case"Sqrt":return[sqrt$2(getParamValue("x",i,s,o))];case"Square":return[square$2(getParamValue("x",i,s,o))];case"Tanh":return[tanh$2(getParamValue("x",i,s,o))];case"Tan":return[tan$2(getParamValue("x",i,s,o))];case"ClipByValue":return[clipByValue$1(getParamValue("x",i,s,o),getParamValue("clipValueMin",i,s,o),getParamValue("clipValueMax",i,s,o))];case"Relu6":return[relu6$2(getParamValue("x",i,s,o))];case"Rsqrt":return[rsqrt$2(getTensor(i.inputNames[0],s,o))];case"Prod":return[prod$2(getParamValue("x",i,s,o),getParamValue("axes",i,s,o))];case"LeakyRelu":return[leakyRelu$2(getParamValue("x",i,s,o),getParamValue("alpha",i,s,o))];case"Prelu":return[prelu$3(getParamValue("x",i,s,o),getParamValue("alpha",i,s,o))];default:throw TypeError(`Node type ${i.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function assertShapesMatchAllowUndefinedSize(i,s,o=""){assert$2(shapesEqualAllowUndefinedSize(i,s),()=>o+` Shapes ${i} and ${s} must match`)}function shapesEqualAllowUndefinedSize(i,s){if(i.length!==s.length)return!1;for(let o=0;o<i.length;o++)if(i[o]!==-1&&s[o]!==-1&&i[o]!==s[o])return!1;return!0}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TensorArray{constructor(s,o,a,c,d,g,b){this.name=s,this.dtype=o,this.maxSize=a,this.elementShape=c,this.identicalElementShapes=d,this.dynamicSize=g,this.clearAfterRead=b,this.tensors=[],this.closed_=!1,this.idTensor=scalar(0),keep(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(s){this.tensors.forEach(o=>{(s==null||!s.has(o.tensor.id))&&o.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(s){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(s<0||s>=this.size())throw new Error(`Tried to read from index ${s}, but array size is: ${this.size()}`);const o=this.tensors[s];if(o.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${s} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(o.cleared=!0),o.read=!0,o.tensor}readMany(s){return s.map(o=>this.read(o))}write(s,o){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(s<0||!this.dynamicSize&&s>=this.maxSize)throw new Error(`Tried to write to index ${s}, but array is not resizeable and size is: ${this.maxSize}`);const a=this.tensors[s]||{};if(o.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${s},
          because the value dtype is ${o.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=o.shape),assertShapesMatchAllowUndefinedSize(this.elementShape,o.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${s}.`),a.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${s}, because it has already been read.`);if(a.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${s}, because it has already been written.`);a.tensor=o,keep(o),a.written=!0,this.tensors[s]=a}writeMany(s,o){if(s.length!==o.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${s.length} is not the same as tensors size: ${o.length}.`);s.forEach((a,c)=>this.write(a,o[c]))}gather(s,o){if(o&&o!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${o}`);if(s)s=s.slice(0,this.size());else{s=[];for(let c=0;c<this.size();c++)s.push(c)}if(s.length===0)return tensor([],[0].concat(this.elementShape));const a=this.readMany(s);return assertShapesMatchAllowUndefinedSize(this.elementShape,a[0].shape,"TensorArray shape mismatch: "),stack(a,0)}concat(s){if(s&&s!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${s}`);if(this.size()===0)return tensor([],[0].concat(this.elementShape));const o=[];for(let c=0;c<this.size();c++)o.push(c);const a=this.readMany(o);return assertShapesMatchAllowUndefinedSize(this.elementShape,a[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${a[0].shape})`),concat$2(a,0)}scatter(s,o){if(o.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${o.dtype}`);if(s.length!==o.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${s.length} vs. ${o.shape[0]}`);const a=Math.max(...s);if(!this.dynamicSize&&a>=this.maxSize)throw new Error(`Max index must be < array size (${a}  vs. ${this.maxSize})`);this.writeMany(s,unstack(o,0))}split(s,o){if(o.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${o.dtype}`);let a=0;const c=s.map($=>(a+=$,a));if(a!==o.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${a}, and tensor's shape is: ${o.shape}`);if(!this.dynamicSize&&s.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${s.length}), and the TensorArray is not marked as dynamically resizeable`);const d=a===0?0:o.size/a,g=[];tidy(()=>{o=reshape$3(o,[1,a,d]);for(let $=0;$<s.length;++$){const _e=[0,$===0?0:c[$-1],0],et=[1,s[$],d];g[$]=reshape$3(slice$2(o,_e,et),this.elementShape)}return g});const b=[];for(let $=0;$<s.length;$++)b[$]=$;this.writeMany(b,g)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TensorList{constructor(s,o,a,c=-1){this.tensors=s,this.elementShape=o,this.elementDtype=a,s!=null&&s.forEach(d=>{if(a!==d.dtype)throw new Error(`Invalid data types; op elements ${a}, but list elements ${d.dtype}`);assertShapesMatchAllowUndefinedSize(o,d.shape,"TensorList shape mismatch: "),keep(d)}),this.idTensor=scalar(0),this.maxNumElements=c,keep(this.idTensor)}get id(){return this.idTensor.id}copy(){return new TensorList([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(s){this.tensors.forEach(o=>{(s==null||!s.has(o.id))&&o.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(s,o,a=-1){if(o!==this.elementDtype)throw new Error(`Invalid data types; op elements ${o}, but list elements ${this.elementDtype}`);if(a!==-1&&this.tensors.length!==a)throw new Error(`Operation expected a list with ${a} elements but got a list with ${this.tensors.length} elements.`);return assertShapesMatchAllowUndefinedSize(s,this.elementShape,"TensorList shape mismatch: "),tidy(()=>{const c=this.tensors.map(d=>reshape$3(d,s));return stack(c,0)})}popBack(s,o){if(o!==this.elementDtype)throw new Error(`Invalid data types; op elements ${o}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const a=this.tensors.pop();return assertShapesMatchAllowUndefinedSize(a.shape,s,"TensorList shape mismatch: "),reshape$3(a,s)}pushBack(s){if(s.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s.dtype}, but list elements ${this.elementDtype}`);if(assertShapesMatchAllowUndefinedSize(s.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");keep(s),this.tensors.push(s)}resize(s){if(s<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${s}`);if(this.maxNumElements!==-1&&s>this.maxNumElements)throw new Error(`TensorListResize input size ${s} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=s}getItem(s,o,a){if(a!==this.elementDtype)throw new Error(`Invalid data types; op elements ${a}, but list elements ${this.elementDtype}`);if(s<0||s>this.tensors.length)throw new Error(`Trying to access element ${s} in a list with ${this.tensors.length} elements.`);if(this.tensors[s]==null)throw new Error(`element at index ${s} is null.`);return assertShapesMatchAllowUndefinedSize(this.tensors[s].shape,o,"TensorList shape mismatch: "),this.tensors[s]}setItem(s,o){if(o.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${o.dtype}, but list elements ${this.elementDtype}`);if(s<0||this.maxNumElements!==-1&&s>=this.maxNumElements)throw new Error(`Trying to set element ${s} in a list with max ${this.maxNumElements} elements.`);assertShapesMatchAllowUndefinedSize(this.elementShape,o.shape,"TensorList shape mismatch: "),keep(o),this.tensors[s]=o}gather(s,o,a){if(o!==this.elementDtype)throw new Error(`Invalid data types; op elements ${o}, but list elements ${this.elementDtype}`);return assertShapesMatchAllowUndefinedSize(this.elementShape,a,"TensorList shape mismatch: "),s=s.slice(0,this.size()),s.length===0?tensor([],[0].concat(this.elementShape)):tidy(()=>{const c=s.map(d=>reshape$3(this.tensors[d],a));return stack(c,0)})}concat(s,o){if(s&&s!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${s}`);return assertShapesMatchAllowUndefinedSize(this.elementShape,o,"TensorList shape mismatch: "),this.size()===0?tensor([],[0].concat(this.elementShape)):tidy(()=>{const a=this.tensors.map(c=>reshape$3(c,o));return concat$2(a,0)})}}function fromTensor(i,s,o){const a=i.dtype;if(i.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${i.shape}`);if(i.dtype!==o)throw new Error(`Invalid data types; op elements ${i.dtype}, but list elements ${o}`);const c=i.shape.slice(1);assertShapesMatchAllowUndefinedSize(c,s,"TensorList shape mismatch: ");const d=unstack(i);return new TensorList(d,s,a)}function reserve(i,s,o){return new TensorList([],i,s,o)}function scatter(i,s,o,a){if(s.length!==i.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${s.length} vs. ${i.shape[0]}`);const c=Math.max(...s);if(a!=null&&a!==-1&&c>=a)throw new Error(`Max index must be < array size (${c}  vs. ${a})`);const d=new TensorList([],o,i.dtype,a),g=unstack(i,0);return s.forEach((b,$)=>{d.setItem(b,g[$])}),d}function split(i,s,o){let a=0;const c=s.map($=>(a+=$,a));if(a!==i.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${a}, and tensor's shape is: ${i.shape}`);const d=a===0?0:i.size/a,g=tidy(()=>{const $=[];i=reshape$3(i,[1,a,d]);for(let _=0;_<s.length;++_){const et=[0,_===0?0:c[_-1],0],rt=[1,s[_],d];$[_]=reshape$3(slice$2(i,et,rt),o)}return i.dispose(),$}),b=new TensorList([],o,i.dtype,s.length);for(let $=0;$<g.length;$++)b.setItem($,g[$]);return b}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$f=async(i,s,o)=>{switch(i.op){case"If":case"StatelessIf":{const a=getParamValue("thenBranch",i,s,o),c=getParamValue("elseBranch",i,s,o),d=getParamValue("cond",i,s,o),g=getParamValue("args",i,s,o);return(await d.data())[0]?o.functionMap[a].executeFunctionAsync(g,o.tensorArrayMap,o.tensorListMap):o.functionMap[c].executeFunctionAsync(g,o.tensorArrayMap,o.tensorListMap)}case"While":case"StatelessWhile":{const a=getParamValue("body",i,s,o),c=getParamValue("cond",i,s,o),d=getParamValue("args",i,s,o),g=await o.functionMap[c].executeFunctionAsync(d,o.tensorArrayMap,o.tensorListMap),b=d.map(_e=>_e.id);let $=await g[0].data();g.forEach(_e=>{!_e.kept&&b.indexOf(_e.id)===-1&&_e.dispose()});let _=d;for(;$[0];){const _e=_;_=await o.functionMap[a].executeFunctionAsync(_,o.tensorArrayMap,o.tensorListMap);const et=_.map(tt=>tt.id);_e.forEach(tt=>{!tt.kept&&b.indexOf(tt.id)===-1&&et.indexOf(tt.id)===-1&&tt.dispose()});const rt=await o.functionMap[c].executeFunctionAsync(_,o.tensorArrayMap,o.tensorListMap);$=await rt[0].data(),rt.forEach(tt=>{!tt.kept&&b.indexOf(tt.id)===-1&&et.indexOf(tt.id)===-1&&tt.dispose()})}return _}case"LoopCond":{const a=getParamValue("pred",i,s,o);return[cloneTensor(a)]}case"Switch":{const a=getParamValue("pred",i,s,o);let c=getParamValue("data",i,s,o);return c.kept||(c=cloneTensor(c)),(await a.data())[0]?[void 0,c]:[c,void 0]}case"Merge":{const a=i.inputNames.find(c=>getTensor(c,s,o)!==void 0);if(a){const c=getTensor(a,s,o);return[cloneTensor(c)]}return}case"Enter":{const a=getParamValue("frameName",i,s,o),c=getParamValue("tensor",i,s,o);return o.enterFrame(a),[cloneTensor(c)]}case"Exit":{const a=getParamValue("tensor",i,s,o);return o.exitFrame(),[cloneTensor(a)]}case"NextIteration":{const a=getParamValue("tensor",i,s,o);return o.nextIteration(),[cloneTensor(a)]}case"TensorArrayV3":{const a=getParamValue("size",i,s,o),c=getParamValue("dtype",i,s,o),d=getParamValue("elementShape",i,s,o),g=getParamValue("dynamicSize",i,s,o),b=getParamValue("clearAfterRead",i,s,o),$=getParamValue("identicalElementShapes",i,s,o),_=getParamValue("name",i,s,o),_e=new TensorArray(_,c,a,d,$,g,b);return o.addTensorArray(_e),[_e.idTensor,scalar(1)]}case"TensorArrayWriteV3":{const a=getParamValue("tensorArrayId",i,s,o),c=getParamValue("index",i,s,o),d=getParamValue("tensor",i,s,o),g=o.getTensorArray(a.id);return g.write(c,d),[g.idTensor]}case"TensorArrayReadV3":{const a=getParamValue("tensorArrayId",i,s,o),c=getParamValue("index",i,s,o);return[o.getTensorArray(a.id).read(c)]}case"TensorArrayGatherV3":{const a=getParamValue("tensorArrayId",i,s,o),c=getParamValue("indices",i,s,o),d=getParamValue("dtype",i,s,o);return[o.getTensorArray(a.id).gather(c,d)]}case"TensorArrayScatterV3":{const a=getParamValue("tensorArrayId",i,s,o),c=getParamValue("indices",i,s,o),d=getParamValue("tensor",i,s,o),g=o.getTensorArray(a.id);return g.scatter(c,d),[g.idTensor]}case"TensorArrayConcatV3":{const a=getParamValue("tensorArrayId",i,s,o),c=o.getTensorArray(a.id),d=getParamValue("dtype",i,s,o);return[c.concat(d)]}case"TensorArraySplitV3":{const a=getParamValue("tensorArrayId",i,s,o),c=getParamValue("tensor",i,s,o),d=getParamValue("lengths",i,s,o),g=o.getTensorArray(a.id);return g.split(d,c),[g.idTensor]}case"TensorArraySizeV3":{const a=getParamValue("tensorArrayId",i,s,o),c=o.getTensorArray(a.id);return[scalar(c.size(),"int32")]}case"TensorArrayCloseV3":{const a=getParamValue("tensorArrayId",i,s,o),c=o.getTensorArray(a.id);return c.clearAndClose(),[c.idTensor]}case"TensorListSetItem":{const a=getParamValue("tensorListId",i,s,o),c=getParamValue("index",i,s,o),d=getParamValue("tensor",i,s,o),g=o.getTensorList(a.id);return g.setItem(c,d),[g.idTensor]}case"TensorListGetItem":{const a=getParamValue("tensorListId",i,s,o),c=getParamValue("index",i,s,o),d=getParamValue("elementShape",i,s,o),g=getParamValue("elementDType",i,s,o);return[o.getTensorList(a.id).getItem(c,d,g)]}case"TensorListScatterV2":case"TensorListScatter":{const a=getParamValue("indices",i,s,o),c=getParamValue("tensor",i,s,o),d=getParamValue("elementShape",i,s,o),g=getParamValue("numElements",i,s,o),b=scatter(c,a,d,g);return o.addTensorList(b),[b.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const a=getParamValue("elementShape",i,s,o),c=getParamValue("elementDType",i,s,o);let d;i.op==="TensorListReserve"?d="numElements":d="maxNumElements";const g=getParamValue(d,i,s,o),b=reserve(a,c,g);return o.addTensorList(b),[b.idTensor]}case"TensorListGather":{const a=getParamValue("tensorListId",i,s,o),c=getParamValue("indices",i,s,o),d=getParamValue("elementShape",i,s,o),g=getParamValue("elementDType",i,s,o);return[o.getTensorList(a.id).gather(c,g,d)]}case"TensorListStack":{const a=getParamValue("tensorListId",i,s,o),c=getParamValue("elementShape",i,s,o),d=getParamValue("elementDType",i,s,o),g=getParamValue("numElements",i,s,o);return[o.getTensorList(a.id).stack(c,d,g)]}case"TensorListFromTensor":{const a=getParamValue("tensor",i,s,o),c=getParamValue("elementShape",i,s,o),d=getParamValue("elementDType",i,s,o),g=fromTensor(a,c,d);return o.addTensorList(g),[g.idTensor]}case"TensorListConcat":{const a=getParamValue("tensorListId",i,s,o),c=o.getTensorList(a.id),d=getParamValue("dtype",i,s,o),g=getParamValue("elementShape",i,s,o);return[c.concat(d,g)]}case"TensorListPushBack":{const a=getParamValue("tensorListId",i,s,o),c=getParamValue("tensor",i,s,o),d=o.getTensorList(a.id);return d.pushBack(c),[d.idTensor]}case"TensorListPopBack":{const a=getParamValue("tensorListId",i,s,o),c=getParamValue("elementShape",i,s,o),d=getParamValue("elementDType",i,s,o);return[o.getTensorList(a.id).popBack(c,d)]}case"TensorListSplit":{const a=getParamValue("tensor",i,s,o),c=getParamValue("elementShape",i,s,o),d=getParamValue("lengths",i,s,o),g=split(a,d,c);return o.addTensorList(g),[g.idTensor]}default:throw TypeError(`Node type ${i.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedConvAndDepthWiseParams(i,s,o){const[a,c]=getParamValue("fusedOps",i,s,o),d=a==="biasadd",g=c==="prelu",b=a==="fusedbatchnorm",$=getParamValue("numArgs",i,s,o);if(d){if(g&&$!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!g&&$!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(b)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const _=getParamValue("strides",i,s,o),_e=getPadding(i,s,o),et=getParamValue("dataFormat",i,s,o).toUpperCase(),rt=getParamValue("dilations",i,s,o),[tt,j]=getParamValue("args",i,s,o),nt=getParamValue("leakyreluAlpha",i,s,o);return{stride:_,pad:_e,dataFormat:et,dilations:rt,biasArg:tt,preluArg:j,activationFunc:c,leakyreluAlpha:nt}}const executeOp$e=(i,s,o)=>{switch(i.op){case"Conv1D":{const a=getParamValue("stride",i,s,o),c=getParamValue("pad",i,s,o),d=getParamValue("dataFormat",i,s,o).toUpperCase(),g=getParamValue("dilation",i,s,o);return[conv1d$1(getParamValue("x",i,s,o),getParamValue("filter",i,s,o),a,c,d,g)]}case"Conv2D":{const a=getParamValue("strides",i,s,o),c=getPadding(i,s,o),d=getParamValue("dataFormat",i,s,o).toUpperCase(),g=getParamValue("dilations",i,s,o);return[conv2d$3(getParamValue("x",i,s,o),getParamValue("filter",i,s,o),[a[1],a[2]],c,d,[g[1],g[2]])]}case"_FusedConv2D":{const{stride:a,pad:c,dataFormat:d,dilations:g,biasArg:b,preluArg:$,activationFunc:_,leakyreluAlpha:_e}=fusedConvAndDepthWiseParams(i,s,o);return[conv2d$2({x:getParamValue("x",i,s,o),filter:getParamValue("filter",i,s,o),strides:[a[1],a[2]],pad:c,dataFormat:d,dilations:[g[1],g[2]],bias:b,activation:_,preluActivationWeights:$,leakyreluAlpha:_e})]}case"FusedDepthwiseConv2dNative":{const{stride:a,pad:c,dataFormat:d,dilations:g,biasArg:b,preluArg:$,activationFunc:_,leakyreluAlpha:_e}=fusedConvAndDepthWiseParams(i,s,o);return[depthwiseConv2d$2({x:getParamValue("x",i,s,o),filter:getParamValue("filter",i,s,o),strides:[a[1],a[2]],pad:c,dataFormat:d,dilations:[g[1],g[2]],bias:b,activation:_,preluActivationWeights:$,leakyreluAlpha:_e})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const a=getParamValue("outputShape",i,s,o),c=getParamValue("strides",i,s,o),d=getPadding(i,s,o);return[conv2dTranspose$1(getParamValue("x",i,s,o),getParamValue("filter",i,s,o),a,[c[1],c[2]],d)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const a=getParamValue("strides",i,s,o),c=getPadding(i,s,o),d=getParamValue("dilations",i,s,o),g=getParamValue("dataFormat",i,s,o).toUpperCase();return[depthwiseConv2d$3(getParamValue("input",i,s,o),getParamValue("filter",i,s,o),[a[1],a[2]],c,g,[d[1],d[2]])]}case"Conv3D":{const a=getParamValue("strides",i,s,o),c=getParamValue("pad",i,s,o),d=getParamValue("dataFormat",i,s,o).toUpperCase(),g=getParamValue("dilations",i,s,o);return[conv3d$1(getParamValue("x",i,s,o),getParamValue("filter",i,s,o),[a[1],a[2],a[3]],c,d,[g[1],g[2],g[3]])]}case"AvgPool":{const a=getParamValue("strides",i,s,o),c=getParamValue("pad",i,s,o),d=getParamValue("kernelSize",i,s,o);return[avgPool$2(getParamValue("x",i,s,o),[d[1],d[2]],[a[1],a[2]],c)]}case"MaxPool":{const a=getParamValue("strides",i,s,o),c=getParamValue("pad",i,s,o),d=getParamValue("kernelSize",i,s,o);return[maxPool$2(getParamValue("x",i,s,o),[d[1],d[2]],[a[1],a[2]],c)]}case"MaxPoolWithArgmax":{const a=getParamValue("strides",i,s,o),c=getParamValue("pad",i,s,o),d=getParamValue("kernelSize",i,s,o),g=getParamValue("includeBatchInIndex",i,s,o),{result:b,indexes:$}=maxPoolWithArgmax(getParamValue("x",i,s,o),[d[1],d[2]],[a[1],a[2]],c,g);return[b,$]}case"AvgPool3D":{const a=getParamValue("strides",i,s,o),c=getParamValue("pad",i,s,o),d=getParamValue("kernelSize",i,s,o);return[avgPool3d$1(getParamValue("x",i,s,o),[d[1],d[2],d[3]],[a[1],a[2],a[3]],c)]}case"MaxPool3D":{const a=getParamValue("strides",i,s,o),c=getParamValue("pad",i,s,o),d=getParamValue("kernelSize",i,s,o);return[maxPool3d$1(getParamValue("x",i,s,o),[d[1],d[2],d[3]],[a[1],a[2],a[3]],c)]}case"Dilation2D":{const a=getParamValue("strides",i,s,o),c=getParamValue("pad",i,s,o),d=getParamValue("dilations",i,s,o),g=a[1],b=a[2],$=d[1],_=d[2];return[dilation2d(getParamValue("x",i,s,o),getParamValue("filter",i,s,o),[g,b],c,[$,_],"NHWC")]}default:throw TypeError(`Node type ${i.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$d=(i,s,o)=>{switch(i.op){case"Fill":{const a=getParamValue("shape",i,s,o),c=getParamValue("dtype",i,s,o),d=getParamValue("value",i,s,o);return[fill$2(a,d,c)]}case"LinSpace":{const a=getParamValue("start",i,s,o),c=getParamValue("stop",i,s,o),d=getParamValue("num",i,s,o);return[linspace(a,c,d)]}case"Multinomial":{const a=getParamValue("logits",i,s,o),c=getParamValue("numSamples",i,s,o),d=getParamValue("seed",i,s,o);return[multinomial$2(a,c,d)]}case"OneHot":{const a=getParamValue("indices",i,s,o),c=getParamValue("depth",i,s,o),d=getParamValue("onValue",i,s,o),g=getParamValue("offValue",i,s,o);return[oneHot$2(a,c,d,g)]}case"Ones":return[ones$1(getParamValue("shape",i,s,o),getParamValue("dtype",i,s,o))];case"OnesLike":return[onesLike$2(getParamValue("x",i,s,o))];case"RandomUniform":return[randomUniform$1(getParamValue("shape",i,s,o),getParamValue("minval",i,s,o),getParamValue("maxval",i,s,o),getParamValue("dtype",i,s,o))];case"Range":{const a=getParamValue("start",i,s,o),c=getParamValue("stop",i,s,o),d=getParamValue("step",i,s,o);return[range$4(a,c,d,getParamValue("dtype",i,s,o))]}case"TruncatedNormal":{const a=getParamValue("shape",i,s,o),c=getParamValue("mean",i,s,o),d=getParamValue("stdDev",i,s,o),g=getParamValue("seed",i,s,o);return[truncatedNormal$1(a,c,d,getParamValue("dtype",i,s,o),g)]}case"Zeros":return[zeros$2(getParamValue("shape",i,s,o),getParamValue("dtype",i,s,o))];case"ZerosLike":return[zerosLike$2(getParamValue("x",i,s,o))];default:throw TypeError(`Node type ${i.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nmsParams(i,s,o){const a=getParamValue("boxes",i,s,o),c=getParamValue("scores",i,s,o),d=getParamValue("maxOutputSize",i,s,o),g=getParamValue("iouThreshold",i,s,o),b=getParamValue("scoreThreshold",i,s,o),$=getParamValue("softNmsSigma",i,s,o);return{boxes:a,scores:c,maxOutputSize:d,iouThreshold:g,scoreThreshold:b,softNmsSigma:$}}const executeOp$c=async(i,s,o)=>{switch(i.op){case"NonMaxSuppressionV5":{const{boxes:a,scores:c,maxOutputSize:d,iouThreshold:g,scoreThreshold:b,softNmsSigma:$}=nmsParams(i,s,o),_=await image$1.nonMaxSuppressionWithScoreAsync(a,c,d,g,b,$);return[_.selectedIndices,_.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:a,scores:c,maxOutputSize:d,iouThreshold:g,scoreThreshold:b}=nmsParams(i,s,o),$=getParamValue("padToMaxOutputSize",i,s,o),_=await image$1.nonMaxSuppressionPaddedAsync(a,c,d,g,b,$);return[_.selectedIndices,_.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:a,scores:c,maxOutputSize:d,iouThreshold:g,scoreThreshold:b}=nmsParams(i,s,o);return[await image$1.nonMaxSuppressionAsync(a,c,d,g,b)]}case"Where":{const a=cast$3(getParamValue("condition",i,s,o),"bool"),c=[await whereAsync(a)];return a.dispose(),c}case"ListDiff":return setdiff1dAsync(getParamValue("x",i,s,o),getParamValue("y",i,s,o));default:throw TypeError(`Node type ${i.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$b=(i,s,o)=>{switch(i.op){case"TopKV2":{const a=getParamValue("x",i,s,o),c=getParamValue("k",i,s,o),d=getParamValue("sorted",i,s,o),g=topk(a,c,d);return[g.values,g.indices]}case"Unique":{const a=getParamValue("x",i,s,o),c=unique$3(a);return[c.values,c.indices]}case"UniqueV2":{const a=getParamValue("x",i,s,o),c=getParamValue("axis",i,s,o),d=unique$3(a,c);return[d.values,d.indices]}default:throw TypeError(`Node type ${i.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$a=(i,s,o)=>{switch(i.op){case"Const":return s[i.name];case"PlaceholderWithDefault":const a=getParamValue("default",i,s,o);return[getTensor(i.name,s,o)||a];case"Placeholder":return[getTensor(i.name,s,o)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const _=getParamValue("x",i,s,o);return[cloneTensor(_)]}case"IdentityN":return getParamValue("x",i,s,o).map(_=>cloneTensor(_));case"Snapshot":const c=getParamValue("x",i,s,o);return[cloneTensor(c)];case"Shape":return[tensor1d(getParamValue("x",i,s,o).shape,"int32")];case"ShapeN":return getParamValue("x",i,s,o).map(_=>tensor1d(_.shape));case"Size":return[scalar(getParamValue("x",i,s,o).size,"int32")];case"Rank":return[scalar(getParamValue("x",i,s,o).rank,"int32")];case"NoOp":return[scalar(1)];case"Print":const d=getParamValue("x",i,s,o),g=getParamValue("data",i,s,o),b=getParamValue("message",i,s,o),$=getParamValue("summarize",i,s,o);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(b);for(let _=0;_<g.length;_++)console.log(Array.prototype.slice.call(g[_].dataSync()).slice(0,$));return[d];default:throw TypeError(`Node type ${i.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HashTable{constructor(s,o){this.keyDType=s,this.valueDType=o,this.handle=scalar(0),this.tensorMap=new Map,keep(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(s,o){this.checkKeyAndValueTensor(s,o);const a=await s.data();return this.tensorMap.forEach(c=>c.dispose()),this.tensorMap.clear(),tidy(()=>{const c=unstack(o),d=a.length,g=c.length;assert$2(d===g,()=>`The number of elements doesn't match, keys has ${d} elements, the values has ${g} elements.`);for(let b=0;b<d;b++){const $=a[b],_=c[b];keep(_),this.tensorMap.set($,_)}return this.handle})}async find(s,o){this.checkKeyAndValueTensor(s,o);const a=await s.data();return tidy(()=>{const c=[];for(let d=0;d<a.length;d++){const g=a[d],b=this.findWithDefault(g,o);c.push(b)}return stack(c)})}findWithDefault(s,o){const a=this.tensorMap.get(s);return a??o}checkKeyAndValueTensor(s,o){if(s.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${s.dtype}`);if(o.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${o.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$9=async(i,s,o,a)=>{switch(i.op){case"HashTable":case"HashTableV2":{const c=getParamValue("keyDType",i,s,o),d=getParamValue("valueDType",i,s,o),g=new HashTable(c,d);return a.addHashTable(i.name,g),[g.handle]}case"LookupTableImport":case"LookupTableImportV2":{const c=getParamValue("tableHandle",i,s,o,a),d=getParamValue("keys",i,s,o),g=getParamValue("values",i,s,o);return[await a.getHashTableById(c.id).import(d,g)]}case"LookupTableFind":case"LookupTableFindV2":{const c=getParamValue("tableHandle",i,s,o,a),d=getParamValue("keys",i,s,o),g=getParamValue("defaultValue",i,s,o);return[await a.getHashTableById(c.id).find(d,g)]}default:throw TypeError(`Node type ${i.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$8=(i,s,o)=>{switch(i.op){case"ResizeBilinear":{const a=getParamValue("images",i,s,o),c=getParamValue("size",i,s,o),d=getParamValue("alignCorners",i,s,o),g=getParamValue("halfPixelCenters",i,s,o);return[image$1.resizeBilinear(a,[c[0],c[1]],d,g)]}case"ResizeNearestNeighbor":{const a=getParamValue("images",i,s,o),c=getParamValue("size",i,s,o),d=getParamValue("alignCorners",i,s,o),g=getParamValue("halfPixelCenters",i,s,o);return[image$1.resizeNearestNeighbor(a,[c[0],c[1]],d,g)]}case"CropAndResize":{const a=getParamValue("image",i,s,o),c=getParamValue("boxes",i,s,o),d=getParamValue("boxInd",i,s,o),g=getParamValue("cropSize",i,s,o),b=getParamValue("method",i,s,o),$=getParamValue("extrapolationValue",i,s,o);return[image$1.cropAndResize(a,c,d,g,b,$)]}default:throw TypeError(`Node type ${i.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$7=(i,s,o)=>{switch(i.op){case"Equal":return[equal$2(getParamValue("a",i,s,o),getParamValue("b",i,s,o))];case"NotEqual":return[notEqual$2(getParamValue("a",i,s,o),getParamValue("b",i,s,o))];case"Greater":return[greater$3(getParamValue("a",i,s,o),getParamValue("b",i,s,o))];case"GreaterEqual":return[greaterEqual$2(getParamValue("a",i,s,o),getParamValue("b",i,s,o))];case"Less":return[less$3(getParamValue("a",i,s,o),getParamValue("b",i,s,o))];case"LessEqual":return[lessEqual$2(getParamValue("a",i,s,o),getParamValue("b",i,s,o))];case"LogicalAnd":return[logicalAnd$2(getParamValue("a",i,s,o),getParamValue("b",i,s,o))];case"LogicalNot":return[logicalNot$2(getParamValue("a",i,s,o))];case"LogicalOr":return[logicalOr$2(getParamValue("a",i,s,o),getParamValue("b",i,s,o))];case"Select":case"SelectV2":return[where(getParamValue("condition",i,s,o),getParamValue("a",i,s,o),getParamValue("b",i,s,o))];default:throw TypeError(`Node type ${i.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$6=(i,s,o)=>{switch(i.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[matMul$1(getParamValue("a",i,s,o),getParamValue("b",i,s,o),getParamValue("transposeA",i,s,o),getParamValue("transposeB",i,s,o))];case"Transpose":return[transpose$2(getParamValue("x",i,s,o),getParamValue("perm",i,s,o))];case"_FusedMatMul":const[a,c]=getParamValue("fusedOps",i,s,o),d=a==="biasadd",g=c==="prelu",b=getParamValue("numArgs",i,s,o),$=getParamValue("leakyreluAlpha",i,s,o);if(d){if(g&&b!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!g&&b!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[_,_e]=getParamValue("args",i,s,o);return[matMul({a:getParamValue("a",i,s,o),b:getParamValue("b",i,s,o),transposeA:getParamValue("transposeA",i,s,o),transposeB:getParamValue("transposeB",i,s,o),bias:_,activation:c,preluActivationWeights:_e,leakyreluAlpha:$})];default:throw TypeError(`Node type ${i.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$5=(i,s,o)=>{switch(i.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[batchNorm$2(getParamValue("x",i,s,o),getParamValue("mean",i,s,o),getParamValue("variance",i,s,o),getParamValue("offset",i,s,o),getParamValue("scale",i,s,o),getParamValue("epsilon",i,s,o))];case"FusedBatchNormV3":return[batchNorm$2(getParamValue("x",i,s,o),getParamValue("mean",i,s,o),getParamValue("variance",i,s,o),getParamValue("offset",i,s,o),getParamValue("scale",i,s,o),getParamValue("epsilon",i,s,o))];case"LRN":return[localResponseNormalization(getParamValue("x",i,s,o),getParamValue("radius",i,s,o),getParamValue("bias",i,s,o),getParamValue("alpha",i,s,o),getParamValue("beta",i,s,o))];case"Softmax":return[softmax$3(getParamValue("x",i,s,o))];case"LogSoftmax":return[logSoftmax(getParamValue("x",i,s,o))];case"SparseToDense":return[sparseToDense$2(getParamValue("sparseIndices",i,s,o),getParamValue("outputShape",i,s,o),getParamValue("sparseValues",i,s,o),getParamValue("defaultValue",i,s,o))];default:throw TypeError(`Node type ${i.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$4=(i,s,o)=>{switch(i.op){case"Max":{const g=getParamValue("axis",i,s,o),b=getParamValue("keepDims",i,s,o);return[max$3(getParamValue("x",i,s,o),g,b)]}case"Mean":{const g=getParamValue("axis",i,s,o),b=getParamValue("keepDims",i,s,o);return[mean$1(getParamValue("x",i,s,o),g,b)]}case"Min":{const g=getParamValue("axis",i,s,o),b=getParamValue("keepDims",i,s,o);return[min$3(getParamValue("x",i,s,o),g,b)]}case"Sum":{const g=getParamValue("axis",i,s,o),b=getParamValue("keepDims",i,s,o);return[sum$2(getParamValue("x",i,s,o),g,b)]}case"All":{const g=getParamValue("axis",i,s,o),b=getParamValue("keepDims",i,s,o);return[all$2(getParamValue("x",i,s,o),g,b)]}case"Any":{const g=getParamValue("axis",i,s,o),b=getParamValue("keepDims",i,s,o);return[any$2(getParamValue("x",i,s,o),g,b)]}case"ArgMax":{const g=getParamValue("axis",i,s,o);return[argMax$2(getParamValue("x",i,s,o),g)]}case"ArgMin":{const g=getParamValue("axis",i,s,o);return[argMin$2(getParamValue("x",i,s,o),g)]}case"Prod":{const g=getParamValue("axis",i,s,o),b=getParamValue("keepDims",i,s,o);return[prod$2(getParamValue("x",i,s,o),g,b)]}case"Cumsum":{const g=getParamValue("axis",i,s,o),b=getParamValue("exclusive",i,s,o),$=getParamValue("reverse",i,s,o);return[cumsum$2(getParamValue("x",i,s,o),g,b,$)]}case"Bincount":const a=getParamValue("x",i,s,o),c=getParamValue("weights",i,s,o),d=getParamValue("size",i,s,o);return[bincount$2(a,c,d)];case"DenseBincount":{const g=getParamValue("x",i,s,o),b=getParamValue("weights",i,s,o),$=getParamValue("size",i,s,o),_=getParamValue("binaryOutput",i,s,o);return[denseBincount$2(g,b,$,_)]}default:throw TypeError(`Node type ${i.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$3=(i,s,o)=>{switch(i.op){case"ConcatV2":case"Concat":{const a=getParamValue("n",i,s,o),c=getParamValue("axis",i,s,o);let d=getParamValue("tensors",i,s,o);return d=d.slice(0,a),[concat$2(d,c)]}case"Gather":{const a=getParamValue("x",i,s,o),c=getParamValue("indices",i,s,o);return[gather$1(a,cast$3(c,"int32"),0)]}case"GatherV2":{const a=getParamValue("axis",i,s,o),c=getParamValue("batchDims",i,s,o),d=getParamValue("x",i,s,o),g=getParamValue("indices",i,s,o);return[gather$1(d,cast$3(g,"int32"),a,c)]}case"Reverse":{const a=getParamValue("dims",i,s,o),c=[];for(let g=0;g<a.length;g++)a[g]&&c.push(g);const d=getParamValue("x",i,s,o);return[reverse$2(d,c)]}case"ReverseV2":{const a=getParamValue("axis",i,s,o),c=getParamValue("x",i,s,o);return[reverse$2(c,a)]}case"Slice":{const a=getParamValue("begin",i,s,o),c=getParamValue("size",i,s,o);return[slice$2(getParamValue("x",i,s,o),a,c)]}case"StridedSlice":{const a=getParamValue("begin",i,s,o),c=getParamValue("end",i,s,o),d=getParamValue("strides",i,s,o),g=getParamValue("beginMask",i,s,o),b=getParamValue("endMask",i,s,o),$=getParamValue("ellipsisMask",i,s,o),_=getParamValue("newAxisMask",i,s,o),_e=getParamValue("shrinkAxisMask",i,s,o),et=getParamValue("x",i,s,o);return[stridedSlice$2(et,a,c,d,g,b,$,_,_e)]}case"Pack":return tidy(()=>{const a=getParamValue("axis",i,s,o),c=getParamValue("tensors",i,s,o),d=c[0].shape,g=squeeze(c[0]).shape,b=c.map($=>{const _=arraysEqual($.shape,d);if(!_&&!arraysEqual(squeeze($).shape,g))throw new Error("the input tensors shape does not match");return _?$:reshape$3($,d)});return[stack(b,a)]});case"Unpack":{const a=getParamValue("axis",i,s,o),c=getParamValue("tensor",i,s,o);return unstack(c,a)}case"Tile":{const a=getParamValue("reps",i,s,o);return[tile$3(getParamValue("x",i,s,o),a)]}case"Split":case"SplitV":{const a=getParamValue("axis",i,s,o),c=getParamValue("numOrSizeSplits",i,s,o),d=getParamValue("x",i,s,o);return split$1(d,c,a)}case"ScatterNd":{const a=getParamValue("indices",i,s,o),c=getParamValue("values",i,s,o),d=getParamValue("shape",i,s,o);return[scatterND(a,c,d)]}case"GatherNd":{const a=getParamValue("x",i,s,o),c=getParamValue("indices",i,s,o);return[gatherND(a,c)]}case"SparseToDense":{const a=getParamValue("sparseIndices",i,s,o),c=getParamValue("outputShape",i,s,o),d=getParamValue("sparseValues",i,s,o),g=getParamValue("defaultValue",i,s,o);return[sparseToDense$2(a,d,c,d.dtype===g.dtype?g:cast$3(g,d.dtype))]}default:throw TypeError(`Node type ${i.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$2=(i,s,o)=>{switch(i.op){case"FFT":return[fft$2(getParamValue("x",i,s,o))];case"IFFT":return[ifft$2(getParamValue("x",i,s,o))];case"RFFT":return[rfft(getParamValue("x",i,s,o))];case"IRFFT":return[irfft(getParamValue("x",i,s,o))];default:throw TypeError(`Node type ${i.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$1=(i,s,o)=>{switch(i.op){case"Cast":return[cast$3(getParamValue("x",i,s,o),getParamValue("dtype",i,s,o))];case"ExpandDims":{const a=getParamValue("axis",i,s,o);return[expandDims$3(getParamValue("x",i,s,o),a)]}case"Squeeze":{const a=getParamValue("axis",i,s,o);return[squeeze(getParamValue("x",i,s,o),a)]}case"Reshape":return[reshape$3(getParamValue("x",i,s,o),getParamValue("shape",i,s,o))];case"MirrorPad":return[mirrorPad$1(getParamValue("x",i,s,o),getParamValue("padding",i,s,o),getParamValue("mode",i,s,o))];case"PadV2":case"Pad":return[pad(getParamValue("x",i,s,o),getParamValue("padding",i,s,o),getParamValue("constantValue",i,s,o))];case"SpaceToBatchND":{const a=getParamValue("blockShape",i,s,o),c=getParamValue("paddings",i,s,o);return[spaceToBatchND$2(getParamValue("x",i,s,o),a,c)]}case"BatchToSpaceND":{const a=getParamValue("blockShape",i,s,o),c=getParamValue("crops",i,s,o);return[batchToSpaceND$2(getParamValue("x",i,s,o),a,c)]}case"DepthToSpace":{const a=getParamValue("blockSize",i,s,o),c=getParamValue("dataFormat",i,s,o).toUpperCase();return[depthToSpace$2(getParamValue("x",i,s,o),a,c)]}case"BroadcastTo":return[broadcastTo(getParamValue("x",i,s,o),getParamValue("shape",i,s,o))];default:throw TypeError(`Node type ${i.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function executeOp(i,s,o,a){const c=((d,g,b)=>{switch(d.category){case"arithmetic":return tidy(()=>executeOp$h(d,g,b));case"basic_math":return tidy(()=>executeOp$g(d,g,b));case"control":return executeOp$f(d,g,b);case"convolution":return tidy(()=>executeOp$e(d,g,b));case"creation":return tidy(()=>executeOp$d(d,g,b));case"dynamic":return executeOp$c(d,g,b);case"evaluation":return tidy(()=>executeOp$b(d,g,b));case"image":return tidy(()=>executeOp$8(d,g,b));case"graph":return tidy(()=>executeOp$a(d,g,b));case"logical":return tidy(()=>executeOp$7(d,g,b));case"matrices":return tidy(()=>executeOp$6(d,g,b));case"normalization":return tidy(()=>executeOp$5(d,g,b));case"reduction":return tidy(()=>executeOp$4(d,g,b));case"slice_join":return tidy(()=>executeOp$3(d,g,b));case"spectral":return tidy(()=>executeOp$2(d,g,b));case"transformation":return tidy(()=>executeOp$1(d,g,b));case"hash_table":return executeOp$9(d,g,b,a);case"custom":const $=getRegisteredOp(d.op);if($&&$.customExecutor)return $.customExecutor(new NodeValueImpl(d,g,b));throw TypeError(`Custom op ${d.op} is not registered.`);default:throw TypeError(`Unknown op '${d.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(i,s,o);return isPromise(c)?c.then(d=>[].concat(d)):[].concat(c)}class ExecutionContext{constructor(s={},o={},a={},c={}){this.weightMap=s,this.tensorArrayMap=o,this.tensorListMap=a,this.functionMap=c,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(s,o){return{id:s,frameName:o,iterationId:0}}set currentContext(s){this.contexts!==s&&(this.contexts=s,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const s=[];for(let o=0;o<this.contexts.length-1;o++){const a=this.contexts.slice(0,this.contexts.length-o);s.push(this.contextIdforContexts(a))}s.push(""),this._currentContextIds=s}contextIdforContexts(s){return s?s.map(o=>o.id===0&&o.iterationId===0?"":`${o.frameName}-${o.iterationId}`).join("/"):""}enterFrame(s){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,s)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const s=Object.assign({},this.contexts[this.contexts.length-1]);s.iterationId+=1,s.id=this.lastId,this.contexts.splice(-1,1,s),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(s){return this.weightMap[s]}addTensorArray(s){this.tensorArrayMap[s.id]=s}getTensorArray(s){return this.tensorArrayMap[s]}addTensorList(s){this.tensorListMap[s.id]=s}getTensorList(s){return this.tensorListMap[s]}dispose(s){for(const o in this.tensorArrayMap)this.tensorArrayMap[o].clearAndClose(s);for(const o in this.tensorListMap)this.tensorListMap[o].clearAndClose(s)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getExecutionSubgraph(i,s,o,a){const c=new Set,d=[];let g=null,b=null;const $=new Set,_=Object.keys(i).map(rt=>parseNodeName(rt)[0]);let _e=[];a!=null&&(_e=a.map(rt=>parseNodeName(rt.name)[0]));const et=[...s];for(;et.length>0;){const rt=et.pop();if((isControlFlow(rt)||isDynamicShape(rt)||isHashTable(rt))&&g==null&&(g=rt,b=g.children.map(tt=>tt.name).filter(tt=>c.has(tt))),c.add(rt.name),o[rt.name]==null&&_.indexOf(rt.name)===-1&&_e.indexOf(rt.name)===-1){if(rt.inputs.length===0){d.push(rt.name);continue}rt.inputs.forEach(tt=>{$.has(tt.name)||($.add(tt.name),et.push(tt))})}}return{inputs:i,outputs:s,usedNodes:c,missingInputs:d,dynamicNode:g,syncInputs:b}}function getNodesInTopologicalOrder(i,s,o){const{usedNodes:a,inputs:c}=o,d=[],g=Object.keys(c).map(_e=>parseNodeName(_e)[0]).map(_e=>i.nodes[_e]),b=i.initNodes;g.forEach(_e=>{a.has(_e.name)&&d.push(_e)}),i.weights.forEach(_e=>{a.has(_e.name)&&d.push(_e)}),b!=null&&b.forEach(_e=>{a.has(_e.name)&&d.push(_e)});const $=new Set,_=[];for(;d.length>0;){const _e=d.pop();$.add(_e.name),s[_e.name]||_.push(_e),_e.children.forEach(et=>{!$.has(et.name)&&a.has(et.name)&&et.inputs.every(rt=>$.has(rt.name))&&d.push(et)})}return _}const CONTROL_FLOW_OPS=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],DYNAMIC_SHAPE_OPS=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],HASH_TABLE_OPS=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function isControlFlow(i){return CONTROL_FLOW_OPS.indexOf(i.op)>=0}function isDynamicShape(i){return DYNAMIC_SHAPE_OPS.indexOf(i.op)>=0}function isHashTable(i){return HASH_TABLE_OPS.indexOf(i.op)>=0}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GraphExecutor{constructor(s,o){this.graph=s,this.parent=o,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=s.outputs,this._inputs=s.inputs,this._initNodes=s.initNodes,this._signature=s.signature,this._functions=s.functions,s.functions!=null&&Object.keys(s.functions).forEach(a=>{this._functionExecutorMap[a]=new GraphExecutor(s.functions[a],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(s){const o=Object.keys(s).map(a=>s[a].map(c=>c.id));this._weightIds=[].concat(...o),this._weightMap=s}set resourceManager(s){this._resourceManager=s}get inputs(){return this._inputs.map(s=>({name:s.name,shape:s.attrParams.shape?s.attrParams.shape.value:void 0,dtype:s.attrParams.dtype?s.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(s=>({name:s.name,shape:s.attrParams.shape?s.attrParams.shape.value:void 0,dtype:s.attrParams.dtype?s.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(s=>s.signatureKey||s.name)}get outputNodes(){return this._outputs.map(s=>{const o=s.signatureKey||s.name;return s.defaultOutput?`${o}:${s.defaultOutput}`:o})}get functions(){return Object.keys(this._functions).reduce((s,o)=>(s[o]=this._functions[o].signature,s),{})}getCompilationKey(s,o){const a=s.map(d=>d.name).sort(),c=o.map(d=>d.name).sort();return a.join(this.SEPERATOR)+"--"+c.join(this.SEPERATOR)}compile(s,o){const a=getExecutionSubgraph(s,o,this.weightMap,this._initNodes),{missingInputs:c,dynamicNode:d,syncInputs:g}=a;if(d!=null)throw new Error(`This execution contains the node '${d.name}', which has the dynamic op '${d.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${g}]`);if(c.length>0){const b=o.map(_=>_.name),$=Object.keys(s);throw new Error(`Cannot compute the outputs [${b}] from the provided inputs [${$}]. Missing the following inputs: [${c}]`)}return getNodesInTopologicalOrder(this.graph,this.weightMap,a)}execute(s,o){s=this.mapInputs(s);const a=Object.keys(s).sort();this.checkInputs(s),this.checkInputShapeAndType(s),o=this.mapOutputs(o),this.checkOutputs(o);const c=a.map(et=>this.graph.nodes[parseNodeName(et)[0]]),d=o.map(et=>parseNodeName(et)[0]);let g=d.map(et=>this.graph.nodes[et]);g.length===0&&(g=this._outputs);const b=this.getCompilationKey(c,g);let $=this.compiledMap.get(b);$==null&&($=this.compile(s,g),this.compiledMap.set(b,$));const _={},_e={};return tidy(()=>{const et=new ExecutionContext(this.weightMap,_,_e,this.functionExecutorMap),rt=Object.assign({},this.weightMap);Object.keys(s).forEach(nt=>{const[st,ot]=parseNodeName(nt),ut=[];ut[ot]=s[nt],rt[st]=ut});const tt=this.getFrozenTensorIds(rt),j={};for(let nt=0;nt<$.length;nt++){const st=$[nt];if(!rt[st.name]){const ot=executeOp(st,rt,et,this._resourceManager);if(isPromise(ot))throw new Error(`The execution of the op '${st.op}' returned a promise. Please use model.executeAsync() instead.`);rt[st.name]=ot,this.checkTensorForDisposal(st.name,st,rt,et,tt,d,j)}}return this.parent==null&&et.dispose(tt),o.map(nt=>getTensor(nt,rt,et))})}getFrozenTensorIds(s){const o=[].concat.apply([],Object.keys(s).map(a=>s[a]).map(a=>a.map(c=>c.id)));return new Set(o)}checkTensorForDisposal(s,o,a,c,d,g,b){o.category==="control"||g.indexOf(s)!==-1||(a[s].forEach($=>{$!=null&&(b[$.id]=(b[$.id]||0)+o.children.length)}),o.inputs.forEach($=>{if($.category!=="control"){const _=getTensorsForCurrentContenxt($.name,a,c);_!=null&&_.forEach(_e=>{if(_e&&!d.has(_e.id)){const et=b[_e.id];et===1?(_e.dispose(),delete b[_e.id]):et!=null&&b[_e.id]--}})}}))}async executeAsync(s,o){return this._executeAsync(s,o)}async _executeAsync(s,o,a=!1,c={},d={}){a||(s=this.mapInputs(s),this.checkInputs(s),this.checkInputShapeAndType(s),o=this.mapOutputs(o),this.checkOutputs(o));const g=new ExecutionContext(this.weightMap,c,d,this.functionExecutorMap),b=await this.executeWithControlFlow(s,g,o,a),$=o.map(rt=>getTensor(rt,b,g)),_=$.map(rt=>rt.id),_e=Object.keys(s).map(rt=>s[rt].id),et=new Set([..._,..._e,...this.weightIds]);return Object.keys(b).forEach(rt=>{b[rt].forEach(j=>{j&&!j.isDisposed&&!et.has(j.id)&&j.dispose()})}),this.parent==null&&g.dispose(et),$}async executeFunctionAsync(s,o,a){const c=s.reduce((d,g,b)=>(d[this.inputs[b].name]=g,d),{});return this._executeAsync(c,this.outputNodes,!0,o,a)}async executeWithControlFlow(s,o,a,c){const d=Object.keys(s),g=d.map(ht=>this.graph.nodes[parseNodeName(ht)[0]]),b=a.map(ht=>parseNodeName(ht)[0]);let $=b.map(ht=>this.graph.nodes[ht]);$.length===0&&($=this._outputs);const{usedNodes:_,missingInputs:_e,dynamicNode:et,syncInputs:rt}=getExecutionSubgraph(s,$,this.weightMap,this._initNodes),tt=[...g,...this.graph.weights,...this._initNodes||[]].map(ht=>({node:ht,contexts:o.currentContext})),j=Object.assign({},this.weightMap);Object.keys(s).forEach(ht=>{const[pt,it]=parseNodeName(ht),yt=[];yt[it]=s[ht],j[pt]=yt});const nt={},st=this.getFrozenTensorIds(j),ot={};for(;tt.length>0;){const ht=this.processStack(g,tt,o,j,ot,st,b,nt,_);await Promise.all(ht)}et==null&&!c&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const ut=$.filter(ht=>!isControlFlow(ht)&&!getTensor(ht.name,j,o)).map(ht=>ht.name);if(ut.length>0){let ht="";throw et!=null&&(ht=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${rt}]`),new Error(`Cannot compute the outputs [${ut}] from the provided inputs [${d}]. Consider providing the following inputs: [${_e}]. ${ht}`)}return j}processStack(s,o,a,c,d,g,b,$,_){const _e=[];for(;o.length>0;){const et=o.pop();a.currentContext=et.contexts;let rt="";if(et.node.op==="Enter"&&getParamValue("isConstant",et.node,c,a)&&([rt]=getNodeNameAndIndex(et.node.name,a)),c[et.node.name]==null){const tt=executeOp(et.node,c,a,this._resourceManager);rt||([rt]=getNodeNameAndIndex(et.node.name,a));const j=a.currentContext;isPromise(tt)?_e.push(tt.then(nt=>(c[rt]=nt,a.currentContext=j,this.checkTensorForDisposal(rt,et.node,c,a,g,b,$),this.processChildNodes(et.node,o,a,c,d,_),nt))):(c[rt]=tt,this.checkTensorForDisposal(rt,et.node,c,a,g,b,$),this.processChildNodes(et.node,o,a,c,d,_))}else this.processChildNodes(et.node,o,a,c,d,_)}return _e}processChildNodes(s,o,a,c,d,g){s.children.forEach(b=>{const[$]=getNodeNameAndIndex(b.name,a);d[$]||!g.has(b.name)||(b.op==="Merge"?b.inputNames.some(_=>!!getTensor(_,c,a))&&(d[$]=!0,o.push({contexts:a.currentContext,node:b})):b.inputNames.every(_=>!!getTensor(_,c,a))&&(d[$]=!0,o.push({contexts:a.currentContext,node:b})))})}dispose(){Object.keys(this.weightMap).forEach(s=>this.weightMap[s].forEach(o=>o.dispose()))}checkInputShapeAndType(s){Object.keys(s).forEach(o=>{const a=s[o],[c]=parseNodeName(o),d=this.graph.nodes[c];if(d.attrParams.shape&&d.attrParams.shape.value){const g=d.attrParams.shape.value,b=g.length===a.shape.length&&a.shape.every(($,_)=>g[_]===-1||g[_]===$);assert$2(b,()=>`The shape of dict['${d.name}'] provided in model.execute(dict) must be [${g}], but was [${a.shape}]`)}d.attrParams.dtype&&d.attrParams.dtype.value&&assert$2(a.dtype===d.attrParams.dtype.value,()=>`The dtype of dict['${d.name}'] provided in model.execute(dict) must be ${d.attrParams.dtype.value}, but was ${a.dtype}`)})}mapInputs(s){const o={};for(const a in s)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[a]!=null){const c=this._signature.inputs[a];o[c.name]=s[a]}else o[a]=s[a];return o}checkInputs(s){const o=Object.keys(s).filter(a=>{const[c]=parseNodeName(a);return this.graph.nodes[c]==null});if(o.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${o}] that are not part of graph`)}mapOutputs(s){return s.map(o=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[o]!=null?this._signature.outputs[o].name:o,{})}checkOutputs(s){s.forEach(o=>{const[a]=parseNodeName(o);if(!this.graph.nodes[a])throw new Error(`The output '${o}' is not found in the graph`)})}}class ResourceManager{constructor(s={},o={}){this.hashTableNameToHandle=s,this.hashTableMap=o}addHashTable(s,o){this.hashTableNameToHandle[s]=o.handle,this.hashTableMap[o.id]=o}getHashTableHandleByName(s){return this.hashTableNameToHandle[s]}getHashTableById(s){return this.hashTableMap[s]}dispose(){for(const s in this.hashTableMap)this.hashTableMap[s].clearAndClose(),delete this.hashTableMap[s];for(const s in this.hashTableNameToHandle)this.hashTableNameToHandle[s].dispose(),delete this.hashTableNameToHandle[s]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TFHUB_SEARCH_PARAM="?tfjs-format=file",DEFAULT_MODEL_NAME="model.json";class GraphModel{constructor(s,o={}){this.modelUrl=s,this.loadOptions=o,this.version="n/a",o==null&&(this.loadOptions={}),this.resourceManager=new ResourceManager}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const s=this.modelUrl;if(s.load!=null)this.handler=s;else if(this.loadOptions.requestInit!=null)this.handler=browserHTTPRequest(s,this.loadOptions);else{const o=getLoadHandlers(s,this.loadOptions);if(o.length===0)o.push(browserHTTPRequest(s,this.loadOptions));else if(o.length>1)throw new Error(`Found more than one (${o.length}) load handlers for URL '${[s]}'`);this.handler=o[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await this.handler.load();return this.loadSync(s)}loadSync(s){this.artifacts=s;const o=this.artifacts.modelTopology;let a;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?a=this.artifacts.userDefinedMetadata.signature:a=this.artifacts.signature,this.signature=a,this.version=`${o.versions.producer}.${o.versions.minConsumer}`;const c=decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new GraphExecutor(OperationMapper.Instance.transformGraph(o,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(c),this.executor.resourceManager=this.resourceManager,s.modelInitializer!=null&&s.modelInitializer.node!=null){const d=OperationMapper.Instance.transformGraph(s.modelInitializer);this.initializer=new GraphExecutor(d),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(s,o){if(typeof s=="string"){const a=getSaveHandlers(s);if(a.length===0)throw new Error(`Cannot find any save handlers for URL '${s}'`);if(a.length>1)throw new Error(`Found more than one (${a.length}) save handlers for URL '${s}'`);s=a[0]}if(s.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return s.save(this.artifacts)}predict(s,o){return this.execute(s,this.outputNodes)}normalizeInputs(s){if(!(s instanceof Tensor)&&!Array.isArray(s))return s;if(s=Array.isArray(s)?s:[s],s.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${s.length} input tensors.`);return this.inputNodes.reduce((o,a,c)=>(o[a]=s[c],o),{})}normalizeOutputs(s){return s=s||this.outputNodes,Array.isArray(s)?s:[s]}execute(s,o){s=this.normalizeInputs(s),o=this.normalizeOutputs(o);const a=this.executor.execute(s,o);return a.length>1?a:a[0]}async executeAsync(s,o){s=this.normalizeInputs(s),o=this.normalizeOutputs(o);const a=await this.executor.executeAsync(s,o);return a.length>1?a:a[0]}convertTensorMapToTensorsMap(s){return Object.keys(s).reduce((o,a)=>(o[a]=[s[a]],o),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function loadGraphModel(i,s={}){if(i==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");s==null&&(s={}),s.fromTFHub&&i.load==null&&(i.endsWith("/")||(i=i+"/"),i=`${i}${DEFAULT_MODEL_NAME}${TFHUB_SEARCH_PARAM}`);const o=new GraphModel(i,s);return await o.load(),o}/** @license See the LICENSE file. */const version$6="2.8.6";var alea$3={exports:{}};alea$3.exports;(function(i){(function(s,o,a){function c($){var _=this,_e=b();_.next=function(){var et=2091639*_.s0+_.c*23283064365386963e-26;return _.s0=_.s1,_.s1=_.s2,_.s2=et-(_.c=et|0)},_.c=1,_.s0=_e(" "),_.s1=_e(" "),_.s2=_e(" "),_.s0-=_e($),_.s0<0&&(_.s0+=1),_.s1-=_e($),_.s1<0&&(_.s1+=1),_.s2-=_e($),_.s2<0&&(_.s2+=1),_e=null}function d($,_){return _.c=$.c,_.s0=$.s0,_.s1=$.s1,_.s2=$.s2,_}function g($,_){var _e=new c($),et=_&&_.state,rt=_e.next;return rt.int32=function(){return _e.next()*4294967296|0},rt.double=function(){return rt()+(rt()*2097152|0)*11102230246251565e-32},rt.quick=rt,et&&(typeof et=="object"&&d(et,_e),rt.state=function(){return d(_e,{})}),rt}function b(){var $=4022871197,_=function(_e){_e=_e.toString();for(var et=0;et<_e.length;et++){$+=_e.charCodeAt(et);var rt=.02519603282416938*$;$=rt>>>0,rt-=$,rt*=$,$=rt>>>0,rt-=$,$+=rt*4294967296}return($>>>0)*23283064365386963e-26};return _}o&&o.exports?o.exports=g:a&&a.amd?a(function(){return g}):this.alea=g})(commonjsGlobal,i,!1)})(alea$3);var aleaExports$1=alea$3.exports,xor128$3={exports:{}};xor128$3.exports;(function(i){(function(s,o,a){function c(b){var $=this,_="";$.x=0,$.y=0,$.z=0,$.w=0,$.next=function(){var et=$.x^$.x<<11;return $.x=$.y,$.y=$.z,$.z=$.w,$.w^=$.w>>>19^et^et>>>8},b===(b|0)?$.x=b:_+=b;for(var _e=0;_e<_.length+64;_e++)$.x^=_.charCodeAt(_e)|0,$.next()}function d(b,$){return $.x=b.x,$.y=b.y,$.z=b.z,$.w=b.w,$}function g(b,$){var _=new c(b),_e=$&&$.state,et=function(){return(_.next()>>>0)/4294967296};return et.double=function(){do var rt=_.next()>>>11,tt=(_.next()>>>0)/4294967296,j=(rt+tt)/(1<<21);while(j===0);return j},et.int32=_.next,et.quick=et,_e&&(typeof _e=="object"&&d(_e,_),et.state=function(){return d(_,{})}),et}o&&o.exports?o.exports=g:a&&a.amd?a(function(){return g}):this.xor128=g})(commonjsGlobal,i,!1)})(xor128$3);var xor128Exports$1=xor128$3.exports,xorwow$3={exports:{}};xorwow$3.exports;(function(i){(function(s,o,a){function c(b){var $=this,_="";$.next=function(){var et=$.x^$.x>>>2;return $.x=$.y,$.y=$.z,$.z=$.w,$.w=$.v,($.d=$.d+362437|0)+($.v=$.v^$.v<<4^(et^et<<1))|0},$.x=0,$.y=0,$.z=0,$.w=0,$.v=0,b===(b|0)?$.x=b:_+=b;for(var _e=0;_e<_.length+64;_e++)$.x^=_.charCodeAt(_e)|0,_e==_.length&&($.d=$.x<<10^$.x>>>4),$.next()}function d(b,$){return $.x=b.x,$.y=b.y,$.z=b.z,$.w=b.w,$.v=b.v,$.d=b.d,$}function g(b,$){var _=new c(b),_e=$&&$.state,et=function(){return(_.next()>>>0)/4294967296};return et.double=function(){do var rt=_.next()>>>11,tt=(_.next()>>>0)/4294967296,j=(rt+tt)/(1<<21);while(j===0);return j},et.int32=_.next,et.quick=et,_e&&(typeof _e=="object"&&d(_e,_),et.state=function(){return d(_,{})}),et}o&&o.exports?o.exports=g:a&&a.amd?a(function(){return g}):this.xorwow=g})(commonjsGlobal,i,!1)})(xorwow$3);var xorwowExports$1=xorwow$3.exports,xorshift7$3={exports:{}};xorshift7$3.exports;(function(i){(function(s,o,a){function c(b){var $=this;$.next=function(){var _e=$.x,et=$.i,rt,tt;return rt=_e[et],rt^=rt>>>7,tt=rt^rt<<24,rt=_e[et+1&7],tt^=rt^rt>>>10,rt=_e[et+3&7],tt^=rt^rt>>>3,rt=_e[et+4&7],tt^=rt^rt<<7,rt=_e[et+7&7],rt=rt^rt<<13,tt^=rt^rt<<9,_e[et]=tt,$.i=et+1&7,tt};function _(_e,et){var rt,tt=[];if(et===(et|0))tt[0]=et;else for(et=""+et,rt=0;rt<et.length;++rt)tt[rt&7]=tt[rt&7]<<15^et.charCodeAt(rt)+tt[rt+1&7]<<13;for(;tt.length<8;)tt.push(0);for(rt=0;rt<8&&tt[rt]===0;++rt);for(rt==8?tt[7]=-1:tt[rt],_e.x=tt,_e.i=0,rt=256;rt>0;--rt)_e.next()}_($,b)}function d(b,$){return $.x=b.x.slice(),$.i=b.i,$}function g(b,$){b==null&&(b=+new Date);var _=new c(b),_e=$&&$.state,et=function(){return(_.next()>>>0)/4294967296};return et.double=function(){do var rt=_.next()>>>11,tt=(_.next()>>>0)/4294967296,j=(rt+tt)/(1<<21);while(j===0);return j},et.int32=_.next,et.quick=et,_e&&(_e.x&&d(_e,_),et.state=function(){return d(_,{})}),et}o&&o.exports?o.exports=g:a&&a.amd?a(function(){return g}):this.xorshift7=g})(commonjsGlobal,i,!1)})(xorshift7$3);var xorshift7Exports$1=xorshift7$3.exports,xor4096$3={exports:{}};xor4096$3.exports;(function(i){(function(s,o,a){function c(b){var $=this;$.next=function(){var _e=$.w,et=$.X,rt=$.i,tt,j;return $.w=_e=_e+1640531527|0,j=et[rt+34&127],tt=et[rt=rt+1&127],j^=j<<13,tt^=tt<<17,j^=j>>>15,tt^=tt>>>12,j=et[rt]=j^tt,$.i=rt,j+(_e^_e>>>16)|0};function _(_e,et){var rt,tt,j,nt,st,ot=[],ut=128;for(et===(et|0)?(tt=et,et=null):(et=et+"\0",tt=0,ut=Math.max(ut,et.length)),j=0,nt=-32;nt<ut;++nt)et&&(tt^=et.charCodeAt((nt+32)%et.length)),nt===0&&(st=tt),tt^=tt<<10,tt^=tt>>>15,tt^=tt<<4,tt^=tt>>>13,nt>=0&&(st=st+1640531527|0,rt=ot[nt&127]^=tt+st,j=rt==0?j+1:0);for(j>=128&&(ot[(et&&et.length||0)&127]=-1),j=127,nt=4*128;nt>0;--nt)tt=ot[j+34&127],rt=ot[j=j+1&127],tt^=tt<<13,rt^=rt<<17,tt^=tt>>>15,rt^=rt>>>12,ot[j]=tt^rt;_e.w=st,_e.X=ot,_e.i=j}_($,b)}function d(b,$){return $.i=b.i,$.w=b.w,$.X=b.X.slice(),$}function g(b,$){b==null&&(b=+new Date);var _=new c(b),_e=$&&$.state,et=function(){return(_.next()>>>0)/4294967296};return et.double=function(){do var rt=_.next()>>>11,tt=(_.next()>>>0)/4294967296,j=(rt+tt)/(1<<21);while(j===0);return j},et.int32=_.next,et.quick=et,_e&&(_e.X&&d(_e,_),et.state=function(){return d(_,{})}),et}o&&o.exports?o.exports=g:a&&a.amd?a(function(){return g}):this.xor4096=g})(commonjsGlobal,i,!1)})(xor4096$3);var xor4096Exports$1=xor4096$3.exports,tychei$3={exports:{}};tychei$3.exports;(function(i){(function(s,o,a){function c(b){var $=this,_="";$.next=function(){var et=$.b,rt=$.c,tt=$.d,j=$.a;return et=et<<25^et>>>7^rt,rt=rt-tt|0,tt=tt<<24^tt>>>8^j,j=j-et|0,$.b=et=et<<20^et>>>12^rt,$.c=rt=rt-tt|0,$.d=tt<<16^rt>>>16^j,$.a=j-et|0},$.a=0,$.b=0,$.c=-1640531527,$.d=1367130551,b===Math.floor(b)?($.a=b/4294967296|0,$.b=b|0):_+=b;for(var _e=0;_e<_.length+20;_e++)$.b^=_.charCodeAt(_e)|0,$.next()}function d(b,$){return $.a=b.a,$.b=b.b,$.c=b.c,$.d=b.d,$}function g(b,$){var _=new c(b),_e=$&&$.state,et=function(){return(_.next()>>>0)/4294967296};return et.double=function(){do var rt=_.next()>>>11,tt=(_.next()>>>0)/4294967296,j=(rt+tt)/(1<<21);while(j===0);return j},et.int32=_.next,et.quick=et,_e&&(typeof _e=="object"&&d(_e,_),et.state=function(){return d(_,{})}),et}o&&o.exports?o.exports=g:a&&a.amd?a(function(){return g}):this.tychei=g})(commonjsGlobal,i,!1)})(tychei$3);var tycheiExports$1=tychei$3.exports,seedrandom$3={exports:{}};(function(i){(function(s,o){var a=(0,eval)("this"),c=256,d=6,g=52,b="random",$=o.pow(c,d),_=o.pow(2,g),_e=_*2,et=c-1,rt;function tt(pt,it,yt){var ft=[];it=it==!0?{entropy:!0}:it||{};var bt=ot(st(it.entropy?[pt,ht(s)]:pt??ut(),3),ft),Tt=new j(ft),Ct=function(){for(var _t=Tt.g(d),Ot=$,kt=0;_t<_;)_t=(_t+kt)*c,Ot*=c,kt=Tt.g(1);for(;_t>=_e;)_t/=2,Ot/=2,kt>>>=1;return(_t+kt)/Ot};return Ct.int32=function(){return Tt.g(4)|0},Ct.quick=function(){return Tt.g(4)/4294967296},Ct.double=Ct,ot(ht(Tt.S),s),(it.pass||yt||function(_t,Ot,kt,Rt){return Rt&&(Rt.S&&nt(Rt,Tt),_t.state=function(){return nt(Tt,{})}),kt?(o[b]=_t,Ot):_t})(Ct,bt,"global"in it?it.global:this==o,it.state)}o["seed"+b]=tt;function j(pt){var it,yt=pt.length,ft=this,bt=0,Tt=ft.i=ft.j=0,Ct=ft.S=[];for(yt||(pt=[yt++]);bt<c;)Ct[bt]=bt++;for(bt=0;bt<c;bt++)Ct[bt]=Ct[Tt=et&Tt+pt[bt%yt]+(it=Ct[bt])],Ct[Tt]=it;(ft.g=function(_t){for(var Ot,kt=0,Rt=ft.i,jt=ft.j,Gt=ft.S;_t--;)Ot=Gt[Rt=et&Rt+1],kt=kt*c+Gt[et&(Gt[Rt]=Gt[jt=et&jt+Ot])+(Gt[jt]=Ot)];return ft.i=Rt,ft.j=jt,kt})(c)}function nt(pt,it){return it.i=pt.i,it.j=pt.j,it.S=pt.S.slice(),it}function st(pt,it){var yt=[],ft=typeof pt,bt;if(it&&ft=="object")for(bt in pt)try{yt.push(st(pt[bt],it-1))}catch{}return yt.length?yt:ft=="string"?pt:pt+"\0"}function ot(pt,it){for(var yt=pt+"",ft,bt=0;bt<yt.length;)it[et&bt]=et&(ft^=it[et&bt]*19)+yt.charCodeAt(bt++);return ht(it)}function ut(){try{var pt;return rt&&(pt=rt.randomBytes)?pt=pt(c):(pt=new Uint8Array(c),(a.crypto||a.msCrypto).getRandomValues(pt)),ht(pt)}catch{var it=a.navigator,yt=it&&it.plugins;return[+new Date,a,yt,a.screen,ht(s)]}}function ht(pt){return String.fromCharCode.apply(0,pt)}if(ot(o.random(),s),i.exports){i.exports=tt;try{rt=require$$0$1}catch{}}})([],Math)})(seedrandom$3);var seedrandomExports$1=seedrandom$3.exports,alea$2=aleaExports$1,xor128$2=xor128Exports$1,xorwow$2=xorwowExports$1,xorshift7$2=xorshift7Exports$1,xor4096$2=xor4096Exports$1,tychei$2=tycheiExports$1,sr$1=seedrandomExports$1;sr$1.alea=alea$2;sr$1.xor128=xor128$2;sr$1.xorwow=xorwow$2;sr$1.xorshift7=xorshift7$2;sr$1.xor4096=xor4096$2;sr$1.tychei=tychei$2;var seedrandom$2=sr$1;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function deepMap(i,s){return deepMapInternal(i,s)}function deepMapInternal(i,s,o=new Map,a=new Set){if(i==null)return null;if(a.has(i))throw new Error("Circular references are not supported.");if(o.has(i))return o.get(i);const c=s(i);if(c.recurse&&c.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(c.recurse)if(isIterable(i)){const d=Array.isArray(i)?[]:{};a.add(i);for(const g in i){const b=i[g],$=deepMapInternal(b,s,o,a);d[g]=$}return a.delete(i),d}else throw new Error(`Can't recurse into non-iterable type: ${i}`);else return o.set(i,c.value),c.value}function deepZip(i,s=zipToList){return deepZipInternal(i,s)}function deepZipInternal(i,s,o=new Set){const a=i[0];if(o.has(a))throw new Error("Circular references are not supported.");const c=s(i);if(c.recurse&&c.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(c.recurse)if(isIterable(a)){const d=Array.isArray(a)?[]:{};o.add(a);for(const g in a){const b=i.map(_=>_[g]),$=deepZipInternal(b,s,o);d[g]=$}return o.delete(a),d}else throw new Error(`Can't recurse into non-iterable type: ${a}`);else return c.value}function zipToList(i){return i===null?null:isIterable(i[0])?{value:null,recurse:!0}:{value:i,recurse:!1}}async function deepMapAndAwaitAll(i,s){const o=new Map;deepMapInternal(i,s,o);for(const c of Array.from(o.keys())){const d=o.get(c);if(isPromise(d)){const g=await d;o.set(c,g)}}return deepMapInternal(i,s,o)}function isIterable(i){return i!=null&&!ArrayBuffer.isView(i)&&(Array.isArray(i)||typeof i=="object"&&!(i instanceof Tensor))}function canTensorify(i){return i==null||isPrimitive(i)||Array.isArray(i)||typeof i=="object"&&i instanceof Tensor||isTypedArray(i)}function isPrimitive(i){return i===null||typeof i!="object"&&typeof i!="function"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function deepClone(i){return deepMap(i,cloneIfTensor)}function cloneIfTensor(i){return i instanceof Tensor?{value:i.clone(),recurse:!1}:isIterable(i)?{value:null,recurse:!0}:{value:i,recurse:!1}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class RingBuffer{constructor(s){if(this.capacity=s,this.begin=0,this.end=0,s==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(s<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(s),this.doubledCapacity=2*s}wrap(s){for(;s<0;)s+=this.doubledCapacity;return s%this.doubledCapacity}get(s){if(s<0)throw new RangeError("Can't get item at a negative index.");return this.data[s%this.capacity]}set(s,o){if(s<0)throw new RangeError("Can't set item at a negative index.");this.data[s%this.capacity]=o}length(){let s=this.end-this.begin;return s<0&&(s=this.doubledCapacity+s),s}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(s){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,s),this.end=this.wrap(this.end+1)}pushAll(s){for(const o of s)this.push(o)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const s=this.get(this.end);return this.set(this.end,void 0),s}unshift(s){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,s)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const s=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),s}shuffleExcise(s){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const o=this.wrap(this.begin+s),a=this.get(o);return this.set(o,this.pop()),a}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class GrowingRingBuffer extends RingBuffer{constructor(){super(GrowingRingBuffer.INITIAL_CAPACITY)}isFull(){return!1}push(s){super.isFull()&&this.expand(),super.push(s)}unshift(s){super.isFull()&&this.expand(),super.unshift(s)}expand(){const s=this.capacity*2,o=new Array(s),a=this.length();for(let c=0;c<a;c++)o[c]=this.get(this.wrap(this.begin+c));this.data=o,this.capacity=s,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=a}}GrowingRingBuffer.INITIAL_CAPACITY=32;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function iteratorFromItems(i){return new ArrayIterator(i)}function iteratorFromFunction(i){return new FunctionCallIterator(i)}function iteratorFromConcatenated(i,s){return new ChainedIterator(i,s)}function iteratorFromZipped(i,s=ZipMismatchMode.FAIL){return new ZipIterator(i,s)}class LazyIterator{async toArray(){const s=[];let o=await this.next();for(;!o.done;)s.push(o.value),o=await this.next();return s}async toArrayForTest(){const s=this.prefetch(100),o=[];let a=await s.next();for(;!a.done;)o.push(a.value),a=await s.next();return o}async resolveFully(){let s=await this.next();for(;!s.done;)s=await this.next()}async resolveWhile(s){let o=await this.next(),a=s(o.value);for(;!o.done&&a;)o=await this.next(),a=s(o.value)}handleErrors(s){return new ErrorHandlingLazyIterator(this,s)}filter(s){return new FilterIterator(this,s)}map(s){return new MapIterator(this,s)}mapAsync(s){return new AsyncMapIterator(this,s)}serialMapAsync(s){return new AsyncMapIterator(this,s).serial()}flatmap(s){return new FlatmapIterator(this,s)}async forEachAsync(s){return this.map(s).resolveFully()}async serialForEach(s){return this.serialMapAsync(s).resolveWhile(o=>o===!0)}rowMajorBatch(s,o=!0){return new RowMajorBatchIterator(this,s,o)}columnMajorBatch(s,o=!0,a=zipToList){return this.rowMajorBatch(s,o).map(d=>deepZip(d,a))}concatenate(s,o){return new ChainedIterator(iteratorFromItems([this,s]),o)}take(s){return s<0||s==null?this:new TakeIterator(this,s)}skip(s){return s<0||s==null?this:new SkipIterator(this,s)}prefetch(s){return new PrefetchIterator(this,s)}shuffle(s,o){return new ShuffleIterator(this,s,o)}serial(){return new SerialIterator(this)}}class ArrayIterator extends LazyIterator{constructor(s){super(),this.items=s,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const s=this.items[this.trav];return this.trav++,{value:deepClone(s),done:!1}}}class FunctionCallIterator extends LazyIterator{constructor(s){super(),this.nextFn=s}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(s){throw s.message=`Error thrown while iterating through a dataset: ${s.message}`,s}}}class SerialIterator extends LazyIterator{constructor(s){super(),this.upstream=s,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class SkipIterator extends LazyIterator{constructor(s,o){super(),this.upstream=s,this.maxCount=o,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const s=await this.upstream.next();if(s.done)return s;dispose(s.value)}return this.upstream.next()}}class TakeIterator extends LazyIterator{constructor(s,o){super(),this.upstream=s,this.maxCount=o,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class RowMajorBatchIterator extends LazyIterator{constructor(s,o,a=!0){super(),this.upstream=s,this.batchSize=o,this.enableSmallLastBatch=a,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const s=[];for(;s.length<this.batchSize;){const o=await this.upstream.next();if(o.done)return this.enableSmallLastBatch&&s.length>0?{value:s,done:!1}:{value:null,done:!0};s.push(o.value)}return{value:s,done:!1}}}class FilterIterator extends LazyIterator{constructor(s,o){super(),this.upstream=s,this.predicate=o,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const s=await this.upstream.next();if(s.done||this.predicate(s.value))return s;dispose(s.value)}}}class MapIterator extends LazyIterator{constructor(s,o){super(),this.upstream=s,this.transform=o}summary(){return`${this.upstream.summary()} -> Map`}async next(){const s=await this.upstream.next();if(s.done)return{value:null,done:!0};const o=getTensorsInContainer(s.value),a=this.transform(s.value),c=getTensorsInContainer(a);for(const d of o)isTensorInList(d,c)||d.dispose();return{value:a,done:!1}}}class ErrorHandlingLazyIterator extends LazyIterator{constructor(s,o){super(),this.upstream=s,this.handler=o,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(s){if(!this.handler(s))return{value:null,done:!0}}}}class AsyncMapIterator extends LazyIterator{constructor(s,o){super(),this.upstream=s,this.transform=o}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const s=await this.upstream.next();if(s.done)return{value:null,done:!0};const o=getTensorsInContainer(s.value),a=await this.transform(s.value),c=getTensorsInContainer(a);for(const d of o)isTensorInList(d,c)||d.dispose();return{value:a,done:!1}}}class OneToManyIterator extends LazyIterator{constructor(){super(),this.outputQueue=new GrowingRingBuffer,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class FlatmapIterator extends OneToManyIterator{constructor(s,o){super(),this.upstream=s,this.transform=o}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const s=await this.upstream.next();if(s.done)return!1;const o=getTensorsInContainer(s.value),a=this.transform(s.value),c=getTensorsInContainer(a);this.outputQueue.pushAll(a);for(const d of o)isTensorInList(d,c)||d.dispose();return!0}}class ChainedIterator extends LazyIterator{constructor(s,o){super(),this.baseErrorHandler=o,this.lastRead=null,this.iterator=null,this.moreIterators=s}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(s){if(await s,this.iterator==null){const a=await this.moreIterators.next();if(a.done)return{value:null,done:!0};this.iterator=a.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const o=await this.iterator.next();return o.done?(this.iterator=null,this.readFromChain(s)):o}}var ZipMismatchMode;(function(i){i[i.FAIL=0]="FAIL",i[i.SHORTEST=1]="SHORTEST",i[i.LONGEST=2]="LONGEST"})(ZipMismatchMode||(ZipMismatchMode={}));class ZipIterator extends LazyIterator{constructor(s,o=ZipMismatchMode.FAIL){super(),this.iterators=s,this.mismatchMode=o,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(s){await s;let o=0,a=0;function c(g){return g instanceof LazyIterator?{value:g.next().then($=>(o++,$.done&&a++,$.value)),recurse:!1}:{value:null,recurse:!0}}const d=await deepMapAndAwaitAll(this.iterators,c);if(o===a)return{value:null,done:!0};if(a>0)switch(this.mismatchMode){case ZipMismatchMode.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case ZipMismatchMode.SHORTEST:return{value:null,done:!0};case ZipMismatchMode.LONGEST:}return this.count++,{value:d,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class PrefetchIterator extends LazyIterator{constructor(s,o){super(),this.upstream=s,this.bufferSize=o,this.buffer=new RingBuffer(o)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const s=this.upstream.next();this.buffer.push(s)}}next(){return this.refill(),this.buffer.shift()}}class ShuffleIterator extends PrefetchIterator{constructor(s,o,a){super(s,o),this.upstream=s,this.windowSize=o,this.upstreamExhausted=!1,this.random=seedrandom$2.alea(a||now$1().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(s){return Math.floor(this.random()*s)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const s=this.chooseIndex(),o=await this.buffer.shuffleExcise(s);if(o.done)this.upstreamExhausted=!0;else return this.refill(),o}return{value:null,done:!0}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Dataset{constructor(){this.size=null}batch(s,o=!0){const a=this;assert$2(s>0,()=>`batchSize needs to be positive, but it is
      ${s}`);let c;return this.size===1/0||this.size==null?c=this.size:o?c=Math.ceil(this.size/s):c=Math.floor(this.size/s),datasetFromIteratorFn(async()=>(await a.iterator()).columnMajorBatch(s,o,deepBatchConcat),c)}concatenate(s){const o=this;let a;return this.size===1/0||s.size===1/0?a=1/0:this.size!=null&&s.size!=null?a=this.size+s.size:a=null,datasetFromIteratorFn(async()=>(await o.iterator()).concatenate(await s.iterator()),a)}filter(s){const o=this;let a;return this.size===1/0?a=1/0:a=null,datasetFromIteratorFn(async()=>(await o.iterator()).filter(c=>tidy(()=>s(c))),a)}async forEachAsync(s){return(await this.iterator()).forEachAsync(s)}map(s){const o=this;return datasetFromIteratorFn(async()=>(await o.iterator()).map(a=>tidy(()=>s(a))),this.size)}mapAsync(s){const o=this;return datasetFromIteratorFn(async()=>(await o.iterator()).mapAsync(s),this.size)}prefetch(s){if(s==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const o=this;return datasetFromIteratorFn(async()=>(await o.iterator()).prefetch(s),this.size)}repeat(s){const o=this;let a;return this.size!=null&&s>0?a=this.size*s:s===0?a=0:this.size!=null&&(s===void 0||s<0)?a=1/0:a=null,datasetFromIteratorFn(async()=>{const c=iteratorFromFunction(async()=>({value:await o.iterator(),done:!1}));return iteratorFromConcatenated(c.take(s))},a)}skip(s){const o=this;let a;return this.size!=null&&s>=0&&this.size>=s?a=this.size-s:this.size!=null&&(this.size<s||s===void 0||s<0)?a=0:a=null,datasetFromIteratorFn(async()=>(await o.iterator()).skip(s),a)}shuffle(s,o,a=!0){if(s==null||s<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const c=this,d=seedrandom$2.alea(o||now$1().toString());return datasetFromIteratorFn(async()=>{let g=d.int32();return a&&(g+=d.int32()),(await c.iterator()).shuffle(s,g.toString())},this.size)}take(s){const o=this;let a;return this.size!=null&&this.size>s?a=s:this.size!=null&&this.size<=s?a=this.size:a=null,datasetFromIteratorFn(async()=>(await o.iterator()).take(s),a)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}Dataset.MAX_BUFFER_SIZE=1e4;function datasetFromIteratorFn(i,s=null){return new class extends Dataset{constructor(){super(...arguments),this.size=s}async iterator(){return i()}}}function array(i){return datasetFromIteratorFn(async()=>iteratorFromItems(i),i.length)}function zip(i){if(!isIterable(i))throw new Error("The argument to zip() must be an object or array.");let s;if(Array.isArray(i))for(let o=0;o<i.length;o++)s=s==null?i[o].size:Math.min(s,i[o].size);else if(i instanceof Object)for(const o in i)s=s==null?i[o].size:Math.min(s,i[o].size);return datasetFromIteratorFn(async()=>{const o=await deepMapAndAwaitAll(i,a=>{if(a instanceof Dataset)return{value:a.iterator(),recurse:!1};if(isIterable(a))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return iteratorFromZipped(o,ZipMismatchMode.SHORTEST)},s)}function deepBatchConcat(i){if(i===null)return null;const s=i[0];return canTensorify(s)?{value:batchConcat(i),recurse:!1}:{value:null,recurse:!0}}function batchConcat(i){if(i.length===0)throw new Error("Can't make a batch of zero elements.");return i[0]instanceof Tensor?stack(i):tensor(i)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class TextLineDataset extends Dataset{constructor(s){super(),this.input=s}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(c=>(c.endsWith("\r")&&(c=c.slice(0,-1)),c))}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */const CODE_QUOTE='"',STATE_OUT=Symbol("out"),STATE_FIELD=Symbol("field"),STATE_QUOTE=Symbol("quote"),STATE_QUOTE_AFTER_QUOTE=Symbol("quoteafterquote"),STATE_WITHIN_QUOTE_IN_QUOTE=Symbol("quoteinquote");class CSVDataset extends Dataset{constructor(s,o){super(),this.input=s,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new TextLineDataset(s),o||(o={}),this.hasHeader=o.hasHeader!==!1,this.fullColumnNames=o.columnNames,this.columnConfigs=o.columnConfigs,this.configuredColumnsOnly=o.configuredColumnsOnly,o.delimWhitespace?(assert$2(o.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=o.delimiter?o.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const s=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!s)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&s&&assert$2(s.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+s.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=s);const o=this.fullColumnNames.reduce((c,d)=>(c[d]=c[d]+1||1,c),{}),a=Object.keys(o).filter(c=>o[c]>1);if(assert$2(a.length===0,()=>"Duplicate column names found: "+a.toString()),this.columnConfigs){for(const c of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(c)===-1)throw new Error('The key "'+c+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const o=await(await this.base.iterator()).next();if(o.done)throw new Error("No data was found for CSV parsing.");const a=o.value;return this.parseRow(a,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let s=await this.base.iterator();return this.hasHeader&&(s=s.skip(1)),s.map(o=>this.makeDataElement(o))}makeDataElement(s){const o=this.parseRow(s),a={},c={};for(let d=0;d<this.fullColumnNames.length;d++){const g=this.fullColumnNames[d],b=this.columnConfigs?this.columnConfigs[g]:null;if(!(this.configuredColumnsOnly&&!b)){const $=o[d];let _=null;if($==="")if(b&&b.default!==void 0)_=b.default;else{if(b&&(b.required||b.isLabel))throw new Error(`Required column ${g} is empty in this line: ${s}`);_=void 0}else{const _e=Number($);if(isNaN(_e))b&&b.dtype==="bool"?_=this.getBoolean($):_=$;else if(!b||!b.dtype)_=_e;else switch(b.dtype){case"float32":_=_e;break;case"int32":_=Math.floor(_e);break;case"bool":_=this.getBoolean($);break;default:_=_e}}b&&b.isLabel?c[g]=_:a[g]=_}}return Object.keys(c).length===0?a:{xs:a,ys:c}}getBoolean(s){return s==="1"||s.toLowerCase()==="true"?1:0}parseRow(s,o=!0){const a=[];let c=0;const d=s.length;let g=STATE_OUT;for(let b=0;b<d;b++)switch(g){case STATE_OUT:switch(s.charAt(b)){case CODE_QUOTE:c=b+1,g=STATE_QUOTE;break;case this.delimiter:if(c=b+1,this.delimiter===" "&&this.delimWhitespace)break;a.push(""),g=STATE_OUT;break;default:g=STATE_FIELD,c=b;break}break;case STATE_FIELD:switch(s.charAt(b)){case this.delimiter:a.push(s.substring(c,b)),g=STATE_OUT,c=b+1;break}break;case STATE_QUOTE:switch(s.charAt(b)){case CODE_QUOTE:g=STATE_QUOTE_AFTER_QUOTE;break}break;case STATE_QUOTE_AFTER_QUOTE:switch(s.charAt(b)){case this.delimiter:a.push(s.substring(c,b-1)),g=STATE_OUT,c=b+1;break;case CODE_QUOTE:g=STATE_QUOTE;break;default:g=STATE_WITHIN_QUOTE_IN_QUOTE;break}break;case STATE_WITHIN_QUOTE_IN_QUOTE:switch(s.charAt(b)){case CODE_QUOTE:g=STATE_QUOTE;break}break}if(g===STATE_QUOTE_AFTER_QUOTE?a.push(s.substring(c,d-1)):a.push(s.substring(c)),o&&a.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${a}`);return a}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class MicrophoneIterator extends LazyIterator{constructor(s){super(),this.microphoneConfig=s,this.isClosed=!1,this.fftSize=s.fftSize||1024;const o=Math.log2(this.fftSize);if(this.fftSize<0||o<4||o>14||!Number.isInteger(o))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=s.numFramesPerSpectrogram||43,this.sampleRateHz=s.sampleRateHz,this.columnTruncateLength=s.columnTruncateLength||this.fftSize,this.audioTrackConstraints=s.audioTrackConstraints,this.smoothingTimeConstant=s.smoothingTimeConstant||0,this.includeSpectrogram=s.includeSpectrogram!==!1,this.includeWaveform=s.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(s={}){if(env().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const o=new MicrophoneIterator(s);return await o.start(),o}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(a){throw new Error(`Error thrown while initializing video stream: ${a.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const s=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new s,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);const o=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,o.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let s,o;const a=await this.getAudioData();if(this.includeSpectrogram){const c=this.flattenQueue(a.freqDataQueue);s=this.getTensorFromAudioDataArray(c,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const c=this.flattenQueue(a.timeDataQueue);o=this.getTensorFromAudioDataArray(c,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:s,waveform:o},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const s=[],o=[];let a=0;return new Promise(c=>{const d=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&c({freqDataQueue:s,timeDataQueue:o}),s.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),o.push(this.timeData.slice())),++a===this.numFrames&&(clearInterval(d),c({freqDataQueue:s,timeDataQueue:o}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(s){const o=s[0].length,a=new Float32Array(s.length*o);return s.forEach((c,d)=>a.set(c,d*o)),a}getTensorFromAudioDataArray(s,o){const a=new Float32Array(sizeFromShape(o));return a.set(s,a.length-s.length),tensor(a,o)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class WebcamIterator extends LazyIterator{constructor(s,o){if(super(),this.webcamVideoElement=s,this.webcamConfig=o,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=tensor1d([0],"int32"),this.webcamConfig.centerCrop){const a=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,c=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,d=(1-a)/2,g=(1-c)/2,b=d+a,$=c+g;this.cropBox=tensor2d([g,d,$,b],[1,4])}else this.cropBox=tensor2d([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(s,o={}){if(env().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!s){if(s=document.createElement("video"),!o.resizeWidth||!o.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");s.width=o.resizeWidth,s.height=o.resizeHeight}const a=new WebcamIterator(s,o);return await a.start(),a}async start(){this.webcamConfig.facingMode&&assert$2(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(s){throw s.message=`Error thrown while initializing video stream: ${s.message}`,s}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(s){console.log(s),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(s=>{this.webcamVideoElement.onloadedmetadata=()=>{s()}})}async next(){if(this.isClosed)return{value:null,done:!0};let s;try{s=fromPixels$1(this.webcamVideoElement)}catch(o){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(o)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(s),done:!1}}catch(o){throw new Error(`Error thrown cropping the video: ${o.message}`)}finally{s.dispose()}else return{value:s,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(s){return tidy(()=>{const o=s.toFloat().expandDims(0);let a;a=image$1.cropAndResize(o,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const c=a.shape;return a.reshape(c.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(o=>o.stop());try{this.webcamVideoElement.srcObject=null}catch(o){console.log(o),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class DataSource{}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class StringIterator extends LazyIterator{split(s){return new SplitIterator(this,s)}}class SplitIterator extends StringIterator{constructor(s,o){super(),this.upstream=s,this.impl=new SplitIteratorImpl(s,o)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class SplitIteratorImpl extends OneToManyIterator{constructor(s,o){super(),this.upstream=s,this.separator=o,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const s=await this.upstream.next();if(s.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);const o=s.value.split(this.separator);o[0]=this.carryover+o[0];for(const a of o.slice(0,-1))this.outputQueue.push(a);return this.carryover=o[o.length-1],!0}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class ByteChunkIterator extends LazyIterator{decodeUTF8(){return new Utf8Iterator(this)}}class Utf8Iterator extends StringIterator{constructor(s){super(),this.upstream=s,this.impl=new Utf8IteratorImpl(s)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class Utf8IteratorImpl extends OneToManyIterator{constructor(s){if(super(),this.upstream=s,env().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:o}=require("string_decoder");this.decoder=new o("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const s=await this.upstream.next();let o;if(s.done)return!1;o=s.value;let a;return env().get("IS_BROWSER")?a=this.decoder.decode(o,{stream:!0}):a=this.decoder.write(Buffer.from(o.buffer)),this.outputQueue.push(a),!0}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class FileChunkIterator extends ByteChunkIterator{constructor(s,o={}){super(),this.file=s,this.options=o,assert$2(s instanceof Uint8Array||(env().get("IS_BROWSER")?s instanceof File||s instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=o.offset||0,this.chunkSize=o.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((o,a)=>{const c=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)o(new Uint8Array(this.file.slice(this.offset,c)));else{const d=new FileReader;d.onload=b=>{let $=d.result;if($ instanceof ArrayBuffer&&($=new Uint8Array($)),!($ instanceof Uint8Array))return a(new TypeError("FileReader returned unknown type."));o($)},d.onabort=b=>a(new Error("Aborted")),d.onerror=b=>a(new Error(b.type));const g=this.file.slice(this.offset,c);d.readAsArrayBuffer(g)}this.offset=c}),done:!1}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */async function urlChunkIterator(i,s={}){let o,a;typeof i=="string"?o=i:(o=i.url,a=getRequestInitFromRequest(i));const c=await fetch$1(o,a);if(c.ok){const d=new Uint8Array(await c.arrayBuffer());return new FileChunkIterator(d,s)}else throw new Error(c.statusText)}const getRequestInitFromRequest=i=>({method:i.method,headers:i.headers,body:i.body,mode:i.mode,credentials:i.credentials,cache:i.cache,redirect:i.redirect,referrer:i.referrer,integrity:i.integrity});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function isLocalPath(i){return typeof i=="string"&&i.substr(0,7)==="file://"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class FileDataSource extends DataSource{constructor(s,o={}){super(),this.input=s,this.options=o}async iterator(){if(isLocalPath(this.input)&&env().get("IS_NODE")){const s=require("fs");this.input=s.readFileSync(this.input.substr(7))}return new FileChunkIterator(this.input,this.options)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class URLDataSource extends DataSource{constructor(s,o={}){super(),this.url=s,this.fileOptions=o}async iterator(){return isLocalPath(this.url)?new FileDataSource(this.url,this.fileOptions).iterator():urlChunkIterator(this.url,this.fileOptions)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function csv(i,s={}){return new CSVDataset(new URLDataSource(i),s)}function func(i){const s=iteratorFromFunction(i);return datasetFromIteratorFn(async()=>s)}function generator(i){return datasetFromIteratorFn(async()=>{const s=await i();return iteratorFromFunction(()=>s.next())})}async function webcam(i,s){return WebcamIterator.create(i,s)}async function microphone(i){return MicrophoneIterator.create(i)}/** @license See the LICENSE file. */const version$5="2.8.6";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const index$1=Object.freeze(Object.defineProperty({__proto__:null,CSVDataset,Dataset,FileDataSource,TextLineDataset,URLDataSource,array,csv,func,generator,microphone,version_data:version$5,webcam,zip},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function assertNotComplex$1(i,s){Array.isArray(i)||(i=[i]),i.forEach(o=>{o!=null&&assert$2(o.dtype!=="complex64",()=>`${s} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const whereImpl$1=whereImpl$2;class MathBackendCPU extends KernelBackend{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new DataStorage(this,engine())}write(s,o,a){this.firstUse&&(this.firstUse=!1,env().get("IS_NODE")&&warn$1(`
============================
Hi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));const c={};return this.data.set(c,{values:s,dtype:a,refCount:1}),c}makeTensorInfo(s,o,a){let c;if(o==="string"&&a!=null&&a.length>0&&isString$1(a[0])){const d=a.map(g=>encodeString(g));c=this.write(d,s,o)}else c=this.write(a,s,o);return{dataId:c,shape:s,dtype:o}}incRef(s){const o=this.data.get(s);o.refCount++}decRef(s){if(this.data.has(s)){const o=this.data.get(s);o.refCount--}}move(s,o,a,c){this.data.set(s,{values:o,dtype:c,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(s){return this.readSync(s)}readSync(s){const{dtype:o,complexTensorInfos:a}=this.data.get(s);if(o==="complex64"){const c=this.readSync(a.real.dataId),d=this.readSync(a.imag.dataId);return mergeRealAndImagArrays(c,d)}return this.data.get(s).values}bufferSync(s){const o=this.readSync(s.dataId);let a=o;if(s.dtype==="string")try{a=o.map(c=>decodeString(c))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return buffer(s.shape,s.dtype,a)}makeOutput(s,o,a){const c=this.write(s,o,a);return engine().makeTensorFromDataId(c,o,a,this)}disposeData(s){if(this.data.has(s)){const{complexTensorInfos:o}=this.data.get(s);o!=null&&(this.disposeData(o.real.dataId),this.disposeData(o.imag.dataId)),this.data.delete(s)}}disposeIntermediateTensorInfo(s){const o=s.dataId;if(this.data.has(o)){const a=this.data.get(o);a.refCount--,a.refCount<1&&this.disposeData(o)}}async time(s){const o=now$1();return s(),{kernelMs:now$1()-o}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(s){assertNotComplex$1([s],"where");const o=this.readSync(s.dataId);return whereImpl$1(s.shape,o)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function simpleAbsImpl(i){const s=new Float32Array(i.length);for(let o=0;o<i.length;++o)s[o]=Math.abs(i[o]);return s}const abs$1=i=>{const{x:s}=i.inputs,o=i.backend;assertNotComplex$1(s,"abs");let a=new Float32Array(sizeFromShape(s.shape));const c=o.data.get(s.dataId).values;return a=simpleAbsImpl(c),o.makeOutput(a,s.shape,"float32")},absConfig$1={kernelName:Abs$1,backendName:"cpu",kernelFunc:abs$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function createSimpleBinaryKernelImpl(i){return(s,o,a,c,d)=>{const g=assertAndGetBroadcastShape(s,o),b=g.length,$=computeStrides(g),_=sizeFromShape(g),_e=getTypedArrayFromDType(d,_),et=s.length,rt=o.length,tt=computeStrides(s),j=computeStrides(o),nt=getBroadcastDims$1(s,g),st=getBroadcastDims$1(o,g);if(nt.length+st.length===0)for(let ot=0;ot<_e.length;++ot)_e[ot]=i(a[ot%a.length],c[ot%c.length]);else for(let ot=0;ot<_e.length;++ot){const ut=indexToLoc(ot,b,$),ht=ut.slice(-et);nt.forEach(ft=>ht[ft]=0);const pt=locToIndex(ht,et,tt),it=ut.slice(-rt);st.forEach(ft=>it[ft]=0);const yt=locToIndex(it,rt,j);_e[ot]=i(a[pt],c[yt])}return[_e,g]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function complex$1(i){const{inputs:s,backend:o}=i,{real:a,imag:c}=s,d=o.data.get(a.dataId).values,g=o.data.get(c.dataId).values,b=o.makeTensorInfo(a.shape,"complex64"),$=o.data.get(b.dataId);return $.complexTensorInfos={real:o.makeTensorInfo(a.shape,"float32",d),imag:o.makeTensorInfo(c.shape,"float32",g)},b}const complexConfig$1={kernelName:Complex,backendName:"cpu",kernelFunc:complex$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zeros(i,s,o="float32"){if(o==="complex64"){const c=zeros(i,s,"float32"),d=zeros(i,s,"float32");return complex$1({inputs:{real:c,imag:d},backend:i})}const a=makeZerosTypedArray(sizeFromShape(s),o);return i.makeTensorInfo(s,o,a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function identity$1(i){const{inputs:s,backend:o}=i,{x:a}=s;return o.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const identityConfig$1={kernelName:Identity$1,backendName:"cpu",kernelFunc:identity$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function real$1(i){const{inputs:s,backend:o}=i,{input:a}=s,c=o.data.get(a.dataId).complexTensorInfos.real,d=o.data.get(c.dataId).values;return o.makeTensorInfo(c.shape,c.dtype,d)}const realConfig$1={kernelName:Real,backendName:"cpu",kernelFunc:real$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cast$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{dtype:d}=a;if(d==="complex64"){if(c.dtype==="complex64")return identity$1({inputs:{x:c},backend:o});const g=zeros(o,c.shape,c.dtype),b=cast$1({inputs:{x:c},backend:o,attrs:{dtype:"float32"}}),$=complex$1({inputs:{real:b,imag:g},backend:o});return o.disposeIntermediateTensorInfo(g),o.disposeIntermediateTensorInfo(b),$}if(c.dtype==="complex64"){const g=real$1({inputs:{input:c},backend:o}),b=cast$1({inputs:{x:g},backend:o,attrs:{dtype:d}});return o.disposeIntermediateTensorInfo(g),b}if(!hasEncodingLoss(c.dtype,d)){const g=identity$1({inputs:{x:c},backend:o});return{dataId:g.dataId,shape:g.shape,dtype:d}}if(d==="int32"){const g=o.data.get(c.dataId).values,b=Int32Array.from(g);return o.makeTensorInfo(c.shape,"int32",b)}if(d==="bool"){const g=o.data.get(c.dataId).values,b=toTypedArray([0],c.dtype),[$,_]=createSimpleBinaryKernelImpl((_e,et)=>_e!==et?1:0)(c.shape,[],g,b,"bool");return o.makeTensorInfo(_,"bool",$)}throw new Error(`Error in Cast: failed to cast ${c.dtype} to ${d}`)}const castConfig$1={kernelName:Cast,backendName:"cpu",kernelFunc:cast$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function binaryKernelFunc$1(i,s,o,a){return o==null?({inputs:c,backend:d})=>{const{a:g,b}=c,$=d;assertNotComplex$1([g,b],i);const _=$.data.get(g.dataId).values,_e=$.data.get(b.dataId).values,et=a||g.dtype,[rt,tt]=s(g.shape,b.shape,_,_e,et);return $.makeTensorInfo(tt,et,rt)}:({inputs:c,backend:d})=>{const{a:g,b}=c,$=d;if(g.dtype==="complex64"||b.dtype==="complex64"){const _=cast$1({inputs:{x:g},backend:$,attrs:{dtype:"complex64"}}),_e=$.data.get(_.dataId),et=_e.complexTensorInfos.real,rt=_e.complexTensorInfos.imag,tt=$.data.get(et.dataId).values,j=$.data.get(rt.dataId).values,nt=cast$1({inputs:{x:b},backend:$,attrs:{dtype:"complex64"}}),st=$.data.get(nt.dataId),ot=st.complexTensorInfos.real,ut=st.complexTensorInfos.imag,ht=$.data.get(ot.dataId).values,pt=$.data.get(ut.dataId).values,[it,yt,ft]=o(g.shape,b.shape,tt,j,ht,pt),bt=$.makeTensorInfo(ft,"float32",it),Tt=$.makeTensorInfo(ft,"float32",yt),Ct=complex$1({inputs:{real:bt,imag:Tt},backend:$});return $.disposeIntermediateTensorInfo(_),$.disposeIntermediateTensorInfo(nt),$.disposeIntermediateTensorInfo(bt),$.disposeIntermediateTensorInfo(Tt),Ct}else{const _=$.data.get(g.dataId).values,_e=$.data.get(b.dataId).values,et=a||g.dtype,[rt,tt]=s(g.shape,b.shape,_,_e,et);return $.makeTensorInfo(tt,et,rt)}}}function createComplexBinaryKernelImpl(i){return(s,o,a,c,d,g)=>{const b=assertAndGetBroadcastShape(s,o),$=sizeFromShape(b),_=b.length,_e=computeStrides(b),et=getTypedArrayFromDType("float32",$),rt=getTypedArrayFromDType("float32",$),tt=getBroadcastDims$1(s,b),j=getBroadcastDims$1(o,b),nt=mergeRealAndImagArrays(a,c),st=mergeRealAndImagArrays(d,g),ot=s.length,ut=computeStrides(s),ht=o.length,pt=computeStrides(o);if(tt.length+j.length===0)for(let it=0;it<et.length;it++){const yt=it%nt.length,ft=it%st.length,bt=i(nt[yt*2],nt[yt*2+1],st[ft*2],st[ft*2+1]);et[it]=bt.real,rt[it]=bt.imag}else for(let it=0;it<et.length;it++){const yt=indexToLoc(it,_,_e),ft=yt.slice(-ot);tt.forEach(Ot=>ft[Ot]=0);const bt=locToIndex(ft,ot,ut),Tt=yt.slice(-ht);j.forEach(Ot=>Tt[Ot]=0);const Ct=locToIndex(Tt,ht,pt),_t=i(nt[bt*2],nt[bt*2+1],st[Ct*2],st[Ct*2+1]);et[it]=_t.real,rt[it]=_t.imag}return[et,rt,b]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const addImpl=createSimpleBinaryKernelImpl((i,s)=>i+s),addComplexImpl=createComplexBinaryKernelImpl((i,s,o,a)=>({real:i+o,imag:s+a})),add=binaryKernelFunc$1(Add$2,addImpl,addComplexImpl),addConfig$1={kernelName:Add$2,backendName:"cpu",kernelFunc:add};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bincountImpl(i,s,o,a,c){const d=sizeFromShape(a),g=makeZerosTypedArray(c,o);for(let b=0;b<i.length;b++){const $=i[b];if($<0)throw new Error("Input x must be non-negative!");$>=c||(d>0?g[$]+=s[b]:g[$]+=1)}return g}function bincountReduceImpl(i,s,o,a=!1){const c=i.shape[0],d=i.shape[1],g=buffer([c,o],s.dtype);for(let b=0;b<c;b++)for(let $=0;$<d;$++){const _=i.get(b,$);if(_<0)throw new Error("Input x must be non-negative!");_>=o||(a?g.set(1,b,_):s.size>0?g.set(g.get(b,_)+s.get(b,$),b,_):g.set(g.get(b,_)+1,b,_))}return g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function createSimpleUnaryImpl(i){return(s,o,a)=>{const c=getTypedArrayFromDType(o,s.length);for(let d=0;d<s.length;++d)c[d]=i(s[d],a);return c}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unaryKernelFunc$1(i,s,o){return({inputs:a,attrs:c,backend:d})=>{const{x:g}=a;if(assertNotComplex$1(g,i),g.dtype==="string"||o==="string")throw new Error("unaryKernelFunc does not support string input/output");const b=d,$=b.data.get(g.dataId).values,_=sizeFromShape(g.shape),_e=o||g.dtype,et=getArrayFromDType(_e,_);for(let rt=0;rt<_;++rt)et[rt]=s($[rt],c);return b.makeTensorInfo(g.shape,_e,et)}}function unaryKernelFuncFromImpl(i,s,o){return({inputs:a,attrs:c,backend:d})=>{const{x:g}=a;if(assertNotComplex$1(g,i),g.dtype==="string"||o==="string")throw new Error("unaryKernelFunc does not support string input/output");const b=d,$=b.data.get(g.dataId).values,_=o||g.dtype,_e=s($,_,c);return b.makeTensorInfo(g.shape,_,_e)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ceilImpl=createSimpleUnaryImpl(i=>Math.ceil(i)),ceil$1=unaryKernelFuncFromImpl(Ceil,ceilImpl),ceilConfig$1={kernelName:Ceil,backendName:"cpu",kernelFunc:ceil$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concatImpl$1(i,s,o,a){const c=getArrayFromDType(o,sizeFromShape(s));if(a&&o!=="string"){let d=0;i.forEach(g=>{const b=sizeFromShape(g.shape);c.set(g.vals,d),d+=b})}else{let d=0;i.forEach(g=>{const b=o==="string"?fromUint8ToStringArray(g.vals):g.vals;let $=0;for(let _=0;_<g.shape[0];++_){const _e=_*s[1]+d;for(let et=0;et<g.shape[1];++et)c[_e+et]=b[$++]}d+=g.shape[1]})}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expImpl=createSimpleUnaryImpl(i=>Math.exp(i)),exp$1=unaryKernelFuncFromImpl(Exp,expImpl),expConfig$1={kernelName:Exp,backendName:"cpu",kernelFunc:exp$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expm1Impl=createSimpleUnaryImpl(i=>Math.expm1(i)),expm1$1=unaryKernelFuncFromImpl(Expm1,expm1Impl),expm1Config$1={kernelName:Expm1,backendName:"cpu",kernelFunc:expm1$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const floorImpl=createSimpleUnaryImpl(i=>Math.floor(i)),floor$1=unaryKernelFuncFromImpl(Floor,floorImpl),floorConfig$1={kernelName:Floor,backendName:"cpu",kernelFunc:floor$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherV2Impl(i,s,o){const a=buffer(o,i.dtype);for(let c=0;c<a.size;++c){const g=a.indexToLoc(c).slice(),b=g[0],$=g[2],_=s.locToIndex([b,$]);g[2]=s.values[_];const _e=i.locToIndex(g);a.values[c]=i.values[_e]}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const greaterImpl=createSimpleBinaryKernelImpl((i,s)=>i>s?1:0),greater$1=binaryKernelFunc$1(Greater,greaterImpl,null,"bool"),greaterConfig$1={kernelName:Greater,backendName:"cpu",kernelFunc:greater$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lessImpl=createSimpleBinaryKernelImpl((i,s)=>i<s?1:0),less$1=binaryKernelFunc$1(Less,lessImpl,null,"bool"),lessConfig$1={kernelName:Less,backendName:"cpu",kernelFunc:less$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function linSpaceImpl(i,s,o){const a=(s-i)/(o-1),c=makeZerosTypedArray(o,"float32");c[0]=i;for(let d=1;d<c.length;d++)c[d]=c[d-1]+a;return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logImpl=createSimpleUnaryImpl(i=>Math.log(i)),log$2=unaryKernelFuncFromImpl(Log,logImpl),logConfig$1={kernelName:Log,backendName:"cpu",kernelFunc:log$2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxImpl$1(i,s,o,a){const c=getTypedArrayFromDType(a,sizeFromShape(o));for(let d=0;d<c.length;++d){const g=d*s;let b=i[g];for(let $=0;$<s;++$){const _=i[g+$];_>b&&(b=_)}c[d]=b}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maximumImpl=createSimpleBinaryKernelImpl((i,s)=>Math.max(i,s)),maximum$1=binaryKernelFunc$1(Maximum$1,maximumImpl),maximumConfig$1={kernelName:Maximum$1,backendName:"cpu",kernelFunc:maximum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const minimumImpl=createSimpleBinaryKernelImpl((i,s)=>Math.min(i,s)),minimum$1=binaryKernelFunc$1(Minimum$1,minimumImpl),minimumConfig$1={kernelName:Minimum$1,backendName:"cpu",kernelFunc:minimum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const multiplyImpl=createSimpleBinaryKernelImpl((i,s)=>i*s),multiplyComplexImpl=createComplexBinaryKernelImpl((i,s,o,a)=>({real:i*o-s*a,imag:i*a+s*o})),multiply$2=binaryKernelFunc$1(Multiply$2,multiplyImpl,multiplyComplexImpl),multiplyConfig$1={kernelName:Multiply$2,backendName:"cpu",kernelFunc:multiply$2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function negImpl(i,s,o){const a=createScalarValue(-1,o);return multiplyImpl([],s,a,i,o)}function neg$1(i){const{inputs:s,backend:o}=i,{x:a}=s;assertNotComplex$1(a,"neg");const c=o.data.get(a.dataId).values,[d,g]=negImpl(c,a.shape,a.dtype);return o.makeTensorInfo(g,a.dtype,d)}const negConfig$1={kernelName:Neg,backendName:"cpu",kernelFunc:neg$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const notEqualImpl=createSimpleBinaryKernelImpl((i,s)=>i!==s?1:0),notEqual$1=binaryKernelFunc$1(NotEqual,notEqualImpl,null,"bool"),notEqualConfig$1={kernelName:NotEqual,backendName:"cpu",kernelFunc:notEqual$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transposeImpl$1(i,s,o,a,c){const d=s.length,g=sizeFromShape(s),b=computeStrides(s),$=computeStrides(c),_=getTypedArrayFromDType(o,sizeFromShape(c));for(let _e=0;_e<g;++_e){const et=indexToLoc(_e,d,b),rt=new Array(et.length);for(let j=0;j<rt.length;j++)rt[j]=et[a[j]];const tt=locToIndex(rt,d,$);_[tt]=i[_e]}return _}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transpose$1(i){const{inputs:s,attrs:o,backend:a}=i,{x:c}=s,{perm:d}=o;assertNotComplex$1(c,"transpose");const g=c.shape.length,b=new Array(g);for(let et=0;et<b.length;et++)b[et]=c.shape[d[et]];const $=a.data.get(c.dataId).values,_=transposeImpl$1($,c.shape,c.dtype,d,b);return{dataId:a.write(_,b,c.dtype),shape:b,dtype:c.dtype}}const transposeConfig$1={kernelName:Transpose,backendName:"cpu",kernelFunc:transpose$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function prodImpl(i,s,o,a){const[c,d]=computeOutAndReduceShapes(i,a),g=upcastType(s,"int32"),b=makeZerosTypedArray(sizeFromShape(c),g),$=sizeFromShape(d);for(let _=0;_<b.length;++_){const _e=_*$;let et=1;for(let rt=0;rt<$;++rt)et*=o[_e+rt];b[_]=et}return{outVals:b,outShape:c,outDtype:g}}function prod$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,keepDims:g}=a;assertNotComplex$1(c,"prod");const b=c.shape.length,$=parseAxisParam(d,c.shape),_=getAxesPermutation($,b);let _e=$,et=c;const rt=[];_!=null&&(et=transpose$1({inputs:{x:c},backend:o,attrs:{perm:_}}),rt.push(et),_e=getInnerMostAxes(_e.length,b));const tt=o.data.get(et.dataId).values,{outVals:j,outShape:nt,outDtype:st}=prodImpl(et.shape,et.dtype,tt,_e);let ot=nt;return g&&(ot=expandShapeToKeepDim(nt,$)),rt.forEach(ut=>o.disposeIntermediateTensorInfo(ut)),o.makeTensorInfo(ot,st,j)}const prodConfig$1={kernelName:Prod,backendName:"cpu",kernelFunc:prod$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rangeImpl(i,s,o,a){const c=i===s,d=i<s&&o<0,g=s<i&&o>1;if(c||d||g)return makeZerosTypedArray(0,a);const b=Math.abs(Math.ceil((s-i)/o)),$=makeZerosTypedArray(b,a);s<i&&o===1&&(o=-1),$[0]=i;for(let _=1;_<$.length;_++)$[_]=$[_-1]+o;return $}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rsqrtImpl=createSimpleUnaryImpl(i=>1/Math.sqrt(i)),rsqrt$1=unaryKernelFuncFromImpl(Rsqrt,rsqrtImpl),rsqrtConfig$1={kernelName:Rsqrt,backendName:"cpu",kernelFunc:rsqrt$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sliceImpl(i,s,o,a,c){const d=isSliceContinous(a,s,o),g=sizeFromShape(o),b=computeStrides(a);if(d){const et=computeFlatOffset(s,b);return c==="string"?i.slice(et,et+g):i.subarray(et,et+g)}const $=c==="string"?fromUint8ToStringArray(i):i,_=buffer(a,c,$),_e=buffer(o,c);for(let et=0;et<_e.size;++et){const rt=_e.indexToLoc(et),tt=rt.map((j,nt)=>j+s[nt]);_e.set(_.get(...tt),...rt)}return c==="string"?fromStringArrayToUint8(_e.values):_e.values}function slice$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{begin:d,size:g}=a;assertNotComplex$1(c,"slice");const[b,$]=parseSliceParams(c,d,g);assertParamsValid(c,b,$);const _=o.data.get(c.dataId).values,_e=sliceImpl(_,b,$,c.shape,c.dtype);return o.makeTensorInfo($,c.dtype,_e)}const sliceConfig$1={kernelName:Slice,backendName:"cpu",kernelFunc:slice$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const squaredDifferenceImpl=createSimpleBinaryKernelImpl((i,s)=>{const o=i-s;return o*o}),squaredDifference$1=binaryKernelFunc$1(SquaredDifference,squaredDifferenceImpl),squaredDifferenceConfig$1={kernelName:SquaredDifference,backendName:"cpu",kernelFunc:squaredDifference$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stridedSliceImpl(i,s,o,a){const c=buffer(i,s.dtype);for(let d=0;d<c.size;d++){const g=c.indexToLoc(d),b=new Array(g.length);for(let $=0;$<b.length;$++)b[$]=g[$]*o[$]+a[$];c.set(s.get(...b),...g)}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const subImpl=createSimpleBinaryKernelImpl((i,s)=>i-s),subComplexImpl=createComplexBinaryKernelImpl((i,s,o,a)=>({real:i-o,imag:s-a})),sub$1=binaryKernelFunc$1(Sub,subImpl,subComplexImpl),subConfig$1={kernelName:Sub,backendName:"cpu",kernelFunc:sub$1};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tileImpl(i,s){const o=new Array(i.rank);for(let c=0;c<o.length;c++)o[c]=i.shape[c]*s[c];const a=buffer(o,i.dtype);for(let c=0;c<a.values.length;++c){const d=a.indexToLoc(c),g=new Array(i.rank);for(let $=0;$<g.length;$++)g[$]=d[$]%i.shape[$];const b=i.locToIndex(g);a.values[c]=i.values[b]}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function topKImpl(i,s,o,a,c){const d=s[s.length-1],[g,b]=[i.length/d,d],$=getTypedArrayFromDType(o,g*a),_=getTypedArrayFromDType("int32",g*a);for(let et=0;et<g;et++){const rt=et*b,tt=i.subarray(rt,rt+b),j=[];for(let ut=0;ut<tt.length;ut++)j.push({value:tt[ut],index:ut});j.sort((ut,ht)=>ht.value-ut.value);const nt=et*a,st=$.subarray(nt,nt+a),ot=_.subarray(nt,nt+a);for(let ut=0;ut<a;ut++)st[ut]=j[ut].value,ot[ut]=j[ut].index}const _e=s.slice();return _e[_e.length-1]=a,[buffer(_e,o,$),buffer(_e,"int32",_)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uniqueImpl(i,s,o,a){const c=parseAxisParam(s,o)[0],d=[1,o[0],1];for(let j=0;j<c;j++)d[0]*=o[j];d[1]=o[c];for(let j=c+1;j<o.length;j++)d[2]*=o[j];const g={},b=new Int32Array(o[c]),$=new TensorBuffer(d,a,i),_=[],_e=d[0]===1&&d[2]===1;for(let j=0;j<o[c];j++){let nt;if(_e)nt=i[j].toString();else{const st=[];for(let ot=0;ot<d[0];ot++)for(let ut=0;ut<d[2];ut++)st.push($.get(ot,j,ut));nt=st.join(",")}if(g[nt]!==void 0)b[j]=g[nt];else{const st=Object.keys(g).length;g[nt]=st,b[j]=st,_.push(j)}}const et=d.slice();et[1]=Object.keys(g).length;const rt=new TensorBuffer(et,a);_.forEach((j,nt)=>{for(let st=0;st<d[0];st++)for(let ot=0;ot<d[2];ot++)rt.set($.get(st,j,ot),st,nt,ot)});const tt=o.slice();return tt[c]=et[1],{outputValues:rt.values,outputShape:tt,indices:b}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const shared=Object.freeze(Object.defineProperty({__proto__:null,addImpl,bincountImpl,bincountReduceImpl,ceilImpl,concatImpl:concatImpl$1,expImpl,expm1Impl,floorImpl,gatherV2Impl,greaterImpl,lessImpl,linSpaceImpl,logImpl,maxImpl:maxImpl$1,maximumImpl,minimumImpl,multiplyImpl,negImpl,notEqualImpl,prodImpl,rangeImpl,rsqrtImpl,simpleAbsImpl,sliceImpl,squaredDifferenceImpl,stridedSliceImpl,subImpl,tileImpl,topKImpl,transposeImpl:transposeImpl$1,uniqueImpl},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. */const version$4="2.8.6";/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */registerBackend("cpu",()=>new MathBackendCPU,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const elu$1=unaryKernelFunc$1(Elu$1,i=>i>=0?i:Math.exp(i)-1),eluConfig$1={kernelName:Elu$1,backendName:"cpu",kernelFunc:elu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function leakyRelu$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{alpha:d}=a;assertNotComplex$1([c],"leakyRelu");const g=sizeFromShape(c.shape),b=o.data.get(c.dataId).values,$=getTypedArrayFromDType("float32",g);for(let _=0;_<b.length;_++)$[_]=b[_]<0?d*b[_]:b[_];return o.makeTensorInfo(c.shape,"float32",$)}const leakyReluConfig$1={kernelName:LeakyRelu,backendName:"cpu",kernelFunc:leakyRelu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const preluImpl=createSimpleBinaryKernelImpl((i,s)=>i<0?s*i:i);function prelu$1(i){const{inputs:s,backend:o}=i,{x:a,alpha:c}=s;assertNotComplex$1([a,c],"prelu");const d=o.data.get(a.dataId).values,g=o.data.get(c.dataId).values,[b,$]=preluImpl(a.shape,c.shape,d,g,a.dtype);return o.makeTensorInfo($,a.dtype,b)}const preluConfig$1={kernelName:Prelu,backendName:"cpu",kernelFunc:prelu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const relu$1=unaryKernelFunc$1(Relu$1,i=>Math.max(0,i)),reluConfig$1={kernelName:Relu$1,backendName:"cpu",kernelFunc:relu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const relu6$1=unaryKernelFunc$1(Relu6$1,i=>Math.min(Math.max(0,i),6)),relu6Config$1={kernelName:Relu6$1,backendName:"cpu",kernelFunc:relu6$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function applyActivation(i,s,o,a,c){if(o==="linear")return identity$1({inputs:{x:s},backend:i});if(o==="relu")return relu$1({inputs:{x:s},backend:i});if(o==="elu")return elu$1({inputs:{x:s},backend:i});if(o==="relu6")return relu6$1({inputs:{x:s},backend:i});if(o==="prelu")return prelu$1({inputs:{x:s,alpha:a},backend:i});if(o==="leakyrelu")return leakyRelu$1({inputs:{x:s},backend:i,attrs:{alpha:c}});throw new Error(`Activation ${o} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reshape$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{shape:d}=a,g=sizeFromShape(c.shape),b=inferFromImplicitShape(d,g),$=sizeFromShape(b);assert$2(g===$,()=>`The new shape (${b}) has ${$} elements and the old shape (${c.shape}) has ${g} elements. The new shape and old shape must have the same number of elements.`),o.incRef(c.dataId);const _=o.data.get(c.dataId);if(_.complexTensorInfos!=null){const _e=_.complexTensorInfos.real,et=_.complexTensorInfos.imag;_e.shape=b,et.shape=b}return{dataId:c.dataId,shape:b,dtype:c.dtype}}const reshapeConfig$1={kernelName:Reshape$1,backendName:"cpu",kernelFunc:reshape$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchMatMul$1(i){const{inputs:s,backend:o,attrs:a}=i,{a:c,b:d}=s,{transposeA:g,transposeB:b}=a;assertNotComplex$1([c,d],"matMul");const $=c.shape.length,_=d.shape.length,_e=g?c.shape[$-2]:c.shape[$-1],et=b?d.shape[_-1]:d.shape[_-2],rt=g?c.shape[$-1]:c.shape[$-2],tt=b?d.shape[_-2]:d.shape[_-1],j=c.shape.slice(0,-2),nt=d.shape.slice(0,-2),st=sizeFromShape(j),ot=sizeFromShape(nt),ut=st===ot||st===1||ot===1;assert$2($>=2&&_>=2&&ut,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${j}) and (${nt}).`);const pt=(st>ot?c.shape.slice(0,-2):d.shape.slice(0,-2)).concat([rt,tt]);assert$2(_e===et,()=>`Error in matMul: inner shapes (${_e}) and (${et}) of Tensors with shapes ${c.shape} and ${d.shape} and transposeA=${g} and transposeB=${b} must match.`);const it=g?[st,_e,rt]:[st,rt,_e],yt=b?[ot,tt,et]:[ot,et,tt],ft=reshape$1({inputs:{x:c},backend:o,attrs:{shape:it}}),bt=reshape$1({inputs:{x:d},backend:o,attrs:{shape:yt}}),Tt=g?ft.shape[1]:ft.shape[2],Ct=g?ft.shape[2]:ft.shape[1],_t=b?bt.shape[1]:bt.shape[2],Ot=Math.max(st,ot),kt=o.data.get(ft.dataId).values,Rt=o.data.get(bt.dataId).values,jt=computeStrides(ft.shape),Gt=computeStrides(bt.shape),[Bt,zt,Ut]=g?[jt[0],1,jt[1]]:[jt[0],jt[1],1],[Qt,tn,sn]=b?[1,Gt[1],Gt[0]]:[Gt[1],1,Gt[0]],ln=Ct*_t,an=buffer([Ot,Ct,_t],ft.dtype),Yt=an.values,cn=o.blockSize;for(let Wt=0;Wt<Ot;Wt++)for(let wt=0;wt<Ct;wt+=cn)for(let xt=0;xt<_t;xt+=cn)for(let At=0;At<Tt;At+=cn){const qt=Math.min(wt+cn,Ct),Pt=Math.min(xt+cn,_t),Zt=Math.min(At+cn,Tt);for(let nn=wt;nn<qt;nn++)for(let dn=xt;dn<Pt;dn++){let wn=0;for(let kn=At;kn<Zt;kn++){const Pn=Math.min(Wt,st-1)*Bt,On=Math.min(Wt,ot-1)*sn,Bn=kt[Pn+nn*zt+kn*Ut],Zn=Rt[kn*Qt+dn*tn+On];wn+=Bn*Zn}Yt[Wt*ln+(nn*_t+dn)]+=wn}}return o.disposeIntermediateTensorInfo(ft),o.disposeIntermediateTensorInfo(bt),o.makeTensorInfo(pt,an.dtype,an.values)}const batchMatMulConfig$1={kernelName:BatchMatMul,backendName:"cpu",kernelFunc:batchMatMul$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _fusedMatMul$1(i){const{inputs:s,backend:o,attrs:a}=i,{a:c,b:d,bias:g,preluActivationWeights:b}=s,{transposeA:$,transposeB:_,activation:_e,leakyreluAlpha:et}=a;let rt,tt,j;const nt=[];rt=batchMatMul$1({inputs:{a:c,b:d},attrs:{transposeA:$,transposeB:_},backend:o}),g&&(tt=add({inputs:{a:rt,b:g},backend:o}),nt.push(rt),rt=tt),_e&&(j=applyActivation(o,rt,_e,b,et),nt.push(rt),rt=j);for(const ot of nt)o.disposeIntermediateTensorInfo(ot);return rt}const _fusedMatMulConfig$1={kernelName:_FusedMatMul,backendName:"cpu",kernelFunc:_fusedMatMul$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const acos$1=unaryKernelFunc$1(Acos,i=>Math.acos(i)),acosConfig$1={kernelName:Acos,backendName:"cpu",kernelFunc:acos$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const acosh$1=unaryKernelFunc$1(Acosh,i=>Math.acosh(i)),acoshConfig$1={kernelName:Acosh,backendName:"cpu",kernelFunc:acosh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function addN$1(i){const{inputs:s,backend:o}=i,a=s;assertNotComplex$1(s,"addN");const c=a.map(b=>o.data.get(b.dataId).values),d=buffer(a[0].shape,a[0].dtype),g=d.values;for(let b=0;b<a.length;b++){const $=c[b];for(let _=0;_<g.length;_++)g[_]+=$[_]}return o.makeTensorInfo(d.shape,d.dtype,d.values)}const addNConfig$1={kernelName:AddN,backendName:"cpu",kernelFunc:addN$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function all$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,keepDims:g}=a;assertNotComplex$1(c,"all");const b=parseAxisParam(d,c.shape);let $=b;const _=getAxesPermutation($,c.shape.length);let _e=c;_!=null&&(_e=transpose$1({inputs:{x:c},backend:o,attrs:{perm:_}}),$=getInnerMostAxes($.length,c.shape.length)),assertAxesAreInnerMostDims("all",$,_e.shape.length);const[et,rt]=computeOutAndReduceShapes(_e.shape,$),tt=sizeFromShape(rt),j=makeZerosTypedArray(sizeFromShape(et),_e.dtype),nt=o.data.get(_e.dataId).values;for(let ot=0;ot<j.length;++ot){const ut=ot*tt;let ht=nt[ut];for(let pt=0;pt<tt;++pt){const it=nt[ut+pt];ht=ht&&it}j[ot]=ht}_!=null&&o.disposeIntermediateTensorInfo(_e);const st=o.makeTensorInfo(et,_e.dtype,j);if(g){const ot=expandShapeToKeepDim(et,b),ut=reshape$1({inputs:{x:st},backend:o,attrs:{shape:ot}});return o.disposeIntermediateTensorInfo(st),ut}return st}const allConfig$1={kernelName:All,backendName:"cpu",kernelFunc:all$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function any$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,keepDims:g}=a;assertNotComplex$1(c,"any");const b=parseAxisParam(d,c.shape);let $=b;const _=getAxesPermutation($,c.shape.length);let _e=c;_!=null&&(_e=transpose$1({inputs:{x:c},backend:o,attrs:{perm:_}}),$=getInnerMostAxes($.length,c.shape.length)),assertAxesAreInnerMostDims("any",$,_e.shape.length);const[et,rt]=computeOutAndReduceShapes(_e.shape,$),tt=sizeFromShape(rt),j=makeZerosTypedArray(sizeFromShape(et),_e.dtype),nt=o.data.get(_e.dataId).values;for(let ot=0;ot<j.length;++ot){const ut=ot*tt;let ht=nt[ut];for(let pt=0;pt<tt;++pt){const it=nt[ut+pt];ht=ht||it}j[ot]=ht}_!=null&&o.disposeIntermediateTensorInfo(_e);const st=o.makeTensorInfo(et,_e.dtype,j);if(g){const ot=expandShapeToKeepDim(et,b),ut=reshape$1({inputs:{x:st},backend:o,attrs:{shape:ot}});return o.disposeIntermediateTensorInfo(st),ut}return st}const anyConfig$1={kernelName:Any,backendName:"cpu",kernelFunc:any$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMax$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d}=a;assertNotComplex$1(c,"argMax");let g=parseAxisParam(d,c.shape);const b=getAxesPermutation(g,c.shape.length);let $=c;const _=[];b!=null&&($=transpose$1({inputs:{x:c},backend:o,attrs:{perm:b}}),_.push($),g=getInnerMostAxes(g.length,$.shape.length)),g=[g[0]],assertAxesAreInnerMostDims("argMax",g,$.shape.length);const[_e,et]=computeOutAndReduceShapes($.shape,g),rt=sizeFromShape(_e),tt=makeZerosTypedArray(rt,"int32"),j=sizeFromShape(et),nt=o.data.get($.dataId).values;for(let st=0;st<tt.length;++st){const ot=st*j;let ut=nt[ot],ht=0;for(let pt=0;pt<j;++pt){const it=nt[ot+pt];it>ut&&(ut=it,ht=pt)}tt[st]=ht}return _.forEach(st=>o.disposeIntermediateTensorInfo(st)),o.makeTensorInfo(_e,"int32",tt)}const argMaxConfig$1={kernelName:ArgMax,backendName:"cpu",kernelFunc:argMax$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMin$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d}=a;assertNotComplex$1(c,"argMin");let g=parseAxisParam(d,c.shape);const b=getAxesPermutation(g,c.shape.length);let $=c;const _=[];b!=null&&($=transpose$1({inputs:{x:c},backend:o,attrs:{perm:b}}),_.push($),g=getInnerMostAxes(g.length,$.shape.length)),g=[g[0]],assertAxesAreInnerMostDims("argMin",g,$.shape.length);const[_e,et]=computeOutAndReduceShapes($.shape,g),rt=sizeFromShape(_e),tt=makeZerosTypedArray(rt,"int32"),j=sizeFromShape(et),nt=o.data.get($.dataId).values;for(let st=0;st<tt.length;++st){const ot=st*j;let ut=nt[ot],ht=0;for(let pt=0;pt<j;++pt){const it=nt[ot+pt];it<ut&&(ut=it,ht=pt)}tt[st]=ht}return _.forEach(st=>o.disposeIntermediateTensorInfo(st)),o.makeTensorInfo(_e,"int32",tt)}const argMinConfig$1={kernelName:ArgMin,backendName:"cpu",kernelFunc:argMin$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const asin$1=unaryKernelFunc$1(Asin,i=>Math.asin(i)),asinConfig$1={kernelName:Asin,backendName:"cpu",kernelFunc:asin$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const asinh$1=unaryKernelFunc$1(Asinh,i=>Math.asinh(i)),asinhConfig$1={kernelName:Asinh,backendName:"cpu",kernelFunc:asinh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atan$1=unaryKernelFunc$1(Atan,i=>Math.atan(i)),atanConfig$1={kernelName:Atan,backendName:"cpu",kernelFunc:atan$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atan2Impl=createSimpleBinaryKernelImpl((i,s)=>Math.atan2(i,s)),atan2$1=binaryKernelFunc$1(Atan2,atan2Impl),atan2Config$1={kernelName:Atan2,backendName:"cpu",kernelFunc:atan2$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atanh$1=unaryKernelFunc$1(Atanh,i=>Math.atanh(i)),atanhConfig$1={kernelName:Atanh,backendName:"cpu",kernelFunc:atanh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pool(i,s,o,a,c,d){const g=c.strideHeight,b=c.strideWidth,$=c.dilationHeight,_=c.dilationWidth,_e=c.effectiveFilterHeight,et=c.effectiveFilterWidth,rt=c.padInfo.top,tt=c.padInfo.left,j=d==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,nt=buffer(c.outShape,o),st=nt.values,ot=c.outShape[1]*c.outShape[2]*c.outShape[3],ut=c.outShape[2]*c.outShape[3],ht=c.outShape[3];for(let pt=0;pt<c.batchSize;++pt){const it=pt*ot,yt=pt*a[0];for(let ft=0;ft<c.inChannels;++ft)for(let bt=0;bt<c.outHeight;++bt){const Tt=bt*g-rt,Ct=Math.max(0,Tt),_t=Math.min(c.inHeight,_e+Tt),Ot=it+bt*ut;for(let kt=0;kt<c.outWidth;++kt){const Rt=kt*b-tt,jt=Math.max(0,Rt),Gt=Math.min(c.inWidth,et+Rt);let Bt=j,zt=0,Ut=0;for(let tn=Ct;tn<_t;tn+=$){const sn=yt+tn*a[1];for(let ln=jt;ln<Gt;ln+=_){const an=sn+ln*a[2],Yt=i[an+ft];d==="max"&&Yt>Bt?Bt=Yt:d==="avg"&&(zt+=Yt,Ut++)}if(isNaN(Bt))break}const Qt=Ot+kt*ht+ft;st[Qt]=d==="avg"?zt/Ut:Bt}}}return nt}function maxPoolPositions(i,s,o,a,c=!1,d=!1){const g=buffer(a.outShape,"int32"),b=a.strideHeight,$=a.strideWidth,_=a.dilationHeight,_e=a.dilationWidth,et=a.effectiveFilterHeight,rt=a.effectiveFilterWidth,tt=a.padInfo.top,j=a.padInfo.left,nt=buffer(s,o,i);for(let st=0;st<a.batchSize;++st)for(let ot=0;ot<a.inChannels;++ot)for(let ut=0;ut<a.outHeight;++ut){const ht=ut*b-tt;let pt=ht;for(;pt<0;)pt+=_;const it=Math.min(a.inHeight,et+ht);for(let yt=0;yt<a.outWidth;++yt){const ft=yt*$-j;let bt=ft;for(;bt<0;)bt+=_e;const Tt=Math.min(a.inWidth,rt+ft);let Ct=Number.NEGATIVE_INFINITY,_t=-1;for(let Ot=pt;Ot<it;Ot+=_){const kt=Ot-ht;for(let Rt=bt;Rt<Tt;Rt+=_e){const jt=Rt-ft,Gt=nt.get(st,Ot,Rt,ot);Gt>Ct&&(Ct=Gt,c?_t=d?((st*a.inHeight+Ot)*a.inWidth+Rt)*a.inChannels+ot:(Ot*a.inWidth+Rt)*a.inChannels+ot:_t=kt*rt+jt)}}g.set(_t,st,ut,yt,ot)}}return g}function pool3d(i,s,o,a,c,d){const g=c.strideDepth,b=c.strideHeight,$=c.strideWidth,_=c.dilationDepth,_e=c.dilationHeight,et=c.dilationWidth,rt=c.effectiveFilterDepth,tt=c.effectiveFilterHeight,j=c.effectiveFilterWidth,nt=c.padInfo.front,st=c.padInfo.top,ot=c.padInfo.left,ut=d==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,ht=buffer(c.outShape,o),pt=ht.values,it=c.outShape[1]*c.outShape[2]*c.outShape[3]*c.outShape[4],yt=c.outShape[2]*c.outShape[3]*c.outShape[4],ft=c.outShape[3]*c.outShape[4],bt=c.outShape[4];for(let Tt=0;Tt<c.batchSize;++Tt){const Ct=Tt*it,_t=Tt*a[0];for(let Ot=0;Ot<c.inChannels;++Ot)for(let kt=0;kt<c.outDepth;++kt){const Rt=kt*g-nt;let jt=Rt;for(;jt<0;)jt+=_;const Gt=Math.min(c.inDepth,rt+Rt),Bt=Ct+kt*yt;for(let zt=0;zt<c.outHeight;++zt){const Ut=zt*b-st;let Qt=Ut;for(;Qt<0;)Qt+=_e;const tn=Math.min(c.inHeight,tt+Ut),sn=Bt+zt*ft;for(let ln=0;ln<c.outWidth;++ln){const an=ln*$-ot;let Yt=an;for(;Yt<0;)Yt+=et;const cn=Math.min(c.inWidth,j+an),Wt=sn+ln*bt;let wt=ut,xt=0,At=0;for(let Pt=jt;Pt<Gt;Pt+=_){const Zt=_t+Pt*a[1];for(let nn=Qt;nn<tn;nn+=_e){const dn=Zt+nn*a[2];for(let wn=Yt;wn<cn;wn+=et){const kn=dn+wn*a[3],Pn=i[kn+Ot];if(d==="max"&&Pn>wt?wt=Pn:d==="avg"&&(xt+=Pn,At++),isNaN(wt))break}if(isNaN(wt))break}if(isNaN(wt))break}const qt=Wt+Ot;pt[qt]=d==="avg"?xt/At:wt}}}}return ht}function maxPool3dPositions(i,s){const o=buffer(s.outShape,"int32"),a=s.strideDepth,c=s.strideHeight,d=s.strideWidth,g=s.dilationDepth,b=s.dilationHeight,$=s.dilationWidth,_=s.effectiveFilterDepth,_e=s.effectiveFilterHeight,et=s.effectiveFilterWidth,rt=s.padInfo.front,tt=s.padInfo.top,j=s.padInfo.left;for(let nt=0;nt<s.batchSize;++nt)for(let st=0;st<s.inChannels;++st)for(let ot=0;ot<s.outDepth;++ot){const ut=ot*a-rt;let ht=ut;for(;ht<0;)ht+=g;const pt=Math.min(s.inDepth,_+ut);for(let it=0;it<s.outHeight;++it){const yt=it*c-tt;let ft=yt;for(;ft<0;)ft+=b;const bt=Math.min(s.inHeight,_e+yt);for(let Tt=0;Tt<s.outWidth;++Tt){const Ct=Tt*d-j;let _t=Ct;for(;_t<0;)_t+=$;const Ot=Math.min(s.inWidth,et+Ct);let kt=Number.NEGATIVE_INFINITY,Rt=-1;for(let jt=ht;jt<pt;jt+=g){const Gt=jt-ut;for(let Bt=ft;Bt<bt;Bt+=b){const zt=Bt-yt;for(let Ut=_t;Ut<Ot;Ut+=$){const Qt=Ut-Ct,tn=i.get(nt,jt,Bt,Ut,st);tn>=kt&&(kt=tn,Rt=Gt*_e*et+zt*_e+Qt)}}}o.set(Rt,nt,ot,it,Tt,st)}}}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s;assertNotComplex$1(c,"avgPool");const{filterSize:d,strides:g,pad:b,dimRoundingMode:$}=a,_=1;assert$2(eitherStridesOrDilationsAreOne(g,_),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${g} and dilations '${_}'`);const _e=computePool2DInfo(c.shape,d,g,_,b,$);let et;if(_e.filterWidth===1&&_e.filterHeight===1&&arraysEqual(_e.inShape,_e.outShape))et=identity$1({inputs:{x:c},backend:o});else{const rt=o.data.get(c.dataId).values,tt=computeStrides(c.shape),j=pool(rt,c.shape,c.dtype,tt,_e,"avg");et=o.makeTensorInfo(_e.outShape,c.dtype,j.values)}return et}const avgPoolConfig$1={kernelName:AvgPool,backendName:"cpu",kernelFunc:avgPool$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3D$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{filterSize:d,strides:g,pad:b,dimRoundingMode:$,dataFormat:_,dilations:_e}=a;assertNotComplex$1(c,"avgPool3d");let et=_e;et==null&&(et=[1,1,1]);const rt=computePool3DInfo(c.shape,d,g,et,b,$,_),tt=o.data.get(c.dataId).values,j=pool3d(tt,c.shape,c.dtype,computeStrides(c.shape),rt,"avg");return o.makeTensorInfo(j.shape,"float32",j.values)}const avgPool3DConfig$1={kernelName:AvgPool3D,backendName:"cpu",kernelFunc:avgPool3D$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3DGrad$1(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,input:d}=s,{filterSize:g,strides:b,pad:$,dilations:_,dimRoundingMode:_e}=a;assertNotComplex$1([c,d],"avgPool3DGrad");const et=computePool3DInfo(d.shape,g,b,_,$,_e),rt=et.strideDepth,tt=et.strideHeight,j=et.strideWidth,nt=et.filterDepth,st=et.filterHeight,ot=et.filterWidth,ut=et.dilationDepth,ht=et.dilationHeight,pt=et.dilationWidth,it=et.effectiveFilterDepth,yt=et.effectiveFilterHeight,ft=et.effectiveFilterWidth,bt=it-1-et.padInfo.front,Tt=ft-1-et.padInfo.left,Ct=yt-1-et.padInfo.top,_t=buffer(d.shape,"float32"),Ot=1/(nt*st*ot),kt=o.bufferSync(c);for(let Rt=0;Rt<et.batchSize;++Rt)for(let jt=0;jt<et.inChannels;++jt)for(let Gt=0;Gt<et.inDepth;++Gt)for(let Bt=0;Bt<et.inHeight;++Bt)for(let zt=0;zt<et.inWidth;++zt){const Ut=Gt-bt,Qt=Bt-Ct,tn=zt-Tt;let sn=0;for(let ln=0;ln<it;ln+=ut){const an=(Ut+ln)/rt;if(!(an<0||an>=et.outDepth||Math.floor(an)!==an))for(let Yt=0;Yt<yt;Yt+=ht){const cn=(Qt+Yt)/tt;if(!(cn<0||cn>=et.outHeight||Math.floor(cn)!==cn))for(let Wt=0;Wt<ft;Wt+=pt){const wt=(tn+Wt)/j;if(wt<0||wt>=et.outWidth||Math.floor(wt)!==wt)continue;const xt=kt.get(Rt,an,cn,wt,jt);sn+=xt}}}_t.set(sn*Ot,Rt,Gt,Bt,zt,jt)}return o.makeTensorInfo(_t.shape,_t.dtype,_t.values)}const avgPool3DGradConfig={kernelName:AvgPool3DGrad,backendName:"cpu",kernelFunc:avgPool3DGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPoolGrad$1(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,input:d}=s,g=d;assertNotComplex$1([c,d],"avgPoolGrad");const{filterSize:b,strides:$,pad:_}=a,_e=computePool2DInfo(g.shape,b,$,1,_),et=_e.strideHeight,rt=_e.strideWidth,tt=_e.filterHeight,j=_e.filterWidth,nt=_e.dilationHeight,st=_e.dilationWidth,ot=_e.effectiveFilterHeight,ut=_e.effectiveFilterWidth,ht=ut-1-_e.padInfo.left,pt=ot-1-_e.padInfo.top,it=buffer(g.shape,"float32"),yt=1/(tt*j),ft=o.data.get(c.dataId).values,bt=buffer(c.shape,"float32",ft);for(let Tt=0;Tt<_e.batchSize;++Tt)for(let Ct=0;Ct<_e.inChannels;++Ct)for(let _t=0;_t<_e.inHeight;++_t)for(let Ot=0;Ot<_e.inWidth;++Ot){const kt=_t-pt,Rt=Ot-ht;let jt=0;for(let Gt=0;Gt<ot;Gt+=nt){const Bt=(kt+Gt)/et;if(!(Bt<0||Bt>=_e.outHeight||Math.floor(Bt)!==Bt))for(let zt=0;zt<ut;zt+=st){const Ut=(Rt+zt)/rt;if(Ut<0||Ut>=_e.outWidth||Math.floor(Ut)!==Ut)continue;const Qt=bt.get(Tt,Bt,Ut,Ct);jt+=Qt}}it.set(jt*yt,Tt,_t,Ot,Ct)}return o.makeTensorInfo(it.shape,it.dtype,it.values)}const avgPoolGradConfig$1={kernelName:AvgPoolGrad,backendName:"cpu",kernelFunc:avgPoolGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchNorm$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,scale:d,offset:g,mean:b,variance:$}=s;assert$2(b.shape.length===$.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),assert$2(g==null||b.shape.length===g.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),assert$2(d==null||b.shape.length===d.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),assertNotComplex$1([c,b,$,d,g],"batchNorm");let{varianceEpsilon:_}=a;_==null&&(_=.001);const _e=o.data.get(c.dataId).values,et=o.data.get(b.dataId).values,rt=o.data.get($.dataId).values,tt=d?o.data.get(d.dataId).values:new Float32Array([1]),j=g?o.data.get(g.dataId).values:new Float32Array([0]),nt=new Float32Array(_e.length),st=j.length,ot=tt.length,ut=rt.length,ht=et.length;let pt=0,it=0,yt=0,ft=0;for(let bt=0;bt<_e.length;++bt)nt[bt]=j[pt++]+(_e[bt]-et[it++])*tt[yt++]/Math.sqrt(rt[ft++]+_),pt>=st&&(pt=0),it>=ht&&(it=0),yt>=ot&&(yt=0),ft>=ut&&(ft=0);return o.makeTensorInfo(c.shape,c.dtype,nt)}const batchNormConfig$1={kernelName:FusedBatchNorm,backendName:"cpu",kernelFunc:batchNorm$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchToSpaceND$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{blockShape:d,crops:g}=a;assertNotComplex$1([c],"batchToSpaceND");const b=d.reduce((ot,ut)=>ot*ut),$=getReshaped(c.shape,d,b),_=getPermuted($.length,d.length),_e=getReshapedPermuted(c.shape,d,b),et=getSliceBeginCoords(g,d.length),rt=getSliceSize(_e,g,d.length),tt=reshape$1({inputs:{x:c},backend:o,attrs:{shape:$}}),j=transpose$1({inputs:{x:tt},backend:o,attrs:{perm:_}}),nt=reshape$1({inputs:{x:j},backend:o,attrs:{shape:_e}}),st=slice$1({inputs:{x:nt},backend:o,attrs:{begin:et,size:rt}});return o.disposeIntermediateTensorInfo(tt),o.disposeIntermediateTensorInfo(j),o.disposeIntermediateTensorInfo(nt),st}const batchToSpaceNDConfig$1={kernelName:BatchToSpaceND,backendName:"cpu",kernelFunc:batchToSpaceND$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bincount$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,weights:d}=s,{size:g}=a,b=o.data.get(c.dataId).values,$=o.data.get(d.dataId).values,_=bincountImpl(b,$,d.dtype,d.shape,g);return o.makeTensorInfo([g],d.dtype,_)}const bincountConfig$1={kernelName:Bincount,backendName:"cpu",kernelFunc:bincount$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const clip=unaryKernelFunc$1(ClipByValue,(i,s)=>{const o=s;return i>o.clipValueMax?o.clipValueMax:i<o.clipValueMin?o.clipValueMin:i}),clipConfig={kernelName:ClipByValue,backendName:"cpu",kernelFunc:clip};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const complexAbs$1=i=>{const{x:s}=i.inputs,o=i.backend,a=new Float32Array(sizeFromShape(s.shape)),c=o.data.get(s.dataId),d=c.complexTensorInfos.real,g=c.complexTensorInfos.imag,b=o.data.get(d.dataId).values,$=o.data.get(g.dataId).values;for(let _=0;_<b.length;_++){const _e=b[_],et=$[_];a[_]=Math.hypot(_e,et)}return o.makeOutput(a,s.shape,"float32")},complexAbsConfig$1={kernelName:ComplexAbs,backendName:"cpu",kernelFunc:complexAbs$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function imag$1(i){const{inputs:s,backend:o}=i,{input:a}=s,c=o.data.get(a.dataId).complexTensorInfos.imag,d=o.data.get(c.dataId).values;return o.makeTensorInfo(c.shape,c.dtype,d)}const imagConfig$1={kernelName:Imag,backendName:"cpu",kernelFunc:imag$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concat$1(i){const{inputs:s,backend:o,attrs:a}=i,{axis:c}=a,d=parseAxisParam(c,s[0].shape)[0];let g=computeOutShape$1(s.map(nt=>nt.shape),d);if(sizeFromShape(g)===0)return o.makeTensorInfo(g,s[0].dtype,[]);const b=s.filter(nt=>sizeFromShape(nt.shape)>0);if(b.length===1)return identity$1({inputs:{x:b[0]},backend:o});const $=b.map(nt=>nt.shape);if(assertParamsConsistent($,d),b[0].dtype==="complex64"){const nt=b.map(pt=>real$1({inputs:{input:pt},backend:o})),st=b.map(pt=>imag$1({inputs:{input:pt},backend:o})),ot=concat$1({inputs:nt,backend:o,attrs:{axis:d}}),ut=concat$1({inputs:st,backend:o,attrs:{axis:d}}),ht=complex$1({inputs:{real:ot,imag:ut},backend:o});return nt.forEach(pt=>o.disposeIntermediateTensorInfo(pt)),st.forEach(pt=>o.disposeIntermediateTensorInfo(pt)),o.disposeIntermediateTensorInfo(ot),o.disposeIntermediateTensorInfo(ut),ht}const _=b.map(nt=>{const ot=[-1,sizeFromShape(nt.shape.slice(d))];return reshape$1({inputs:{x:nt},backend:o,attrs:{shape:ot}})}),_e=_.map(nt=>({vals:o.data.get(nt.dataId).values,shape:nt.shape}));g=computeOutShape$1(_.map(nt=>nt.shape),1);const et=_[0].shape[0]===1,rt=concatImpl$1(_e,g,s[0].dtype,et),tt=computeOutShape$1(b.map(nt=>nt.shape),d),j=o.makeTensorInfo(tt,s[0].dtype,rt);return _.forEach(nt=>o.disposeIntermediateTensorInfo(nt)),j}const concatConfig$1={kernelName:Concat,backendName:"cpu",kernelFunc:concat$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2D(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,filter:d}=s,{strides:g,pad:b,dataFormat:$,dilations:_,dimRoundingMode:_e}=a;assertNotComplex$1([c,d],"conv2d");const et=convertConv2DDataFormat($),rt=computeConv2DInfo(c.shape,d.shape,g,_,b,_e,!1,et),tt=rt.filterHeight,j=rt.filterWidth,nt=rt.dilationHeight,st=rt.dilationWidth,ot=rt.padInfo.left,ut=rt.padInfo.top,ht=rt.dataFormat==="channelsLast",pt=new TensorBuffer(rt.outShape,c.dtype),it=computeStrides(c.shape),yt=computeStrides(d.shape),ft=it[0],bt=ht?it[1]:it[2],Tt=ht?it[2]:1,Ct=ht?1:it[1],_t=pt.strides[0],Ot=ht?pt.strides[1]:pt.strides[2],kt=ht?pt.strides[2]:1,Rt=ht?1:pt.strides[1],jt=o.data.get(c.dataId).values,Gt=o.data.get(d.dataId).values,Bt=pt.values;for(let zt=0;zt<rt.batchSize;++zt){const Ut=zt*ft,Qt=zt*_t;for(let tn=0;tn<rt.outHeight;++tn){const sn=Qt+tn*Ot,ln=tn*rt.strideHeight-ut;for(let an=0;an<tt;++an){const Yt=ln+an*nt;if(Yt<0||Yt>=rt.inHeight)continue;const cn=an*yt[0],Wt=Ut+Yt*bt;for(let wt=0;wt<rt.outWidth;++wt){const xt=sn+wt*kt,At=wt*rt.strideWidth-ot;for(let qt=0;qt<j;++qt){const Pt=At+qt*st;if(Pt<0||Pt>=rt.inWidth)continue;const Zt=cn+qt*yt[1],nn=Wt+Pt*Tt;let dn=Zt;for(let wn=0;wn<rt.inChannels;++wn){const kn=jt[nn+wn*Ct];for(let Pn=0;Pn<rt.outChannels;++Pn)Bt[xt+Pn*Rt]+=kn*Gt[dn+Pn];dn+=rt.outChannels}}}}}}return o.makeTensorInfo(pt.shape,pt.dtype,Bt)}const conv2DConfig$1={kernelName:Conv2D$1,backendName:"cpu",kernelFunc:conv2D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropFilter$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,dy:d}=s,{strides:g,pad:b,dataFormat:$,dimRoundingMode:_,filterShape:_e}=a;assertNotComplex$1([c,d],"conv2dBackpropFilter");const et=convertConv2DDataFormat($),rt=computeConv2DInfo(c.shape,_e,g,1,b,_,!1,et),{strideHeight:tt,strideWidth:j,filterHeight:nt,filterWidth:st}=rt,ot=rt.dataFormat==="channelsLast",ut=new TensorBuffer(rt.filterShape,"float32"),ht=rt.padInfo.left,pt=rt.padInfo.top,it=o.data.get(c.dataId).values,yt=o.data.get(d.dataId).values,ft=new TensorBuffer(c.shape,c.dtype,it),bt=new TensorBuffer(d.shape,d.dtype,yt);for(let Tt=0;Tt<nt;++Tt){const Ct=Math.max(0,Math.ceil((pt-Tt)/tt)),_t=Math.min(rt.outHeight,(rt.inHeight+pt-Tt)/tt);for(let Ot=0;Ot<st;++Ot){const kt=Math.max(0,Math.ceil((ht-Ot)/j)),Rt=Math.min(rt.outWidth,(rt.inWidth+ht-Ot)/j);for(let jt=0;jt<rt.inChannels;++jt)for(let Gt=0;Gt<rt.outChannels;++Gt){let Bt=0;for(let zt=0;zt<rt.batchSize;++zt)for(let Ut=Ct;Ut<_t;++Ut){const Qt=Tt+Ut*tt-pt;for(let tn=kt;tn<Rt;++tn){const sn=Ot+tn*j-ht;ot?Bt+=ft.get(zt,Qt,sn,jt)*bt.get(zt,Ut,tn,Gt):Bt+=ft.get(zt,jt,Qt,sn)*bt.get(zt,Gt,Ut,tn)}}ut.set(Bt,Tt,Ot,jt,Gt)}}}return o.makeTensorInfo(ut.shape,ut.dtype,ut.values)}const conv2DBackpropFilterConfig$1={kernelName:Conv2DBackpropFilter,backendName:"cpu",kernelFunc:conv2DBackpropFilter$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropInput$1(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,filter:d}=s,{inputShape:g,strides:b,pad:$,dataFormat:_,dimRoundingMode:_e}=a;assertNotComplex$1([c,d],"conv2dBackpropInput");const et=computeStrides(d.shape),rt=computeStrides(c.shape);let tt=convertConv2DDataFormat(_);const j=computeConv2DInfo(g,d.shape,b,1,$,_e,!1,tt),nt=new TensorBuffer(j.inShape,"float32"),st=nt.values,ot=o.data.get(c.dataId).values,ut=o.data.get(d.dataId).values,[ht,pt,it]=et,{batchSize:yt,filterHeight:ft,filterWidth:bt,inChannels:Tt,inHeight:Ct,inWidth:_t,outChannels:Ot,outHeight:kt,outWidth:Rt,strideHeight:jt,strideWidth:Gt}=j;tt=j.dataFormat;const Bt=ft-1-j.padInfo.top,zt=bt-1-j.padInfo.left,Ut=tt==="channelsLast",Qt=nt.strides[0],tn=Ut?nt.strides[1]:nt.strides[2],sn=Ut?nt.strides[2]:1,ln=Ut?1:nt.strides[1],an=rt[0],Yt=Ut?rt[1]:rt[2],cn=Ut?rt[2]:1,Wt=Ut?1:rt[1];for(let wt=0;wt<yt;++wt)for(let xt=0;xt<Tt;++xt)for(let At=0;At<Ct;++At){const qt=At-Bt,Pt=Math.max(0,Math.ceil(qt/jt)),Zt=Math.min(kt,(ft+qt)/jt);for(let nn=0;nn<_t;++nn){const dn=nn-zt,wn=Math.max(0,Math.ceil(dn/Gt)),kn=Math.min(Rt,(bt+dn)/Gt);let Pn=0;for(let Bn=Pt;Bn<Zt;++Bn){const Zn=Bn*jt-qt;for(let jn=wn;jn<kn;++jn){const tr=jn*Gt-dn,Un=an*wt+Yt*Bn+cn*jn,or=ht*(ft-1-Zn)+pt*(bt-1-tr)+it*xt;for(let Cr=0;Cr<Ot;++Cr){const Rr=ot[Un+Wt*Cr],Er=ut[or+Cr];Pn+=Rr*Er}}}const On=Qt*wt+tn*At+sn*nn+ln*xt;st[On]=Pn}}return o.makeTensorInfo(nt.shape,nt.dtype,nt.values)}const conv2DBackpropInputConfig$1={kernelName:Conv2DBackpropInput,backendName:"cpu",kernelFunc:conv2DBackpropInput$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3D$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,filter:d}=s,{strides:g,pad:b,dilations:$}=a;assertNotComplex$1([c,d],"conv3d");const _=computeConv3DInfo(c.shape,d.shape,g,$,b),{filterDepth:_e,filterHeight:et,filterWidth:rt,dilationDepth:tt,dilationHeight:j,dilationWidth:nt,padInfo:st}=_,ot=st.front,ut=st.left,ht=st.top,pt=new TensorBuffer(_.outShape,c.dtype),it=o.data.get(c.dataId).values,yt=o.data.get(d.dataId).values,ft=pt.values,bt=computeStrides(c.shape),Tt=computeStrides(d.shape);for(let Ct=0;Ct<_.batchSize;++Ct){const _t=Ct*bt[0],Ot=Ct*pt.strides[0];for(let kt=0;kt<_.outDepth;++kt){const Rt=Ot+kt*pt.strides[1],jt=kt*_.strideDepth-ot;for(let Gt=0;Gt<_e;++Gt){const Bt=jt+Gt*tt;if(Bt<0||Bt>=_.inDepth)continue;const zt=Gt*Tt[0],Ut=_t+Bt*bt[1];for(let Qt=0;Qt<_.outHeight;++Qt){const tn=Rt+Qt*pt.strides[2],sn=Qt*_.strideHeight-ht;for(let ln=0;ln<et;++ln){const an=sn+ln*j;if(an<0||an>=_.inHeight)continue;const Yt=zt+ln*Tt[1],cn=Ut+an*bt[2];for(let Wt=0;Wt<_.outWidth;++Wt){const wt=tn+Wt*_.outChannels,xt=Wt*_.strideWidth-ut;for(let At=0;At<rt;++At){const qt=xt+At*nt;if(qt<0||qt>=_.inWidth)continue;const Pt=Yt+At*Tt[2],Zt=cn+qt*_.inChannels;let nn=Pt;for(let dn=0;dn<_.inChannels;++dn){const wn=it[Zt+dn];for(let kn=0;kn<_.outChannels;++kn)ft[wt+kn]+=wn*yt[nn+kn];nn+=_.outChannels}}}}}}}}return o.makeTensorInfo(pt.shape,pt.dtype,pt.values)}const conv3DConfig$1={kernelName:Conv3D$1,backendName:"cpu",kernelFunc:conv3D$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropFilterV2$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,dy:d}=s,{strides:g,pad:b,filterShape:$}=a;assertNotComplex$1([c,d],"conv3dBackpropFilterV2");const _=computeStrides(c.shape),_e=computeStrides(d.shape),et=computeConv3DInfo(c.shape,$,g,1,b),rt=et.strideDepth,tt=et.strideHeight,j=et.strideWidth,nt=et.filterDepth,st=et.filterHeight,ot=et.filterWidth,ut=new TensorBuffer(et.filterShape,"float32"),ht=ut.values,[pt,it,yt,ft]=ut.strides,bt=o.data.get(d.dataId).values,[Tt,Ct,_t,Ot]=_e,kt=o.data.get(c.dataId).values,[Rt,jt,Gt,Bt]=_,zt=et.padInfo.front,Ut=et.padInfo.left,Qt=et.padInfo.top;for(let tn=0;tn<nt;++tn){const sn=Math.max(0,Math.ceil((zt-tn)/rt)),ln=Math.min(et.outDepth,(et.inDepth+zt-tn)/rt),an=tn*pt;for(let Yt=0;Yt<st;++Yt){const cn=Math.max(0,Math.ceil((Qt-Yt)/tt)),Wt=Math.min(et.outHeight,(et.inHeight+Qt-Yt)/tt),wt=Yt*it+an;for(let xt=0;xt<ot;++xt){const At=Math.max(0,Math.ceil((Ut-xt)/j)),qt=Math.min(et.outWidth,(et.inWidth+Ut-xt)/j),Pt=xt*yt+wt;for(let Zt=0;Zt<et.inChannels;++Zt){const nn=Zt*ft+Pt;for(let dn=0;dn<et.outChannels;++dn){let wn=0;for(let kn=0;kn<et.batchSize;++kn){const Pn=kn*Rt,On=kn*Tt;for(let Bn=sn;Bn<ln;++Bn){const jn=(tn+Bn*rt-zt)*jt+Pn,tr=Bn*Ct+On;for(let Un=cn;Un<Wt;++Un){const Cr=(Yt+Un*tt-Qt)*Gt+jn,Rr=Un*_t+tr;for(let Er=At;Er<qt;++Er){const bs=(xt+Er*j-Ut)*Bt+Cr,ms=Er*Ot+Rr;wn+=kt[bs+Zt]*bt[ms+dn]}}}}ht[nn+dn]=wn}}}}}return o.makeTensorInfo(ut.shape,ut.dtype,ut.values)}const conv3DBackpropFilterV2Config$1={kernelName:Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:conv3DBackpropFilterV2$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropInputV2(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,filter:d}=s,{pad:g,strides:b,inputShape:$}=a;assertNotComplex$1([c],"conv3dBackpropInputV2");const _=computeStrides(c.shape),_e=computeStrides(d.shape),et=computeConv3DInfo($,d.shape,b,1,g),rt=new TensorBuffer(et.inShape,"float32"),tt=rt.values,[j,nt,st,ot]=rt.strides,ut=o.data.get(c.dataId).values,[ht,pt,it,yt]=_,ft=o.data.get(d.dataId).values,[bt,Tt,Ct,_t]=_e,{batchSize:Ot,filterDepth:kt,filterHeight:Rt,filterWidth:jt,inChannels:Gt,inDepth:Bt,inHeight:zt,inWidth:Ut,outChannels:Qt,outDepth:tn,outHeight:sn,outWidth:ln,strideDepth:an,strideHeight:Yt,strideWidth:cn}=et,Wt=kt-1-et.padInfo.front,wt=Rt-1-et.padInfo.top,xt=jt-1-et.padInfo.left;for(let At=0;At<Ot;++At)for(let qt=0;qt<Gt;++qt)for(let Pt=0;Pt<Bt;++Pt){const Zt=Pt-Wt,nn=Math.max(0,Math.ceil(Zt/an)),dn=Math.min(tn,(kt+Zt)/an);for(let wn=0;wn<zt;++wn){const kn=wn-wt,Pn=Math.max(0,Math.ceil(kn/Yt)),On=Math.min(sn,(Rt+kn)/Yt);for(let Bn=0;Bn<Ut;++Bn){const Zn=Bn-xt,jn=Math.max(0,Math.ceil(Zn/cn)),tr=Math.min(ln,(jt+Zn)/cn);let Un=0;for(let or=nn;or<dn;++or){const Cr=or*an-Zt;for(let Rr=Pn;Rr<On;++Rr){const Er=Rr*Yt-kn;for(let zr=jn;zr<tr;++zr){const bs=zr*cn-Zn,ms=ht*At+pt*or+it*Rr+yt*zr,gs=bt*(kt-1-Cr)+Tt*(Rt-1-Er)+Ct*(jt-1-bs)+_t*qt;for(let ys=0;ys<Qt;++ys){const $s=ut[ms+ys],ls=ft[gs+ys];Un+=$s*ls}}}}tt[j*At+nt*Pt+st*wn+ot*Bn+qt]=Un}}}return o.makeTensorInfo(rt.shape,rt.dtype,rt.values)}const conv3DBackpropInputV2Config={kernelName:Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:conv3DBackpropInputV2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cos$1=unaryKernelFunc$1(Cos,i=>Math.cos(i)),cosConfig$1={kernelName:Cos,backendName:"cpu",kernelFunc:cos$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cosh$1=unaryKernelFunc$1(Cosh,i=>Math.cosh(i)),coshConfig$1={kernelName:Cosh,backendName:"cpu",kernelFunc:cosh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cropAndResize$1(i){const{inputs:s,backend:o,attrs:a}=i,{image:c,boxes:d,boxInd:g}=s,{cropSize:b,method:$,extrapolationValue:_}=a,[_e,et,rt,tt]=c.shape,j=d.shape[0],[nt,st]=b,ot=buffer([j,nt,st,tt],"float32"),ut=o.data.get(d.dataId).values,ht=o.data.get(g.dataId).values,pt=o.data.get(c.dataId).values,it=computeStrides(c.shape),yt=computeStrides(ot.shape);for(let ft=0;ft<j;ft++){const bt=ft*4,Tt=ut[bt],Ct=ut[bt+1],_t=ut[bt+2],Ot=ut[bt+3],kt=ht[ft];if(kt>=_e)continue;const Rt=nt>1?(_t-Tt)*(et-1)/(nt-1):0,jt=st>1?(Ot-Ct)*(rt-1)/(st-1):0;for(let Gt=0;Gt<nt;Gt++){const Bt=nt>1?Tt*(et-1)+Gt*Rt:.5*(Tt+_t)*(et-1);if(Bt<0||Bt>et-1){for(let zt=0;zt<st;zt++)for(let Ut=0;Ut<tt;Ut++){const Qt=Ut+zt*yt[2]+Gt*yt[1]+ft*yt[0];ot.values[Qt]=_}continue}if($==="bilinear"){const zt=Math.floor(Bt),Ut=Math.ceil(Bt),Qt=Bt-zt;for(let tn=0;tn<st;tn++){const sn=st>1?Ct*(rt-1)+tn*jt:.5*(Ct+Ot)*(rt-1);if(sn<0||sn>rt-1){for(let cn=0;cn<tt;cn++){const Wt=cn+tn*yt[2]+Gt*yt[1]+ft*yt[0];ot.values[Wt]=_}continue}const ln=Math.floor(sn),an=Math.ceil(sn),Yt=sn-ln;for(let cn=0;cn<tt;cn++){let Wt=cn+ln*it[2]+zt*it[1]+kt*it[0];const wt=pt[Wt];Wt=cn+an*it[2]+zt*it[1]+kt*it[0];const xt=pt[Wt];Wt=cn+ln*it[2]+Ut*it[1]+kt*it[0];const At=pt[Wt];Wt=cn+an*it[2]+Ut*it[1]+kt*it[0];const qt=pt[Wt],Pt=wt+(xt-wt)*Yt,Zt=At+(qt-At)*Yt;Wt=cn+tn*yt[2]+Gt*yt[1]+ft*yt[0],ot.values[Wt]=Pt+(Zt-Pt)*Qt}}}else for(let zt=0;zt<st;++zt){const Ut=st>1?Ct*(rt-1)+zt*jt:.5*(Ct+Ot)*(rt-1);if(Ut<0||Ut>rt-1){for(let sn=0;sn<tt;sn++){const ln=sn+zt*yt[2]+Gt*yt[1]+ft*yt[0];ot.values[ln]=_}continue}const Qt=Math.round(Ut),tn=Math.round(Bt);for(let sn=0;sn<tt;sn++){const ln=sn+Qt*it[2]+tn*it[1]+kt*it[0],an=sn+zt*yt[2]+Gt*yt[1]+ft*yt[0];ot.values[an]=pt[ln]}}}}return o.makeTensorInfo(ot.shape,ot.dtype,ot.values)}const cropAndResizeConfig$1={kernelName:CropAndResize,backendName:"cpu",kernelFunc:cropAndResize$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cumsum$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,exclusive:g,reverse:b}=a;assertNotComplex$1(c,"cumsum");const $=getAxesPermutation([d],c.shape.length);let _=c;$!=null&&(_=transpose$1({inputs:{x:c},backend:o,attrs:{perm:$}}));const _e=getInnerMostAxes(1,c.shape.length)[0];if(_e!==_.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${_.shape.length-1} but got axis=${_e}`);const et=upcastType(_.dtype,"int32"),rt=makeZerosTypedArray(sizeFromShape(_.shape),et),tt=o.data.get(_.dataId).values,j=_.shape[_.shape.length-1],nt=b?(ot,ut)=>ot+j-ut-1:(ot,ut)=>ot+ut;for(let ot=0;ot<tt.length;ot+=j)for(let ut=0;ut<j;ut++){const ht=nt(ot,ut);if(ut===0)rt[ht]=g?0:tt[ht];else{const pt=nt(ot,ut-1);rt[ht]=g?tt[pt]+rt[pt]:tt[ht]+rt[pt]}}const st=o.makeTensorInfo(_.shape,et,rt);if($!=null){const ot=getUndoAxesPermutation($),ut=transpose$1({inputs:{x:st},backend:o,attrs:{perm:ot}});return o.disposeIntermediateTensorInfo(st),o.disposeIntermediateTensorInfo(_),ut}return st}const cumsumConfig$1={kernelName:Cumsum,backendName:"cpu",kernelFunc:cumsum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function denseBincount$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,weights:d}=s,{size:g,binaryOutput:b}=a;if(c.shape.length===1){const $=o.data.get(c.dataId).values,_=o.data.get(d.dataId).values,_e=bincountImpl($,_,d.dtype,d.shape,g);return o.makeTensorInfo([g],d.dtype,_e)}else if(c.shape.length===2){const $=o.bufferSync(c),_=o.bufferSync(d),_e=bincountReduceImpl($,_,g,b);return o.makeTensorInfo(_e.shape,d.dtype,_e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${c.shape.length}.`)}const denseBincountConfig$1={kernelName:DenseBincount,backendName:"cpu",kernelFunc:denseBincount$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthToSpace$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{blockSize:d,dataFormat:g}=a;assert$2(g==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${g}`),assert$2(d>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${d}`);const b=c.shape[0],$=c.shape[1],_=c.shape[2],_e=c.shape[3],et=$*d,rt=_*d,tt=_e/(d*d),j=o.data.get(c.dataId).values,nt=new Float32Array(b*et*rt*tt);let st=0;for(let ot=0;ot<b;++ot)for(let ut=0;ut<et;++ut){const ht=Math.floor(ut/d),pt=ut%d;for(let it=0;it<rt;++it){const yt=Math.floor(it/d),ft=it%d,bt=(pt*d+ft)*tt;for(let Tt=0;Tt<tt;++Tt){const _t=Tt+bt+_e*(yt+_*(ht+$*ot));nt[st++]=j[_t]}}}return o.makeTensorInfo([b,et,rt,tt],c.dtype,nt)}const depthToSpaceConfig$1={kernelName:DepthToSpace,backendName:"cpu",kernelFunc:depthToSpace$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNative$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,filter:d}=s,{strides:g,pad:b,dilations:$,dimRoundingMode:_}=a;assertNotComplex$1([c,d],"depthwiseConv2DNative");const _e=computeStrides(c.shape),et=computeStrides(d.shape);let rt=$;rt==null&&(rt=[1,1]),assert$2(eitherStridesOrDilationsAreOne(g,rt),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${g} and dilations '${rt}'`);const tt=computeConv2DInfo(c.shape,d.shape,g,rt,b,_,!0),{filterHeight:j,filterWidth:nt,dilationHeight:st,dilationWidth:ot,padInfo:ut}=tt,ht=ut.left,pt=ut.top,it=tt.outChannels/tt.inChannels,yt=new TensorBuffer(tt.outShape,c.dtype),ft=o.data.get(c.dataId).values,bt=o.data.get(d.dataId).values,Tt=yt.values;for(let Ct=0;Ct<tt.batchSize;++Ct){const _t=Ct*_e[0],Ot=Ct*yt.strides[0];for(let kt=0;kt<tt.outHeight;++kt){const Rt=Ot+kt*yt.strides[1],jt=kt*tt.strideHeight-ht;for(let Gt=0;Gt<j;++Gt){const Bt=jt+Gt*st;if(Bt<0||Bt>=tt.inHeight)continue;const zt=Gt*et[0],Ut=_t+Bt*_e[1];for(let Qt=0;Qt<tt.outWidth;++Qt){const tn=Rt+Qt*yt.strides[2],sn=Qt*tt.strideWidth-pt;for(let ln=0;ln<nt;++ln){const an=sn+ln*ot;if(an<0||an>=tt.inWidth)continue;const Yt=zt+ln*et[1],cn=Ut+an*tt.inChannels;let Wt=tn,wt=Yt;for(let xt=0;xt<tt.inChannels;++xt){const At=ft[cn+xt];for(let qt=0;qt<it;++qt)Tt[Wt+qt]+=At*bt[wt+qt];Wt+=it,wt+=it}}}}}}return o.makeTensorInfo(yt.shape,yt.dtype,yt.values)}const depthwiseConv2dNativeConfig$1={kernelName:DepthwiseConv2dNative,backendName:"cpu",kernelFunc:depthwiseConv2dNative$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropFilter$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,dy:d}=s,{strides:g,dilations:b,pad:$,dimRoundingMode:_,filterShape:_e}=a;assertNotComplex$1([c,d],"depthwiseConv2dNativeBackpropFilter");const et=computeConv2DInfo(c.shape,_e,g,b,$,_,!0),{strideHeight:rt,strideWidth:tt,filterHeight:j,filterWidth:nt}=et,st=new TensorBuffer(et.filterShape,"float32"),ot=et.padInfo.left,ut=et.padInfo.top,ht=et.outChannels/et.inChannels,pt=o.data.get(c.dataId).values,it=new TensorBuffer(c.shape,c.dtype,pt),yt=o.data.get(d.dataId).values,ft=new TensorBuffer(d.shape,d.dtype,yt);for(let bt=0;bt<j;++bt){const Tt=Math.max(0,Math.ceil((ut-bt)/rt)),Ct=Math.min(et.outHeight,(et.inHeight+ut-bt)/rt);for(let _t=0;_t<nt;++_t){const Ot=Math.max(0,Math.ceil((ot-_t)/tt)),kt=Math.min(et.outWidth,(et.inWidth+ot-_t)/tt);for(let Rt=0;Rt<et.outChannels;++Rt){const jt=Math.trunc(Rt/ht),Gt=Rt%ht;let Bt=0;for(let zt=0;zt<et.batchSize;++zt)for(let Ut=Tt;Ut<Ct;++Ut){const Qt=bt+Ut*rt-ut;for(let tn=Ot;tn<kt;++tn){const sn=_t+tn*tt-ot;Bt+=it.get(zt,Qt,sn,jt)*ft.get(zt,Ut,tn,Rt)}}st.set(Bt,bt,_t,jt,Gt)}}}return o.makeTensorInfo(st.shape,st.dtype,st.values)}const depthwiseConv2dNativeBackpropFilterConfig$1={kernelName:DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:depthwiseConv2dNativeBackpropFilter$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropInput$1(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,filter:d}=s,{strides:g,dilations:b,pad:$,dimRoundingMode:_,inputShape:_e}=a;assertNotComplex$1([c,d],"depthwiseConv2DNativeBackpropInput");const et=computeStrides(c.shape),rt=computeStrides(d.shape),tt=computeConv2DInfo(_e,d.shape,g,b,$,_,!0),j=new TensorBuffer(tt.inShape,"float32"),nt=j.values,[st,ot,ut]=j.strides,ht=o.data.get(c.dataId).values,[pt,it,yt]=et,ft=o.data.get(d.dataId).values,[bt,Tt,Ct]=rt,{batchSize:_t,filterHeight:Ot,filterWidth:kt,inChannels:Rt,inHeight:jt,inWidth:Gt,outChannels:Bt,outHeight:zt,outWidth:Ut,strideHeight:Qt,strideWidth:tn}=tt,sn=Ot-1-tt.padInfo.top,ln=kt-1-tt.padInfo.left,an=Bt/Rt;for(let Yt=0;Yt<_t;++Yt)for(let cn=0;cn<Rt;++cn)for(let Wt=0;Wt<jt;++Wt){const wt=Wt-sn,xt=Math.max(0,Math.ceil(wt/Qt)),At=Math.min(zt,(Ot+wt)/Qt);for(let qt=0;qt<Gt;++qt){const Pt=qt-ln,Zt=Math.max(0,Math.ceil(Pt/tn)),nn=Math.min(Ut,(kt+Pt)/tn);let dn=0;for(let wn=xt;wn<At;++wn){const kn=wn*Qt-wt;for(let Pn=Zt;Pn<nn;++Pn){const On=Pn*tn-Pt,Bn=pt*Yt+it*wn+yt*Pn,Zn=bt*(Ot-1-kn)+Tt*(kt-1-On)+Ct*cn;for(let jn=0;jn<an;++jn){const tr=cn*an+jn,Un=ht[Bn+tr],or=ft[Zn+jn];dn+=Un*or}}}nt[st*Yt+ot*Wt+ut*qt+cn]=dn}}return o.makeTensorInfo(j.shape,j.dtype,j.values)}const depthwiseConv2dNativeBackpropInputConfig$1={kernelName:DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:depthwiseConv2dNativeBackpropInput$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function diag$1(i){const{inputs:s,backend:o}=i,{x:a}=s,c=sizeFromShape(a.shape),d=o.data.get(a.dataId).values,g=buffer([c,c],a.dtype),b=g.values;for(let _=0;_<d.length;_++)b[_*c+_]=d[_];const $=[...a.shape,...a.shape];return o.makeTensorInfo($,g.dtype,g.values)}const diagConfig$1={kernelName:Diag,backendName:"cpu",kernelFunc:diag$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dilation2dConfig={kernelName:Dilation2D,backendName:"cpu",kernelFunc:({inputs:i,backend:s,attrs:o})=>{const{x:a,filter:c}=i,{strides:d,pad:g,dilations:b}=o,$=s,_=$.data.get(a.dataId).values,_e=a.shape.length,et=$.data.get(c.dataId).values,rt=c.shape.length,{batchSize:tt,inHeight:j,inWidth:nt,inChannels:st,outHeight:ot,outWidth:ut,padInfo:ht,strideHeight:pt,strideWidth:it,filterHeight:yt,filterWidth:ft,dilationHeight:bt,dilationWidth:Tt,outShape:Ct}=computeDilation2DInfo(a.shape,c.shape,d,g,"NHWC",b),_t=sizeFromShape(Ct),Ot=Ct.length,kt=getArrayFromDType(a.dtype,_t);for(let jt=0;jt<tt;++jt)for(let Gt=0;Gt<ot;++Gt){const Bt=Gt*pt-ht.top;for(let zt=0;zt<ut;++zt){const Ut=zt*it-ht.left;for(let Qt=0;Qt<st;++Qt){let tn=Number.MIN_SAFE_INTEGER;for(let ln=0;ln<yt;++ln){const an=Bt+ln*bt;if(an>=0&&an<j)for(let Yt=0;Yt<ft;++Yt){const cn=Ut+Yt*Tt;if(cn>=0&&cn<nt){const Wt=locToIndex([jt,an,cn,Qt],_e,computeStrides(a.shape)),wt=locToIndex([ln,Yt,Qt],rt,computeStrides(c.shape)),xt=_[Wt]+et[wt];xt>tn&&(tn=xt)}}}const sn=locToIndex([jt,Gt,zt,Qt],Ot,computeStrides(Ct));kt[sn]=tn}}}return{dataId:$.write(toTypedArray(kt,a.dtype),Ct,a.dtype),shape:Ct,dtype:a.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dilation2dBackpropFilterConfig={kernelName:Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:i,backend:s,attrs:o})=>{const{x:a,filter:c,dy:d}=i,{strides:g,pad:b,dilations:$}=o,_=s,_e=toNestedArray(a.shape,_.data.get(a.dataId).values),et=toNestedArray(c.shape,_.data.get(c.dataId).values),{batchSize:rt,inHeight:tt,inWidth:j,inChannels:nt,outHeight:st,outWidth:ot,padInfo:ut,strideHeight:ht,strideWidth:pt,filterHeight:it,filterWidth:yt,dilationHeight:ft,dilationWidth:bt,outShape:Tt}=computeDilation2DInfo(a.shape,c.shape,g,b,"NHWC",$);assert$2(d.rank===Tt.length,()=>`Error in ${Dilation2DBackpropFilter}, dy must have the same rank as output ${Tt.length}, but got ${d.rank}`);const Ct=toNestedArray(Tt,_.data.get(d.dataId).values),_t=makeZerosNestedTypedArray(c.shape,c.dtype);for(let kt=0;kt<rt;++kt)for(let Rt=0;Rt<st;++Rt){const jt=Rt*ht-ut.top;for(let Gt=0;Gt<ot;++Gt){const Bt=Gt*pt-ut.left;for(let zt=0;zt<nt;++zt){let Ut=Number.MIN_SAFE_INTEGER,Qt=0,tn=0;for(let sn=0;sn<it;++sn){const ln=jt+sn*ft;if(ln>=0&&ln<tt)for(let an=0;an<yt;++an){const Yt=Bt+an*bt;if(Yt>=0&&Yt<j){const cn=_e[kt][ln][Yt][zt]+et[sn][an][zt];cn>Ut&&(Ut=cn,Qt=sn,tn=an)}}}_t[Qt][tn][zt]+=Ct[kt][Rt][Gt][zt]}}}return{dataId:_.write(toTypedArray(_t,a.dtype),c.shape,c.dtype),shape:c.shape,dtype:c.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dilation2dBackpropInputConfig={kernelName:Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:i,backend:s,attrs:o})=>{const{x:a,filter:c,dy:d}=i,{strides:g,pad:b,dilations:$}=o,_=s,_e=toNestedArray(a.shape,_.data.get(a.dataId).values),et=toNestedArray(c.shape,_.data.get(c.dataId).values),{batchSize:rt,inHeight:tt,inWidth:j,inChannels:nt,outHeight:st,outWidth:ot,padInfo:ut,strideHeight:ht,strideWidth:pt,filterHeight:it,filterWidth:yt,dilationHeight:ft,dilationWidth:bt,outShape:Tt}=computeDilation2DInfo(a.shape,c.shape,g,b,"NHWC",$);assert$2(d.rank===Tt.length,()=>`Error in ${Dilation2DBackpropInput}, dy must have the same rank as output ${Tt.length}, but got ${d.rank}`);const Ct=toNestedArray(Tt,_.data.get(d.dataId).values),_t=makeZerosNestedTypedArray(a.shape,a.dtype);for(let kt=0;kt<rt;++kt)for(let Rt=0;Rt<st;++Rt){const jt=Rt*ht-ut.top;for(let Gt=0;Gt<ot;++Gt){const Bt=Gt*pt-ut.left;for(let zt=0;zt<nt;++zt){let Ut=Number.MIN_SAFE_INTEGER,Qt=jt<0?0:jt,tn=Bt<0?0:Bt;for(let sn=0;sn<it;++sn){const ln=jt+sn*ft;if(ln>=0&&ln<tt)for(let an=0;an<yt;++an){const Yt=Bt+an*bt;if(Yt>=0&&Yt<j){const cn=_e[kt][ln][Yt][zt]+et[sn][an][zt];cn>Ut&&(Ut=cn,Qt=ln,tn=Yt)}}}_t[kt][Qt][tn][zt]+=Ct[kt][Rt][Gt][zt]}}}return{dataId:_.write(toTypedArray(_t,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eluGrad$1(i){const{inputs:s,backend:o}=i,{dy:a,y:c}=s;assertNotComplex$1([a,c],"eluGrad");const d=new Float32Array(sizeFromShape(c.shape)),g=o.data.get(c.dataId).values,b=o.data.get(a.dataId).values;for(let $=0;$<g.length;++$){const _=g[$];_>=1?d[$]=b[$]:d[$]=b[$]*(_+1)}return o.makeTensorInfo(c.shape,"float32",d)}const eluGradConfig$1={kernelName:EluGrad,backendName:"cpu",kernelFunc:eluGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const equalImpl=createSimpleBinaryKernelImpl((i,s)=>i===s?1:0),equal$1=binaryKernelFunc$1(Equal,equalImpl,null,"bool"),equalConfig$1={kernelName:Equal,backendName:"cpu",kernelFunc:equal$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p$2=ERF_P,a1=ERF_A1,a2=ERF_A2,a3=ERF_A3,a4=ERF_A4,a5=ERF_A5,erf$1=unaryKernelFunc$1(Erf,i=>{const s=Math.sign(i),o=Math.abs(i),a=1/(1+p$2*o);return s*(1-((((a5*a+a4)*a+a3)*a+a2)*a+a1)*a*Math.exp(-o*o))}),erfConfig$1={kernelName:Erf,backendName:"cpu",kernelFunc:erf$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function expandDims$1(i){const{inputs:s,backend:o,attrs:a}=i,{input:c}=s,{dim:d}=a,g=c.shape.length,b=c.shape.slice();let $=d;return d<0&&(assert$2(-(g+1)<=d,()=>`Axis must be in the interval [${-(g+1)}, ${g}]`),$=g+d+1),b.splice($,0,1),reshape$1({inputs:{x:c},backend:o,attrs:{shape:b}})}const expandDimsConfig$1={kernelName:ExpandDims,backendName:"cpu",kernelFunc:expandDims$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const realDivImpl=createSimpleBinaryKernelImpl((i,s)=>i/s),div=binaryKernelFunc$1(RealDiv,realDivImpl),realDivConfig$1={kernelName:RealDiv,backendName:"cpu",kernelFunc:div};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fftBatch(i,s,o){const a=i.shape,c=a[0],d=a[1],g=o.data.get(i.dataId),b=g.complexTensorInfos.real,$=g.complexTensorInfos.imag,_=[c,d],_e=sizeFromShape(_),et=getTypedArrayFromDType("float32",_e),rt=getTypedArrayFromDType("float32",_e);for(let st=0;st<c;st++){const ot=slice$1({inputs:{x:b},backend:o,attrs:{begin:[st,0],size:[1,d]}}),ut=slice$1({inputs:{x:$},backend:o,attrs:{begin:[st,0],size:[1,d]}}),ht=complex$1({inputs:{real:ot,imag:ut},backend:o}),{real:pt,imag:it}=fftImpl$1(ht,s,o),yt=mergeRealAndImagArrays(pt,it);for(let ft=0;ft<d;ft++){const bt=getComplexWithIndex(yt,ft);et[st*d+ft]=bt.real,rt[st*d+ft]=bt.imag}o.disposeIntermediateTensorInfo(ot),o.disposeIntermediateTensorInfo(ut),o.disposeIntermediateTensorInfo(ht)}const tt=o.makeTensorInfo(_,"float32",et),j=o.makeTensorInfo(_,"float32",rt),nt=complex$1({inputs:{real:tt,imag:j},backend:o});return o.disposeIntermediateTensorInfo(tt),o.disposeIntermediateTensorInfo(j),nt}function fftImpl$1(i,s,o){const a=sizeFromShape(i.shape),c=o.data.get(i.dataId),d=o.data.get(c.complexTensorInfos.real.dataId).values,g=o.data.get(c.complexTensorInfos.imag.dataId).values;if(isExponentOf2(a)){const b=fftRadix2(d,g,a,s,o),$=[i.shape[0],i.shape[1]];if(s){const _=o.makeTensorInfo($,"float32",b.real),_e=o.makeTensorInfo($,"float32",b.imag),et=o.makeTensorInfo([],"float32",createScalarValue(a,"float32")),rt=identity$1({inputs:{x:et},backend:o}),tt=realDivConfig$1.kernelFunc({inputs:{a:_,b:et},backend:o}),j=realDivConfig$1.kernelFunc({inputs:{a:_e,b:rt},backend:o}),nt=o.data.get(tt.dataId).values,st=o.data.get(j.dataId).values;return o.disposeIntermediateTensorInfo(_),o.disposeIntermediateTensorInfo(_e),o.disposeIntermediateTensorInfo(et),o.disposeIntermediateTensorInfo(rt),o.disposeIntermediateTensorInfo(tt),o.disposeIntermediateTensorInfo(j),{real:nt,imag:st}}return b}else{const b=mergeRealAndImagArrays(d,g),$=fourierTransformByMatmul(b,a,s);return splitRealAndImagArrays($)}}function isExponentOf2(i){return(i&i-1)===0}function fftRadix2(i,s,o,a,c){if(o===1)return{real:i,imag:s};const d=mergeRealAndImagArrays(i,s),g=o/2,b=complexWithEvenIndex(d),$=b.real,_=b.imag,_e=[$.length],et=c.makeTensorInfo(_e,"float32",$),rt=c.makeTensorInfo(_e,"float32",_),tt=complex$1({inputs:{real:et,imag:rt},backend:c}),j=complexWithOddIndex(d),nt=j.real,st=j.imag,ot=[nt.length],ut=c.makeTensorInfo(ot,"float32",nt),ht=c.makeTensorInfo(ot,"float32",st),pt=complex$1({inputs:{real:ut,imag:ht},backend:c}),it=fftRadix2($,_,g,a,c),yt=it.real,ft=it.imag,bt=[yt.length],Tt=c.makeTensorInfo(bt,"float32",yt),Ct=c.makeTensorInfo(bt,"float32",ft),_t=complex$1({inputs:{real:Tt,imag:Ct},backend:c}),Ot=fftRadix2(nt,st,g,a,c),kt=Ot.real,Rt=Ot.imag,jt=[kt.length],Gt=c.makeTensorInfo(jt,"float32",kt),Bt=c.makeTensorInfo(jt,"float32",Rt),zt=complex$1({inputs:{real:Gt,imag:Bt},backend:c}),Ut=exponents(o,a),Qt=[Ut.real.length],tn=c.makeTensorInfo(Qt,"float32",Ut.real),sn=c.makeTensorInfo(Qt,"float32",Ut.imag),ln=complex$1({inputs:{real:tn,imag:sn},backend:c}),an=multiply$2({inputs:{a:ln,b:zt},backend:c}),Yt=add({inputs:{a:_t,b:an},backend:c}),cn=sub$1({inputs:{a:_t,b:an},backend:c}),Wt=real$1({inputs:{input:Yt},backend:c}),wt=real$1({inputs:{input:cn},backend:c}),xt=imag$1({inputs:{input:Yt},backend:c}),At=imag$1({inputs:{input:cn},backend:c}),qt=concat$1({inputs:[Wt,wt],backend:c,attrs:{axis:0}}),Pt=concat$1({inputs:[xt,At],backend:c,attrs:{axis:0}}),Zt=c.data.get(qt.dataId).values,nn=c.data.get(Pt.dataId).values;return c.disposeIntermediateTensorInfo(et),c.disposeIntermediateTensorInfo(rt),c.disposeIntermediateTensorInfo(tt),c.disposeIntermediateTensorInfo(ut),c.disposeIntermediateTensorInfo(ht),c.disposeIntermediateTensorInfo(pt),c.disposeIntermediateTensorInfo(Tt),c.disposeIntermediateTensorInfo(Ct),c.disposeIntermediateTensorInfo(_t),c.disposeIntermediateTensorInfo(Gt),c.disposeIntermediateTensorInfo(Bt),c.disposeIntermediateTensorInfo(zt),c.disposeIntermediateTensorInfo(tn),c.disposeIntermediateTensorInfo(sn),c.disposeIntermediateTensorInfo(ln),c.disposeIntermediateTensorInfo(an),c.disposeIntermediateTensorInfo(Yt),c.disposeIntermediateTensorInfo(cn),c.disposeIntermediateTensorInfo(Wt),c.disposeIntermediateTensorInfo(xt),c.disposeIntermediateTensorInfo(wt),c.disposeIntermediateTensorInfo(At),c.disposeIntermediateTensorInfo(qt),c.disposeIntermediateTensorInfo(Pt),{real:Zt,imag:nn}}function fourierTransformByMatmul(i,s,o){const a=new Float32Array(s*2);for(let c=0;c<s;c++){let d=0,g=0;for(let b=0;b<s;b++){const $=exponent(c*b,s,o),_=getComplexWithIndex(i,b);d+=_.real*$.real-_.imag*$.imag,g+=_.real*$.imag+_.imag*$.real}o&&(d/=s,g/=s),assignToTypedArray(a,d,g,c)}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fft$1(i){const{inputs:s,backend:o}=i,{input:a}=s,c=sizeFromShape(a.shape),d=a.shape[a.shape.length-1],g=c/d,b=reshape$1({inputs:{x:a},backend:o,attrs:{shape:[g,d]}}),$=fftBatch(b,!1,o),_=reshape$1({inputs:{x:$},backend:o,attrs:{shape:a.shape}});return o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo($),_}const fftConfig$1={kernelName:FFT$1,backendName:"cpu",kernelFunc:fft$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fill$1(i){const{backend:s,attrs:o}=i,{shape:a,value:c,dtype:d}=o,g=d||inferDtype(c),b=getArrayFromDType(g,sizeFromShape(a));return fillValues(b,c,g),s.makeTensorInfo(a,g,b)}const fillConfig$1={kernelName:Fill,backendName:"cpu",kernelFunc:fill$1};function fillValues(i,s,o){i.fill(s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const flipLeftRightConfig$1={kernelName:FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:i,attrs:s,backend:o})=>{const{image:a}=i,c=o,d=getTypedArrayFromDType(a.dtype,sizeFromShape(a.shape)),[g,b,$,_]=a.shape,_e=c.data.get(a.dataId).values;for(let rt=0;rt<g;rt++){const tt=rt*$*b*_;for(let j=0;j<b;j++){const nt=j*($*_);for(let st=0;st<$;st++){const ot=st*_;for(let ut=0;ut<_;ut++){const pt=[g,j,st,ut][2],it=Math.round($-pt),yt=tt+nt+ot+ut;let ft=_e[yt];if(it>=0&&it<$){const bt=it*_,Tt=tt+nt+bt+ut;ft=_e[Tt]}d[yt]=ft}}}}return{dataId:c.write(d,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const floorDivImpl=createSimpleBinaryKernelImpl((i,s)=>Math.floor(i/s)),floorDiv$1=binaryKernelFunc$1(FloorDiv,floorDivImpl,null,"int32"),floorDivConfig$1={kernelName:FloorDiv,backendName:"cpu",kernelFunc:floorDiv$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedConv2D(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,filter:d,bias:g,preluActivationWeights:b}=s,{strides:$,pad:_,dataFormat:_e,dilations:et,dimRoundingMode:rt,activation:tt,leakyreluAlpha:j}=a;let nt=conv2D({inputs:{x:c,filter:d},backend:o,attrs:{strides:$,pad:_,dataFormat:_e,dilations:et,dimRoundingMode:rt}});if(g){const st=nt;nt=add({inputs:{a:nt,b:g},backend:o}),o.disposeIntermediateTensorInfo(st)}if(tt){const st=nt;nt=applyActivation(o,nt,tt,b,j),o.disposeIntermediateTensorInfo(st)}return nt}const fusedConv2DConfig$1={kernelName:FusedConv2D,backendName:"cpu",kernelFunc:fusedConv2D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedDepthwiseConv2D$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,filter:d,bias:g,preluActivationWeights:b}=s,{strides:$,pad:_,dataFormat:_e,dilations:et,dimRoundingMode:rt,activation:tt,leakyreluAlpha:j}=a;let nt=depthwiseConv2dNative$1({inputs:{x:c,filter:d},backend:o,attrs:{strides:$,pad:_,dataFormat:_e,dilations:et,dimRoundingMode:rt}});if(g){const st=nt;nt=add({inputs:{a:nt,b:g},backend:o}),o.disposeIntermediateTensorInfo(st)}if(tt){const st=nt;nt=applyActivation(o,nt,tt,b,j),o.disposeIntermediateTensorInfo(st)}return nt}const fusedDepthwiseConv2DConfig$1={kernelName:FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:fusedDepthwiseConv2D$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherNd$1(i){const{inputs:s,backend:o}=i,{params:a,indices:c}=s,d=sizeFromShape(a.shape),g=c.shape,b=g[g.length-1],[$,_,_e,et]=prepareAndValidate(a,c);if(_===0)return o.makeTensorInfo($,a.dtype,[]);const rt=buffer([_,_e],a.dtype),tt=o.data.get(c.dataId).values,j=o.data.get(a.dataId).values;for(let nt=0;nt<_;nt++){const st=[];let ot=0;for(let ut=0;ut<b;ut++){const ht=tt[nt*b+ut];ot+=ht*et[ut],st.push(ht)}if(ot<0||ot>=d/_e)throw new Error(`Invalid indices: ${st} does not index into ${a.shape}`);for(let ut=0;ut<_e;ut++)rt.values[nt*_e+ut]=j[ot*_e+ut]}return o.makeTensorInfo($,rt.dtype,rt.values)}const gatherNdConfig$1={kernelName:GatherNd,backendName:"cpu",kernelFunc:gatherNd$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherV2$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,indices:d}=s,{axis:g,batchDims:b}=a;assertNotComplex$1([c,d],"gatherV2");let $=b;b==null&&($=0);const _=sizeFromShape(d.shape),_e=parseAxisParam(g,c.shape)[0],et=collectGatherOpShapeInfo(c,d,_e,$),rt=reshape$1({inputs:{x:c},backend:o,attrs:{shape:[et.batchSize,et.outerSize,et.dimSize,et.sliceSize]}}),tt=reshape$1({inputs:{x:d},backend:o,attrs:{shape:[et.batchSize,_/et.batchSize]}}),j=[et.batchSize,et.outerSize,_/et.batchSize,et.sliceSize],nt=o.bufferSync(tt),st=o.bufferSync(rt),ot=gatherV2Impl(st,nt,j);return o.disposeIntermediateTensorInfo(rt),o.disposeIntermediateTensorInfo(tt),o.makeTensorInfo(et.outputShape,ot.dtype,ot.values)}const gatherV2Config$1={kernelName:GatherV2,backendName:"cpu",kernelFunc:gatherV2$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const greaterEqualImpl=createSimpleBinaryKernelImpl((i,s)=>i>=s?1:0),greaterEqual$1=binaryKernelFunc$1(GreaterEqual,greaterEqualImpl,null,"bool"),greaterEqualConfig$1={kernelName:GreaterEqual,backendName:"cpu",kernelFunc:greaterEqual$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ifft$1(i){const{inputs:s,backend:o}=i,{input:a}=s,c=sizeFromShape(a.shape),d=a.shape[a.shape.length-1],g=c/d,b=reshape$1({inputs:{x:a},backend:o,attrs:{shape:[g,d]}}),$=fftBatch(b,!0,o),_=reshape$1({inputs:{x:$},backend:o,attrs:{shape:a.shape}});return o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo($),_}const ifftConfig$1={kernelName:IFFT,backendName:"cpu",kernelFunc:ifft$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isFinite$2=unaryKernelFunc$1(IsFinite,i=>Number.isFinite(i)?1:0,"bool"),isFiniteConfig$1={kernelName:IsFinite,backendName:"cpu",kernelFunc:isFinite$2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isInf$1=unaryKernelFunc$1(IsInf,i=>Math.abs(i)===1/0?1:0,"bool"),isInfConfig$1={kernelName:IsInf,backendName:"cpu",kernelFunc:isInf$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isNaN$2=unaryKernelFunc$1(IsNan,i=>Number.isNaN(i)?1:0,"bool"),isNaNConfig$1={kernelName:IsNan,backendName:"cpu",kernelFunc:isNaN$2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lessEqualImpl=createSimpleBinaryKernelImpl((i,s)=>i<=s?1:0),lessEqual$1=binaryKernelFunc$1(LessEqual,lessEqualImpl,null,"bool"),lessEqualConfig$1={kernelName:LessEqual,backendName:"cpu",kernelFunc:lessEqual$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function linSpace$1(i){const{backend:s,attrs:o}=i,{start:a,stop:c,num:d}=o,g=linSpaceImpl(a,c,d);return s.makeTensorInfo([g.length],"float32",g)}const linSpaceConfig$1={kernelName:LinSpace,backendName:"cpu",kernelFunc:linSpace$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const log1p$1=unaryKernelFunc$1(Log1p,i=>Math.log1p(i)),log1pConfig$1={kernelName:Log1p,backendName:"cpu",kernelFunc:log1p$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logicalAndImpl=createSimpleBinaryKernelImpl((i,s)=>i&&s),logicalAnd$1=binaryKernelFunc$1(LogicalAnd,logicalAndImpl,null,"bool"),logicalAndConfig$1={kernelName:LogicalAnd,backendName:"cpu",kernelFunc:logicalAnd$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logicalNot$1=unaryKernelFunc$1(LogicalNot,i=>i?0:1,"bool"),logicalNotConfig$1={kernelName:LogicalNot,backendName:"cpu",kernelFunc:logicalNot$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logicalOrImpl=createSimpleBinaryKernelImpl((i,s)=>i||s),logicalOr$1=binaryKernelFunc$1(LogicalOr,logicalOrImpl,null,"bool"),logicalOrConfig$1={kernelName:LogicalOr,backendName:"cpu",kernelFunc:logicalOr$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lRN(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{depthRadius:d,bias:g,alpha:b,beta:$}=a;assertNotComplex$1(c,"LRN");const _=c.shape[3],_e=_-1,et=o.data.get(c.dataId).values,rt=sizeFromShape(c.shape),tt=new Float32Array(rt);function j(nt){const st=nt%_;let ot=nt-st+Math.max(0,st-d);const ut=nt-st+Math.min(st+d,_e);let ht=0;for(;ot<=ut;ot++){const pt=et[ot];ht+=pt*pt}return ht}for(let nt=0;nt<rt;nt++){const st=j(nt),ot=et[nt]*Math.pow(g+b*st,-$);tt[nt]=ot}return o.makeTensorInfo(c.shape,c.dtype,tt)}const lRNConfig={kernelName:LRN,backendName:"cpu",kernelFunc:lRN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lRNGrad(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,y:d,dy:g}=s,{depthRadius:b,bias:$,alpha:_,beta:_e}=a;assertNotComplex$1(g,"LRNGrad");const et=sizeFromShape(g.shape),rt=g.shape[3],tt=o.data.get(g.dataId).values,j=o.data.get(c.dataId).values,nt=o.data.get(d.dataId).values,st=new Float32Array(et),ot=et;for(let ut=0;ut<ot;ut++){const ht=ut%rt,pt=ut-ht+Math.max(0,ht-b),it=ut-ht+Math.min(rt,ht+b+1);let yt=0;for(let ft=pt;ft<it;ft++)yt+=Math.pow(j[ft],2);yt=_*yt+$;for(let ft=pt;ft<it;ft++){let bt=-2*_*_e*j[ft]*nt[ut]/yt;ut===ft&&(bt+=Math.pow(yt,-_e)),bt*=tt[ut],st[ft]+=bt}}return o.makeTensorInfo(g.shape,c.dtype,st)}const lRNGradConfig={kernelName:LRNGrad,backendName:"cpu",kernelFunc:lRNGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function max$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{reductionIndices:d,keepDims:g}=a,b=o;let $=c.shape;const _=$.length,_e=parseAxisParam(d,$);let et=_e;const rt=getAxesPermutation(et,_);let tt=b.data.get(c.dataId).values;if(rt!=null){const pt=new Array(_);for(let it=0;it<pt.length;it++)pt[it]=$[rt[it]];tt=transposeImpl$1(tt,$,c.dtype,rt,pt),et=getInnerMostAxes(et.length,_),$=pt}assertNotComplex$1(c,"max"),assertAxesAreInnerMostDims("max",et,_);const[j,nt]=computeOutAndReduceShapes($,et),st=sizeFromShape(nt),ot=maxImpl$1(tt,st,j,c.dtype),ut=b.write(ot,j,c.dtype);let ht=j;return g&&(ht=expandShapeToKeepDim(j,_e)),{dataId:ut,shape:ht,dtype:c.dtype}}const maxConfig$1={kernelName:Max,backendName:"cpu",kernelFunc:max$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s;assertNotComplex$1(c,"maxPool");const{filterSize:d,strides:g,pad:b,dimRoundingMode:$}=a,_=1;assert$2(eitherStridesOrDilationsAreOne(g,_),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${g} and dilations '${_}'`);const _e=computePool2DInfo(c.shape,d,g,_,b,$);let et;if(_e.filterWidth===1&&_e.filterHeight===1&&arraysEqual(_e.inShape,_e.outShape))et=identity$1({inputs:{x:c},backend:o});else{const rt=o.data.get(c.dataId).values,tt=computeStrides(c.shape),j=pool(rt,c.shape,c.dtype,tt,_e,"max");et=o.makeTensorInfo(_e.outShape,c.dtype,j.values)}return et}const maxPoolConfig$1={kernelName:MaxPool,backendName:"cpu",kernelFunc:maxPool$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3D(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{filterSize:d,strides:g,pad:b,dimRoundingMode:$,dataFormat:_,dilations:_e}=a;assertNotComplex$1(c,"maxPool3d");let et=_e;et==null&&(et=[1,1,1]);const rt=computePool3DInfo(c.shape,d,g,et,b,$,_),tt=o.data.get(c.dataId).values,j=pool3d(tt,c.shape,c.dtype,computeStrides(c.shape),rt,"max");return o.makeTensorInfo(j.shape,"float32",j.values)}const maxPool3DConfig$1={kernelName:MaxPool3D,backendName:"cpu",kernelFunc:maxPool3D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3DGrad$1(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,input:d}=s,{filterSize:g,strides:b,pad:$,dilations:_,dimRoundingMode:_e}=a;assertNotComplex$1([c,d],"maxPool3DGrad");const et=computePool3DInfo(d.shape,g,b,_,$,_e),rt=o.bufferSync(d),tt=maxPool3dPositions(rt,et),j=et.strideDepth,nt=et.strideHeight,st=et.strideWidth,ot=et.dilationDepth,ut=et.dilationHeight,ht=et.dilationWidth,pt=et.effectiveFilterDepth,it=et.effectiveFilterHeight,yt=et.effectiveFilterWidth,ft=pt-1-et.padInfo.front,bt=yt-1-et.padInfo.left,Tt=it-1-et.padInfo.top,Ct=buffer(d.shape,"float32"),_t=o.bufferSync(c);for(let Ot=0;Ot<et.batchSize;++Ot)for(let kt=0;kt<et.inChannels;++kt)for(let Rt=0;Rt<et.inDepth;++Rt)for(let jt=0;jt<et.inHeight;++jt)for(let Gt=0;Gt<et.inWidth;++Gt){const Bt=Rt-ft,zt=jt-Tt,Ut=Gt-bt;let Qt=0;for(let tn=0;tn<pt;tn+=ot){const sn=(Bt+tn)/j;if(!(sn<0||sn>=et.outDepth||Math.floor(sn)!==sn))for(let ln=0;ln<it;ln+=ut){const an=(zt+ln)/nt;if(!(an<0||an>=et.outHeight||Math.floor(an)!==an))for(let Yt=0;Yt<yt;Yt+=ht){const cn=(Ut+Yt)/st;if(cn<0||cn>=et.outWidth||Math.floor(cn)!==cn)continue;const Wt=pt*it*yt-1-tt.get(Ot,sn,an,cn,kt),wt=tn*it*yt+ln*yt+Yt,xt=Wt===wt?1:0;if(xt===0)continue;const At=_t.get(Ot,sn,an,cn,kt);Qt+=At*xt}}}Ct.set(Qt,Ot,Rt,jt,Gt,kt)}return o.makeTensorInfo(Ct.shape,Ct.dtype,Ct.values)}const maxPool3DGradConfig={kernelName:MaxPool3DGrad,backendName:"cpu",kernelFunc:maxPool3DGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolGrad$1(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,input:d,output:g}=s,b=d;assertNotComplex$1([d,g],"maxPoolGrad");const{filterSize:$,strides:_,pad:_e,dimRoundingMode:et}=a,rt=computePool2DInfo(b.shape,$,_,1,_e,et),tt=o.data.get(b.dataId).values,j=buffer(rt.outShape,b.dtype,maxPoolPositions(tt,b.shape,b.dtype,rt).values),nt=rt.strideHeight,st=rt.strideWidth,ot=rt.dilationHeight,ut=rt.dilationWidth,ht=rt.effectiveFilterHeight,pt=rt.effectiveFilterWidth,it=pt-1-rt.padInfo.left,yt=ht-1-rt.padInfo.top,ft=buffer(b.shape,"float32"),bt=o.data.get(c.dataId).values,Tt=buffer(c.shape,"float32",bt);for(let Ct=0;Ct<rt.batchSize;++Ct)for(let _t=0;_t<rt.inChannels;++_t)for(let Ot=0;Ot<rt.inHeight;++Ot)for(let kt=0;kt<rt.inWidth;++kt){const Rt=Ot-yt,jt=kt-it;let Gt=0;for(let Bt=0;Bt<ht;Bt+=ot){const zt=(Rt+Bt)/nt;if(!(zt<0||zt>=rt.outHeight||Math.floor(zt)!==zt))for(let Ut=0;Ut<pt;Ut+=ut){const Qt=(jt+Ut)/st;if(Qt<0||Qt>=rt.outWidth||Math.floor(Qt)!==Qt)continue;const tn=ht*pt-1-j.get(Ct,zt,Qt,_t),sn=Bt*pt+Ut,ln=tn===sn?1:0;if(ln===0)continue;const an=Tt.get(Ct,zt,Qt,_t);Gt+=an*ln}}ft.set(Gt,Ct,Ot,kt,_t)}return o.makeTensorInfo(ft.shape,ft.dtype,ft.values)}const maxPoolGradConfig$1={kernelName:MaxPoolGrad,backendName:"cpu",kernelFunc:maxPoolGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolWithArgmaxImpl$1(i,s,o,a,c){const d=computeStrides(s),g=pool(i,s,o,d,c,"max"),b=maxPoolPositions(i,s,o,c,!0,a);return[g.values,b.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxPoolWithArgmaxConfig$1={kernelName:MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:i,attrs:s,backend:o})=>{const{x:a}=i,{filterSize:c,strides:d,pad:g,includeBatchInIndex:b}=s,$=o;assertNotComplex$1(a,"MaxPoolWithArgmax");const _=$.data.get(a.dataId).values,_e=computePool2DInfo(a.shape,c,d,[1,1],g),[et,rt]=maxPoolWithArgmaxImpl$1(_,a.shape,a.dtype,b,_e),tt=$.write(et,_e.outShape,a.dtype),j=$.write(rt,_e.outShape,a.dtype);return[{dataId:tt,shape:_e.outShape,dtype:a.dtype},{dataId:j,shape:_e.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sum$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,keepDims:g}=a;assertNotComplex$1(c,"sum");let b;c.dtype==="bool"?b=cast$1({inputs:{x:c},backend:o,attrs:{dtype:"int32"}}):b=identity$1({inputs:{x:c},backend:o});const $=b.shape.length,_=parseAxisParam(d,b.shape),_e=getAxesPermutation(_,$);let et=_,rt=b;_e!=null&&(rt=transpose$1({inputs:{x:b},backend:o,attrs:{perm:_e}}),et=getInnerMostAxes(et.length,$)),assertAxesAreInnerMostDims("sum",et,rt.shape.length);const[tt,j]=computeOutAndReduceShapes(rt.shape,et),nt=upcastType(rt.dtype,"int32");let st=zeros(o,tt,nt);const ot=sizeFromShape(j),ut=o.data.get(st.dataId).values,ht=o.data.get(rt.dataId).values;for(let pt=0;pt<ut.length;++pt){const it=pt*ot;let yt=0;for(let ft=0;ft<ot;++ft)yt+=ht[it+ft];ut[pt]=yt}if(g){const pt=expandShapeToKeepDim(st.shape,_),it=st;st=reshape$1({inputs:{x:st},backend:o,attrs:{shape:pt}}),o.disposeIntermediateTensorInfo(it)}return o.disposeIntermediateTensorInfo(b),_e!=null&&o.disposeIntermediateTensorInfo(rt),st}const sumConfig$1={kernelName:Sum,backendName:"cpu",kernelFunc:sum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mean(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,keepDims:g}=a,b=parseAxisParam(d,c.shape),_=computeOutAndReduceShapes(c.shape,b)[1],_e=sizeFromShape(_),et=[],rt=o.makeTensorInfo([],"float32",new Float32Array([_e]));et.push(rt);const tt=cast$1({inputs:{x:c},backend:o,attrs:{dtype:"float32"}});et.push(tt);const j=div({inputs:{a:tt,b:rt},backend:o});et.push(j);const nt=sum$1({inputs:{x:j},backend:o,attrs:{axis:d,keepDims:g}});return et.forEach(st=>o.disposeIntermediateTensorInfo(st)),nt}const meanConfig$1={kernelName:Mean,backendName:"cpu",kernelFunc:mean};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function min$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,keepDims:g}=a;assertNotComplex$1(c,"min");const b=parseAxisParam(d,c.shape);let $=b;const _=getAxesPermutation($,c.shape.length);let _e=c;_!=null&&(_e=transpose$1({inputs:{x:c},backend:o,attrs:{perm:_}}),$=getInnerMostAxes($.length,c.shape.length)),assertAxesAreInnerMostDims("min",$,_e.shape.length);const[et,rt]=computeOutAndReduceShapes(_e.shape,$),tt=sizeFromShape(rt),j=makeZerosTypedArray(sizeFromShape(et),_e.dtype),nt=o.data.get(_e.dataId).values;for(let ot=0;ot<j.length;++ot){const ut=ot*tt;let ht=nt[ut];for(let pt=0;pt<tt;++pt){const it=nt[ut+pt];it<ht&&(ht=it)}j[ot]=ht}_!=null&&o.disposeIntermediateTensorInfo(_e);const st=o.makeTensorInfo(et,_e.dtype,j);if(g){const ot=expandShapeToKeepDim(et,b),ut=reshape$1({inputs:{x:st},backend:o,attrs:{shape:ot}});return o.disposeIntermediateTensorInfo(st),ut}return st}const minConfig$1={kernelName:Min,backendName:"cpu",kernelFunc:min$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mirrorPad(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{paddings:d,mode:g}=a;assertNotComplex$1(c,"mirrorPad");const b=d.map((ht,pt)=>ht[0]+c.shape[pt]+ht[1]),$=d.map(ht=>ht[0]),_=d.map((ht,pt)=>ht[0]+c.shape[pt]),_e=g==="reflect"?0:1,et=o.data.get(c.dataId).values,rt=c.shape.length,tt=computeStrides(c.shape),j=sizeFromShape(b),nt=b.length,st=computeStrides(b),ot=getTypedArrayFromDType(c.dtype,j);for(let ht=0;ht<j;ht++){let pt=indexToLoc(ht,nt,st);for(let yt=0;yt<nt;yt++)pt[yt]<$[yt]?pt[yt]=$[yt]*2-pt[yt]-_e:pt[yt]>=_[yt]&&(pt[yt]=(_[yt]-1)*2-pt[yt]+_e);pt=pt.map((yt,ft)=>yt-$[ft]);const it=locToIndex(pt,rt,tt);ot[ht]=et[it]}return{dataId:o.write(ot,b,c.dtype),shape:b,dtype:c.dtype}}const mirrorPadConfig$1={kernelName:MirrorPad,backendName:"cpu",kernelFunc:mirrorPad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const modImpl=createSimpleBinaryKernelImpl((i,s)=>{const o=i%s;return i<0&&s<0||i>=0&&s>=0?o:(o+s)%s}),mod$1=binaryKernelFunc$1(Mod,modImpl),modConfig$1={kernelName:Mod,backendName:"cpu",kernelFunc:mod$1};var alea$1={exports:{}};alea$1.exports;(function(i){(function(s,o,a){function c($){var _=this,_e=b();_.next=function(){var et=2091639*_.s0+_.c*23283064365386963e-26;return _.s0=_.s1,_.s1=_.s2,_.s2=et-(_.c=et|0)},_.c=1,_.s0=_e(" "),_.s1=_e(" "),_.s2=_e(" "),_.s0-=_e($),_.s0<0&&(_.s0+=1),_.s1-=_e($),_.s1<0&&(_.s1+=1),_.s2-=_e($),_.s2<0&&(_.s2+=1),_e=null}function d($,_){return _.c=$.c,_.s0=$.s0,_.s1=$.s1,_.s2=$.s2,_}function g($,_){var _e=new c($),et=_&&_.state,rt=_e.next;return rt.int32=function(){return _e.next()*4294967296|0},rt.double=function(){return rt()+(rt()*2097152|0)*11102230246251565e-32},rt.quick=rt,et&&(typeof et=="object"&&d(et,_e),rt.state=function(){return d(_e,{})}),rt}function b(){var $=4022871197,_=function(_e){_e=_e.toString();for(var et=0;et<_e.length;et++){$+=_e.charCodeAt(et);var rt=.02519603282416938*$;$=rt>>>0,rt-=$,rt*=$,$=rt>>>0,rt-=$,$+=rt*4294967296}return($>>>0)*23283064365386963e-26};return _}o&&o.exports?o.exports=g:a&&a.amd?a(function(){return g}):this.alea=g})(commonjsGlobal,i,!1)})(alea$1);var aleaExports=alea$1.exports,xor128$1={exports:{}};xor128$1.exports;(function(i){(function(s,o,a){function c(b){var $=this,_="";$.x=0,$.y=0,$.z=0,$.w=0,$.next=function(){var et=$.x^$.x<<11;return $.x=$.y,$.y=$.z,$.z=$.w,$.w^=$.w>>>19^et^et>>>8},b===(b|0)?$.x=b:_+=b;for(var _e=0;_e<_.length+64;_e++)$.x^=_.charCodeAt(_e)|0,$.next()}function d(b,$){return $.x=b.x,$.y=b.y,$.z=b.z,$.w=b.w,$}function g(b,$){var _=new c(b),_e=$&&$.state,et=function(){return(_.next()>>>0)/4294967296};return et.double=function(){do var rt=_.next()>>>11,tt=(_.next()>>>0)/4294967296,j=(rt+tt)/(1<<21);while(j===0);return j},et.int32=_.next,et.quick=et,_e&&(typeof _e=="object"&&d(_e,_),et.state=function(){return d(_,{})}),et}o&&o.exports?o.exports=g:a&&a.amd?a(function(){return g}):this.xor128=g})(commonjsGlobal,i,!1)})(xor128$1);var xor128Exports=xor128$1.exports,xorwow$1={exports:{}};xorwow$1.exports;(function(i){(function(s,o,a){function c(b){var $=this,_="";$.next=function(){var et=$.x^$.x>>>2;return $.x=$.y,$.y=$.z,$.z=$.w,$.w=$.v,($.d=$.d+362437|0)+($.v=$.v^$.v<<4^(et^et<<1))|0},$.x=0,$.y=0,$.z=0,$.w=0,$.v=0,b===(b|0)?$.x=b:_+=b;for(var _e=0;_e<_.length+64;_e++)$.x^=_.charCodeAt(_e)|0,_e==_.length&&($.d=$.x<<10^$.x>>>4),$.next()}function d(b,$){return $.x=b.x,$.y=b.y,$.z=b.z,$.w=b.w,$.v=b.v,$.d=b.d,$}function g(b,$){var _=new c(b),_e=$&&$.state,et=function(){return(_.next()>>>0)/4294967296};return et.double=function(){do var rt=_.next()>>>11,tt=(_.next()>>>0)/4294967296,j=(rt+tt)/(1<<21);while(j===0);return j},et.int32=_.next,et.quick=et,_e&&(typeof _e=="object"&&d(_e,_),et.state=function(){return d(_,{})}),et}o&&o.exports?o.exports=g:a&&a.amd?a(function(){return g}):this.xorwow=g})(commonjsGlobal,i,!1)})(xorwow$1);var xorwowExports=xorwow$1.exports,xorshift7$1={exports:{}};xorshift7$1.exports;(function(i){(function(s,o,a){function c(b){var $=this;$.next=function(){var _e=$.x,et=$.i,rt,tt;return rt=_e[et],rt^=rt>>>7,tt=rt^rt<<24,rt=_e[et+1&7],tt^=rt^rt>>>10,rt=_e[et+3&7],tt^=rt^rt>>>3,rt=_e[et+4&7],tt^=rt^rt<<7,rt=_e[et+7&7],rt=rt^rt<<13,tt^=rt^rt<<9,_e[et]=tt,$.i=et+1&7,tt};function _(_e,et){var rt,tt=[];if(et===(et|0))tt[0]=et;else for(et=""+et,rt=0;rt<et.length;++rt)tt[rt&7]=tt[rt&7]<<15^et.charCodeAt(rt)+tt[rt+1&7]<<13;for(;tt.length<8;)tt.push(0);for(rt=0;rt<8&&tt[rt]===0;++rt);for(rt==8?tt[7]=-1:tt[rt],_e.x=tt,_e.i=0,rt=256;rt>0;--rt)_e.next()}_($,b)}function d(b,$){return $.x=b.x.slice(),$.i=b.i,$}function g(b,$){b==null&&(b=+new Date);var _=new c(b),_e=$&&$.state,et=function(){return(_.next()>>>0)/4294967296};return et.double=function(){do var rt=_.next()>>>11,tt=(_.next()>>>0)/4294967296,j=(rt+tt)/(1<<21);while(j===0);return j},et.int32=_.next,et.quick=et,_e&&(_e.x&&d(_e,_),et.state=function(){return d(_,{})}),et}o&&o.exports?o.exports=g:a&&a.amd?a(function(){return g}):this.xorshift7=g})(commonjsGlobal,i,!1)})(xorshift7$1);var xorshift7Exports=xorshift7$1.exports,xor4096$1={exports:{}};xor4096$1.exports;(function(i){(function(s,o,a){function c(b){var $=this;$.next=function(){var _e=$.w,et=$.X,rt=$.i,tt,j;return $.w=_e=_e+1640531527|0,j=et[rt+34&127],tt=et[rt=rt+1&127],j^=j<<13,tt^=tt<<17,j^=j>>>15,tt^=tt>>>12,j=et[rt]=j^tt,$.i=rt,j+(_e^_e>>>16)|0};function _(_e,et){var rt,tt,j,nt,st,ot=[],ut=128;for(et===(et|0)?(tt=et,et=null):(et=et+"\0",tt=0,ut=Math.max(ut,et.length)),j=0,nt=-32;nt<ut;++nt)et&&(tt^=et.charCodeAt((nt+32)%et.length)),nt===0&&(st=tt),tt^=tt<<10,tt^=tt>>>15,tt^=tt<<4,tt^=tt>>>13,nt>=0&&(st=st+1640531527|0,rt=ot[nt&127]^=tt+st,j=rt==0?j+1:0);for(j>=128&&(ot[(et&&et.length||0)&127]=-1),j=127,nt=4*128;nt>0;--nt)tt=ot[j+34&127],rt=ot[j=j+1&127],tt^=tt<<13,rt^=rt<<17,tt^=tt>>>15,rt^=rt>>>12,ot[j]=tt^rt;_e.w=st,_e.X=ot,_e.i=j}_($,b)}function d(b,$){return $.i=b.i,$.w=b.w,$.X=b.X.slice(),$}function g(b,$){b==null&&(b=+new Date);var _=new c(b),_e=$&&$.state,et=function(){return(_.next()>>>0)/4294967296};return et.double=function(){do var rt=_.next()>>>11,tt=(_.next()>>>0)/4294967296,j=(rt+tt)/(1<<21);while(j===0);return j},et.int32=_.next,et.quick=et,_e&&(_e.X&&d(_e,_),et.state=function(){return d(_,{})}),et}o&&o.exports?o.exports=g:a&&a.amd?a(function(){return g}):this.xor4096=g})(commonjsGlobal,i,!1)})(xor4096$1);var xor4096Exports=xor4096$1.exports,tychei$1={exports:{}};tychei$1.exports;(function(i){(function(s,o,a){function c(b){var $=this,_="";$.next=function(){var et=$.b,rt=$.c,tt=$.d,j=$.a;return et=et<<25^et>>>7^rt,rt=rt-tt|0,tt=tt<<24^tt>>>8^j,j=j-et|0,$.b=et=et<<20^et>>>12^rt,$.c=rt=rt-tt|0,$.d=tt<<16^rt>>>16^j,$.a=j-et|0},$.a=0,$.b=0,$.c=-1640531527,$.d=1367130551,b===Math.floor(b)?($.a=b/4294967296|0,$.b=b|0):_+=b;for(var _e=0;_e<_.length+20;_e++)$.b^=_.charCodeAt(_e)|0,$.next()}function d(b,$){return $.a=b.a,$.b=b.b,$.c=b.c,$.d=b.d,$}function g(b,$){var _=new c(b),_e=$&&$.state,et=function(){return(_.next()>>>0)/4294967296};return et.double=function(){do var rt=_.next()>>>11,tt=(_.next()>>>0)/4294967296,j=(rt+tt)/(1<<21);while(j===0);return j},et.int32=_.next,et.quick=et,_e&&(typeof _e=="object"&&d(_e,_),et.state=function(){return d(_,{})}),et}o&&o.exports?o.exports=g:a&&a.amd?a(function(){return g}):this.tychei=g})(commonjsGlobal,i,!1)})(tychei$1);var tycheiExports=tychei$1.exports,seedrandom$1={exports:{}};(function(i){(function(s,o){var a=this,c=256,d=6,g=52,b="random",$=o.pow(c,d),_=o.pow(2,g),_e=_*2,et=c-1,rt;function tt(pt,it,yt){var ft=[];it=it==!0?{entropy:!0}:it||{};var bt=ot(st(it.entropy?[pt,ht(s)]:pt??ut(),3),ft),Tt=new j(ft),Ct=function(){for(var _t=Tt.g(d),Ot=$,kt=0;_t<_;)_t=(_t+kt)*c,Ot*=c,kt=Tt.g(1);for(;_t>=_e;)_t/=2,Ot/=2,kt>>>=1;return(_t+kt)/Ot};return Ct.int32=function(){return Tt.g(4)|0},Ct.quick=function(){return Tt.g(4)/4294967296},Ct.double=Ct,ot(ht(Tt.S),s),(it.pass||yt||function(_t,Ot,kt,Rt){return Rt&&(Rt.S&&nt(Rt,Tt),_t.state=function(){return nt(Tt,{})}),kt?(o[b]=_t,Ot):_t})(Ct,bt,"global"in it?it.global:this==o,it.state)}o["seed"+b]=tt;function j(pt){var it,yt=pt.length,ft=this,bt=0,Tt=ft.i=ft.j=0,Ct=ft.S=[];for(yt||(pt=[yt++]);bt<c;)Ct[bt]=bt++;for(bt=0;bt<c;bt++)Ct[bt]=Ct[Tt=et&Tt+pt[bt%yt]+(it=Ct[bt])],Ct[Tt]=it;(ft.g=function(_t){for(var Ot,kt=0,Rt=ft.i,jt=ft.j,Gt=ft.S;_t--;)Ot=Gt[Rt=et&Rt+1],kt=kt*c+Gt[et&(Gt[Rt]=Gt[jt=et&jt+Ot])+(Gt[jt]=Ot)];return ft.i=Rt,ft.j=jt,kt})(c)}function nt(pt,it){return it.i=pt.i,it.j=pt.j,it.S=pt.S.slice(),it}function st(pt,it){var yt=[],ft=typeof pt,bt;if(it&&ft=="object")for(bt in pt)try{yt.push(st(pt[bt],it-1))}catch{}return yt.length?yt:ft=="string"?pt:pt+"\0"}function ot(pt,it){for(var yt=pt+"",ft,bt=0;bt<yt.length;)it[et&bt]=et&(ft^=it[et&bt]*19)+yt.charCodeAt(bt++);return ht(it)}function ut(){try{var pt;return rt&&(pt=rt.randomBytes)?pt=pt(c):(pt=new Uint8Array(c),(a.crypto||a.msCrypto).getRandomValues(pt)),ht(pt)}catch{var it=a.navigator,yt=it&&it.plugins;return[+new Date,a,yt,a.screen,ht(s)]}}function ht(pt){return String.fromCharCode.apply(0,pt)}if(ot(o.random(),s),i.exports){i.exports=tt;try{rt=require$$0$1}catch{}}})([],Math)})(seedrandom$1);var seedrandomExports=seedrandom$1.exports,alea=aleaExports,xor128=xor128Exports,xorwow=xorwowExports,xorshift7=xorshift7Exports,xor4096=xor4096Exports,tychei=tycheiExports,sr=seedrandomExports;sr.alea=alea;sr.xor128=xor128;sr.xorwow=xorwow;sr.xorshift7=xorshift7;sr.xor4096=xor4096;sr.tychei=tychei;var seedrandom=sr;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function softmax$1(i){const{inputs:s,backend:o,attrs:a}=i,{logits:c}=s,{dim:d}=a,g=c.shape.length;let b=d;if(b===-1&&(b=g-1),b!==g-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${g} and dim was ${b}`);const $=parseAxisParam([b],c.shape),_=max$1({inputs:{x:c},backend:o,attrs:{reductionIndices:$,keepDims:!1}}),_e=expandShapeToKeepDim(_.shape,$),et=reshape$1({inputs:{x:_},backend:o,attrs:{shape:_e}}),rt=sub$1({inputs:{a:c,b:et},backend:o}),tt=exp$1({inputs:{x:rt},backend:o}),j=sum$1({inputs:{x:tt},backend:o,attrs:{axis:$,keepDims:!1}}),nt=reshape$1({inputs:{x:j},backend:o,attrs:{shape:_e}}),st=div({inputs:{a:tt,b:nt},backend:o});return o.disposeIntermediateTensorInfo(_),o.disposeIntermediateTensorInfo(et),o.disposeIntermediateTensorInfo(rt),o.disposeIntermediateTensorInfo(tt),o.disposeIntermediateTensorInfo(j),o.disposeIntermediateTensorInfo(nt),st}const softmaxConfig$1={kernelName:Softmax$2,backendName:"cpu",kernelFunc:softmax$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function multinomial$1(i){const{inputs:s,backend:o,attrs:a}=i,{logits:c}=s,{numSamples:d,seed:g,normalized:b}=a;assertNotComplex$1(c,"multinomial");const $=b?c:softmax$1({inputs:{logits:c},backend:o,attrs:{dim:-1}}),_=$.shape[0],_e=$.shape[1],et=o.data.get($.dataId).values,rt=[_,d],tt=makeZerosTypedArray(sizeFromShape(rt),"int32");for(let j=0;j<_;++j){const nt=j*_e,st=new Float32Array(_e-1);st[0]=et[nt];for(let ht=1;ht<st.length;++ht)st[ht]=st[ht-1]+et[nt+ht];const ot=seedrandom.alea(g.toString()),ut=j*d;for(let ht=0;ht<d;++ht){const pt=ot();tt[ut+ht]=st.length;for(let it=0;it<st.length;it++)if(pt<st[it]){tt[ut+ht]=it;break}}}return b||o.disposeIntermediateTensorInfo($),o.makeTensorInfo(rt,"int32",tt)}const multinomialConfig$1={kernelName:Multinomial,backendName:"cpu",kernelFunc:multinomial$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV3Impl$1=nonMaxSuppressionV3Impl$2;function nonMaxSuppressionV3$1(i){const{inputs:s,backend:o,attrs:a}=i,{boxes:c,scores:d}=s,{maxOutputSize:g,iouThreshold:b,scoreThreshold:$}=a;assertNotComplex$1(c,"NonMaxSuppression");const _=o.data.get(c.dataId).values,_e=o.data.get(d.dataId).values,{selectedIndices:et}=nonMaxSuppressionV3Impl$1(_,_e,g,b,$);return o.makeTensorInfo([et.length],"int32",new Int32Array(et))}const nonMaxSuppressionV3Config$1={kernelName:NonMaxSuppressionV3,backendName:"cpu",kernelFunc:nonMaxSuppressionV3$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV4Impl$1=nonMaxSuppressionV4Impl$2;function nonMaxSuppressionV4$1(i){const{inputs:s,backend:o,attrs:a}=i,{boxes:c,scores:d}=s,{maxOutputSize:g,iouThreshold:b,scoreThreshold:$,padToMaxOutputSize:_}=a;assertNotComplex$1(c,"NonMaxSuppressionPadded");const _e=o.data.get(c.dataId).values,et=o.data.get(d.dataId).values,{selectedIndices:rt,validOutputs:tt}=nonMaxSuppressionV4Impl$1(_e,et,g,b,$,_);return[o.makeTensorInfo([rt.length],"int32",new Int32Array(rt)),o.makeTensorInfo([],"int32",new Int32Array([tt]))]}const nonMaxSuppressionV4Config$1={kernelName:NonMaxSuppressionV4,backendName:"cpu",kernelFunc:nonMaxSuppressionV4$1};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV5Impl$1=nonMaxSuppressionV5Impl$2;function nonMaxSuppressionV5$1(i){const{inputs:s,backend:o,attrs:a}=i,{boxes:c,scores:d}=s,{maxOutputSize:g,iouThreshold:b,scoreThreshold:$,softNmsSigma:_}=a;assertNotComplex$1(c,"NonMaxSuppressionWithScore");const _e=o.data.get(c.dataId).values,et=o.data.get(d.dataId).values,rt=g,tt=b,j=$,nt=_,{selectedIndices:st,selectedScores:ot}=nonMaxSuppressionV5Impl$1(_e,et,rt,tt,j,nt);return[o.makeTensorInfo([st.length],"int32",new Int32Array(st)),o.makeTensorInfo([ot.length],"float32",new Float32Array(ot))]}const nonMaxSuppressionV5Config$1={kernelName:NonMaxSuppressionV5,backendName:"cpu",kernelFunc:nonMaxSuppressionV5$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oneHot$1(i){const{inputs:s,backend:o,attrs:a}=i,{indices:c}=s,{depth:d,onValue:g,offValue:b}=a;assertNotComplex$1(c,"oneHot");const $=sizeFromShape(c.shape),_=new Float32Array($*d);_.fill(b);const _e=o.data.get(c.dataId).values;for(let et=0;et<$;++et)_e[et]>=0&&_e[et]<d&&(_[et*d+_e[et]]=g);return o.makeTensorInfo([...c.shape,d],"int32",_)}const oneHotConfig$1={kernelName:OneHot,backendName:"cpu",kernelFunc:oneHot$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zerosLike$1(i){const{inputs:s,backend:o}=i,{x:a}=s;if(a.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(a.dtype==="complex64"){const c=real$1({inputs:{input:a},backend:o}),d=zerosLike$1({inputs:{x:c},backend:o}),g=imag$1({inputs:{input:a},backend:o}),b=zerosLike$1({inputs:{x:g},backend:o}),$=complex$1({inputs:{real:d,imag:b},backend:o});return o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(g),o.disposeIntermediateTensorInfo(b),$}else return fill$1({backend:o,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const zerosLikeConfig$1={kernelName:ZerosLike,backendName:"cpu",kernelFunc:zerosLike$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function onesLike$1(i){const{inputs:s,backend:o}=i,{x:a}=s;if(a.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(a.dtype==="complex64"){const c=real$1({inputs:{input:a},backend:o}),d=onesLike$1({inputs:{x:c},backend:o}),g=imag$1({inputs:{input:a},backend:o}),b=zerosLike$1({inputs:{x:g},backend:o}),$=complex$1({inputs:{real:d,imag:b},backend:o});return o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(g),o.disposeIntermediateTensorInfo(b),$}else return fill$1({backend:o,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}const onesLikeConfig$1={kernelName:OnesLike,backendName:"cpu",kernelFunc:onesLike$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pack$1(i){const{inputs:s,backend:o,attrs:a}=i,{axis:c}=a;if(s.length===1)return expandDims$1({inputs:{input:s[0]},backend:o,attrs:{dim:c}});const d=s[0].shape,g=s[0].dtype;s.forEach(_e=>{assertShapesMatch(d,_e.shape,"All tensors passed to stack must have matching shapes"),assert$2(g===_e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const b=[],$=s.map(_e=>{const et=expandDims$1({inputs:{input:_e},backend:o,attrs:{dim:c}});return b.push(et),et}),_=concat$1({inputs:$,backend:o,attrs:{axis:c}});return b.forEach(_e=>o.disposeIntermediateTensorInfo(_e)),_}const packConfig$1={kernelName:Pack,backendName:"cpu",kernelFunc:pack$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function padV2$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{paddings:d,constantValue:g}=a;assertNotComplex$1(c,"pad");const b=d.map((ut,ht)=>ut[0]+c.shape[ht]+ut[1]),$=d.map(ut=>ut[0]),_=o.data.get(c.dataId).values,_e=sizeFromShape(c.shape),et=c.shape.length,rt=computeStrides(c.shape),tt=sizeFromShape(b),j=b.length,nt=computeStrides(b),st=getTypedArrayFromDType(c.dtype,tt);g!==0&&st.fill(g);for(let ut=0;ut<_e;ut++){const pt=indexToLoc(ut,et,rt).map((yt,ft)=>yt+$[ft]),it=locToIndex(pt,j,nt);st[it]=_[ut]}return{dataId:o.write(st,b,c.dtype),shape:b,dtype:c.dtype}}const padV2Config$1={kernelName:PadV2,backendName:"cpu",kernelFunc:padV2$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const powImpl=createSimpleBinaryKernelImpl((i,s)=>Math.pow(i,s)),pow$1=binaryKernelFunc$1(Pow$1,powImpl),powConfig$1={kernelName:Pow$1,backendName:"cpu",kernelFunc:pow$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function range$2(i){const{backend:s,attrs:o}=i,{start:a,stop:c,dtype:d,step:g}=o,b=rangeImpl(a,c,g,d);return s.makeTensorInfo([b.length],d,b)}const rangeConfig$1={kernelName:Range,backendName:"cpu",kernelFunc:range$2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reciprocal$1=unaryKernelFunc$1(Reciprocal,i=>1/i),reciprocalConfig$1={kernelName:Reciprocal,backendName:"cpu",kernelFunc:reciprocal$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinear$1(i){const{inputs:s,backend:o,attrs:a}=i,{images:c}=s,{alignCorners:d,halfPixelCenters:g,size:b}=a;assertNotComplex$1(c,"resizeBilinear");const $=computeStrides(c.shape),[_,_e]=b,[et,rt,tt,j]=c.shape,nt=o.data.get(c.dataId).values,st=new Float32Array(sizeFromShape([et,_,_e,j])),ot=[d&&_>1?rt-1:rt,d&&_e>1?tt-1:tt],ut=[d&&_>1?_-1:_,d&&_e>1?_e-1:_e];let ht=0;const pt=ot[0]/ut[0],it=ot[1]/ut[1];for(let yt=0;yt<et;yt++)for(let ft=0;ft<_;ft++){let bt;g?bt=pt*(ft+.5)-.5:bt=pt*ft;const Tt=Math.max(0,Math.floor(bt)),Ct=bt-Tt,_t=Math.min(rt-1,Math.ceil(bt)),Ot=yt*$[0]+Tt*$[1],kt=yt*$[0]+_t*$[1];for(let Rt=0;Rt<_e;Rt++){let jt;g?jt=it*(Rt+.5)-.5:jt=it*Rt;const Gt=Math.max(0,Math.floor(jt)),Bt=jt-Gt,zt=Math.min(tt-1,Math.ceil(jt)),Ut=Ot+Gt*$[2],Qt=kt+Gt*$[2],tn=Ot+zt*$[2],sn=kt+zt*$[2];for(let ln=0;ln<j;ln++){const an=nt[Ut+ln],Yt=nt[Qt+ln],cn=nt[tn+ln],Wt=nt[sn+ln],wt=an+(cn-an)*Bt,xt=Yt+(Wt-Yt)*Bt,At=wt+(xt-wt)*Ct;st[ht++]=At}}}return o.makeTensorInfo([et,_,_e,j],"float32",st)}const resizeBilinearConfig$1={kernelName:ResizeBilinear,backendName:"cpu",kernelFunc:resizeBilinear$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinearGrad$1(i){const{inputs:s,backend:o,attrs:a}=i,{images:c,dy:d}=s,{alignCorners:g}=a;assertNotComplex$1([d,c],"resizeBilinearGrad");const b=computeStrides(c.shape),[$,_,_e,et]=c.shape,[,rt,tt]=d.shape,j=new Float32Array($*_*_e*et),nt=[g&&rt>1?_-1:_,g&&tt>1?_e-1:_e],st=[g&&rt>1?rt-1:rt,g&&tt>1?tt-1:tt],ot=nt[0]/st[0],ut=nt[1]/st[1],ht=o.data.get(d.dataId).values;let pt=0;for(let it=0;it<$;it++){const yt=it*b[0];for(let ft=0;ft<rt;ft++){const bt=ft*ot,Tt=Math.floor(bt),Ct=Math.min(Math.ceil(bt),_-1),_t=yt+Tt*b[1],Ot=yt+Ct*b[1],kt=bt-Tt,Rt=1-kt;for(let jt=0;jt<tt;jt++){const Gt=jt*ut,Bt=Math.floor(Gt),zt=Math.min(Math.ceil(Gt),_e-1),Ut=Gt-Bt,Qt=1-Ut,tn=_t+Bt*b[2],sn=_t+zt*b[2],ln=Ot+Bt*b[2],an=Ot+zt*b[2],Yt=Rt*Qt,cn=Rt*Ut,Wt=kt*Qt,wt=kt*Ut;for(let xt=0;xt<et;xt++){const At=ht[pt++];j[tn+xt]+=At*Yt,j[sn+xt]+=At*cn,j[ln+xt]+=At*Wt,j[an+xt]+=At*wt}}}}return o.makeTensorInfo([$,_e,_,et],"float32",j)}const resizeBilinearGradConfig$1={kernelName:ResizeBilinearGrad,backendName:"cpu",kernelFunc:resizeBilinearGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighbor$1(i){const{inputs:s,backend:o,attrs:a}=i,{images:c}=s,{alignCorners:d,halfPixelCenters:g,size:b}=a;assertNotComplex$1(c,"resizeNearestNeighbor");const $=computeStrides(c.shape),[_,_e]=b,[et,rt,tt,j]=c.shape,nt=o.data.get(c.dataId).values,st=new Float32Array(et*_*_e*j),ot=[d&&_>1?rt-1:rt,d&&_e>1?tt-1:tt],ut=[d&&_>1?_-1:_,d&&_e>1?_e-1:_e],ht=ot[0]/ut[0],pt=ot[1]/ut[1];let it=0;for(let yt=0;yt<et;yt++){const ft=yt*$[0];for(let bt=0;bt<_;bt++){const Tt=g?ht*(bt+.5):ht*bt;let Ct=Math.min(rt-1,d?Math.round(Tt):Math.floor(Tt));g&&(Ct=Math.max(0,Ct));const _t=ft+Ct*$[1];for(let Ot=0;Ot<_e;Ot++){const kt=g?pt*(Ot+.5):pt*Ot;let Rt=Math.min(tt-1,d?Math.round(kt):Math.floor(kt));g&&(Rt=Math.max(0,Rt));const jt=_t+Rt*$[2];for(let Gt=0;Gt<j;Gt++){const Bt=nt[jt+Gt];st[it++]=Bt}}}}return o.makeTensorInfo([et,_,_e,j],c.dtype,st)}const resizeNearestNeighborConfig$1={kernelName:ResizeNearestNeighbor,backendName:"cpu",kernelFunc:resizeNearestNeighbor$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighborGrad$1(i){const{inputs:s,backend:o,attrs:a}=i,{images:c,dy:d}=s,{alignCorners:g}=a;assertNotComplex$1([d,c],"resizeNearestNeighborGrad");const b=computeStrides(c.shape),$=computeStrides(d.shape),[_,_e,et,rt]=c.shape,[,tt,j]=d.shape,nt=new Float32Array(_*_e*et*rt),st=o.data.get(d.dataId).values,ot=[g&&tt>1?_e-1:_e,g&&j>1?et-1:et],ut=[g&&tt>1?tt-1:tt,g&&j>1?j-1:j],ht=ot[0]/ut[0],pt=ot[1]/ut[1],it=1/ht,yt=1/pt,ft=Math.ceil(it)*2+2,bt=Math.ceil(yt)*2+2;for(let Tt=0;Tt<_;Tt++){const Ct=Tt*b[0];for(let _t=0;_t<_e;_t++){const Ot=Ct+_t*b[1],kt=Math.floor(_t*it),Rt=Math.floor(kt-ft/2);for(let jt=0;jt<et;jt++){const Gt=Ot+jt*b[2],Bt=Math.floor(jt*yt),zt=Math.floor(Bt-bt/2);for(let Ut=0;Ut<rt;Ut++){let Qt=0;for(let tn=0;tn<ft;tn++){const sn=tn+Rt;if(sn<0||sn>=tt)continue;const ln=Ct+sn*$[1],an=sn*ht,Yt=Math.min(_e-1,g?Math.round(an):Math.floor(an));if(_t===Yt)for(let cn=0;cn<bt;cn++){const Wt=cn+zt;if(Wt<0||Wt>=j)continue;const wt=ln+Wt*$[2],xt=Wt*pt,At=Math.min(et-1,g?Math.round(xt):Math.floor(xt));jt===At&&(Qt+=st[wt+Ut])}}nt[Gt+Ut]=Qt}}}}return o.makeTensorInfo(c.shape,c.dtype,nt)}const resizeNearestNeighborGradConfig$1={kernelName:ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:resizeNearestNeighborGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reverse$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{dims:d}=a;assertNotComplex$1(c,"reverse");const g=c.shape.length,b=parseAxisParam(d,c.shape);if(g===0)return identity$1({inputs:{x:c},backend:o});const $=new TensorBuffer(c.shape,c.dtype),_=o.bufferSync(c);for(let _e=0;_e<$.size;_e++){const et=$.indexToLoc(_e),rt=et.slice();b.forEach(tt=>rt[tt]=c.shape[tt]-1-rt[tt]),$.set(_.get(...rt),...et)}return o.makeTensorInfo($.shape,$.dtype,$.values)}const reverseConfig$1={kernelName:Reverse,backendName:"cpu",kernelFunc:reverse$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rotateWithOffsetConfig$1={kernelName:RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:i,attrs:s,backend:o})=>{const{image:a}=i,{radians:c,fillValue:d,center:g}=s,b=o,$=getTypedArrayFromDType(a.dtype,sizeFromShape(a.shape)),[_,_e,et,rt]=a.shape,[tt,j]=getImageCenter(g,_e,et),nt=255,st=Math.sin(c),ot=Math.cos(c),ut=b.data.get(a.dataId).values;for(let pt=0;pt<_;pt++){const it=pt*et*_e*rt;for(let yt=0;yt<_e;yt++){const ft=yt*(et*rt);for(let bt=0;bt<et;bt++){const Tt=bt*rt;for(let Ct=0;Ct<rt;Ct++){const _t=[_,yt,bt,Ct],Ot=_t[2],kt=_t[1];let Rt=(Ot-tt)*ot-(kt-j)*st,jt=(Ot-tt)*st+(kt-j)*ot;Rt=Math.round(Rt+tt),jt=Math.round(jt+j);let Gt=d;if(typeof d!="number"&&(Ct===3?Gt=nt:Gt=d[Ct]),Rt>=0&&Rt<et&&jt>=0&&jt<_e){const zt=jt*(et*rt),Ut=Rt*rt,Qt=it+zt+Ut+Ct;Gt=ut[Qt]}const Bt=it+ft+Tt+Ct;$[Bt]=Gt}}}}return{dataId:b.write($,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const round$1=unaryKernelFunc$1(Round,i=>{const s=Math.floor(i);return i-s<.5?Math.floor(i):i-s>.5?Math.ceil(i):s%2===0?s:s+1}),roundConfig$1={kernelName:Round,backendName:"cpu",kernelFunc:round$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function scatterImpl(i,s,o,a,c,d,g,b,$,_){const _e=[a/c,c],et=i.values,rt=s.values;if(a===0)return buffer(o,s.dtype);const tt=buffer(_e,s.dtype);tt.values.fill($);for(let j=0;j<d;j++){const nt=[];let st=0;for(let ot=0;ot<g;ot++){const ut=et[j*g+ot];nt.push(ut),st+=ut*b[ot]}if(st<0||st>=a/c)throw new Error(`Invalid indices: ${nt} does not index into ${o}`);for(let ot=0;ot<c;ot++)_?tt.values[st*c+ot]+=rt[j*c+ot]:tt.values[st*c+ot]=s.rank===0?rt[0]:rt[j*c+ot]}return tt}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function scatterNd$1(i){const{inputs:s,backend:o,attrs:a}=i,{indices:c,updates:d}=s,{shape:g}=a,{sliceRank:b,numUpdates:$,sliceSize:_,strides:_e,outputSize:et}=calculateShapes(d,c,g),rt=!0,tt=o.bufferSync(c),j=o.bufferSync(d),nt=scatterImpl(tt,j,g,et,_,$,b,_e,0,rt);return o.makeTensorInfo(g,nt.dtype,nt.values)}const scatterNdConfig$1={kernelName:ScatterNd,backendName:"cpu",kernelFunc:scatterNd$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function select$1(i){const{inputs:s,backend:o}=i,{condition:a,t:c,e:d}=s;assertNotComplex$1([a,c,d],"select");const g=a.shape.length,b=o.data.get(a.dataId).values,$=o.data.get(c.dataId).values,_=o.data.get(d.dataId).values,_e=upcastType(c.dtype,d.dtype),et=makeZerosTypedArray(sizeFromShape(c.shape),_e);let rt=0;const tt=g===0||g>1||c.shape.length===1?1:sizeFromShape(c.shape.slice(1));for(let j=0;j<b.length;j++)for(let nt=0;nt<tt;nt++)b[j]===1?et[rt++]=$[j]:et[rt++]=_[j];return o.makeTensorInfo(c.shape,_e,et)}const selectConfig$1={kernelName:Select,backendName:"cpu",kernelFunc:select$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const scaleAlpha=SELU_SCALEALPHA,scale=SELU_SCALE,selu$1=unaryKernelFunc$1(Selu$1,i=>i>=0?scale*i:scaleAlpha*(Math.exp(i)-1)),seluConfig$1={kernelName:Selu$1,backendName:"cpu",kernelFunc:selu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sigmoid$1=unaryKernelFunc$1(Sigmoid$1,i=>1/(1+Math.exp(-i))),sigmoidConfig$1={kernelName:Sigmoid$1,backendName:"cpu",kernelFunc:sigmoid$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sign$1=unaryKernelFunc$1(Sign,i=>i<0?-1:i>0?1:0),signConfig$1={kernelName:Sign,backendName:"cpu",kernelFunc:sign$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sin$1=unaryKernelFunc$1(Sin,i=>Math.sin(i)),sinConfig$1={kernelName:Sin,backendName:"cpu",kernelFunc:sin$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sinh$1=unaryKernelFunc$1(Sinh,i=>Math.sinh(i)),sinhConfig$1={kernelName:Sinh,backendName:"cpu",kernelFunc:sinh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const epsilon=11920928955078125e-23,threshold=Math.log(epsilon)+2,softplus$1=unaryKernelFunc$1(Softplus$1,i=>{const s=i>-threshold,o=i<threshold,a=Math.exp(i);let c;return o?c=a:s?c=i:c=Math.log(1+a),c}),softplusConfig$1={kernelName:Softplus$1,backendName:"cpu",kernelFunc:softplus$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function spaceToBatchND$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{blockShape:d,paddings:g}=a;assertNotComplex$1([c],"spaceToBatchND");const b=sizeFromShape(d),$=[[0,0]];$.push(...g);for(let yt=1+d.length;yt<c.shape.length;++yt)$.push([0,0]);const _=padV2Config$1.kernelFunc({inputs:{x:c},backend:o,attrs:{paddings:$,constantValue:0}}),_e=getReshaped(_.shape,d,b,!1),et=getPermuted(_e.length,d.length,!1),rt=getReshapedPermuted(_.shape,d,b,!1),nt=reshape$1({inputs:{x:_},backend:o,attrs:{shape:_e}}),ut=transpose$1({inputs:{x:nt},backend:o,attrs:{perm:et}}),it=reshape$1({inputs:{x:ut},backend:o,attrs:{shape:rt}});return o.disposeIntermediateTensorInfo(_),o.disposeIntermediateTensorInfo(nt),o.disposeIntermediateTensorInfo(ut),it}const spaceToBatchNDConfig$1={kernelName:SpaceToBatchND,backendName:"cpu",kernelFunc:spaceToBatchND$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseToDense$1(i){const{inputs:s,backend:o,attrs:a}=i,{sparseIndices:c,sparseValues:d,defaultValue:g}=s,{outputShape:b}=a,{sliceRank:$,numUpdates:_,sliceSize:_e,strides:et,outputSize:rt}=calculateShapes(d,c,b),tt=!1,j=o.bufferSync(c),nt=o.bufferSync(d),st=o.data.get(g.dataId).values[0],ot=scatterImpl(j,nt,b,rt,_e,_,$,et,st,tt);return o.makeTensorInfo(b,ot.dtype,ot.values)}const sparseToDenseConfig$1={kernelName:SparseToDense,backendName:"cpu",kernelFunc:sparseToDense$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function splitV$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{numOrSizeSplits:d,axis:g}=a,b=parseAxisParam(g,c.shape)[0],$=prepareSplitSize(c,d,b),_=new Array(c.shape.length).fill(0),_e=c.shape.slice();return $.map(et=>{const rt=[..._e];rt[b]=et;const tt=slice$1({inputs:{x:c},backend:o,attrs:{begin:_,size:rt}});return _[b]+=et,tt})}const splitVConfig$1={kernelName:SplitV,backendName:"cpu",kernelFunc:splitV$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sqrt$1=unaryKernelFunc$1(Sqrt,i=>Math.sqrt(i)),sqrtConfig$1={kernelName:Sqrt,backendName:"cpu",kernelFunc:sqrt$1};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const squareConfig$1={kernelName:Square,backendName:"cpu",kernelFunc:({inputs:i,backend:s})=>{const{x:o}=i,a=s;assertNotComplex$1(o,"square");const c=a.data.get(o.dataId).values,d=new Float32Array(c.length);for(let b=0;b<c.length;++b){const $=c[b];d[b]=$*$}return{dataId:a.write(d,o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const step$1=unaryKernelFunc$1(Step,(i,s)=>{const o=s;return isNaN(i)?NaN:i>0?1:o.alpha}),stepConfig$1={kernelName:Step,backendName:"cpu",kernelFunc:step$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stridedSlice$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{begin:d,end:g,strides:b,beginMask:$,endMask:_,ellipsisMask:_e,newAxisMask:et,shrinkAxisMask:rt}=a;assertNotComplex$1(c,"stridedSlice");const{nonStrided:tt,$begin:j,$strides:nt,size:st,newShape:ot,outShape:ut}=sliceInfo(c.shape,d,g,b,$,_,_e,et,rt),ht=reshape$1({inputs:{x:c},backend:o,attrs:{shape:ot}});let pt;if(tt){const yt=slice$1({inputs:{x:ht},backend:o,attrs:{begin:j,size:st}});pt=reshape$1({inputs:{x:yt},backend:o,attrs:{shape:ut}}),o.disposeIntermediateTensorInfo(yt)}else if(ut.some(yt=>yt===0))pt=o.makeTensorInfo(ut,c.dtype,[]);else{const yt=o.bufferSync(ht),ft=stridedSliceImpl(ut,yt,nt,j);pt=o.makeTensorInfo(ft.shape,ft.dtype,ft.values)}const it=reshape$1({inputs:{x:pt},backend:o,attrs:{shape:ut}});return o.disposeIntermediateTensorInfo(ht),o.disposeIntermediateTensorInfo(pt),it}const stridedSliceConfig$1={kernelName:StridedSlice,backendName:"cpu",kernelFunc:stridedSlice$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tan$1=unaryKernelFunc$1(Tan,i=>Math.tan(i)),tanConfig$1={kernelName:Tan,backendName:"cpu",kernelFunc:tan$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tanh$1=unaryKernelFunc$1(Tanh$1,i=>Math.tanh(i)),tanhConfig$1={kernelName:Tanh$1,backendName:"cpu",kernelFunc:tanh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tile$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{reps:d}=a;assertNotComplex$1(c,"tile");const g=tileImpl(o.bufferSync(c),d);return o.makeTensorInfo(g.shape,g.dtype,g.values)}const tileConfig$1={kernelName:Tile,backendName:"cpu",kernelFunc:tile$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function topK$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{k:d,sorted:g}=a;assertNotComplex$1(c,"topk");const b=o.data.get(c.dataId).values,[$,_]=topKImpl(b,c.shape,c.dtype,d);return[o.makeTensorInfo($.shape,$.dtype,$.values),o.makeTensorInfo(_.shape,_.dtype,_.values)]}const topKConfig$1={kernelName:TopK,backendName:"cpu",kernelFunc:topK$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unique$1(i){const{inputs:s,attrs:o,backend:a}=i,{axis:c}=o,{x:d}=s;assertNotComplex$1(d,"unique");const g=a.data.get(d.dataId).values,{outputValues:b,outputShape:$,indices:_}=uniqueImpl(g,c,d.shape,d.dtype);return[a.makeTensorInfo($,d.dtype,b),a.makeTensorInfo([_.length],"int32",_)]}const uniqueConfig$1={kernelName:Unique,backendName:"cpu",kernelFunc:unique$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unpack$1(i){const{inputs:s,backend:o,attrs:a}=i,{value:c}=s;let{axis:d}=a;d<0&&(d+=c.shape.length);const g=c.shape.length,b=c.shape[d],$=new Array(g-1);let _=0;for(let tt=0;tt<g;tt++)tt!==d&&($[_++]=c.shape[tt]);const _e=new Array(g).fill(0),et=c.shape.slice();et[d]=1;const rt=new Array(b);for(let tt=0;tt<rt.length;tt++){_e[d]=tt;const j=slice$1({inputs:{x:c},backend:o,attrs:{begin:_e,size:et}});rt[tt]=reshape$1({inputs:{x:j},backend:o,attrs:{shape:$}}),o.disposeIntermediateTensorInfo(j)}return rt}const unpackConfig$1={kernelName:Unpack,backendName:"cpu",kernelFunc:unpack$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unsortedSegmentSum$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,segmentIds:d}=s,{numSegments:g}=a;assertNotComplex$1(c,"unsortedSegmentSum");const b=c.shape.length,$=d.shape.length,_=[],_e=[],et=b-$;let rt=d;for(let j=0;j<et;++j){const nt=expandDims$1({inputs:{input:rt},backend:o,attrs:{dim:j+1}});rt=nt,_e.push(nt)}for(let j=0;j<g;++j){const nt=createScalarValue(j,"int32"),st=o.makeTensorInfo([],"int32",nt),ot=equal$1({inputs:{a:st,b:rt},backend:o}),ut=cast$1({inputs:{x:ot},backend:o,attrs:{dtype:"float32"}}),ht=multiply$2({inputs:{a:ut,b:c},backend:o}),pt=sum$1({inputs:{x:ht},backend:o,attrs:{axis:0,keepDims:!1}});_.push(pt),_e.push(st),_e.push(ot),_e.push(ut),_e.push(ht),_e.push(pt)}const tt=pack$1({inputs:_,backend:o,attrs:{axis:0}});return _e.forEach(j=>o.disposeIntermediateTensorInfo(j)),tt}const unsortedSegmentSumConfig$1={kernelName:UnsortedSegmentSum,backendName:"cpu",kernelFunc:unsortedSegmentSum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kernelConfigs$1=[_fusedMatMulConfig$1,absConfig$1,acosConfig$1,acoshConfig$1,addConfig$1,addNConfig$1,allConfig$1,anyConfig$1,argMaxConfig$1,argMinConfig$1,asinConfig$1,asinhConfig$1,atanConfig$1,atan2Config$1,atanhConfig$1,avgPoolConfig$1,avgPool3DConfig$1,avgPool3DGradConfig,avgPoolGradConfig$1,batchMatMulConfig$1,batchNormConfig$1,batchToSpaceNDConfig$1,bincountConfig$1,castConfig$1,ceilConfig$1,clipConfig,complexConfig$1,complexAbsConfig$1,concatConfig$1,conv2DBackpropFilterConfig$1,conv2DBackpropInputConfig$1,conv2DConfig$1,conv3DBackpropFilterV2Config$1,conv3DBackpropInputV2Config,conv3DConfig$1,cosConfig$1,coshConfig$1,cropAndResizeConfig$1,cumsumConfig$1,denseBincountConfig$1,depthToSpaceConfig$1,depthwiseConv2dNativeConfig$1,depthwiseConv2dNativeBackpropFilterConfig$1,depthwiseConv2dNativeBackpropInputConfig$1,diagConfig$1,dilation2dConfig,dilation2dBackpropInputConfig,dilation2dBackpropFilterConfig,realDivConfig$1,eluConfig$1,eluGradConfig$1,equalConfig$1,erfConfig$1,expConfig$1,expandDimsConfig$1,expm1Config$1,fftConfig$1,fillConfig$1,flipLeftRightConfig$1,floorConfig$1,floorDivConfig$1,fusedConv2DConfig$1,fusedDepthwiseConv2DConfig$1,gatherNdConfig$1,gatherV2Config$1,greaterConfig$1,greaterEqualConfig$1,identityConfig$1,ifftConfig$1,imagConfig$1,isFiniteConfig$1,isInfConfig$1,isNaNConfig$1,leakyReluConfig$1,lessConfig$1,lessEqualConfig$1,linSpaceConfig$1,logConfig$1,log1pConfig$1,logicalAndConfig$1,logicalNotConfig$1,logicalOrConfig$1,lRNConfig,lRNGradConfig,maximumConfig$1,maxPoolConfig$1,maxPool3DConfig$1,maxPool3DGradConfig,maxPoolGradConfig$1,maxPoolWithArgmaxConfig$1,maxConfig$1,meanConfig$1,minConfig$1,minimumConfig$1,mirrorPadConfig$1,modConfig$1,multinomialConfig$1,multiplyConfig$1,negConfig$1,nonMaxSuppressionV3Config$1,nonMaxSuppressionV4Config$1,nonMaxSuppressionV5Config$1,notEqualConfig$1,oneHotConfig$1,onesLikeConfig$1,packConfig$1,padV2Config$1,powConfig$1,preluConfig$1,prodConfig$1,rangeConfig$1,realConfig$1,reciprocalConfig$1,reluConfig$1,relu6Config$1,reshapeConfig$1,resizeBilinearConfig$1,resizeBilinearGradConfig$1,resizeNearestNeighborConfig$1,resizeNearestNeighborGradConfig$1,reverseConfig$1,rotateWithOffsetConfig$1,roundConfig$1,rsqrtConfig$1,scatterNdConfig$1,selectConfig$1,seluConfig$1,sigmoidConfig$1,signConfig$1,sinConfig$1,sinhConfig$1,sliceConfig$1,softmaxConfig$1,softplusConfig$1,spaceToBatchNDConfig$1,sparseToDenseConfig$1,splitVConfig$1,sqrtConfig$1,squareConfig$1,squaredDifferenceConfig$1,stepConfig$1,stridedSliceConfig$1,subConfig$1,sumConfig$1,tanConfig$1,tanhConfig$1,tileConfig$1,topKConfig$1,transposeConfig$1,uniqueConfig$1,unpackConfig$1,unsortedSegmentSumConfig$1,zerosLikeConfig$1];for(const i of kernelConfigs$1)registerKernel(i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const contexts={},WEBGL_ATTRIBUTES={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function setWebGLContext(i,s){contexts[i]=s}function getWebGLContext(i){if(!(i in contexts)){const o=getWebGLRenderingContext(i);if(o!==null)contexts[i]=o;else return console.log("Could not get context for WebGL version",i),null}const s=contexts[i];return s.isContextLost()?(delete contexts[i],getWebGLContext(i)):(s.disable(s.DEPTH_TEST),s.disable(s.STENCIL_TEST),s.disable(s.BLEND),s.disable(s.DITHER),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SAMPLE_COVERAGE),s.enable(s.SCISSOR_TEST),s.enable(s.CULL_FACE),s.cullFace(s.BACK),contexts[i])}function createCanvas(i){if(typeof OffscreenCanvas<"u"&&i===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function getWebGLRenderingContext(i){if(i!==1&&i!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const s=createCanvas(i);return s.addEventListener("webglcontextlost",o=>{o.preventDefault(),delete contexts[i]},!1),i===1?s.getContext("webgl",WEBGL_ATTRIBUTES)||s.getContext("experimental-webgl",WEBGL_ATTRIBUTES):s.getContext("webgl2",WEBGL_ATTRIBUTES)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var PackingScheme;(function(i){i[i.DENSE=0]="DENSE",i[i.SHARED_BATCH=1]="SHARED_BATCH"})(PackingScheme||(PackingScheme={}));var TextureUsage;(function(i){i[i.RENDER=0]="RENDER",i[i.UPLOAD=1]="UPLOAD",i[i.PIXELS=2]="PIXELS",i[i.DOWNLOAD=3]="DOWNLOAD"})(TextureUsage||(TextureUsage={}));var PhysicalTextureType;(function(i){i[i.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",i[i.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",i[i.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",i[i.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",i[i.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(PhysicalTextureType||(PhysicalTextureType={}));function getUnpackedMatrixTextureShapeWidthHeight(i,s){return[s,i]}function getUnpackedArraySizeFromMatrixSize(i,s){return i*s}function getDenseTexShape(i){const s=sizeFromShape(i),o=Math.ceil(s/4);return sizeToSquarishShape(o)}function getPackedMatrixTextureShapeWidthHeight(i,s){return[Math.max(1,Math.ceil(s/2)),Math.max(1,Math.ceil(i/2))]}function getPackedRGBAArraySizeFromMatrixShape(i,s){const[o,a]=getPackedMatrixTextureShapeWidthHeight(i,s);return o*a*4}function getTextureConfig(i,s){const o=i;let a,c,d,g,b,$,_,_e,et,rt;return env().getNumber("WEBGL_VERSION")===2?(a=o.R32F,c=o.R16F,d=o.RGBA16F,g=o.RGBA32F,b=o.RED,_=4,_e=1,et=o.HALF_FLOAT,rt=o.FLOAT):(a=i.RGBA,c=i.RGBA,d=i.RGBA,g=o.RGBA,b=i.RGBA,_=4,_e=4,et=s!=null?s.HALF_FLOAT_OES:null,rt=i.FLOAT),$=i.RGBA,{internalFormatFloat:a,internalFormatHalfFloat:c,internalFormatPackedHalfFloat:d,internalFormatPackedFloat:g,textureFormatFloat:b,downloadTextureFormat:$,downloadUnpackNumChannels:_,defaultNumChannels:_e,textureTypeHalfFloat:et,textureTypeFloat:rt}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function callAndCheck(i,s){const o=s();return env().getBool("DEBUG")&&checkWebGLError(i),o}function checkWebGLError(i){const s=i.getError();if(s!==i.NO_ERROR)throw new Error("WebGL Error: "+getWebGLErrorMessage(i,s))}const MIN_FLOAT16=596e-10,MAX_FLOAT16=65504;function canBeRepresented(i){return!!(env().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||i===0||MIN_FLOAT16<Math.abs(i)&&Math.abs(i)<MAX_FLOAT16)}function getWebGLErrorMessage(i,s){switch(s){case i.NO_ERROR:return"NO_ERROR";case i.INVALID_ENUM:return"INVALID_ENUM";case i.INVALID_VALUE:return"INVALID_VALUE";case i.INVALID_OPERATION:return"INVALID_OPERATION";case i.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case i.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case i.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${s}`}}function getExtensionOrThrow(i,s){return throwIfNull(i,()=>i.getExtension(s),'Extension "'+s+'" not supported on this browser.')}function createVertexShader$1(i,s){const o=throwIfNull(i,()=>i.createShader(i.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(callAndCheck(i,()=>i.shaderSource(o,s)),callAndCheck(i,()=>i.compileShader(o)),i.getShaderParameter(o,i.COMPILE_STATUS)===!1)throw console.log(i.getShaderInfoLog(o)),new Error("Failed to compile vertex shader.");return o}function createFragmentShader(i,s){const o=throwIfNull(i,()=>i.createShader(i.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(callAndCheck(i,()=>i.shaderSource(o,s)),callAndCheck(i,()=>i.compileShader(o)),i.getShaderParameter(o,i.COMPILE_STATUS)===!1)throw logShaderSourceAndInfoLog(s,i.getShaderInfoLog(o)),new Error("Failed to compile fragment shader.");return o}const lineNumberRegex=/ERROR: [0-9]+:([0-9]+):/g;function logShaderSourceAndInfoLog(i,s){const o=lineNumberRegex.exec(s);if(o==null){console.log(`Couldn't parse line number in error: ${s}`),console.log(i);return}const a=+o[1],c=i.split(`
`),d=c.length.toString().length+2,g=c.map((et,rt)=>rightPad((rt+1).toString(),d)+et);let b=0;for(let et=0;et<g.length;et++)b=Math.max(g[et].length,b);const $=g.slice(0,a-1),_=g.slice(a-1,a),_e=g.slice(a);console.log($.join(`
`)),console.log(s.split(`
`)[0]),console.log(`%c ${rightPad(_[0],b)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(_e.join(`
`))}function createProgram(i){return throwIfNull(i,()=>i.createProgram(),"Unable to create WebGLProgram.")}function linkProgram(i,s){if(callAndCheck(i,()=>i.linkProgram(s)),i.getProgramParameter(s,i.LINK_STATUS)===!1)throw console.log(i.getProgramInfoLog(s)),new Error("Failed to link vertex and fragment shaders.")}function validateProgram(i,s){if(callAndCheck(i,()=>i.validateProgram(s)),i.getProgramParameter(s,i.VALIDATE_STATUS)===!1)throw console.log(i.getProgramInfoLog(s)),new Error("Shader program validation failed.")}function createStaticVertexBuffer(i,s){const o=throwIfNull(i,()=>i.createBuffer(),"Unable to create WebGLBuffer");return callAndCheck(i,()=>i.bindBuffer(i.ARRAY_BUFFER,o)),callAndCheck(i,()=>i.bufferData(i.ARRAY_BUFFER,s,i.STATIC_DRAW)),o}function createStaticIndexBuffer(i,s){const o=throwIfNull(i,()=>i.createBuffer(),"Unable to create WebGLBuffer");return callAndCheck(i,()=>i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,o)),callAndCheck(i,()=>i.bufferData(i.ELEMENT_ARRAY_BUFFER,s,i.STATIC_DRAW)),o}function createTexture(i){return throwIfNull(i,()=>i.createTexture(),"Unable to create WebGLTexture.")}function validateTextureSize(i,s){const o=env().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(i<=0||s<=0){const a=`[${i}x${s}]`;throw new Error("Requested texture size "+a+" is invalid.")}if(i>o||s>o){const a=`[${i}x${s}]`,c=`[${o}x${o}]`;throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+c+".")}}function createFramebuffer(i){return throwIfNull(i,()=>i.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function bindVertexBufferToProgramAttribute(i,s,o,a,c,d,g){const b=i.getAttribLocation(s,o);return b===-1?!1:(callAndCheck(i,()=>i.bindBuffer(i.ARRAY_BUFFER,a)),callAndCheck(i,()=>i.vertexAttribPointer(b,c,i.FLOAT,!1,d,g)),callAndCheck(i,()=>i.enableVertexAttribArray(b)),!0)}function bindTextureUnit(i,s,o){validateTextureUnit(i,o),callAndCheck(i,()=>i.activeTexture(i.TEXTURE0+o)),callAndCheck(i,()=>i.bindTexture(i.TEXTURE_2D,s))}function getProgramUniformLocationOrThrow(i,s,o){return throwIfNull(i,()=>i.getUniformLocation(s,o),'uniform "'+o+'" not present in program.')}function getProgramUniformLocation(i,s,o){return i.getUniformLocation(s,o)}function bindTextureToProgramUniformSampler(i,s,o,a){callAndCheck(i,()=>bindTextureUnit(i,s,a)),callAndCheck(i,()=>i.uniform1i(o,a))}function bindColorTextureToFramebuffer(i,s,o){callAndCheck(i,()=>i.bindFramebuffer(i.FRAMEBUFFER,o)),callAndCheck(i,()=>i.framebufferTexture2D(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,s,0))}function unbindColorTextureFromFramebuffer(i,s){callAndCheck(i,()=>i.bindFramebuffer(i.FRAMEBUFFER,s)),callAndCheck(i,()=>i.framebufferTexture2D(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,null,0))}function validateFramebuffer(i){const s=i.checkFramebufferStatus(i.FRAMEBUFFER);if(s!==i.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+getFramebufferErrorMessage(i,s))}function getFramebufferErrorMessage(i,s){switch(s){case i.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case i.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case i.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case i.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${s}`}}function throwIfNull(i,s,o){const a=callAndCheck(i,()=>s());if(a==null)throw new Error(o);return a}function validateTextureUnit(i,s){const o=i.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=s+i.TEXTURE0;if(a<i.TEXTURE0||a>o){const c=`[gl.TEXTURE0, gl.TEXTURE${o}]`;throw new Error(`textureUnit must be in ${c}.`)}}function getBatchDim(i,s=2){return sizeFromShape(i.slice(0,i.length-s))}function getRowsCols(i){if(i.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[i.length>1?i[i.length-2]:1,i[i.length-1]]}function getShapeAs3D(i){let s=[1,1,1];return i.length===0||i.length===1&&i[0]===1||(s=[getBatchDim(i),...getRowsCols(i)]),s}function getTextureShapeFromLogicalShape(i,s=!1){let o=env().getNumber("WEBGL_MAX_TEXTURE_SIZE");s&&(o=o*2,i=i.map((c,d)=>d>=i.length-2?nearestLargerEven(i[d]):i[d]),i.length===1&&(i=[2,i[0]])),i.length!==2&&(i=squeezeShape(i).newShape);let a=sizeFromShape(i);if(i.length<=1&&a<=o)return[1,a];if(i.length===2&&i[0]<=o&&i[1]<=o)return i;if(i.length===3&&i[0]*i[1]<=o&&i[2]<=o)return[i[0]*i[1],i[2]];if(i.length===3&&i[0]<=o&&i[1]*i[2]<=o)return[i[0],i[1]*i[2]];if(i.length===4&&i[0]*i[1]*i[2]<=o&&i[3]<=o)return[i[0]*i[1]*i[2],i[3]];if(i.length===4&&i[0]<=o&&i[1]*i[2]*i[3]<=o)return[i[0],i[1]*i[2]*i[3]];if(s){const c=getBatchDim(i);let d=2,g=2;return i.length&&([d,g]=getRowsCols(i)),a=c*(d/2)*(g/2),sizeToSquarishShape(a).map(b=>b*2)}return sizeToSquarishShape(a)}function isEven(i){return i%2===0}function isReshapeFree(i,s){if(i=i.slice(-2),s=s.slice(-2),arraysEqual(i,s)||!i.length||!s.length||i[0]===0||i[1]===0||s[0]===0||s[1]===0)return!0;if(i.length!==s.length){const o=i.slice(-1)[0],a=s.slice(-1)[0];if(o===a||isEven(o)&&isEven(a)&&(i[0]===1||s[0]===1))return!0}return i[1]===s[1]&&isEven(i[0])&&isEven(s[0])}let MAX_TEXTURE_SIZE,MAX_TEXTURES_IN_SHADER;function getWebGLMaxTextureSize(i){if(MAX_TEXTURE_SIZE==null){const s=getWebGLContext(i);MAX_TEXTURE_SIZE=s.getParameter(s.MAX_TEXTURE_SIZE)}return MAX_TEXTURE_SIZE}function getMaxTexturesInShader(i){if(MAX_TEXTURES_IN_SHADER==null){const s=getWebGLContext(i);MAX_TEXTURES_IN_SHADER=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,MAX_TEXTURES_IN_SHADER)}function getWebGLDisjointQueryTimerVersion(i){if(i===0)return 0;let s;const o=getWebGLContext(i);return hasExtension(o,"EXT_disjoint_timer_query_webgl2")&&i===2?s=2:hasExtension(o,"EXT_disjoint_timer_query")?s=1:s=0,s}function hasExtension(i,s){return i.getExtension(s)!=null}function isWebGLVersionEnabled(i){try{if(getWebGLContext(i)!=null)return!0}catch(s){return console.log("Error when getting WebGL context: ",s),!1}return!1}function isCapableOfRenderingToFloatTexture(i){if(i===0)return!1;const s=getWebGLContext(i);if(i===1){if(!hasExtension(s,"OES_texture_float"))return!1}else if(!hasExtension(s,"EXT_color_buffer_float"))return!1;return createFloatTextureAndBindToFramebuffer(s)}function isDownloadFloatTextureEnabled(i){if(i===0)return!1;const s=getWebGLContext(i);if(i===1){if(!hasExtension(s,"OES_texture_float")||!hasExtension(s,"WEBGL_color_buffer_float"))return!1}else{if(hasExtension(s,"EXT_color_buffer_float"))return createFloatTextureAndBindToFramebuffer(s);const a="EXT_color_buffer_half_float";if(hasExtension(s,a)){const c=s.getExtension(a);return createHalfFloatTextureAndBindToFramebuffer(s,c)}return!1}return createFloatTextureAndBindToFramebuffer(s)}function createFloatTextureAndBindToFramebuffer(i){const s=getTextureConfig(i),o=i.createTexture();i.bindTexture(i.TEXTURE_2D,o);const a=1,c=1;i.texImage2D(i.TEXTURE_2D,0,s.internalFormatFloat,a,c,0,s.textureFormatFloat,s.textureTypeFloat,null);const d=i.createFramebuffer();i.bindFramebuffer(i.FRAMEBUFFER,d),i.framebufferTexture2D(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,o,0);const g=i.checkFramebufferStatus(i.FRAMEBUFFER)===i.FRAMEBUFFER_COMPLETE;return i.bindTexture(i.TEXTURE_2D,null),i.bindFramebuffer(i.FRAMEBUFFER,null),i.deleteTexture(o),i.deleteFramebuffer(d),g}function createHalfFloatTextureAndBindToFramebuffer(i,s){const o=getTextureConfig(i,s),a=i.createTexture();i.bindTexture(i.TEXTURE_2D,a);const c=1,d=1;i.texImage2D(i.TEXTURE_2D,0,o.internalFormatHalfFloat,c,d,0,o.textureFormatFloat,o.textureTypeHalfFloat,null);const g=i.createFramebuffer();i.bindFramebuffer(i.FRAMEBUFFER,g),i.framebufferTexture2D(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,a,0);const b=i.checkFramebufferStatus(i.FRAMEBUFFER)===i.FRAMEBUFFER_COMPLETE;return i.bindTexture(i.TEXTURE_2D,null),i.bindFramebuffer(i.FRAMEBUFFER,null),i.deleteTexture(a),i.deleteFramebuffer(g),b}function isWebGLFenceEnabled(i){return i!==2?!1:getWebGLContext(i).fenceSync!=null}function assertNotComplex(i,s){Array.isArray(i)||(i=[i]),i.forEach(o=>{o!=null&&assert$2(o.dtype!=="complex64",()=>`${s} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ENV=env();ENV.registerFlag("HAS_WEBGL",()=>ENV.getNumber("WEBGL_VERSION")>0);ENV.registerFlag("WEBGL_VERSION",()=>isWebGLVersionEnabled(2)?2:isWebGLVersionEnabled(1)?1:0);ENV.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);ENV.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>ENV.get("WEBGL_VERSION")===2);ENV.registerFlag("WEBGL_CPU_FORWARD",()=>!0);ENV.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);ENV.registerFlag("WEBGL_PACK",()=>ENV.getBool("HAS_WEBGL"));ENV.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_CLIP",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1);ENV.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_REDUCE",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_LAZILY_UNPACK",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_CONV_IM2COL",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>getWebGLMaxTextureSize(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>getMaxTexturesInShader(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const i=ENV.getNumber("WEBGL_VERSION");return i===0?0:getWebGLDisjointQueryTimerVersion(i)});ENV.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ENV.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!isMobile());ENV.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>isCapableOfRenderingToFloatTexture(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>ENV.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:ENV.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));ENV.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>isDownloadFloatTextureEnabled(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_FENCE_API_ENABLED",()=>isWebGLFenceEnabled(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>ENV.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);ENV.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,i=>{if(i<0&&i!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${i}.`)});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getGlslDifferences(){let i,s,o,a,c,d,g,b,$,_;return env().getNumber("WEBGL_VERSION")===2?(i="#version 300 es",s="in",o="out",a="in",c="texture",d="outputColor",g="out vec4 outputColor;",b=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,$="",_=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(i="",s="attribute",o="varying",a="varying",c="texture2D",d="gl_FragColor",g="",b=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,$=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,_=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:i,attribute:s,varyingVs:o,varyingFs:a,texture2D:c,output:d,defineOutput:g,defineSpecialNaN:b,defineSpecialInf:$,defineRound:_}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getLogicalCoordinatesFromFlatIndex(i,s,o="index"){const a=computeStrides(s);return a.map((c,d)=>{const g=`int ${i[d]} = ${o} / ${c}`,b=d===a.length-1?`int ${i[d+1]} = ${o} - ${i[d]} * ${c}`:`index -= ${i[d]} * ${c}`;return`${g}; ${b};`}).join("")}function getFlatIndexFrom3D(i){const s=computeStrides(i).map(o=>o.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${s[0]} + coords.y * ${s[1]} + coords.z;
  }
`}const ENCODE_FLOAT_SNIPPET=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DecodeMatrixProgram{constructor(s){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=PackingScheme.DENSE;const o=getDenseTexShape(s),a=getGlslDifferences();this.outputShape=s,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${getLogicalCoordinatesFromFlatIndex(["r","c","d"],s)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${o[0]}, ${o[1]}));
        int index = 4 * (resTexRC.x * ${o[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${a.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DecodeMatrixPackedProgram{constructor(s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=PackingScheme.DENSE;const o=getDenseTexShape(s),a=getGlslDifferences();this.outputShape=s,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${getLogicalCoordinatesFromFlatIndex(["r","c","d"],s)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${o[0]}, ${o[1]}));
        int index = 4 * (resTexRC.x * ${o[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${a.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EncodeFloatProgram{constructor(s){this.variableNames=["A"],this.outTexUsage=TextureUsage.DOWNLOAD;const o=getGlslDifferences();this.outputShape=s,this.userCode=`
      ${ENCODE_FLOAT_SNIPPET}

      void main() {
        float x = getAAtOutCoords();
        ${o.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EncodeFloatPackedProgram{constructor(s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=TextureUsage.DOWNLOAD;const o=getGlslDifferences();this.outputShape=s,this.userCode=`
      ${ENCODE_FLOAT_SNIPPET}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${o.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EncodeMatrixProgram{constructor(s,o,a=!1){this.variableNames=["A"];const c=getGlslDifferences(),[d,g]=o;this.outputShape=s;let b="result";a&&(b="floor(result * 255. + 0.5)"),this.userCode=`
      ${getFlatIndexFrom3D(s)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / ${g};
        int c = imod(flatIndex, ${g});
        vec2 uv = (vec2(c, r) + halfCR) / vec2(${g}.0, ${d}.0);
        vec4 values = ${c.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${c.output} = vec4(${b}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EncodeMatrixPackedProgram{constructor(s,o,a=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const c=getGlslDifferences(),[d,g]=o;this.outputShape=s;let b="",$="result";a&&($="floor(result * 255. + 0.5)");for(let _=0;_<=1;_++)for(let _e=0;_e<=1;_e++){const et=_*2+_e;b+=`
          localCoords = coords;
          if(localCoords[2] + ${_e} < ${s[2]}) {
            localCoords[2] += ${_e};
            if(localCoords[1] + ${_} < ${s[1]}) {
              localCoords[1] += ${_};

              flatIndex = getFlatIndex(localCoords);
              offset = imod(flatIndex, 4);

              flatIndex = idiv(flatIndex, 4, 1.);

              r = flatIndex / ${g};
              c = imod(flatIndex, ${g});
              uv = (vec2(c, r) + halfCR) / vec2(${g}.0, ${d}.0);
              values = ${c.texture2D}(A, uv);

              if(offset == 0) {
                result[${et}] = values[0];
              } else if(offset == 1) {
                result[${et}] = values[1];
              } else if(offset == 2) {
                result[${et}] = values[2];
              } else {
                result[${et}] = values[3];
              }
            }
          }
        `}this.userCode=`
      ${getFlatIndexFrom3D(s)}

      void main() {
        ivec3 coords = getOutputCoords();

        vec4 result = vec4(0.);
        int flatIndex, r, c, offset;
        ivec3 localCoords;
        vec2 uv;
        vec4 values;

        ${b}

        ${c.output} = ${$};
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function createVertexShader(i){const s=getGlslDifferences(),o=`${s.version}
    precision highp float;
    ${s.attribute} vec3 clipSpacePos;
    ${s.attribute} vec2 uv;
    ${s.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return createVertexShader$1(i,o)}function createVertexBuffer(i){const s=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return createStaticVertexBuffer(i,s)}function createIndexBuffer(i){const s=new Uint16Array([0,1,2,2,1,3]);return createStaticIndexBuffer(i,s)}function createAndConfigureTexture(i,s,o,a,c,d){validateTextureSize(s,o);const g=createTexture(i),b=i.TEXTURE_2D;return callAndCheck(i,()=>i.bindTexture(b,g)),callAndCheck(i,()=>i.texParameteri(b,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE)),callAndCheck(i,()=>i.texParameteri(b,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE)),callAndCheck(i,()=>i.texParameteri(b,i.TEXTURE_MIN_FILTER,i.NEAREST)),callAndCheck(i,()=>i.texParameteri(b,i.TEXTURE_MAG_FILTER,i.NEAREST)),callAndCheck(i,()=>i.texImage2D(b,0,a,s,o,0,c,d,null)),callAndCheck(i,()=>i.bindTexture(i.TEXTURE_2D,null)),g}function getInternalFormatForFloat32MatrixTexture(i){return i.internalFormatFloat}function createFloat32MatrixTexture(i,s,o,a){const[c,d]=getUnpackedMatrixTextureShapeWidthHeight(s,o);return createAndConfigureTexture(i,c,d,getInternalFormatForFloat32MatrixTexture(a),a.textureFormatFloat,i.FLOAT)}function getInternalFormatForFloat16MatrixTexture(i){return i.internalFormatHalfFloat}function createFloat16MatrixTexture(i,s,o,a){const[c,d]=getUnpackedMatrixTextureShapeWidthHeight(s,o);return createAndConfigureTexture(i,c,d,getInternalFormatForFloat16MatrixTexture(a),a.textureFormatFloat,a.textureTypeHalfFloat)}function getInternalFormatForUnsignedBytesMatrixTexture(i){return i.downloadTextureFormat}function createUnsignedBytesMatrixTexture(i,s,o,a){const[c,d]=getUnpackedMatrixTextureShapeWidthHeight(s,o);return createAndConfigureTexture(i,c,d,getInternalFormatForUnsignedBytesMatrixTexture(a),i.RGBA,i.UNSIGNED_BYTE)}function getInternalFormatForPackedMatrixTexture(i){return i.internalFormatPackedFloat}function createPackedMatrixTexture(i,s,o,a){const[c,d]=getPackedMatrixTextureShapeWidthHeight(s,o);return createAndConfigureTexture(i,c,d,getInternalFormatForPackedMatrixTexture(a),i.RGBA,i.FLOAT)}function getInternalFormatForFloat16PackedMatrixTexture(i){return i.internalFormatPackedHalfFloat}function createFloat16PackedMatrixTexture(i,s,o,a){const[c,d]=getPackedMatrixTextureShapeWidthHeight(s,o);return createAndConfigureTexture(i,c,d,getInternalFormatForFloat16PackedMatrixTexture(a),i.RGBA,a.textureTypeHalfFloat)}function bindVertexProgramAttributeStreams(i,s,o){return callAndCheck(i,()=>i.bindBuffer(i.ARRAY_BUFFER,o)),bindVertexBufferToProgramAttribute(i,s,"clipSpacePos",o,3,20,0)&&bindVertexBufferToProgramAttribute(i,s,"uv",o,2,20,12)}function uploadDenseMatrixToTexture(i,s,o,a,c,d){callAndCheck(i,()=>i.bindTexture(i.TEXTURE_2D,s));let g,b,$;c instanceof Uint8Array?(g=new Uint8Array(o*a*4),b=i.UNSIGNED_BYTE,$=i.RGBA):(g=new Float32Array(o*a*4),b=i.FLOAT,$=d.internalFormatPackedFloat),g.set(c),callAndCheck(i,()=>i.texImage2D(i.TEXTURE_2D,0,$,o,a,0,i.RGBA,b,g)),callAndCheck(i,()=>i.bindTexture(i.TEXTURE_2D,null))}function uploadPixelDataToTexture(i,s,o){callAndCheck(i,()=>i.bindTexture(i.TEXTURE_2D,s)),o.data instanceof Uint8Array?callAndCheck(i,()=>i.texImage2D(i.TEXTURE_2D,0,i.RGBA,o.width,o.height,0,i.RGBA,i.UNSIGNED_BYTE,o.data)):callAndCheck(i,()=>i.texImage2D(i.TEXTURE_2D,0,i.RGBA,i.RGBA,i.UNSIGNED_BYTE,o)),callAndCheck(i,()=>i.bindTexture(i.TEXTURE_2D,null))}function createBufferFromOutputTexture(i,s,o,a){const c=i.createBuffer();callAndCheck(i,()=>i.bindBuffer(i.PIXEL_PACK_BUFFER,c));const b=4*4*s*o;return callAndCheck(i,()=>i.bufferData(i.PIXEL_PACK_BUFFER,b,i.STREAM_READ)),callAndCheck(i,()=>i.readPixels(0,0,o,s,i.RGBA,i.FLOAT,0)),callAndCheck(i,()=>i.bindBuffer(i.PIXEL_PACK_BUFFER,null)),c}function downloadFloat32MatrixFromBuffer(i,s,o){const a=i,c=new Float32Array(o);return a.bindBuffer(a.PIXEL_PACK_BUFFER,s),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,c),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),c}function downloadByteEncodedFloatMatrixFromOutputTexture(i,s,o,a){const[c,d]=getUnpackedMatrixTextureShapeWidthHeight(s,o),g=4,b=new Uint8Array(getUnpackedArraySizeFromMatrixSize(s*o,g));return callAndCheck(i,()=>i.readPixels(0,0,c,d,a.downloadTextureFormat,i.UNSIGNED_BYTE,b)),new Float32Array(b.buffer)}function downloadPackedMatrixFromBuffer(i,s,o,a,c,d,g,b){const $=i,_=new Float32Array(getPackedRGBAArraySizeFromMatrixShape(d,g));return $.bindBuffer($.PIXEL_PACK_BUFFER,s),$.getBufferSubData($.PIXEL_PACK_BUFFER,0,_),$.bindBuffer($.PIXEL_PACK_BUFFER,null),_}function downloadMatrixFromPackedOutputTexture(i,s,o){const a=new Float32Array(s*o*4);return callAndCheck(i,()=>i.readPixels(0,0,o,s,i.RGBA,i.FLOAT,a)),a}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GPGPUContext{constructor(s){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const o=env().getNumber("WEBGL_VERSION");s!=null?(this.gl=s,setWebGLContext(o,s)):this.gl=getWebGLContext(o);let a="WEBGL_color_buffer_float";const c="EXT_color_buffer_half_float";if(env().getNumber("WEBGL_VERSION")===1){const d="OES_texture_float",g="OES_texture_half_float";if(this.textureFloatExtension=getExtensionOrThrow(this.gl,d),hasExtension(this.gl,g))this.textureHalfFloatExtension=getExtensionOrThrow(this.gl,g);else if(env().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(a),hasExtension(this.gl,c))this.colorBufferHalfFloatExtension=getExtensionOrThrow(this.gl,c);else if(env().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(a="EXT_color_buffer_float",hasExtension(this.gl,a))this.colorBufferFloatExtension=this.gl.getExtension(a);else if(hasExtension(this.gl,c))this.colorBufferHalfFloatExtension=this.gl.getExtension(c);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=createVertexBuffer(this.gl),this.indexBuffer=createIndexBuffer(this.gl),this.framebuffer=createFramebuffer(this.gl),this.textureConfig=getTextureConfig(this.gl,this.textureHalfFloatExtension)}get debug(){return env().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const s=this.gl;callAndCheck(s,()=>s.finish()),callAndCheck(s,()=>s.bindFramebuffer(s.FRAMEBUFFER,null)),callAndCheck(s,()=>s.deleteFramebuffer(this.framebuffer)),callAndCheck(s,()=>s.bindBuffer(s.ARRAY_BUFFER,null)),callAndCheck(s,()=>s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,null)),callAndCheck(s,()=>s.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(s,o){return this.throwIfDisposed(),createFloat32MatrixTexture(this.gl,s,o,this.textureConfig)}createFloat16MatrixTexture(s,o){return this.throwIfDisposed(),createFloat16MatrixTexture(this.gl,s,o,this.textureConfig)}createUnsignedBytesMatrixTexture(s,o){return this.throwIfDisposed(),createUnsignedBytesMatrixTexture(this.gl,s,o,this.textureConfig)}uploadPixelDataToTexture(s,o){this.throwIfDisposed(),uploadPixelDataToTexture(this.gl,s,o)}uploadDenseMatrixToTexture(s,o,a,c){this.throwIfDisposed(),uploadDenseMatrixToTexture(this.gl,s,o,a,c,this.textureConfig)}createFloat16PackedMatrixTexture(s,o){return this.throwIfDisposed(),createFloat16PackedMatrixTexture(this.gl,s,o,this.textureConfig)}createPackedMatrixTexture(s,o){return this.throwIfDisposed(),createPackedMatrixTexture(this.gl,s,o,this.textureConfig)}deleteMatrixTexture(s){this.throwIfDisposed(),this.outputTexture===s&&(unbindColorTextureFromFramebuffer(this.gl,this.framebuffer),this.outputTexture=null),callAndCheck(this.gl,()=>this.gl.deleteTexture(s))}downloadByteEncodedFloatMatrixFromOutputTexture(s,o,a){return this.downloadMatrixDriver(s,()=>downloadByteEncodedFloatMatrixFromOutputTexture(this.gl,o,a,this.textureConfig))}downloadPackedMatrixFromBuffer(s,o,a,c,d,g){return downloadPackedMatrixFromBuffer(this.gl,s,o,a,c,d,g,this.textureConfig)}downloadFloat32MatrixFromBuffer(s,o){return downloadFloat32MatrixFromBuffer(this.gl,s,o)}createBufferFromTexture(s,o,a){this.bindTextureToFrameBuffer(s);const c=createBufferFromOutputTexture(this.gl,o,a,this.textureConfig);return this.unbindTextureToFrameBuffer(),c}createAndWaitForFence(){const s=this.createFence(this.gl);return this.pollFence(s)}createFence(s){let o,a;if(env().getBool("WEBGL_FENCE_API_ENABLED")){const c=s,d=c.fenceSync(c.SYNC_GPU_COMMANDS_COMPLETE,0);s.flush(),a=()=>{const g=c.clientWaitSync(d,0,0);return g===c.ALREADY_SIGNALED||g===c.CONDITION_SATISFIED},o=d}else env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(o=this.beginQuery(),this.endQuery(),a=()=>this.isQueryAvailable(o,env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):a=()=>!0;return{query:o,isFencePassed:a}}downloadMatrixFromPackedTexture(s,o,a){return this.downloadMatrixDriver(s,()=>downloadMatrixFromPackedOutputTexture(this.gl,o,a))}createProgram(s){this.throwIfDisposed();const o=this.gl,a=createFragmentShader(o,s),c=createVertexShader(o),d=createProgram(o);return callAndCheck(o,()=>o.attachShader(d,c)),callAndCheck(o,()=>o.attachShader(d,a)),linkProgram(o,d),this.debug&&validateProgram(o,d),this.vertexAttrsAreBound||(this.setProgram(d),this.vertexAttrsAreBound=bindVertexProgramAttributeStreams(o,this.program,this.vertexBuffer)),d}deleteProgram(s){this.throwIfDisposed(),s===this.program&&(this.program=null),s!=null&&callAndCheck(this.gl,()=>this.gl.deleteProgram(s))}setProgram(s){this.throwIfDisposed(),this.program=s,this.program!=null&&this.debug&&validateProgram(this.gl,this.program),callAndCheck(this.gl,()=>this.gl.useProgram(s))}getUniformLocation(s,o,a=!0){return this.throwIfDisposed(),a?getProgramUniformLocationOrThrow(this.gl,s,o):getProgramUniformLocation(this.gl,s,o)}getAttributeLocation(s,o){return this.throwIfDisposed(),callAndCheck(this.gl,()=>this.gl.getAttribLocation(s,o))}getUniformLocationNoThrow(s,o){return this.throwIfDisposed(),this.gl.getUniformLocation(s,o)}setInputMatrixTexture(s,o,a){this.throwIfDisposed(),this.throwIfNoProgram(),bindTextureToProgramUniformSampler(this.gl,s,o,a)}setOutputMatrixTexture(s,o,a){this.setOutputMatrixTextureDriver(s,a,o)}setOutputPackedMatrixTexture(s,o,a){this.throwIfDisposed();const[c,d]=getPackedMatrixTextureShapeWidthHeight(o,a);this.setOutputMatrixTextureDriver(s,c,d)}setOutputMatrixWriteRegion(s,o,a,c){this.setOutputMatrixWriteRegionDriver(a,s,c,o)}setOutputPackedMatrixWriteRegion(s,o,a,c){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&validateProgram(this.gl,this.program),validateFramebuffer(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const s=this.gl;this.debug&&this.debugValidate(),callAndCheck(s,()=>s.drawElements(s.TRIANGLES,6,s.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),callAndCheck(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=getExtensionOrThrow(this.gl,env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const a=this.gl,c=this.getQueryTimerExtensionWebGL2(),d=a.createQuery();return a.beginQuery(c.TIME_ELAPSED_EXT,d),d}const s=this.getQueryTimerExtensionWebGL1(),o=s.createQueryEXT();return s.beginQueryEXT(s.TIME_ELAPSED_EXT,o),o}endQuery(){if(env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const o=this.gl,a=this.getQueryTimerExtensionWebGL2();o.endQuery(a.TIME_ELAPSED_EXT);return}const s=this.getQueryTimerExtensionWebGL1();s.endQueryEXT(s.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(s){return await repeatedTry(()=>this.disposed||this.isQueryAvailable(s,env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(s,env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(s,o){if(o===0)return null;if(o===2){const a=this.gl;return a.getQueryParameter(s,a.QUERY_RESULT)/1e6}else{const a=this.getQueryTimerExtensionWebGL1();return a.getQueryObjectEXT(s,a.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(s,o){if(o===0)return!0;if(o===2){const a=this.gl,c=this.getQueryTimerExtensionWebGL2(),d=a.getQueryParameter(s,a.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(c.GPU_DISJOINT_EXT)),d&&!this.disjoint}else{const a=this.getQueryTimerExtensionWebGL1(),c=a.getQueryObjectEXT(s,a.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(a.GPU_DISJOINT_EXT)),c&&!this.disjoint}}pollFence(s){return new Promise(o=>{this.addItemToPoll(()=>s.isFencePassed(),()=>o())})}pollItems(){const s=linearSearchLastTrue(this.itemsToPoll.map(o=>o.isDoneFn));for(let o=0;o<=s;++o){const{resolveFn:a}=this.itemsToPoll[o];a()}this.itemsToPoll=this.itemsToPoll.slice(s+1)}addItemToPoll(s,o){this.itemsToPoll.push({isDoneFn:s,resolveFn:o}),!(this.itemsToPoll.length>1)&&repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(s){this.throwIfDisposed(),bindColorTextureToFramebuffer(this.gl,s,this.framebuffer),this.debug&&validateFramebuffer(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(bindColorTextureToFramebuffer(this.gl,this.outputTexture,this.framebuffer),this.debug&&validateFramebuffer(this.gl)):unbindColorTextureFromFramebuffer(this.gl,this.framebuffer)}downloadMatrixDriver(s,o){this.bindTextureToFrameBuffer(s);const a=o();return this.unbindTextureToFrameBuffer(),a}setOutputMatrixTextureDriver(s,o,a){this.throwIfDisposed();const c=this.gl;bindColorTextureToFramebuffer(c,s,this.framebuffer),this.debug&&validateFramebuffer(c),this.outputTexture=s,callAndCheck(c,()=>c.viewport(0,0,o,a)),callAndCheck(c,()=>c.scissor(0,0,o,a))}setOutputMatrixWriteRegionDriver(s,o,a,c){this.throwIfDisposed(),callAndCheck(this.gl,()=>this.gl.scissor(s,o,a,c))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function linearSearchLastTrue(i){let s=0;for(;s<i.length&&i[s]();++s);return s-1}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims}=backend_util;function makeShader(i,s,o,a){const c=[];i.forEach(j=>{const nt=sizeFromShape(j.shapeInfo.logicalShape);j.shapeInfo.isUniform?c.push(`uniform float ${j.name}${nt>1?`[${nt}]`:""};`):(c.push(`uniform sampler2D ${j.name};`),c.push(`uniform int offset${j.name};`))});const d=c.join(`
`),g=i.map(j=>getInputSamplingSnippet(j,s,a)).join(`
`),b=s.texShape,$=getGlslDifferences(),_=getFloatTextureSampleSnippet($);let _e,et,rt=getShaderPrefix($);return s.isPacked?(_e=getPackedOutputSamplingSnippet(s.logicalShape,b),et=getFloatTextureSetRGBASnippet($)):(_e=getOutputSamplingSnippet(s.logicalShape,b),et=getFloatTextureSetRSnippet($)),a&&(rt+=SHADER_PACKED_PREFIX),[rt,_,et,d,_e,g,o].join(`
`)}function getSamplerFromInInfo(i){const s=i.shapeInfo.logicalShape;switch(s.length){case 0:return getSamplerScalar(i);case 1:return getSampler1D(i);case 2:return getSampler2D(i);case 3:return getSampler3D(i);case 4:return getSampler4D(i);case 5:return getSampler5D(i);case 6:return getSampler6D(i);default:throw new Error(`${s.length}-D input sampling is not yet supported`)}}function getPackedSamplerFromInInfo(i){switch(i.shapeInfo.logicalShape.length){case 0:return getPackedSamplerScalar(i);case 1:return getPackedSampler1D(i);case 2:return getPackedSampler2D(i);case 3:return getPackedSampler3D(i);default:return getPackedSamplerND(i)}}function getInputSamplingSnippet(i,s,o=!1){let a="";o?a+=getPackedSamplerFromInInfo(i):a+=getSamplerFromInInfo(i);const c=i.shapeInfo.logicalShape,d=s.logicalShape;return c.length<=d.length&&(o?a+=getPackedSamplerAtOutputCoords(i,s):a+=getSamplerAtOutputCoords(i,s)),a}function getPackedOutputSamplingSnippet(i,s){switch(i.length){case 0:return getOutputScalarCoords();case 1:return getOutputPacked1DCoords(i,s);case 2:return getOutputPacked2DCoords(i,s);case 3:return getOutputPacked3DCoords(i,s);default:return getOutputPackedNDCoords(i,s)}}function getOutputSamplingSnippet(i,s){switch(i.length){case 0:return getOutputScalarCoords();case 1:return getOutput1DCoords(i,s);case 2:return getOutput2DCoords(i,s);case 3:return getOutput3DCoords(i,s);case 4:return getOutput4DCoords(i,s);case 5:return getOutput5DCoords(i,s);case 6:return getOutput6DCoords(i,s);default:throw new Error(`${i.length}-D output sampling is not yet supported`)}}function getFloatTextureSampleSnippet(i){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${i.texture2D}(textureSampler, uv).r;
    }
  `}function getFloatTextureSetRSnippet(i){return`
    void setOutput(float val) {
      ${i.output} = vec4(val, 0, 0, 0);
    }
  `}function getFloatTextureSetRGBASnippet(i){return`
    void setOutput(vec4 val) {
      ${i.output} = val;
    }
  `}function getShaderPrefix(i){return`${i.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${i.varyingFs} vec2 resultUV;
    ${i.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${i.defineSpecialNaN}
    ${i.defineSpecialInf}
    ${i.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${SAMPLE_1D_SNIPPET}
    ${SAMPLE_2D_SNIPPET}
    ${SAMPLE_3D_SNIPPET}
  `}const SAMPLE_1D_SNIPPET=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,SAMPLE_2D_SNIPPET=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,SAMPLE_3D_SNIPPET=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,SHADER_PACKED_PREFIX=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function getOutputScalarCoords(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function getOutputPacked1DCoords(i,s){const o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return o[0]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${o[1]}.0);
      }
    `:o[1]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${o[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      return 2 * (resTexRC.x * ${o[1]} + resTexRC.y);
    }
  `}function getOutput1DCoords(i,s){return s[0]===1?`
      int getOutputCoords() {
        return int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?`
      int getOutputCoords() {
        return int(resultUV.y * ${s[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return resTexRC.x * ${s[1]} + resTexRC.y;
    }
  `}function getOutputPacked3DCoords(i,s){const o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],a=Math.ceil(i[2]/2),c=a*Math.ceil(i[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      int index = resTexRC.x * ${o[1]} + resTexRC.y;

      int b = index / ${c};
      index -= b * ${c};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec3(b, r, c);
    }
  `}function getOutput3DCoords(i,s){const o=getLogicalCoordinatesFromFlatIndex(["r","c","d"],i);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      ${o}
      return ivec3(r, c, d);
    }
  `}function getOutputPackedNDCoords(i,s){const o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],a=Math.ceil(i[i.length-1]/2),c=a*Math.ceil(i[i.length-2]/2);let d=c,g="",b="b, r, c";for(let $=2;$<i.length-1;$++)d*=i[i.length-$-1],g=`
      int b${$} = index / ${d};
      index -= b${$} * ${d};
    `+g,b=`b${$}, `+b;return`
    ivec${i.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      int index = resTexRC.x * ${o[1]} + resTexRC.y;

      ${g}

      int b = index / ${c};
      index -= b * ${c};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${i.length}(${b});
    }
  `}function getOutput4DCoords(i,s){const o=getLogicalCoordinatesFromFlatIndex(["r","c","d","d2"],i);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      ${o}
      return ivec4(r, c, d, d2);
    }
  `}function getOutput5DCoords(i,s){const o=getLogicalCoordinatesFromFlatIndex(["r","c","d","d2","d3"],i);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${s[0]},
                             ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${o}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function getOutput6DCoords(i,s){const o=getLogicalCoordinatesFromFlatIndex(["r","c","d","d2","d3","d4"],i);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${o}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function getOutputPacked2DCoords(i,s){const o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(arraysEqual(i,s))return`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${o[0]}, ${o[1]}));
      }
    `;const a=Math.ceil(i[1]/2);return`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));

      int index = resTexRC.x * ${o[1]} + resTexRC.y;
      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec2(r, c);
    }
  `}function getOutput2DCoords(i,s){return arraysEqual(i,s)?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `:i[1]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${s[0]}, ${s[1]}));
        int index = resTexRC.x * ${s[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:i[0]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${s[0]}, ${s[1]}));
        int index = resTexRC.x * ${s[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = index / ${i[1]};
      int c = index - r * ${i[1]};
      return ivec2(r, c);
    }
  `}function getFlatOffsetUniformName(i){return`offset${i}`}function getPackedSamplerScalar(i){const s=i.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),a=getGlslDifferences();return`
    vec4 ${o}() {
      return ${a.texture2D}(${s}, halfCR);
    }
  `}function getSamplerScalar(i){const s=i.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1);if(i.shapeInfo.isUniform)return`float ${o}() {return ${s};}`;const[a,c]=i.shapeInfo.texShape;if(a===1&&c===1)return`
      float ${o}() {
        return sampleTexture(${s}, halfCR);
      }
    `;const[d,g]=i.shapeInfo.texShape,b=getFlatOffsetUniformName(s);return`
    float ${o}() {
      vec2 uv = uvFromFlat(${d}, ${g}, ${b});
      return sampleTexture(${s}, uv);
    }
  `}function getPackedSampler1D(i){const s=i.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),a=i.shapeInfo.texShape,c=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],d=getGlslDifferences();return`
    vec4 ${o}(int index) {
      vec2 uv = packedUVfrom1D(
        ${c[0]}, ${c[1]}, index);
      return ${d.texture2D}(${s}, uv);
    }
  `}function getSampler1D(i){const s=i.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1);if(i.shapeInfo.isUniform)return`
      float ${o}(int index) {
        ${getUniformSampler(i)}
      }
    `;const a=i.shapeInfo.texShape,c=a[0],d=a[1];if(d===1&&c===1)return`
      float ${o}(int index) {
        return sampleTexture(${s}, halfCR);
      }
    `;const g=getFlatOffsetUniformName(s);return d===1?`
      float ${o}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${g}) + 0.5) / ${c}.0);
        return sampleTexture(${s}, uv);
      }
    `:c===1?`
      float ${o}(int index) {
        vec2 uv = vec2((float(index + ${g}) + 0.5) / ${d}.0, 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int index) {
      vec2 uv = uvFromFlat(${c}, ${d}, index + ${g});
      return sampleTexture(${s}, uv);
    }
  `}function getPackedSampler2D(i){const s=i.shapeInfo.logicalShape,o=i.name,a="get"+o.charAt(0).toUpperCase()+o.slice(1),c=i.shapeInfo.texShape,d=c[0],g=c[1],b=getGlslDifferences();if(c!=null&&arraysEqual(s,c))return`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${g}.0, ${d}.0);

        return ${b.texture2D}(${o}, uv);
      }
    `;const $=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)],_=Math.ceil(s[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${_}, ${$[0]}, ${$[1]}, row, col);
      return ${b.texture2D}(${o}, uv);
    }
  `}function getSampler2D(i){const s=i.shapeInfo.logicalShape,o=i.name,a="get"+o.charAt(0).toUpperCase()+o.slice(1),c=i.shapeInfo.texShape;if(c!=null&&arraysEqual(s,c)){const et=c[0],rt=c[1];return`
    float ${a}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${rt}.0, ${et}.0);
      return sampleTexture(${o}, uv);
    }
  `}const{newShape:d,keptDims:g}=squeezeShape(s),b=d;if(b.length<s.length){const et=squeezeInputInfo(i,b),rt=["row","col"];return`
      ${getSamplerFromInInfo(et)}
      float ${a}(int row, int col) {
        return ${a}(${getSqueezedParams(rt,g)});
      }
    `}if(i.shapeInfo.isUniform)return`
      float ${a}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${s[1]}, 1)));
        ${getUniformSampler(i)}
      }
    `;const $=c[0],_=c[1],_e=getFlatOffsetUniformName(o);return _===1?`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${_e}), vec3(${s[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${$}.0);
      return sampleTexture(${o}, uv);
    }
  `:$===1?`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${_e}), vec3(${s[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${_}.0, 0.5);
      return sampleTexture(${o}, uv);
    }
  `:`
  float ${a}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${s[1]} + col + ${_e};
    vec2 uv = uvFromFlat(${$}, ${_}, index);
    return sampleTexture(${o}, uv);
  }
`}function getPackedSampler3D(i){const s=i.shapeInfo.logicalShape,o=i.name,a="get"+o.charAt(0).toUpperCase()+o.slice(1),c=i.shapeInfo.texShape,d=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)];if(s[0]===1){const et=s.slice(1),rt=[1,2],tt=squeezeInputInfo(i,et),j=["b","row","col"];return`
        ${getPackedSamplerFromInInfo(tt)}
        vec4 ${a}(int b, int row, int col) {
          return ${a}(${getSqueezedParams(j,rt)});
        }
      `}const g=d[0],b=d[1],$=Math.ceil(s[2]/2),_=$*Math.ceil(s[1]/2),_e=getGlslDifferences();return`
    vec4 ${a}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${g}, ${b}, ${_}, ${$}, b, row, col);
      return ${_e.texture2D}(${o}, uv);
    }
  `}function getSampler3D(i){const s=i.shapeInfo.logicalShape,o=i.name,a="get"+o.charAt(0).toUpperCase()+o.slice(1),c=s[1]*s[2],d=s[2],{newShape:g,keptDims:b}=squeezeShape(s),$=g;if($.length<s.length){const j=squeezeInputInfo(i,$),nt=["row","col","depth"];return`
        ${getSamplerFromInInfo(j)}
        float ${a}(int row, int col, int depth) {
          return ${a}(${getSqueezedParams(nt,b)});
        }
      `}if(i.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${c}, ${d}, 1)));
        ${getUniformSampler(i)}
      }
    `;const _=i.shapeInfo.texShape,_e=_[0],et=_[1],rt=i.shapeInfo.flatOffset;if(et===c&&rt==null)return`
        float ${a}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${d}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${et}.0, ${_e}.0);
          return sampleTexture(${o}, uv);
        }
      `;if(et===d&&rt==null)return`
    float ${a}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${s[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${et}.0, ${_e}.0);
      return sampleTexture(${o}, uv);
    }
  `;const tt=getFlatOffsetUniformName(o);return`
      float ${a}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${c} + col * ${d} + depth + ${tt};
        vec2 uv = uvFromFlat(${_e}, ${et}, index);
        return sampleTexture(${o}, uv);
      }
  `}function getPackedSamplerND(i){const s=i.shapeInfo.logicalShape,o=s.length,a=i.name,c="get"+a.charAt(0).toUpperCase()+a.slice(1),d=i.shapeInfo.texShape,g=[Math.ceil(d[0]/2),Math.ceil(d[1]/2)],b=g[0],$=g[1],_=Math.ceil(s[o-1]/2);let _e=_*Math.ceil(s[o-2]/2),et="int b, int row, int col",rt=`b * ${_e} + (row / 2) * ${_} + (col / 2)`;for(let j=2;j<o-1;j++)et=`int b${j}, `+et,_e*=s[o-j-1],rt=`b${j} * ${_e} + `+rt;const tt=getGlslDifferences();return`
    vec4 ${c}(${et}) {
      int index = ${rt};
      int texR = index / ${$};
      int texC = index - texR * ${$};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${$}, ${b});
      return ${tt.texture2D}(${a}, uv);
    }
  `}function getSampler4D(i){const s=i.shapeInfo.logicalShape,o=i.name,a="get"+o.charAt(0).toUpperCase()+o.slice(1),c=s[3],d=s[2]*c,g=s[1]*d,{newShape:b,keptDims:$}=squeezeShape(s);if(b.length<s.length){const j=squeezeInputInfo(i,b),nt=["row","col","depth","depth2"];return`
      ${getSamplerFromInInfo(j)}
      float ${a}(int row, int col, int depth, int depth2) {
        return ${a}(${getSqueezedParams(nt,$)});
      }
    `}if(i.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${g}, ${d}, ${c}, 1)));
        ${getUniformSampler(i)}
      }
    `;const _=i.shapeInfo.flatOffset,_e=i.shapeInfo.texShape,et=_e[0],rt=_e[1];if(rt===g&&_==null)return`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${d}, ${c}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${rt}.0, ${et}.0);
        return sampleTexture(${o}, uv);
      }
    `;if(rt===c&&_==null)return`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s[1]*s[2]}, ${s[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${rt}.0, ${et}.0);
        return sampleTexture(${o}, uv);
      }
    `;const tt=getFlatOffsetUniformName(o);return`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${g} + col * ${d} +
          depth * ${c} + depth2;
      vec2 uv = uvFromFlat(${et}, ${rt}, index + ${tt});
      return sampleTexture(${o}, uv);
    }
  `}function getSampler5D(i){const s=i.shapeInfo.logicalShape,o=i.name,a="get"+o.charAt(0).toUpperCase()+o.slice(1),c=s[4],d=s[3]*c,g=s[2]*d,b=s[1]*g,{newShape:$,keptDims:_}=squeezeShape(s);if($.length<s.length){const nt=squeezeInputInfo(i,$),st=["row","col","depth","depth2","depth3"];return`
      ${getSamplerFromInInfo(nt)}
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        return ${a}(${getSqueezedParams(st,_)});
      }
    `}if(i.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${b}, ${g}, ${d}, ${c})) +
          depth3;
        ${getUniformSampler(i)}
      }
    `;const _e=i.shapeInfo.flatOffset,et=i.shapeInfo.texShape,rt=et[0],tt=et[1];if(tt===b&&_e==null)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${g}, ${d}, ${c}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${tt}.0, ${rt}.0);
        return sampleTexture(${o}, uv);
      }
    `;if(tt===c&&_e==null)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${s[1]*s[2]*s[3]},
               ${s[2]*s[3]}, ${s[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${tt}.0, ${rt}.0);
        return sampleTexture(${o}, uv);
      }
    `;const j=getFlatOffsetUniformName(o);return`
    float ${a}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${b} + col * ${g} + depth * ${d} +
          depth2 * ${c} + depth3 + ${j};
      vec2 uv = uvFromFlat(${rt}, ${tt}, index);
      return sampleTexture(${o}, uv);
    }
  `}function getSampler6D(i){const s=i.shapeInfo.logicalShape,o=i.name,a="get"+o.charAt(0).toUpperCase()+o.slice(1),{newShape:c,keptDims:d}=squeezeShape(s);if(c.length<s.length){const st=squeezeInputInfo(i,c),ot=["row","col","depth","depth2","depth3","depth4"];return`
      ${getSamplerFromInInfo(st)}
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${a}(${getSqueezedParams(ot,d)});
      }
    `}const g=s[5],b=s[4]*g,$=s[3]*b,_=s[2]*$,_e=s[1]*_;if(i.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${_e}, ${_}, ${$}, ${b})) +
          dot(
            vec2(depth3, depth4),
            vec2(${g}, 1)));
        ${getUniformSampler(i)}
      }
    `;const et=i.shapeInfo.flatOffset,rt=i.shapeInfo.texShape,tt=rt[0],j=rt[1];if(j===_e&&et==null)return`
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${_}, ${$}, ${b}, ${g})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${j}.0, ${tt}.0);
        return sampleTexture(${o}, uv);
      }
    `;if(j===g&&et==null)return`
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${s[1]*s[2]*s[3]*s[4]},
               ${s[2]*s[3]*s[4]},
               ${s[3]*s[4]},
               ${s[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${j}.0, ${tt}.0);
        return sampleTexture(${o}, uv);
      }
    `;const nt=getFlatOffsetUniformName(o);return`
    float ${a}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${_e} + col * ${_} + depth * ${$} +
          depth2 * ${b} + depth3 * ${g} + depth4 + ${nt};
      vec2 uv = uvFromFlat(${tt}, ${j}, index);
      return sampleTexture(${o}, uv);
    }
  `}function getUniformSampler(i){const s=i.name,o=sizeFromShape(i.shapeInfo.logicalShape);return o<2?`return ${s};`:`
    for (int i = 0; i < ${o}; i++) {
      if (i == index) {
        return ${s}[i];
      }
    }
  `}function getPackedSamplerAtOutputCoords(i,s){const o=i.name,a=o.charAt(0).toUpperCase()+o.slice(1),c="get"+a+"AtOutCoords",d=i.shapeInfo.logicalShape.length,g=s.logicalShape.length,b=getBroadcastDims(i.shapeInfo.logicalShape,s.logicalShape),$=getCoordsDataType(g),_=g-d;let _e;const et=["x","y","z","w","u","v"];d===0?_e="":g<2&&b.length>=1?_e="coords = 0;":_e=b.map(ut=>`coords.${et[ut+_]} = 0;`).join(`
`);let rt="";g<2&&d>0?rt="coords":rt=i.shapeInfo.logicalShape.map((ut,ht)=>`coords.${et[ht+_]}`).join(", ");let tt="return outputValue;";const nt=sizeFromShape(i.shapeInfo.logicalShape)===1,ot=sizeFromShape(s.logicalShape)===1;if(d===1&&!nt&&!ot)tt=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(nt&&!ot)g===1?tt=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:tt=`
        return vec4(outputValue.x);
      `;else if(b.length){const ut=d-2,ht=d-1;b.indexOf(ut)>-1&&b.indexOf(ht)>-1?tt="return vec4(outputValue.x);":b.indexOf(ut)>-1?tt="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":b.indexOf(ht)>-1&&(tt="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${c}() {
      ${$} coords = getOutputCoords();
      ${_e}
      vec4 outputValue = get${a}(${rt});
      ${tt}
    }
  `}function getSamplerAtOutputCoords(i,s){const o=i.name,a=o.charAt(0).toUpperCase()+o.slice(1),c="get"+a+"AtOutCoords",d=s.texShape,g=i.shapeInfo.texShape,b=i.shapeInfo.logicalShape.length,$=s.logicalShape.length;if(!i.shapeInfo.isUniform&&b===$&&i.shapeInfo.flatOffset==null&&arraysEqual(g,d))return`
      float ${c}() {
        return sampleTexture(${o}, resultUV);
      }
    `;const _=getCoordsDataType($),_e=getBroadcastDims(i.shapeInfo.logicalShape,s.logicalShape),et=$-b;let rt;const tt=["x","y","z","w","u","v"];b===0?rt="":$<2&&_e.length>=1?rt="coords = 0;":rt=_e.map(nt=>`coords.${tt[nt+et]} = 0;`).join(`
`);let j="";return $<2&&b>0?j="coords":j=i.shapeInfo.logicalShape.map((nt,st)=>`coords.${tt[st+et]}`).join(", "),`
    float ${c}() {
      ${_} coords = getOutputCoords();
      ${rt}
      return get${a}(${j});
    }
  `}function getCoordsDataType(i){if(i<=1)return"int";if(i===2)return"ivec2";if(i===3)return"ivec3";if(i===4)return"ivec4";if(i===5)return"ivec5";if(i===6)return"ivec6";throw Error(`GPU for rank ${i} is not yet supported`)}function squeezeInputInfo(i,s){const o=JSON.parse(JSON.stringify(i));return o.shapeInfo.logicalShape=s,o}function getSqueezedParams(i,s){return s.map(o=>i[o]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function compileProgram(i,s,o,a){const c=s.userCode,d=o.map((tt,j)=>{const nt={logicalShape:tt.shape,texShape:tt.isUniform?null:tt.texData.texShape,isUniform:tt.isUniform,isPacked:tt.isUniform?!1:tt.texData.isPacked,flatOffset:null};return tt.texData!=null&&tt.texData.slice!=null&&tt.texData.slice.flatOffset>0&&(nt.flatOffset=tt.texData.slice.flatOffset),{name:s.variableNames[j],shapeInfo:nt}}),g=d.map(tt=>tt.shapeInfo),b={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},$=makeShader(d,b,c,s.packedInputs),_=i.createProgram($);let _e=null;const et=i.getUniformLocation(_,"NAN",!1);env().getNumber("WEBGL_VERSION")===1&&(_e=i.getUniformLocation(_,"INFINITY",!1));const rt={};for(let tt=0;tt<s.variableNames.length;tt++){const j=s.variableNames[tt],nt=!1;rt[j]=i.getUniformLocation(_,j,nt),rt[`offset${j}`]=i.getUniformLocation(_,`offset${j}`,nt)}return{program:s,source:$,webGLProgram:_,uniformLocations:rt,inShapeInfos:g,outShapeInfo:b,infLoc:_e,nanLoc:et}}function validateBinaryAndProgram(i,s){if(i.length!==s.length)throw Error(`Binary was compiled with ${i.length} inputs, but was executed with ${s.length} inputs`);i.forEach((o,a)=>{const c=o.logicalShape,d=s[a],g=d.shape;if(!arraysEqual(c,g))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${c} and ${g} must match`);if(o.isUniform&&d.isUniform)return;const b=o.texShape,$=d.isUniform?null:d.texData.texShape;if(!arraysEqual(b,$))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${b} and ${$} must match`)})}function runProgram(i,s,o,a,c){validateBinaryAndProgram(s.inShapeInfos,o),validateBinaryAndProgram([s.outShapeInfo],[a]);const d=a.texData.texture,g=a.texData.texShape;a.texData.isPacked?i.setOutputPackedMatrixTexture(d,g[0],g[1]):i.setOutputMatrixTexture(d,g[0],g[1]),i.setProgram(s.webGLProgram),env().getNumber("WEBGL_VERSION")===1&&s.infLoc!==null&&i.gl.uniform1f(s.infLoc,1/0),s.nanLoc!==null&&i.gl.uniform1f(s.nanLoc,NaN),o.forEach((b,$)=>{const _=s.program.variableNames[$],_e=s.uniformLocations[_],et=s.uniformLocations[`offset${_}`];if(_e!=null){if(b.isUniform){if(sizeFromShape(b.shape)<2)i.gl.uniform1f(_e,b.uniformValues[0]);else{let rt=b.uniformValues;rt instanceof Float32Array||(rt=new Float32Array(rt)),i.gl.uniform1fv(_e,rt)}return}b.texData.slice!=null&&et!=null&&i.gl.uniform1i(et,b.texData.slice.flatOffset),i.setInputMatrixTexture(b.texData.texture,_e,$)}}),c!=null&&c(i,s.webGLProgram),i.executeProgram()}function makeShaderKey(i,s,o){let a="";s.concat(o).forEach(g=>{const b=g.texData!=null&&g.texData.slice!=null&&g.texData.slice.flatOffset>0,$=g.isUniform?"uniform":g.texData.texShape;a+=`${g.shape}_${$}_${b}`});const c=i.userCode;let d=i.constructor.name;return d+="_"+a+"_"+c,d}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:addImplCPU,bincountImpl:bincountImplCPU,bincountReduceImpl:bincountReduceImplCPU,ceilImpl:ceilImplCPU,concatImpl:concatImplCPU,expImpl:expImplCPU,expm1Impl:expm1ImplCPU,floorImpl:floorImplCPU,gatherV2Impl:gatherV2ImplCPU,greaterImpl:greaterImplCPU,lessImpl:lessImplCPU,linSpaceImpl:linSpaceImplCPU,logImpl:logImplCPU,maxImpl:maxImplCPU,maximumImpl:maximumImplCPU,minimumImpl:minimumImplCPU,multiplyImpl:multiplyImplCPU,negImpl:negImplCPU,prodImpl:prodImplCPU,rangeImpl:rangeImplCPU,rsqrtImpl:rsqrtImplCPU,simpleAbsImpl:simpleAbsImplCPU,sliceImpl:sliceImplCPU,stridedSliceImpl:stridedSliceImplCPU,subImpl:subImplCPU,tileImpl:tileImplCPU,topKImpl:topKImplCPU,transposeImpl:transposeImplCPU,uniqueImpl:uniqueImplCPU}=shared;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getVecChannels(i,s){return["x","y","z","w","u","v"].slice(0,s).map(o=>`${i}.${o}`)}function getChannels(i,s){return s===1?[i]:getVecChannels(i,s)}function getSourceCoords$2(i,s){if(i===1)return"rc";let o="";for(let a=0;a<i;a++)o+=s[a],a<i-1&&(o+=",");return o}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PackProgram{constructor(s){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=s;const o=s.length;if(o===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const a=getChannels("rc",o),c=getCoordsDataType(o),d=getOutOfBoundsCondition(o,s,a),g=getSetup(o,s[s.length-1],s[s.length-2],a),b=getOutput(s,a);this.userCode=`
        void main() {
          ${c} rc = getOutputCoords();

          if(${d}) {
            setOutput(vec4(0));
          } else {
            ${g}

            setOutput(vec4(${b}));
          }
        }
      `}}}function getSourceCoordsArr(i,s){const o=[];for(let a=0;a<=1;a++)for(let c=0;c<=1;c++){let d=`${a===0?"r":"rp1"}, ${c===0?"c":"cp1"}`;for(let g=2;g<i;g++)d=`${s[s.length-1-g]},`+d;o.push(d)}return o}function getOutOfBoundsCondition(i,s,o){if(i===1)return`rc > ${s[0]}`;let a="";for(let c=i-2;c<i;c++)a+=`${o[c]} >= ${s[c]}`,c<i-1&&(a+="||");return a}function getSetup(i,s,o,a){if(i===1)return"";const c=a.slice(-2);return`
    int r = ${c[0]};
    int c = ${c[1]};
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= ${s};
    bool rEdge = rp1 >= ${o};
  `}function getOutput(i,s){const o=i.length,a=getSourceCoordsArr(o,s);return o===1?`getA(rc),
            rc + 1 >= ${i[0]} ? 0. : getA(rc + 1),
            0, 0`:`getA(${a[0]}),
          cEdge ? 0. : getA(${a[1]}),
          rEdge ? 0. : getA(${a[2]}),
          rEdge || cEdge ? 0. : getA(${a[3]})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ReshapePackedProgram{constructor(s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;let a="";for(let c=0;c<4;c++){let d="thisRC = rc;";c%2===1&&(d+="thisRC.z += 1;"),c>1&&(d+="thisRC.y += 1;"),a+=`
        ${d}
        ${c>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${c}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${c>0?"}":""}
      `}this.userCode=`
      ${getReshapedInputCoords(o)}
      ${getFlatIndexFrom3D(s)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${s[1]};
        int cols = ${s[2]};

        ${a}

        setOutput(result);
      }
    `}}function getReshapedInputCoords(i){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${getLogicalCoordinatesFromFlatIndex(["r","c","d"],i)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TextureManager{constructor(s){this.gpgpu=s,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(s,o,a){const c=getPhysicalFromLogicalTextureType(o,a),d=getKeyFromTextureShape(s,c,a);d in this.freeTextures||(this.freeTextures[d]=[]),d in this.usedTextures||(this.usedTextures[d]=[]);const g=computeBytes(s,c,this.gpgpu.gl,this.gpgpu.textureConfig,a);if(this.freeTextures[d].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=g,this.log();const $=this.freeTextures[d].shift();return this.usedTextures[d].push($),$}let b;return c===PhysicalTextureType.PACKED_2X2_FLOAT32?b=this.gpgpu.createPackedMatrixTexture(s[0],s[1]):c===PhysicalTextureType.PACKED_2X2_FLOAT16?b=this.gpgpu.createFloat16PackedMatrixTexture(s[0],s[1]):c===PhysicalTextureType.UNPACKED_FLOAT32?b=this.gpgpu.createFloat32MatrixTexture(s[0],s[1]):c===PhysicalTextureType.UNPACKED_FLOAT16?b=this.gpgpu.createFloat16MatrixTexture(s[0],s[1]):c===PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE&&(b=this.gpgpu.createUnsignedBytesMatrixTexture(s[0],s[1])),this.usedTextures[d].push(b),this.numUsedTextures++,this._numBytesAllocated+=g,this.log(),b}releaseTexture(s,o,a,c){if(this.freeTextures==null)return;const d=getPhysicalFromLogicalTextureType(a,c),g=getKeyFromTextureShape(o,d,c);g in this.freeTextures||(this.freeTextures[g]=[]);const b=computeBytes(o,d,this.gpgpu.gl,this.gpgpu.textureConfig,c),$=env().get("WEBGL_DELETE_TEXTURE_THRESHOLD");$!==-1&&this._numBytesAllocated>$?(this.gpgpu.deleteMatrixTexture(s),this._numBytesAllocated-=b):(this.freeTextures[g].push(s),this.numFreeTextures++,this._numBytesFree+=b),this.numUsedTextures--;const _=this.usedTextures[g],_e=_.indexOf(s);if(_e<0)throw new Error("Cannot release a texture that was never provided by this texture manager");_.splice(_e,1),this.log()}log(){if(!this.logEnabled)return;const s=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${s})`);const o=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*o)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const s in this.freeTextures)this.freeTextures[s].forEach(o=>{this.gpgpu.deleteMatrixTexture(o)});for(const s in this.usedTextures)this.usedTextures[s].forEach(o=>{this.gpgpu.deleteMatrixTexture(o)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function numBytesForInternalFormat(i,s){const o=i;if(s===o.R32F)return 4;if(s===o.R16F)return 2;if(s===o.RGBA32F)return 16;if(s===i.RGBA)return 16;if(s===o.RGBA16F)return 8;throw new Error(`Unknown internal format ${s}`)}function computeBytes(i,s,o,a,c){const d=internalFormatForPhysicalTexType(s,a);let g;if(c){const[$,_]=getPackedMatrixTextureShapeWidthHeight(i[0],i[1]);g=$*_}else{const[$,_]=getUnpackedMatrixTextureShapeWidthHeight(i[0],i[1]);g=$*_}const b=numBytesForInternalFormat(o,d);return g*b}function internalFormatForPhysicalTexType(i,s){switch(i){case PhysicalTextureType.PACKED_2X2_FLOAT32:return getInternalFormatForPackedMatrixTexture(s);case PhysicalTextureType.PACKED_2X2_FLOAT16:return getInternalFormatForFloat16PackedMatrixTexture(s);case PhysicalTextureType.UNPACKED_FLOAT32:return getInternalFormatForFloat32MatrixTexture(s);case PhysicalTextureType.UNPACKED_FLOAT16:return getInternalFormatForFloat16MatrixTexture(s);case PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE:return getInternalFormatForUnsignedBytesMatrixTexture(s);default:throw new Error(`Unknown physical texture type ${i}`)}}function getPhysicalTextureForRendering(i){return env().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?i?PhysicalTextureType.PACKED_2X2_FLOAT32:PhysicalTextureType.UNPACKED_FLOAT32:i?PhysicalTextureType.PACKED_2X2_FLOAT16:PhysicalTextureType.UNPACKED_FLOAT16}function getPhysicalFromLogicalTextureType(i,s){if(i===TextureUsage.UPLOAD)return PhysicalTextureType.PACKED_2X2_FLOAT32;if(i===TextureUsage.RENDER||i==null)return getPhysicalTextureForRendering(s);if(i===TextureUsage.DOWNLOAD||i===TextureUsage.PIXELS)return PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${i}`)}function getKeyFromTextureShape(i,s,o){return`${i[0]}_${i[1]}_${s}_${o}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UnaryOpProgram{constructor(s,o){this.variableNames=["A"],this.outputShape=s,this.userCode=`
      float unaryOperation(float x) {
        ${o}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const CHECK_NAN_SNIPPET$2="if (isnan(x)) return x;",LINEAR$1="return x;",ABS$1="return abs(x);",ELU$2="return (x >= 0.0) ? x : (exp(x) - 1.0);",RELU$2=CHECK_NAN_SNIPPET$2+`
  return (x < 0.0) ? 0.0 : x;
`,RELU6$2=CHECK_NAN_SNIPPET$2+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,CLONE="return x;";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LINEAR="return x;",ELU$1=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,RELU$1=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,RELU6$1=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;class UnaryOpPackedProgram{constructor(s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${o}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UnpackProgram{constructor(s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=s;const o=s.length,a=getChannels("rc",o),c=getCoordsDataType(o),d=getSourceCoords$2(o,a),g=a.slice(-2),b=o<=1?"rc":`vec2(${g.join(",")})`;this.userCode=`
      void main() {
        ${c} rc = getOutputCoords();
        vec4 packedInput = getA(${d});

        setOutput(getChannel(packedInput, ${b}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const whereImpl=whereImpl$2,EPSILON_FLOAT32=1e-7,EPSILON_FLOAT16=1e-4,binaryCaches={};function getBinaryCache(i){return i in binaryCaches||(binaryCaches[i]={}),binaryCaches[i]}const CPU_HANDOFF_SIZE_THRESHOLD=128,BEFORE_PAGING_CONSTANT=600;function numMBBeforeWarning(){return env().global.screen==null?1024:env().global.screen.height*env().global.screen.width*window.devicePixelRatio*BEFORE_PAGING_CONSTANT/1024/1024}class MathBackendWebGL extends KernelBackend{constructor(s){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!env().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(s==null){const o=getWebGLContext(env().getNumber("WEBGL_VERSION"));this.binaryCache=getBinaryCache(env().getNumber("WEBGL_VERSION")),this.gpgpu=new GPGPUContext(o),this.canvas=o.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=s,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=s.gl.canvas;this.textureManager=new TextureManager(this.gpgpu),this.numMBBeforeWarning=numMBBeforeWarning(),this.texData=new DataStorage(this,engine())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(s,o,a){if((env().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||env().getBool("DEBUG"))&&this.checkNumericalProblems(s),a==="complex64"&&s!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const c={};return this.texData.set(c,{shape:o,dtype:a,values:s,usage:TextureUsage.UPLOAD,refCount:1,complexParentRefCount:0}),c}incRef(s){const o=this.texData.get(s);o.refCount++}decRef(s){if(this.texData.has(s)){const o=this.texData.get(s);o.refCount--}}decComplexRef(s){if(this.texData.has(s)){const o=this.texData.get(s);o.complexParentRefCount>0&&o.refCount--}}move(s,o,a,c){if(env().getBool("DEBUG")&&this.checkNumericalProblems(o),c==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(s,{shape:a,dtype:c,values:o,usage:TextureUsage.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(s){const o=s.dataId;if(this.texData.has(o)){const a=this.texData.get(o);a.refCount--,a.refCount<1&&this.disposeData(o)}}readSync(s){const o=this.texData.get(s),{values:a,dtype:c,complexTensorInfos:d,slice:g,shape:b,isPacked:$}=o;if(g!=null){let rt;$?rt=new UnaryOpPackedProgram(b,CLONE):rt=new UnaryOpProgram(b,CLONE);const tt=this.runWebGLProgram(rt,[{dataId:s,shape:b,dtype:c}],c),j=this.readSync(tt.dataId);return this.disposeIntermediateTensorInfo(tt),j}if(a!=null)return this.convertAndCacheOnCPU(s);if(c==="string")return a;const _=this.activeTimers!=null;let _e;_&&(_e=now$1());let et;if(c==="complex64"){const rt=this.readSync(d.real.dataId),tt=this.readSync(d.imag.dataId);et=mergeRealAndImagArrays(rt,tt)}else et=this.getValuesFromTexture(s);return _&&(this.downloadWaitMs+=now$1()-_e),this.convertAndCacheOnCPU(s,et)}async read(s){if(this.pendingRead.has(s)){const j=this.pendingRead.get(s);return new Promise(nt=>j.push(nt))}const o=this.texData.get(s),{values:a,shape:c,slice:d,dtype:g,complexTensorInfos:b,isPacked:$}=o;if(d!=null){let j;$?j=new UnaryOpPackedProgram(c,CLONE):j=new UnaryOpProgram(c,CLONE);const nt=this.runWebGLProgram(j,[{dataId:s,shape:c,dtype:g}],g),st=this.read(nt.dataId);return this.disposeIntermediateTensorInfo(nt),st}if(a!=null)return this.convertAndCacheOnCPU(s);if(!env().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&env().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let _=null,_e;if(g!=="complex64"&&env().get("WEBGL_BUFFER_SUPPORTED")){_e=this.decode(s);const j=this.texData.get(_e.dataId);_=this.gpgpu.createBufferFromTexture(j.texture,...getDenseTexShape(c))}this.pendingRead.set(s,[]),g!=="complex64"&&await this.gpgpu.createAndWaitForFence();let et;if(g==="complex64"){const j=await Promise.all([this.read(b.real.dataId),this.read(b.imag.dataId)]),nt=j[0],st=j[1];et=mergeRealAndImagArrays(nt,st)}else if(_==null)et=this.getValuesFromTexture(s);else{const j=sizeFromShape(c);et=this.gpgpu.downloadFloat32MatrixFromBuffer(_,j)}_e!=null&&this.disposeIntermediateTensorInfo(_e);const rt=this.convertAndCacheOnCPU(s,et),tt=this.pendingRead.get(s);return this.pendingRead.delete(s),tt.forEach(j=>j(rt)),this.pendingDisposal.has(s)&&(this.pendingDisposal.delete(s),this.disposeData(s),this.pendingDeletes--),rt}bufferSync(s){const o=this.readSync(s.dataId);let a=o;if(s.dtype==="string")try{a=o.map(c=>decodeString(c))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return buffer(s.shape,s.dtype,a)}checkNumericalProblems(s){if(s!=null)for(let o=0;o<s.length;o++){const a=s[o];if(!canBeRepresented(a))throw env().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${a} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${a} cannot be represented on this device.`)}}getValuesFromTexture(s){const{shape:o,dtype:a,isPacked:c}=this.texData.get(s),d=sizeFromShape(o);if(env().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const rt=this.decode(s),tt=this.texData.get(rt.dataId),j=this.gpgpu.downloadMatrixFromPackedTexture(tt.texture,...getDenseTexShape(o)).subarray(0,d);return this.disposeIntermediateTensorInfo(rt),j}const g=env().getBool("WEBGL_PACK")&&c===!0,b=g?getShapeAs3D(o):o,$=g?new EncodeFloatPackedProgram(b):new EncodeFloatProgram(b),_=this.runWebGLProgram($,[{shape:b,dtype:a,dataId:s}],"float32"),_e=this.texData.get(_.dataId),et=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(_e.texture,_e.texShape[0],_e.texShape[1]).subarray(0,d);return this.disposeIntermediateTensorInfo(_),et}async time(s){const o=this.activeTimers,a=[];let c=!1;this.programTimersStack==null?(this.programTimersStack=a,c=!0):this.activeTimers.push(a),this.activeTimers=a,s();const d=flatten$2(this.activeTimers.map($=>$.query)).filter($=>$!=null),g=flatten$2(this.activeTimers.map($=>$.name)).filter($=>$!=null);this.activeTimers=o,c&&(this.programTimersStack=null);const b={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const $=await Promise.all(d);b.kernelMs=sum$3($),b.getExtraProfileInfo=()=>$.map((_,_e)=>({name:g[_e],ms:_})).map(_=>`${_.name}: ${_.ms}`).join(", ")}else b.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,b}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:now$1(),endMs:null}}endTimer(s){return env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),s):(s.endMs=now$1(),s)}async getQueryTime(s){if(env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(s);const o=s;return o.endMs-o.startMs}disposeData(s){if(this.pendingDisposal.has(s))return;if(this.pendingRead.has(s)){this.pendingDisposal.add(s),this.pendingDeletes++;return}if(!this.texData.has(s))return;if(this.texData.get(s).complexParentRefCount>0){this.texData.get(s).refCount--;return}this.releaseGPUData(s);const{complexTensorInfos:o}=this.texData.get(s);o!=null&&(this.texData.get(o.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(o.real),this.texData.get(o.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(o.imag)),this.texData.delete(s)}releaseGPUData(s){const{texture:o,dtype:a,texShape:c,usage:d,isPacked:g,slice:b}=this.texData.get(s),$=b&&b.origDataId||s,_=this.dataRefCount.get($);_>1?this.dataRefCount.set($,_-1):(this.dataRefCount.delete($),o!=null&&(this.numBytesInGPU-=this.computeBytes(c,a),this.textureManager.releaseTexture(o,c,d,g)));const _e=this.texData.get(s);_e.texture=null,_e.texShape=null,_e.isPacked=!1,_e.slice=null}getTexture(s){return this.uploadToGPU(s),this.texData.get(s).texture}getDataInfo(s){return this.texData.get(s)}getCPUBackend(){return env().getBool("WEBGL_CPU_FORWARD")?(this.cpuBackend==null&&(this.cpuBackend=engine().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(s,o=CPU_HANDOFF_SIZE_THRESHOLD){const a=this.getCPUBackend();return!env().getBool("IS_TEST")&&!this.warnedAboutCPUBackend&&a==null&&(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),a!=null&&s.every(c=>this.texData.get(c.dataId).texture==null&&sizeFromShape(c.shape)<o)}getGPGPUContext(){return this.gpgpu}where(s){warn$1("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const o=s.dataSync();return whereImpl(s.shape,o)}packedUnaryOp(s,o,a){const c=new UnaryOpPackedProgram(s.shape,o);return this.compileAndRun(c,[s],a)}abs(s){if(this.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const a=simpleAbsImplCPU(this.texData.get(s.dataId).values);return this.makeOutput(s.shape,s.dtype,a)}if(env().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(s,ABS$1,s.dtype);const o=new UnaryOpProgram(s.shape,ABS$1);return this.compileAndRun(o,[s])}makeTensorInfo(s,o,a){let c;if(o==="string"&&a!=null&&a.length>0&&isString$1(a[0])){const d=a.map(g=>encodeString(g));c=this.write(d,s,o)}else c=this.write(a,s,o);return this.texData.get(c).usage=null,{dataId:c,shape:s,dtype:o}}makeOutput(s,o,a){const{dataId:c}=this.makeTensorInfo(s,o,a);return engine().makeTensorFromDataId(c,s,o,this)}unpackTensor(s){const o=new UnpackProgram(s.shape);return this.runWebGLProgram(o,[s],s.dtype)}packTensor(s){const o=new PackProgram(s.shape),a=!0;return this.runWebGLProgram(o,[s],s.dtype,null,a)}packedReshape(s,o){const a=[getBatchDim(s.shape),...getRowsCols(s.shape)],c={dtype:s.dtype,shape:a,dataId:s.dataId},d=[getBatchDim(o),...getRowsCols(o)],g=new ReshapePackedProgram(d,a),b=!0,$=this.runWebGLProgram(g,[c],s.dtype,null,b);return{dataId:$.dataId,shape:o,dtype:$.dtype}}decode(s){const o=this.texData.get(s),{isPacked:a,shape:c,dtype:d}=o,g=getShapeAs3D(c);let b;a?b=new DecodeMatrixPackedProgram(g):b=new DecodeMatrixProgram(g);const $=!0,_=this.runWebGLProgram(b,[{shape:g,dtype:d,dataId:s}],d,null,$);return{dtype:d,shape:c,dataId:_.dataId}}runWebGLProgram(s,o,a,c,d=!1){const g=this.makeTensorInfo(s.outputShape,a),b=this.texData.get(g.dataId);if(s.packedOutput&&(b.isPacked=!0),s.outPackingScheme===PackingScheme.DENSE){const nt=getDenseTexShape(s.outputShape);b.texShape=nt.map(st=>st*2)}if(s.outTexUsage!=null&&(b.usage=s.outTexUsage),sizeFromShape(g.shape)===0)return b.values=getTypedArrayFromDType(g.dtype,0),g;const $=[],_=o.map(nt=>{if(nt.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let st=this.texData.get(nt.dataId);if(st.texture==null){if(!s.packedInputs&&sizeFromShape(nt.shape)<=env().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:nt.shape,texData:null,isUniform:!0,uniformValues:st.values};s.packedInputs&&(st.isPacked=!0,st.shape=nt.shape)}else if(!!st.isPacked!=!!s.packedInputs)nt=st.isPacked?this.unpackTensor(nt):this.packTensor(nt),$.push(nt),st=this.texData.get(nt.dataId);else if(st.isPacked&&!isReshapeFree(st.shape,nt.shape)){const ot=nt,ut=nt.shape;nt.shape=st.shape,nt=this.packedReshape(nt,ut),$.push(nt),st=this.texData.get(nt.dataId),ot.shape=ut}return this.uploadToGPU(nt.dataId),{shape:nt.shape,texData:st,isUniform:!1}});this.uploadToGPU(g.dataId);const _e={shape:g.shape,texData:b,isUniform:!1},et=makeShaderKey(s,_,_e),rt=this.getAndSaveBinary(et,()=>compileProgram(this.gpgpu,s,_,_e)),tt=this.activeTimers!=null;let j;if(tt&&(j=this.startTimer()),runProgram(this.gpgpu,rt,_,_e,c),$.forEach(nt=>this.disposeIntermediateTensorInfo(nt)),tt&&(j=this.endTimer(j),this.activeTimers.push({name:s.constructor.name,query:this.getQueryTime(j)})),!env().getBool("WEBGL_LAZILY_UNPACK")&&b.isPacked&&d===!1){const nt=this.unpackTensor(g);return this.disposeIntermediateTensorInfo(g),nt}return g}compileAndRun(s,o,a,c,d=!1){a=a||o[0].dtype;const g=this.runWebGLProgram(s,o,a,c,d);return engine().makeTensorFromDataId(g.dataId,g.shape,g.dtype)}getAndSaveBinary(s,o){return s in this.binaryCache||(this.binaryCache[s]=o()),this.binaryCache[s]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(env().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(o=>{this.gpgpu.deleteProgram(this.binaryCache[o].webGLProgram),delete this.binaryCache[o]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=tidy(()=>{if(!env().get("WEBGL_RENDER_FLOAT32_ENABLED")){const s=env().getBool("DEBUG");env().set("DEBUG",!1);const o=this.abs(scalar(1e-8)).dataSync()[0];if(env().set("DEBUG",s),o>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?EPSILON_FLOAT32:EPSILON_FLOAT16}uploadToGPU(s){const o=this.texData.get(s),{shape:a,dtype:c,values:d,texture:g,usage:b,isPacked:$}=o;if(g!=null)return;const _=this.activeTimers!=null;let _e;_&&(_e=now$1());let et=o.texShape;if(et==null&&(et=getTextureShapeFromLogicalShape(a,$),o.texShape=et),d!=null){const rt=getShapeAs3D(a);let tt,j=et[1],nt=et[0];const st=d instanceof Uint8Array;$?([j,nt]=getPackedMatrixTextureShapeWidthHeight(et[0],et[1]),tt=new EncodeMatrixPackedProgram(rt,[nt,j],st)):tt=new EncodeMatrixProgram(rt,[nt,j],st);const ot=this.makeTensorInfo([nt,j],c);st?this.texData.get(ot.dataId).usage=TextureUsage.PIXELS:this.texData.get(ot.dataId).usage=TextureUsage.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(ot.dataId),j,nt,d);const ut=!0,ht=this.runWebGLProgram(tt,[ot],c,null,ut),pt=this.texData.get(ht.dataId);o.texture=pt.texture,o.texShape=pt.texShape,o.isPacked=pt.isPacked,o.usage=pt.usage,this.disposeIntermediateTensorInfo(ot),this.texData.delete(ht.dataId),o.values=null,_&&(this.uploadWaitMs+=now$1()-_e)}else{const rt=this.acquireTexture(et,b,c,$);o.texture=rt}}convertAndCacheOnCPU(s,o){const a=this.texData.get(s),{dtype:c}=a;return this.releaseGPUData(s),o!=null&&(a.values=float32ToTypedArray(o,c)),a.values}acquireTexture(s,o,a,c){if(this.numBytesInGPU+=this.computeBytes(s,a),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const d=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${d} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(s,o,c)}computeBytes(s,o){return s[0]*s[1]*bytesPerElement(o)}}function float32ToTypedArray(i,s){if(s==="float32"||s==="complex64")return i;if(s==="int32"||s==="bool"){const o=s==="int32"?new Int32Array(i.length):new Uint8Array(i.length);for(let a=0;a<o.length;++a)o[a]=Math.round(i[a]);return o}else throw new Error(`Unknown dtype ${s}`)}/** @license See the LICENSE file. */const version$3="2.8.6";/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */isBrowser()&&registerBackend("webgl",()=>new MathBackendWebGL,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CHECK_NAN_SNIPPET$1=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class BinaryOpProgram{constructor(s,o,a){this.variableNames=["A","B"],this.outputShape=assertAndGetBroadcastShape(o,a),this.userCode=`
      float binaryOperation(float a, float b) {
        ${s}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CHECK_NAN_SNIPPET=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;class BinaryOpPackedProgram{constructor(s,o,a,c=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=assertAndGetBroadcastShape(o,a);const d=this.outputShape.length;let g="";if(c)if(d===0||sizeFromShape(this.outputShape)===1)g=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(g=`
          ${getCoordsDataType(d)} coords = getOutputCoords();
        `,d===1)g+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const $=getChannels("coords",d);g+=`
            bool nextRowOutOfBounds =
              (${$[d-2]} + 1) >= ${this.outputShape[d-2]};
            bool nextColOutOfBounds =
              (${$[d-1]} + 1) >= ${this.outputShape[d-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${s}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${g}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function identity(i){const{inputs:s,backend:o}=i,{x:a}=s;return o.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const identityConfig={kernelName:Identity$1,backendName:"webgl",kernelFunc:identity};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function complex(i){const{inputs:s,backend:o}=i,{real:a,imag:c}=s,d=o.makeTensorInfo(a.shape,"complex64"),g=o.texData.get(d.dataId),b=identity({inputs:{x:a},backend:o}),$=o.texData.get(b.dataId);$.complexParentRefCount++;const _=identity({inputs:{x:c},backend:o}),_e=o.texData.get(_.dataId);return _e.complexParentRefCount++,g.complexTensorInfos={real:b,imag:_},d}const complexConfig={kernelName:Complex,backendName:"webgl",kernelFunc:complex};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LEAKYRELU="return (a < 0.) ? b * a : a;",LEAKYRELU_PACKED=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function leakyRelu(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{alpha:d}=a,g=o.makeTensorInfo([],"float32",createScalarValue(d,"float32")),b=env().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BinaryOpPackedProgram(LEAKYRELU_PACKED,c.shape,g.shape):new BinaryOpProgram(LEAKYRELU,c.shape,g.shape),$=o.runWebGLProgram(b,[c,g],c.dtype);return o.disposeIntermediateTensorInfo(g),$}const leakyReluConfig={kernelName:LeakyRelu,backendName:"webgl",kernelFunc:leakyRelu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PRELU="return (a < 0.) ? b * a : a;",PRELU_PACKED=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function prelu(i){const{inputs:s,backend:o}=i,{x:a,alpha:c}=s,d=env().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BinaryOpPackedProgram(PRELU_PACKED,a.shape,c.shape):new BinaryOpProgram(PRELU,a.shape,c.shape);return o.runWebGLProgram(d,[a,c],a.dtype)}const preluConfig={kernelName:Prelu,backendName:"webgl",kernelFunc:prelu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CHECK_NAN_SNIPPET_UNARY="if (isnan(x)) return x;",CHECK_NAN_SNIPPET_BINARY=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,CHECK_NAN_SNIPPET_BINARY_PACKED=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function unaryKernelFunc({opSnippet:i,packedOpSnippet:s,cpuKernelImpl:o,dtype:a}){return({inputs:c,backend:d})=>{const{x:g}=c,b=d,$=a||g.dtype;if(b.shouldExecuteOnCPU([g])&&o!=null){const et=b.texData.get(g.dataId),rt=o(et.values,$);return b.makeTensorInfo(g.shape,$,rt)}const _=env().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&s!=null;let _e;return _?_e=new UnaryOpPackedProgram(g.shape,s):_e=new UnaryOpProgram(g.shape,i),b.runWebGLProgram(_e,[g],$)}}function binaryKernelFunc({opSnippet:i,packedOpSnippet:s,checkOutOfBounds:o=!1,supportsComplex:a=!1,cpuKernelImpl:c,dtype:d}){return({inputs:g,backend:b})=>{const{a:$,b:_}=g,_e=b;if(a&&$.dtype==="complex64"){const j=_e.texData.get($.dataId),nt=_e.texData.get(_.dataId),[st,ot]=[[j.complexTensorInfos.real,nt.complexTensorInfos.real],[j.complexTensorInfos.imag,nt.complexTensorInfos.imag]].map(ht=>{const[pt,it]=ht,yt={dataId:pt.dataId,dtype:pt.dtype,shape:$.shape},ft={dataId:it.dataId,dtype:it.dtype,shape:_.shape},bt=new BinaryOpProgram(i,$.shape,_.shape);return _e.runWebGLProgram(bt,[yt,ft],upcastType(pt.dtype,it.dtype))}),ut=complex({inputs:{real:st,imag:ot},backend:_e});return _e.disposeIntermediateTensorInfo(st),_e.disposeIntermediateTensorInfo(ot),ut}const et=d||upcastType($.dtype,_.dtype);if(_e.shouldExecuteOnCPU([$,_])&&c!=null){const j=_e.texData.get($.dataId),nt=_e.texData.get(_.dataId),[st,ot]=c($.shape,_.shape,j.values,nt.values,et),ut=_e.makeTensorInfo(ot,et),ht=_e.texData.get(ut.dataId);return ht.values=st,ut}const rt=env().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&s!=null;let tt;return rt?tt=new BinaryOpPackedProgram(s,$.shape,_.shape,o):tt=new BinaryOpProgram(i,$.shape,_.shape),_e.runWebGLProgram(tt,[$,_],et)}}function mapActivationToShaderProgram(i,s=!1){if(i==="linear")return s?LINEAR:LINEAR$1;if(i==="relu")return s?RELU$1:RELU$2;if(i==="elu")return s?ELU$1:ELU$2;if(i==="relu6")return s?RELU6$1:RELU6$2;if(i==="prelu")return s?PRELU_PACKED:PRELU;if(i==="leakyrelu")return s?LEAKYRELU_PACKED:LEAKYRELU;throw new Error(`Activation ${i} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MatMulPackedProgram{constructor(s,o,a,c=!1,d=!1,g=!1,b=null,$=!1,_=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const _e=c?s[1]:s[2],et=Math.ceil(_e/2),rt=c?"i * 2, rc.y":"rc.y, i * 2",tt=d?"rc.z, i * 2":"i * 2, rc.z",j=c?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],nt=d?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let st="",ot="";b&&($?st=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${b}
        }`:_?st=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${b}
        }`:st=`vec4 activation(vec4 x) {
          ${b}
        }`,ot="result = activation(result);");const ut=g?"result += getBiasAtOutCoords();":"";g&&this.variableNames.push("bias"),$&&this.variableNames.push("preluActivationWeights"),_&&this.variableNames.push("leakyreluAlpha");let ht="rc.x",pt="rc.x";s[0]<o[0]?ht=`int(min(float(rc.x), ${s[0]-1}.))`:o[0]<s[0]&&(pt=`int(min(float(rc.x), ${o[0]-1}.))`),this.userCode=`
      ${st}

      const float sharedDimension = ${et}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${et}; i++) {
          int batchA = ${ht};
          int batchB = ${pt};
          vec4 a = getMatrixA(batchA, ${rt});
          vec4 b = getMatrixB(batchB, ${tt});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${j[0]} * ${nt[0]});
          result += (${j[1]} * ${nt[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${ut}

        ${ot}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const COMPLEX_MULTIPLY={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class BinaryOpComplexProgram{constructor(s,o,a){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=assertAndGetBroadcastShape(o,a),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${s}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MUL="return a * b;";function multiply$1(i){const{inputs:s,backend:o}=i,{a,b:c}=s,d=upcastType(a.dtype,c.dtype);if(a.dtype==="complex64"){const b=o.texData.get(a.dataId),$=o.texData.get(c.dataId),_=new BinaryOpComplexProgram(COMPLEX_MULTIPLY.REAL,a.shape,c.shape),_e=new BinaryOpComplexProgram(COMPLEX_MULTIPLY.IMAG,a.shape,c.shape),et=[{dataId:b.complexTensorInfos.real.dataId,dtype:b.complexTensorInfos.real.dtype,shape:a.shape},{dataId:b.complexTensorInfos.imag.dataId,dtype:b.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:$.complexTensorInfos.real.dataId,dtype:$.complexTensorInfos.real.dtype,shape:c.shape},{dataId:$.complexTensorInfos.imag.dataId,dtype:$.complexTensorInfos.imag.dtype,shape:c.shape}],rt=o.runWebGLProgram(_,et,"float32"),tt=o.runWebGLProgram(_e,et,"float32"),j=complex({inputs:{real:rt,imag:tt},backend:o});return o.disposeIntermediateTensorInfo(rt),o.disposeIntermediateTensorInfo(tt),j}if(o.shouldExecuteOnCPU([a,c])){const b=o.texData.get(a.dataId),$=o.texData.get(c.dataId),[_,_e]=multiplyImplCPU(a.shape,c.shape,b.values,$.values,d),et=o.makeTensorInfo(_e,d),rt=o.texData.get(et.dataId);return rt.values=_,et}let g;return env().getBool("WEBGL_PACK_BINARY_OPERATIONS")?g=new BinaryOpPackedProgram(MUL,a.shape,c.shape):g=new BinaryOpProgram(MUL,a.shape,c.shape),o.runWebGLProgram(g,[a,c],d)}const multiplyConfig={kernelName:Multiply$2,backendName:"webgl",kernelFunc:multiply$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function packedReshape(i,s,o){const a=[getBatchDim(i.shape),...getRowsCols(i.shape)],c={dtype:i.dtype,shape:a,dataId:i.dataId},d=[getBatchDim(s),...getRowsCols(s)],g=new ReshapePackedProgram(d,a),b=!0,$=o.runWebGLProgram(g,[c],i.dtype,null,b);return{dataId:$.dataId,shape:s,dtype:$.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reshape(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{shape:d}=a,g=o,b=sizeFromShape(c.shape),$=inferFromImplicitShape(d,b),_=sizeFromShape($);assert$2(b===_,()=>`The new shape (${$}) has ${_} elements and the old shape (${c.shape}) has ${b} elements. The new shape and old shape must have the same number of elements.`);const _e=g.texData.get(c.dataId);return _e.isPacked&&!isReshapeFree(c.shape,$)&&!(_e.texture!==null&&isReshapeFree(_e.shape,$))?packedReshape(c,$,g):(g.incRef(c.dataId),{dataId:c.dataId,shape:$,dtype:c.dtype})}const reshapeConfig={kernelName:Reshape$1,backendName:"webgl",kernelFunc:reshape};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MeanProgram{constructor(s,o){this.variableNames=["x"];const{windowSize:a,batchSize:c,inSize:d,outSize:g}=s;this.outputShape=[c,g];const b=Math.floor(a/4)*4,$=a%4;let _="sumValue += dot(values, ones);";if(o!=null){const et=1/o;_=`sumValue += dot(values * ${isInt(et)?et.toPrecision(2):et}, ones);`}let _e="";d%a>0&&(_e=`
        if (inIdx < 0 || inIdx >= ${d}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${_e}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        float sumValue = 0.0;

        for (int i = 0; i < ${b}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${_}
        }

        int inIdx = inOffset + ${b};
        if (${$===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${_}
        } else if (${$===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${_}
        } else if (${$===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${_}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ReduceProgram{constructor(s,o){this.variableNames=["x"];const{windowSize:a,batchSize:c,inSize:d,outSize:g}=s;this.outputShape=[c,g];let b="0.0",$="";o==="prod"?b="1.0":o==="min"?(b="1.0 / 1e-20",$="min"):o==="max"&&(b="-1.0 / 1e-20",$="max");let _=`${o}(${o}(${o}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;o==="sum"?_="sumValue":o==="prod"?_="prodValue":o==="all"?_="allValue":o==="any"&&(_="anyValue");const _e=Math.floor(a/4)*4,et=a%4;let rt=`
      if (${o==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${o==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${$}(values, minMaxValue);
      }
    `,tt="vec4";o==="all"?(b="1.0",rt=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,tt="bvec4"):o==="any"&&(b="0.0",rt=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,tt="bvec4");let j="";d%a>0&&(j=`
        if (inIdx < 0 || inIdx >= ${d}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${j}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        vec4 minMaxValue = vec4(${b});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${_e}; i += 4) {
          int inIdx = inOffset + i;
          ${tt} values = ${tt}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${rt}
        }

        int inIdx = inOffset + ${_e};
        if (${et===1}) {
          ${tt} values = ${tt}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${rt}
        } else if (${et===2}) {
          ${tt} values = ${tt}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${rt}
        } else if (${et===3}) {
          ${tt} values = ${tt}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${rt}
        }
        setOutput(${_});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getReductionStages(i){const s=[];for(;s.length===0||s[s.length-1].outSize!==1;){const o=s.length?s[s.length-1].outSize:i[1],a=computeOptimalWindowSize(o);s.push({inSize:o,windowSize:a,outSize:Math.ceil(o/a)})}return s}function reduce(i,s,o,a){const c=getReductionStages(i.shape);let d=i;for(let g=0;g<c.length;g++){const{inSize:b,windowSize:$,outSize:_}=c[g];let _e,et;o==="mean"?_e=g===0?new MeanProgram({windowSize:$,inSize:b,batchSize:i.shape[0],outSize:_},b):new MeanProgram({windowSize:$,inSize:b,batchSize:i.shape[0],outSize:_}):_e=new ReduceProgram({windowSize:$,inSize:b,batchSize:i.shape[0],outSize:_},o),et=d,d=a.runWebGLProgram(_e,[d],s),et.dataId!==i.dataId&&a.disposeIntermediateTensorInfo(et)}return d}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TransposeProgram{constructor(s,o){this.variableNames=["A"];const a=new Array(s.length);for(let g=0;g<a.length;g++)a[g]=s[o[g]];this.outputShape=a,this.rank=a.length;const c=getCoordsDataType(this.rank),d=getSwitchedCoords(o);this.userCode=`
    void main() {
      ${c} resRC = getOutputCoords();
      setOutput(getA(${d}));
    }
    `}}function getSwitchedCoords(i){const s=i.length;if(s>6)throw Error(`Transpose for rank ${s} is not yet supported`);const o=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(s);for(let c=0;c<i.length;c++)a[i[c]]=o[c];return a.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TransposePackedProgram{constructor(s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const a=new Array(s.length);for(let _e=0;_e<a.length;_e++)a[_e]=s[o[_e]];if(this.outputShape=a,this.rank=a.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const c=getCoordsDataType(this.rank),d=getVecChannels("rc",this.rank),g=new Array(this.rank);for(let _e=0;_e<o.length;_e++)g[o[_e]]=d[_e];const b=`vec2(${g.slice(-2).join()})`,$=`++${d[this.rank-1]} < ${a[this.rank-1]}`,_=`getChannel(getA(${g.join()}), ${b})`;this.userCode=`
    void main() {
      ${c} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${_};
      if(${$}) {
        result[1] = ${_};
      }
      --${d[this.rank-1]};
      if(++${d[this.rank-2]} < ${a[this.rank-2]}) {
        result[2] = ${_};
        if(${$}) {
          result[3] = ${_};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transposeImpl(i,s,o){const a=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new TransposePackedProgram(i.shape,s):new TransposeProgram(i.shape,s);return o.runWebGLProgram(a,[i],i.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sumImpl(i,s,o,a){const c=s,d=i.shape.length,g=parseAxisParam(c,i.shape);let b=g;const $=getAxesPermutation(b,d),_=$!=null;let _e=i;_&&(_e=transposeImpl(i,$,a),b=getInnerMostAxes(b.length,d)),assertAxesAreInnerMostDims("sum",b,d);const[et,rt]=computeOutAndReduceShapes(_e.shape,b);let tt=et;o&&(tt=expandShapeToKeepDim(et,g));const j=sizeFromShape(rt),st=sizeFromShape(i.shape)/j,ot=reshape({inputs:{x:_e},attrs:{shape:[st,j]},backend:a}),ut=sumOutType(i.dtype),ht=reduce(ot,ut,"sum",a),pt=reshape({inputs:{x:ht},attrs:{shape:tt},backend:a});return a.disposeIntermediateTensorInfo(ot),a.disposeIntermediateTensorInfo(ht),_&&a.disposeIntermediateTensorInfo(_e),pt}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sum(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,keepDims:g}=a;return sumImpl(c,d,g,o)}const sumConfig={kernelName:Sum,backendName:"webgl",kernelFunc:sum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transpose(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{perm:d}=a,g=o,b=c.shape.length,$=new Array(b);for(let _e=0;_e<$.length;_e++)$[_e]=c.shape[d[_e]];let _;if(g.shouldExecuteOnCPU([c])){const et=g.texData.get(c.dataId).values,rt=transposeImplCPU(et,c.shape,c.dtype,d,$);_=g.makeTensorInfo($,c.dtype);const tt=g.texData.get(_.dataId);tt.values=rt}else _=transposeImpl(c,d,g);return _}const transposeConfig={kernelName:Transpose,backendName:"webgl",kernelFunc:transpose};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MATMUL_SHARED_DIM_THRESHOLD=1e3;function batchMatMulImpl({a:i,b:s,transposeA:o,transposeB:a,backend:c,bias:d=null,preluActivationWeights:g=null,leakyreluAlpha:b=0,activation:$=null}){const _=i.shape.length,_e=s.shape.length,et=o?i.shape[_-2]:i.shape[_-1],rt=a?s.shape[_e-1]:s.shape[_e-2],tt=o?i.shape[_-1]:i.shape[_-2],j=a?s.shape[_e-2]:s.shape[_e-1],nt=i.shape.slice(0,-2),st=s.shape.slice(0,-2),ot=sizeFromShape(nt),ut=sizeFromShape(st),ht=ot===ut||ot===1||ut===1;assert$2(_>=2&&_e>=2&&ht,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${nt}) and (${st}).`);const it=(ot>ut?i.shape.slice(0,-2):s.shape.slice(0,-2)).concat([tt,j]);assert$2(et===rt,()=>`Error in matMul: inner shapes (${et}) and (${rt}) of Tensors with shapes ${i.shape} and ${s.shape} and transposeA=${o} and transposeB=${a} must match.`);const yt=o?[ot,et,tt]:[ot,tt,et],ft=a?[ut,j,rt]:[ut,rt,j],bt=reshape({inputs:{x:i},backend:c,attrs:{shape:yt}}),Tt=reshape({inputs:{x:s},backend:c,attrs:{shape:ft}}),Ct=[bt,Tt],_t=Math.max(ot,ut),Ot=o?bt.shape[1]:bt.shape[2],kt=d!=null,Rt=g!=null,jt=$==="leakyrelu",Gt=$!=null?mapActivationToShaderProgram($,!0):null,Bt=kt||Rt||jt||Gt!=null;let zt;if((tt===1||j===1)&&Ot>MATMUL_SHARED_DIM_THRESHOLD&&Bt===!1){let Qt=bt,tn=Tt;o&&(Qt=transpose({inputs:{x:bt},backend:c,attrs:{perm:[0,2,1]}}),Ct.push(Qt)),a&&(tn=transpose({inputs:{x:Tt},backend:c,attrs:{perm:[0,2,1]}}),Ct.push(tn));const sn=j!==1,ln=j===1;let an=Qt;sn&&(an=reshape({inputs:{x:Qt},backend:c,attrs:{shape:[_t,Ot,1]}}),Ct.push(an));const Yt=j===1?2:1;let cn=tn;ln&&(cn=reshape({inputs:{x:tn},backend:c,attrs:{shape:[_t,1,Ot]}}),Ct.push(cn));const Wt=multiply$1({inputs:{a:an,b:cn},backend:c});zt=sum({inputs:{x:Wt},backend:c,attrs:{axis:Yt,keepDims:!0}}),Ct.push(Wt)}else{const Qt=upcastType(i.dtype,s.dtype),tn=new MatMulPackedProgram(yt,ft,[_t,tt,j],o,a,kt,Gt,Rt,jt),sn=[bt,Tt];if(d!=null&&sn.push(d),Rt&&sn.push(g),jt){const ln=c.makeTensorInfo([],"float32",createScalarValue(b,"float32"));sn.push(ln),Ct.push(ln)}zt=c.runWebGLProgram(tn,sn,Qt)}const Ut=reshape({inputs:{x:zt},backend:c,attrs:{shape:it}});Ct.push(zt);for(const Qt of Ct)c.disposeIntermediateTensorInfo(Qt);return Ut}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _fusedMatMul(i){const{inputs:s,backend:o,attrs:a}=i,{a:c,b:d,bias:g,preluActivationWeights:b}=s,{transposeA:$,transposeB:_,activation:_e,leakyreluAlpha:et}=a;return batchMatMulImpl({a:c,b:d,transposeA:$,transposeB:_,backend:o,bias:g,preluActivationWeights:b,leakyreluAlpha:et,activation:_e})}const _fusedMatMulConfig={kernelName:_FusedMatMul,backendName:"webgl",kernelFunc:_fusedMatMul};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ABS="return abs(x);";function abs(i){const{inputs:s,backend:o}=i,{x:a}=s;if(o.shouldExecuteOnCPU([a])&&a.dtype!=="complex64"){const d=o.texData.get(a.dataId),g=simpleAbsImplCPU(d.values);return o.makeTensorInfo(a.shape,a.dtype,g)}let c;return env().getBool("WEBGL_PACK_UNARY_OPERATIONS")?c=new UnaryOpPackedProgram(a.shape,ABS):c=new UnaryOpProgram(a.shape,ABS),o.runWebGLProgram(c,[a],a.dtype)}const absConfig={kernelName:Abs$1,backendName:"webgl",kernelFunc:abs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ACOS=CHECK_NAN_SNIPPET$2+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,acos=unaryKernelFunc({opSnippet:ACOS}),acosConfig={kernelName:Acos,backendName:"webgl",kernelFunc:acos};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ACOSH=CHECK_NAN_SNIPPET$2+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,acosh=unaryKernelFunc({opSnippet:ACOSH}),acoshConfig={kernelName:Acosh,backendName:"webgl",kernelFunc:acosh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ADD="return a + b;",addKernelFunc=binaryKernelFunc({opSnippet:ADD,packedOpSnippet:ADD,supportsComplex:!0,cpuKernelImpl:addImplCPU}),addConfig={kernelName:Add$2,backendName:"webgl",kernelFunc:addKernelFunc};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AddNProgram{constructor(s,o){this.outputShape=[],this.outputShape=s,this.variableNames=o.map((d,g)=>`T${g}`);const a=[];this.variableNames.forEach(d=>{a.push(`float v${d} = get${d}AtOutCoords();`)});const c=this.variableNames.map(d=>`v${d}`).join(" + ");this.userCode=`
      void main() {
        ${a.join(`
        `)}

        float result = ${c};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AddNPackedProgram{constructor(s,o){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.variableNames=o.map((d,g)=>`T${g}`);const a=[];this.variableNames.forEach(d=>{a.push(`vec4 v${d} = get${d}AtOutCoords();`)});const c=this.variableNames.map(d=>`v${d}`).join(" + ");this.userCode=`
      void main() {
        ${a.join(`
        `)}

        vec4 result = ${c};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function addN(i){const{inputs:s,backend:o}=i,a=s;if(a.length===1)return identity({inputs:{x:a[0]},backend:o});if(a.length>env().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const $=Math.floor(a.length/2),_=addN({inputs:a.slice(0,$),backend:o}),_e=addN({inputs:a.slice($),backend:o});return addN({inputs:[_,_e],backend:o})}const c=a.map($=>$.dtype).reduce(($,_)=>upcastType($,_)),d=a.map($=>$.shape),b=env().getBool("WEBGL_PACK")?new AddNPackedProgram(a[0].shape,d):new AddNProgram(a[0].shape,d);return o.runWebGLProgram(b,a,c)}const addNConfig={kernelName:AddN,backendName:"webgl",kernelFunc:addN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function all(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,keepDims:g}=a,b=c.shape.length,$=parseAxisParam(d,c.shape);let _=$;const _e=getAxesPermutation(_,b);let et=c;_e!=null&&(et=transpose({inputs:{x:c},backend:o,attrs:{perm:_e}}),_=getInnerMostAxes(_.length,b)),assertAxesAreInnerMostDims("all",_,b);const[rt,tt]=computeOutAndReduceShapes(et.shape,_),j=sizeFromShape(tt),nt=reshape({inputs:{x:et},backend:o,attrs:{shape:[-1,j]}}),st=reduce(nt,nt.dtype,"all",o);let ot;if(g){const ut=expandShapeToKeepDim(rt,$);ot=reshape({inputs:{x:st},backend:o,attrs:{shape:ut}})}else ot=reshape({inputs:{x:st},backend:o,attrs:{shape:rt}});return o.disposeIntermediateTensorInfo(nt),o.disposeIntermediateTensorInfo(st),_e!=null&&o.disposeIntermediateTensorInfo(et),ot}const allConfig={kernelName:All,backendName:"webgl",kernelFunc:all};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function any(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,keepDims:g}=a,b=c.shape.length,$=parseAxisParam(d,c.shape);let _=$;const _e=getAxesPermutation(_,b);let et=c;_e!=null&&(et=transpose({inputs:{x:c},backend:o,attrs:{perm:_e}}),_=getInnerMostAxes(_.length,b)),assertAxesAreInnerMostDims("any",_,b);const[rt,tt]=computeOutAndReduceShapes(et.shape,_),j=sizeFromShape(tt),nt=reshape({inputs:{x:et},backend:o,attrs:{shape:[-1,j]}}),st=reduce(nt,nt.dtype,"any",o);let ot;if(g){const ut=expandShapeToKeepDim(rt,$);ot=reshape({inputs:{x:st},backend:o,attrs:{shape:ut}})}else ot=reshape({inputs:{x:st},backend:o,attrs:{shape:rt}});return o.disposeIntermediateTensorInfo(nt),o.disposeIntermediateTensorInfo(st),_e!=null&&o.disposeIntermediateTensorInfo(et),ot}const anyConfig={kernelName:Any,backendName:"webgl",kernelFunc:any};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ArgMinMaxProgram{constructor(s,o,a){this.variableNames=["A"];const{windowSize:c,batchSize:d,outSize:g}=s;a||this.variableNames.push("bestIndicesA"),this.outputShape=[d,g];const b=o==="max"?">":"<",$=a?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${c};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${c}; i++) {
          int inIdx = ${$};
          float candidate = getA(batch, inIdx);
          if (candidate ${b} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ArgMinMaxPackedProgram{constructor(s,o,a,c){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,assert$2(s.length>2,()=>`Packed arg${a.charAt(0).toUpperCase()+a.slice(1)} supports only inputs with rank above 2.`);const d=s[s.length-1],g=Math.ceil(d/o);this.outputShape=s.slice(0,-1),g>1&&this.outputShape.push(g),c||this.variableNames.push("bestIndicesA");const b=this.outputShape,$=b.length,_=getCoordsDataType($),_e=getChannels("coords",$);let et,rt;if(g===1){rt=$+1;const bt=getCoordsDataType(rt);et=`
        ${bt} sourceLocR = ${bt}(${_e.join()}, 0);
        ++${_e[$-1]};
        ${bt} sourceLocG = ${bt}(${_e.join()}, 0);
        ++${_e[$-2]};
        ${bt} sourceLocA = ${bt}(${_e.join()}, 0);
        --${_e[$-1]};
        ${bt} sourceLocB = ${bt}(${_e.join()}, 0);
        --${_e[$-2]};`}else rt=$,et=`
        ${_} sourceLocR = coords;
        ++${_e[$-1]};
        ${_} sourceLocG = coords;
        ++${_e[$-2]};
        ${_} sourceLocA = coords;
        --${_e[$-1]};
        ${_} sourceLocB = coords;
        --${_e[$-2]};`;const tt=["x","y","z","w","u","v"].slice(0,rt),j="."+tt[rt-1],nt=tt.map(bt=>"int "+bt),st=getChannels("sourceLocR",rt-1).concat("inIdx.r"),ot=getChannels("sourceLocG",rt-1).concat("inIdx.g"),ut=getChannels("sourceLocB",rt-1).concat("inIdx.b"),ht=getChannels("sourceLocA",rt-1).concat("inIdx.a"),pt=a==="max"?"greaterThan":"lessThan",it=c?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${st.join()}),
                             getBestIndicesAChannel(${ot.join()}),
                             getBestIndicesAChannel(${ut.join()}),
                             getBestIndicesAChannel(${ht.join()})));`,yt=`vec4(
            getAChannel(${st.join()}),
            hasNextCol ? getAChannel(${ot.join()}) : 0.,
            hasNextRow ? getAChannel(${ut.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${ht.join()}) : 0.)`,ft=c?"":`
      float getBestIndicesAChannel(${nt.join()}) {
        return getChannel(getBestIndicesA(${tt.join()}),
                                          vec2(${tt.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${nt.join()}) {
        return getChannel(getA(${tt.join()}),
                               vec2(${tt.slice(-2).join()}));
      }
      ${ft}
      void main() {
        ${_} coords = getOutputCoords();
        bool hasNextCol = ${_e[$-1]} < ${b[$-1]-1};
        bool hasNextRow = ${_e[$-2]} < ${b[$-2]-1};
        ${et}
        ivec4 srcIdx = ivec4(sourceLocR${j}, sourceLocG${j},
          sourceLocB${j}, sourceLocA${j}) * ${o};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${yt};

        for (int i = 0; i < ${o}; i++) {
          inIdx = srcIdx;
          ${it}
          vec4 candidate = ${yt};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${pt}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argReduce(i,s,o,a=null){let c=s.shape[0],d=s.shape[1];a!=null&&(c=a.shape[0],d=a.shape[1]);const g=computeOptimalWindowSize(d),b={windowSize:g,inSize:d,batchSize:c,outSize:Math.ceil(d/g)},$=new ArgMinMaxProgram(b,o,a==null),_=[s];a!=null&&_.push(a);const _e=i.runWebGLProgram($,_,"int32");if(_e.shape[1]===1)return _e;const et=argReduce(i,s,o,_e);return i.disposeIntermediateTensorInfo(_e),et}function argReducePacked(i,s,o,a=null){const c=a!=null?a.shape:s.shape,d=c[c.length-1],g=computeOptimalWindowSize(d),b=new ArgMinMaxPackedProgram(c,g,o,a==null),$=a==null?[s]:[s,a],_=i.runWebGLProgram(b,$,"int32");if(_.shape.length===s.shape.length){const _e=argReducePacked(i,s,o,_);return i.disposeIntermediateTensorInfo(_),_e}return _}function argMinMaxReduce(i,s,o,a){const c=[o];if(assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),c,s.shape.length),!env().getBool("WEBGL_PACK_REDUCE")||s.shape.length<=2){const d=[],[g,b]=computeOutAndReduceShapes(s.shape,c),$=sizeFromShape(b),_=reshape({inputs:{x:s},backend:i,attrs:{shape:[-1,$]}});d.push(_);const _e=argReduce(i,_,a);d.push(_e);const et=reshape({inputs:{x:_e},backend:i,attrs:{shape:g}});return d.forEach(rt=>i.disposeIntermediateTensorInfo(rt)),et}return argReducePacked(i,s,a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMax(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d}=a;let g=parseAxisParam(d,c.shape);const b=getAxesPermutation(g,c.shape.length);let $=c;const _=[];b!=null&&($=transpose({inputs:{x:c},backend:o,attrs:{perm:b}}),_.push($),g=getInnerMostAxes(g.length,$.shape.length)),assertAxesAreInnerMostDims("argMax",[g[0]],$.shape.length);const _e=argMinMaxReduce(o,$,g[0],"max");return _.forEach(et=>o.disposeIntermediateTensorInfo(et)),_e}const argMaxConfig={kernelName:ArgMax,backendName:"webgl",kernelFunc:argMax};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMin(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d}=a;let g=parseAxisParam(d,c.shape);const b=getAxesPermutation(g,c.shape.length);let $=c;const _=[];b!=null&&($=transpose({inputs:{x:c},backend:o,attrs:{perm:b}}),_.push($),g=getInnerMostAxes(g.length,$.shape.length)),assertAxesAreInnerMostDims("argMin",[g[0]],$.shape.length);const _e=argMinMaxReduce(o,$,g[0],"min");return _.forEach(et=>o.disposeIntermediateTensorInfo(et)),_e}const argMinConfig={kernelName:ArgMin,backendName:"webgl",kernelFunc:argMin};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ASIN=CHECK_NAN_SNIPPET$2+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,asin=unaryKernelFunc({opSnippet:ASIN}),asinConfig={kernelName:Asin,backendName:"webgl",kernelFunc:asin};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ASINH=CHECK_NAN_SNIPPET$2+"return log(x + sqrt(x * x + 1.0));",asinh=unaryKernelFunc({opSnippet:ASINH}),asinhConfig={kernelName:Asinh,backendName:"webgl",kernelFunc:asinh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ATAN=CHECK_NAN_SNIPPET$2+`
  return atan(x);
`,atan=unaryKernelFunc({opSnippet:ATAN}),atanConfig={kernelName:Atan,backendName:"webgl",kernelFunc:atan};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ATAN2=CHECK_NAN_SNIPPET_BINARY+`
  return atan(a, b);
`,ATAN2_PACKED=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+CHECK_NAN_SNIPPET_BINARY_PACKED+`
  return result;
`,atan2=binaryKernelFunc({opSnippet:ATAN2,packedOpSnippet:ATAN2_PACKED}),atan2Config={kernelName:Atan2,backendName:"webgl",kernelFunc:atan2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ATANH=CHECK_NAN_SNIPPET$2+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,atanh=unaryKernelFunc({opSnippet:ATANH}),atanhConfig={kernelName:Atanh,backendName:"webgl",kernelFunc:atanh};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pool2DProgram{constructor(s,o,a,c=!1,d=!1){if(this.variableNames=["x"],o==="avg"&&a)throw new Error("Cannot compute positions for average pool.");const g=s.filterWidth,b=s.strideHeight,$=s.strideWidth,_=s.dilationHeight,_e=s.dilationWidth,et=s.effectiveFilterHeight,rt=s.effectiveFilterWidth,tt=s.padInfo.top,j=s.padInfo.left;this.outputShape=s.outShape;const nt=o==="avg",st=`((batch  * ${s.inHeight} + xR) * ${s.inWidth} + xC) * ${s.inChannels} + d`,ot=`(xR * ${s.inWidth} + xC) * ${s.inChannels} + d`;let ut="0.0";if(nt||(ut="-1.0 / 1e-20"),a){const bt=">=";this.userCode=`
        const ivec2 strides = ivec2(${b}, ${$});
        const ivec2 pads = ivec2(${tt}, ${j});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${et};
              wR += ${_}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${s.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${rt};
                wC += ${_e}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${s.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${bt} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${c?d?st:ot:`wR * ${rt} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const ht="max";let pt=`${o}(${o}(${o}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;o==="avg"&&(pt="avgValue / count");const it=Math.floor(g/4)*4,yt=g%4,ft=`
      if (${nt}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${ht}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${b}, ${$});
      const ivec2 pads = ivec2(${tt}, ${j});
      const float initializationValue = ${ut};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${s.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${ut});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${et};
            wR += ${_}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${s.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${it}; wC += 4) {
            int xC = xCCorner + wC * ${_e};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${_e}, d),
              getValue(batch, xR, xC + 2 * ${_e}, d),
              getValue(batch, xR, xC + 3 * ${_e}, d)
            );

            ${ft}
          }

          int xC = xCCorner + ${it};
          if (${yt===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${ft}
          } else if (${yt===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${_e}, d),
              initializationValue,
              initializationValue
            );

            ${ft}
          } else if (${yt===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${_e}, d),
              getValue(batch, xR, xC + 2 * ${_e}, d),
              initializationValue
            );

            ${ft}
          }
        }
        setOutput(${pt});
      }
    `}}class Pool3DProgram{constructor(s,o,a,c=!1,d=!1){if(this.variableNames=["x"],o==="avg"&&a)throw new Error("Cannot compute positions for average pool.");const g=s.filterWidth,b=s.strideDepth,$=s.strideHeight,_=s.strideWidth,_e=s.dilationDepth,et=s.dilationHeight,rt=s.dilationWidth,tt=s.effectiveFilterDepth,j=s.effectiveFilterHeight,nt=s.effectiveFilterWidth,st=s.padInfo.front,ot=s.padInfo.top,ut=s.padInfo.left;this.outputShape=s.outShape;const ht=o==="avg";let pt="0.0";if(ht||(pt="-1.0 / 1e-20"),a){const Ct=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${b}, ${$}, ${_});
        const ivec3 pads = ivec3(${st}, ${ot}, ${ut});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${tt};
              wD += ${_e}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${s.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${j};
                wR += ${et}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${s.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${nt};
                  wC += ${rt}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${s.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${Ct} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${c?d?`(((batch * ${s.inDepth} + xD) * ${s.inHeight} + xR) * ${s.inWidth} + xC) * ${s.inChannels} + ch`:`((xD * ${s.inHeight} + xR) * ${s.inWidth} + xC) * ${s.inChannels} + ch`:`wD * ${j} * ${nt} +
                      wR * ${nt} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const it="max";let yt=`${o}(${o}(${o}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;o==="avg"&&(yt="avgValue / count");const ft=Math.floor(g/4)*4,bt=g%4,Tt=`
      if (${ht}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${it}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${b}, ${$}, ${_});
      const ivec3 pads = ivec3(${st}, ${ot}, ${ut});
      const float initializationValue = ${pt};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${s.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${pt});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${tt};
            wD += ${_e}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${s.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${j};
            wR += ${et}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${s.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${ft}; wC += 4) {
              int xC = xCCorner + wC * ${rt};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${rt}, ch),
                getValue(batch, xD, xR, xC + 2 * ${rt}, ch),
                getValue(batch, xD, xR, xC + 3 * ${rt}, ch)
              );

              ${Tt}
            }

            int xC = xCCorner + ${ft};
            if (${bt===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${Tt}
            } else if (${bt===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${rt}, ch),
                initializationValue,
                initializationValue
              );

              ${Tt}
            } else if (${bt===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${rt}, ch),
                getValue(batch, xD, xR, xC + 2 * ${rt}, ch),
                initializationValue
              );

              ${Tt}
            }
          }
          setOutput(${yt});
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s;assertNotComplex(c,"avgPool");const{filterSize:d,strides:g,pad:b,dimRoundingMode:$}=a,_=1;assert$2(eitherStridesOrDilationsAreOne(g,_),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${g} and dilations '${_}'`);const _e=computePool2DInfo(c.shape,d,g,_,b,$);if(_e.filterWidth===1&&_e.filterHeight===1&&arraysEqual(_e.inShape,_e.outShape))return identity({inputs:{x:c},backend:o});const et=new Pool2DProgram(_e,"avg",!1);return o.runWebGLProgram(et,[c],"float32")}const avgPoolConfig={kernelName:AvgPool,backendName:"webgl",kernelFunc:avgPool};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3D(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{filterSize:d,strides:g,pad:b,dimRoundingMode:$,dataFormat:_}=a,_e=[1,1,1],et=computePool3DInfo(c.shape,d,g,_e,b,$,_),rt=new Pool3DProgram(et,"avg",!1);return o.runWebGLProgram(rt,[c],"float32")}const avgPool3DConfig={kernelName:AvgPool3D,backendName:"webgl",kernelFunc:avgPool3D};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AvgPool2DBackpropProgram{constructor(s){this.variableNames=["dy"],this.outputShape=s.inShape;const o=s.filterHeight,a=s.filterWidth,c=s.strideHeight,d=s.strideWidth,g=s.dilationHeight,b=s.dilationWidth,$=s.effectiveFilterHeight,_=s.effectiveFilterWidth,_e=$-1-s.padInfo.top,et=_-1-s.padInfo.left,rt=1/(o*a);this.userCode=`
      const ivec2 pads = ivec2(${_e}, ${et});
      const float avgMultiplier = float(${rt});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${$};
            wR += ${g}) {
          float dyR = float(dyRCorner + wR) / ${c}.0;

          if (dyR < 0.0 || dyR >= ${s.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${_};
            wC+= ${b}) {
            float dyC = float(dyCCorner + wC) / ${d}.0;

            if (dyC < 0.0 || dyC >= ${s.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class AvgPool3DBackpropProgram{constructor(s){this.variableNames=["dy"],this.outputShape=s.inShape;const o=s.filterDepth,a=s.filterHeight,c=s.filterWidth,d=s.strideDepth,g=s.strideHeight,b=s.strideWidth,$=s.dilationDepth,_=s.dilationHeight,_e=s.dilationWidth,et=s.effectiveFilterDepth,rt=s.effectiveFilterHeight,tt=s.effectiveFilterWidth,j=et-1-s.padInfo.front,nt=rt-1-s.padInfo.top,st=tt-1-s.padInfo.left,ot=1/(o*a*c);this.userCode=`
      const ivec3 pads = ivec3(${j}, ${nt}, ${st});
      const float avgMultiplier = float(${ot});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${et};
            wD += ${$}) {
          float dyD = float(dyDCorner + wD) / ${d}.0;

          if (dyD < 0.0 || dyD >= ${s.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${rt};
              wR += ${_}) {
            float dyR = float(dyRCorner + wR) / ${g}.0;

            if (dyR < 0.0 || dyR >= ${s.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${tt};
                wC += ${_e}) {
              float dyC = float(dyCCorner + wC) / ${b}.0;

              if (dyC < 0.0 || dyC >= ${s.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3DGrad(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,input:d}=s,g=d,{filterSize:b,strides:$,pad:_,dimRoundingMode:_e}=a,et=[1,1,1],rt=computePool3DInfo(g.shape,b,$,et,_,_e),tt=new AvgPool3DBackpropProgram(rt);return o.runWebGLProgram(tt,[c],g.dtype)}const avgPoolGrad3DConfig={kernelName:AvgPool3DGrad,backendName:"webgl",kernelFunc:avgPool3DGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPoolGrad(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,input:d}=s,g=d;assertNotComplex([c,d],"avgPoolGrad");const{filterSize:b,strides:$,pad:_}=a,_e=computePool2DInfo(g.shape,b,$,1,_),et=new AvgPool2DBackpropProgram(_e);return o.runWebGLProgram(et,[c],g.dtype)}const avgPoolGradConfig={kernelName:AvgPoolGrad,backendName:"webgl",kernelFunc:avgPoolGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchMatMul(i){const{inputs:s,backend:o,attrs:a}=i,{a:c,b:d}=s,{transposeA:g,transposeB:b}=a;return batchMatMulImpl({a:c,b:d,transposeA:g,transposeB:b,backend:o})}const batchMatMulConfig={kernelName:BatchMatMul,backendName:"webgl",kernelFunc:batchMatMul};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BatchNormProgram{constructor(s,o,a,c,d,g){this.outputShape=[],this.variableNames=["x","mean","variance"],assertAndGetBroadcastShape(s,o),assertAndGetBroadcastShape(s,a);let b="0.0";c!=null&&(assertAndGetBroadcastShape(s,c),this.variableNames.push("offset"),b="getOffsetAtOutCoords()");let $="1.0";d!=null&&(assertAndGetBroadcastShape(s,d),this.variableNames.push("scale"),$="getScaleAtOutCoords()"),this.outputShape=s,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${b};
        float scale = ${$};
        float inv = scale * inversesqrt(variance + float(${g}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BatchNormPackedProgram{constructor(s,o,a,c,d,g){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],assertAndGetBroadcastShape(s,o),assertAndGetBroadcastShape(s,a);let b="vec4(0.0)";c!=null&&(assertAndGetBroadcastShape(s,c),this.variableNames.push("offset"),b="getOffsetAtOutCoords()");let $="vec4(1.0)";d!=null&&(assertAndGetBroadcastShape(s,d),this.variableNames.push("scale"),$="getScaleAtOutCoords()"),this.outputShape=s,this.userCode=`
      void main() {
        vec4 offset = ${b};
        vec4 scale = ${$};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${g}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const batchNorm=({inputs:i,backend:s,attrs:o})=>{const{x:a,mean:c,variance:d,offset:g,scale:b}=i;assert$2(c.shape.length===d.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),assert$2(g==null||c.shape.length===g.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),assert$2(b==null||c.shape.length===b.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:$}=o;$==null&&($=.001);const _=[a,c,d];let _e=null;g!=null&&(_e=g.shape,_.push(g));let et=null;b!=null&&(et=b.shape,_.push(b));const rt=env().getBool("WEBGL_PACK_NORMALIZATION")?new BatchNormPackedProgram(a.shape,c.shape,d.shape,_e,et,$):new BatchNormProgram(a.shape,c.shape,d.shape,_e,et,$);return s.runWebGLProgram(rt,_,_[0].dtype)},batchNormConfig={kernelName:FusedBatchNorm,backendName:"webgl",kernelFunc:batchNorm};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SliceProgram{constructor(s){this.variableNames=["source"],this.outputShape=s,this.rank=s.length;const o=getCoordsDataType(this.rank),a=`uniform int start[${this.rank}];`,c=getCoords$1(this.rank);let d;const g=s.map((b,$)=>`sourceLoc.${coords[$]} = start[${$}] + coords.${coords[$]};`);d=`
        ${o} sourceLoc;
        ${o} coords = getOutputCoords();
        ${g.join(`
`)}
      `,this.userCode=`
      ${a}
      void main() {
        ${d}
        setOutput(getSource(${c}));
      }
    `}getCustomSetupFunc(s){if(s.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${s.length})`);return(o,a)=>{this.startLoc==null&&(this.startLoc=o.getUniformLocationNoThrow(a,"start"),this.startLoc==null)||o.gl.uniform1iv(this.startLoc,s)}}}const coords=["x","y","z","w","u","v"];function getCoords$1(i){if(i===1)return"sourceLoc";if(i<=6)return coords.slice(0,i).map(s=>"sourceLoc."+s).join(",");throw Error(`Slicing for rank ${i} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SlicePackedProgram{constructor(s){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.rank=s.length;const o=getCoordsDataType(this.rank),a=getChannels("coords",this.rank),c=getChannels("sourceLoc",this.rank),d=this.rank===1?"sourceLoc":`vec2(${c.slice(-2).join()})`,g=`getChannel(getSource(${c.join()}), ${d})`,b=`
      result.x = ${g};
      if (++${a[this.rank-1]} < ${s[this.rank-1]}) {
        ++${c[this.rank-1]};
        result.y = ${g};
        --${c[this.rank-1]};
      }
    `,$=this.rank===1?"":`
      --${a[this.rank-1]};
      if (++${a[this.rank-2]} < ${s[this.rank-2]}) {
        ++${c[this.rank-2]};
        result.z = ${g};
        if (++${a[this.rank-1]} < ${s[this.rank-1]}) {
          ++${c[this.rank-1]};
          result.w = ${g};
        }
      }
    `,_=this.rank<=4?`sourceLoc = coords +
            ${o}(${s.map((_e,et)=>`start[${et}]`).join()});`:s.map((_e,et)=>`${c[et]} = ${a[et]} + start[${et}];`).join(`
`);this.userCode=`
      uniform int start[${this.rank}];
      void main() {
        ${o} coords = getOutputCoords();
        ${o} sourceLoc;
        ${_}
        vec4 result = vec4(0.);
        ${b}
        ${$}
        setOutput(result);
      }
    `}getCustomSetupFunc(s){if(s.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${s.length})`);return(o,a)=>{this.startLoc==null&&(this.startLoc=o.getUniformLocationNoThrow(a,"start"),this.startLoc==null)||o.gl.uniform1iv(this.startLoc,s)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function shallowSlice(i,s,o,a){const c=a.texData.get(i.dataId),d=a.makeTensorInfo(o,i.dtype),g=a.texData.get(d.dataId);Object.assign(g,c),g.complexParentRefCount=0,g.refCount=1,g.shape=o,g.dtype=i.dtype;let b=computeFlatOffset(s,computeStrides(i.shape));c.slice&&(b+=c.slice.flatOffset),g.slice={flatOffset:b,origDataId:c.slice&&c.slice.origDataId||i.dataId};const $=a.dataRefCount.get(g.slice.origDataId)||1;return a.dataRefCount.set(g.slice.origDataId,$+1),d}function slice(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{begin:d,size:g}=a,[b,$]=parseSliceParams(c,d,g);if(assertParamsValid(c,b,$),sizeFromShape($)===0)return o.makeTensorInfo($,c.dtype,[]);if(o.shouldExecuteOnCPU([c])||c.dtype==="string"){const et=o.texData.get(c.dataId),rt=sliceImplCPU(et.values,b,$,c.shape,c.dtype);return o.makeTensorInfo($,c.dtype,rt)}const{isPacked:_}=o.texData.get(c.dataId),_e=isSliceContinous(c.shape,b,$);if(_||!_e){const et=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new SlicePackedProgram($):new SliceProgram($),rt=et.getCustomSetupFunc(b);return o.runWebGLProgram(et,[c],c.dtype,rt)}return o.uploadToGPU(c.dataId),shallowSlice(c,b,$,o)}const sliceConfig={kernelName:Slice,backendName:"webgl",kernelFunc:slice};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const batchToSpaceND=i=>{const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{blockShape:d,crops:g}=a;assert$2(c.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const b=d.reduce((ut,ht)=>ut*ht),$=getReshaped(c.shape,d,b),_=getPermuted($.length,d.length),_e=getReshapedPermuted(c.shape,d,b),et=getSliceBeginCoords(g,d.length),rt=getSliceSize(_e,g,d.length),tt=[],j=reshape({inputs:{x:c},backend:o,attrs:{shape:$}}),nt=transpose({inputs:{x:j},backend:o,attrs:{perm:_}}),st=reshape({inputs:{x:nt},backend:o,attrs:{shape:_e}}),ot=slice({inputs:{x:st},backend:o,attrs:{begin:et,size:rt}});return tt.push(j),tt.push(nt),tt.push(st),tt.forEach(ut=>o.disposeIntermediateTensorInfo(ut)),ot},batchToSpaceNDConfig={kernelName:BatchToSpaceND,backendName:"webgl",kernelFunc:batchToSpaceND};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bincount(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,weights:d}=s,{size:g}=a,b=o.readSync(c.dataId),$=o.readSync(d.dataId),_=bincountImplCPU(b,$,d.dtype,d.shape,g);return o.makeTensorInfo([g],d.dtype,_)}const bincountConfig={kernelName:Bincount,backendName:"webgl",kernelFunc:bincount};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NOT_EQUAL="return float(a != b);",notEqual=binaryKernelFunc({opSnippet:NOT_EQUAL,dtype:"bool"}),notEqualConfig={kernelName:NotEqual,backendName:"webgl",kernelFunc:notEqual};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function real(i){const{inputs:s,backend:o}=i,{input:a}=s,c=o.texData.get(a.dataId);return identity({inputs:{x:c.complexTensorInfos.real},backend:o})}const realConfig={kernelName:Real,backendName:"webgl",kernelFunc:real};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TO_INT="return float(int(x));";function int(i,s){const o=new UnaryOpProgram(i.shape,TO_INT),a=s.runWebGLProgram(o,[i],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cast(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{dtype:d}=a;if(d==="complex64"){if(c.dtype==="complex64")return identity({inputs:{x:c},backend:o});const g=zeros$2(c.shape),b=cast({inputs:{x:c},backend:o,attrs:{dtype:"float32"}}),$=complex({inputs:{real:b,imag:g},backend:o});return g.dispose(),o.disposeIntermediateTensorInfo(b),$}if(c.dtype==="complex64"){const g=real({inputs:{input:c},backend:o}),b=cast({inputs:{x:g},backend:o,attrs:{dtype:d}});return o.disposeIntermediateTensorInfo(g),b}if(!hasEncodingLoss(c.dtype,d)){const g=identity({inputs:{x:c},backend:o});return{dataId:g.dataId,shape:g.shape,dtype:d}}if(d==="int32")return int(c,o);if(d==="bool"){const g=o.makeTensorInfo([],"bool",getTypedArrayFromDType("bool",1)),$=notEqual({inputs:{a:c,b:g},backend:o});return o.disposeIntermediateTensorInfo(g),$}throw new Error(`Error in Cast: failed to cast ${c.dtype} to ${d}`)}const castConfig={kernelName:Cast,backendName:"webgl",kernelFunc:cast};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CEIL="return ceil(x);",ceil=unaryKernelFunc({opSnippet:CEIL,packedOpSnippet:CEIL,cpuKernelImpl:ceilImplCPU}),ceilConfig={kernelName:Ceil,backendName:"webgl",kernelFunc:ceil};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ClipProgram{constructor(s){this.variableNames=["A"],this.outputShape=s,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}getCustomSetupFunc(s,o){return(a,c)=>{this.minLoc==null&&(this.minLoc=a.getUniformLocationNoThrow(c,"minVal"),this.maxLoc=a.getUniformLocationNoThrow(c,"maxVal")),a.gl.uniform1f(this.minLoc,s),a.gl.uniform1f(this.maxLoc,o)}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ClipPackedProgram{constructor(s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}getCustomSetupFunc(s,o){return(a,c)=>{this.minLoc==null&&(this.minLoc=a.getUniformLocationNoThrow(c,"minVal"),this.maxLoc=a.getUniformLocationNoThrow(c,"maxVal")),a.gl.uniform1f(this.minLoc,s),a.gl.uniform1f(this.maxLoc,o)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function clipByValue(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{clipValueMin:d,clipValueMax:g}=a;let b;env().getBool("WEBGL_PACK_CLIP")?b=new ClipPackedProgram(c.shape):b=new ClipProgram(c.shape);const $=b.getCustomSetupFunc(d,g);return o.runWebGLProgram(b,[c],c.dtype,$)}const clipByValueConfig={kernelName:ClipByValue,backendName:"webgl",kernelFunc:clipByValue};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ComplexAbsProgram{constructor(s){this.variableNames=["real","imag"],this.outputShape=s,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function makeComplexComponentTensorInfo(i,s){return{dataId:s.dataId,dtype:s.dtype,shape:i.shape}}function complexAbs(i){const{inputs:s,backend:o}=i,{x:a}=s,c=o.texData.get(a.dataId),d=new ComplexAbsProgram(a.shape),g=[makeComplexComponentTensorInfo(a,c.complexTensorInfos.real),makeComplexComponentTensorInfo(a,c.complexTensorInfos.imag)];return o.runWebGLProgram(d,g,g[0].dtype)}const complexAbsConfig={kernelName:ComplexAbs,backendName:"webgl",kernelFunc:complexAbs};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ConcatProgram{constructor(s){this.outputShape=[],this.outputShape=computeOutShape$1(s,1),this.variableNames=s.map((g,b)=>`T${b}`);const o=new Array(s.length-1);o[0]=s[0][1];for(let g=1;g<o.length;g++)o[g]=o[g-1]+s[g][1];const a=[`if (yC < ${o[0]}) setOutput(getT0(yR, yC));`];for(let g=1;g<o.length;g++){const b=o[g-1];a.push(`else if (yC < ${o[g]}) setOutput(getT${g}(yR, yC-${b}));`)}const c=o.length,d=o[o.length-1];a.push(`else setOutput(getT${c}(yR, yC-${d}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${a.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ConcatPackedProgram{constructor(s,o){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=computeOutShape$1(s,o);const a=this.outputShape,c=a.length,d=getCoordsDataType(c),g=getChannels("coords",c),b=["x","y","z","w","u","v"].slice(0,c);this.variableNames=s.map((nt,st)=>`T${st}`);const $=new Array(s.length-1);$[0]=s[0][o];for(let nt=1;nt<$.length;nt++)$[nt]=$[nt-1]+s[nt][o];const _=b[o],_e=b.slice(-2),et=b.join();let rt=`if (${_} < ${$[0]}) {
        return getChannel(
            getT0(${et}), vec2(${_e.join()}));
        }`;for(let nt=1;nt<$.length;nt++){const st=$[nt-1];rt+=`
        if (${_} < ${$[nt]}  && ${_} >= ${$[nt-1]}) {
          return getChannel(
            getT${nt}(${shiftedChannels(b,_,st)}),
            vec2(${shiftedChannels(_e,_,st)}));
        }`}const tt=$.length,j=$[$.length-1];rt+=`
        return getChannel(
          getT${tt}(${shiftedChannels(b,_,j)}),
          vec2(${shiftedChannels(_e,_,j)}));`,this.userCode=`
      float getValue(${b.map(nt=>"int "+nt)}) {
        ${rt}
      }

      void main() {
        ${d} coords = getOutputCoords();
        vec4 result = vec4(getValue(${g}), 0., 0., 0.);

        ${g[c-1]} = ${g[c-1]} + 1;
        if (${g[c-1]} < ${a[c-1]}) {
          result.g = getValue(${g});
        }

        ${g[c-2]} = ${g[c-2]} + 1;
        if (${g[c-2]} < ${a[c-2]}) {
          result.a = getValue(${g});
        }

        ${g[c-1]} = ${g[c-1]} - 1;
        if (${g[c-2]} < ${a[c-2]} &&
            ${g[c-1]} < ${a[c-1]}) {
          result.b = getValue(${g});
        }
        setOutput(result);
      }
    `}}function shiftedChannels(i,s,o){const a=i.indexOf(s);return i.map((d,g)=>g===a?`${d} - ${o}`:d).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function imag(i){const{inputs:s,backend:o}=i,{input:a}=s,c=o.texData.get(a.dataId);return identity({inputs:{x:c.complexTensorInfos.imag},backend:o})}const imagConfig={kernelName:Imag,backendName:"webgl",kernelFunc:imag};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concatImpl(i,s,o){const a=i[0].dtype;if(a==="complex64"){const _=i.map(j=>real({inputs:{input:j},backend:o})),_e=i.map(j=>imag({inputs:{input:j},backend:o})),et=concatImpl(_,s,o),rt=concatImpl(_e,s,o),tt=complex({inputs:{real:et,imag:rt},backend:o});return _.forEach(j=>o.disposeIntermediateTensorInfo(j)),_e.forEach(j=>o.disposeIntermediateTensorInfo(j)),o.disposeIntermediateTensorInfo(et),o.disposeIntermediateTensorInfo(rt),tt}if(a==="string"){const{tensors2D:_,outShape:_e}=computeTensors2D(i,s,o),et=_.map(st=>({vals:o.readSync(st.dataId),shape:st.shape})),rt=_[0].shape[0]===1,tt=concatImplCPU(et,_e,a,rt),j=computeOutShape$1(i.map(st=>st.shape),s),nt=o.makeTensorInfo(j,a,tt);return _.forEach(st=>o.disposeIntermediateTensorInfo(st)),nt}if(i.length>env().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const _=Math.floor(i.length/2),_e=concatImpl(i.slice(0,_),s,o),et=concatImpl(i.slice(_),s,o),rt=concatImpl([_e,et],s,o);return o.disposeIntermediateTensorInfo(_e),o.disposeIntermediateTensorInfo(et),rt}if(env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1){const _=new ConcatPackedProgram(i.map(_e=>_e.shape),s);return o.runWebGLProgram(_,i,a)}const{tensors2D:c,outShape:d}=computeTensors2D(i,s,o),g=new ConcatProgram(c.map(_=>_.shape)),b=o.runWebGLProgram(g,c,a);c.forEach(_=>o.disposeIntermediateTensorInfo(_));const $=reshape({inputs:{x:b},attrs:{shape:d},backend:o});return o.disposeIntermediateTensorInfo(b),$}function computeTensors2D(i,s,o){const a=computeOutShape$1(i.map(d=>d.shape),s);return{tensors2D:i.map(d=>reshape({inputs:{x:d},attrs:{shape:[-1,sizeFromShape(d.shape.slice(s))]},backend:o})),outShape:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concat(i){const{inputs:s,backend:o,attrs:a}=i,{axis:c}=a,d=parseAxisParam(c,s[0].shape)[0],g=computeOutShape$1(s.map(_=>_.shape),d);if(sizeFromShape(g)===0)return o.makeTensorInfo(g,s[0].dtype,[]);const b=s.filter(_=>sizeFromShape(_.shape)>0);if(b.length===1)return identity({inputs:{x:b[0]},backend:o});const $=b.map(_=>_.shape);return assertParamsConsistent($,d),concatImpl(b,d,o)}const concatConfig={kernelName:Concat,backendName:"webgl",kernelFunc:concat};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Conv2DProgram{constructor(s,o=!1,a=null,c=!1,d=!1){this.variableNames=["x","W"],this.outputShape=s.outShape;const g=s.padInfo.top,b=s.padInfo.left,$=s.strideHeight,_=s.strideWidth,_e=s.dilationHeight,et=s.dilationWidth,rt=s.filterHeight,tt=s.filterWidth,j=Math.floor(s.inChannels/4)*4,nt=s.inChannels%4,st=s.dataFormat==="channelsLast",ot=st?1:2,ut=st?2:3,ht=st?3:1;let pt="",it="";a&&(c?pt=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:d?pt=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:pt=`
          float activation(float x) {
            ${a}
          }
        `,it="result = activation(result);");const yt=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),d&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${pt}

      const ivec2 strides = ivec2(${$}, ${_});
      const ivec2 pads = ivec2(${g}, ${b});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${ht}];

        ivec2 xRCCorner =
            ivec2(coords[${ot}], coords[${ut}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${rt}; wR++) {
          int xR = xRCorner + wR * ${_e};

          if (xR < 0 || xR >= ${s.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${tt}; wC++) {
            int xC = xCCorner + wC * ${et};

            if (xC < 0 || xC >= ${s.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${j}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${st}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${nt===1}) {

              if (${st}) {
                dotProd +=
                    getX(batch, xR, xC, ${j}) *
                    getW(wR, wC, ${j}, d2);
              } else {
                dotProd +=
                    getX(batch, ${j}, xR, xC) *
                    getW(wR, wC, ${j}, d2);
              }

            } else if (${nt===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${j}, d2),
                getW(wR, wC, ${j} + 1, d2)
              );

              if (${st}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${j}),
                  getX(batch, xR, xC, ${j} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${j}, xR, xC),
                  getX(batch, ${j} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${nt===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${j}, d2),
                getW(wR, wC, ${j} + 1, d2),
                getW(wR, wC, ${j} + 2, d2)
              );

              if (${st}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${j}),
                  getX(batch, xR, xC, ${j} + 1),
                  getX(batch, xR, xC, ${j} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${j}, xR, xC),
                  getX(batch, ${j} + 1, xR, xC),
                  getX(batch, ${j} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${yt}
        ${it}
        setOutput(result);
      }
    `}}class Conv3DProgram{constructor(s){this.variableNames=["x","W"],this.outputShape=s.outShape;const o=s.padInfo.front,a=s.padInfo.top,c=s.padInfo.left,d=s.strideDepth,g=s.strideHeight,b=s.strideWidth,$=s.dilationDepth,_=s.dilationHeight,_e=s.dilationWidth,et=s.filterDepth,rt=s.filterHeight,tt=s.filterWidth,j=Math.floor(s.inChannels/4)*4,nt=s.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${d}, ${g}, ${b});
      const ivec3 pads = ivec3(${o}, ${a}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${et}; wF++) {
          int xF = xFCorner + wF * ${$};

          if (xF < 0 || xF >= ${s.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${rt}; wR++) {
            int xR = xRCorner + wR * ${_};

            if (xR < 0 || xR >= ${s.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${tt}; wC++) {
              int xC = xCCorner + wC * ${_e};

              if (xC < 0 || xC >= ${s.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${j}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${nt===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${j}) *
                  getW(wF, wR, wC, ${j}, d2);
              } else if (${nt===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${j}),
                  getX(batch, xF, xR, xC, ${j} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${j}, d2),
                  getW(wF, wR, wC, ${j} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${nt===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${j}),
                  getX(batch, xF, xR, xC, ${j} + 1),
                  getX(batch, xF, xR, xC, ${j} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${j}, d2),
                  getW(wF, wR, wC, ${j} + 1, d2),
                  getW(wF, wR, wC, ${j} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Im2ColPackedProgram{constructor(s,o,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const{filterWidth:c,inChannels:d,strideWidth:g,strideHeight:b,padInfo:$,outWidth:_,dilationWidth:_e,dilationHeight:et,dataFormat:rt}=a,{left:tt,top:j}=$,nt=d*c,st=getGlslDifferences(),ot=rt==="channelsLast",ut=ot?0:1,ht=ot?1:2;let pt="";for(let it=0;it<=1;it++)for(let yt=0;yt<=1;yt++)pt+=`
          blockIndex = rc.y + ${yt};
          pos = rc.x + ${it};

          if(blockIndex < ${s[1]} && pos < ${s[0]}) {
            offsetY = int(blockIndex / (${_})) * ${b} - ${j};
            d0 = offsetY + ${et} * (pos / ${nt});

            if(d0 < ${o[ut]} && d0 >= 0) {

              offsetX = int(mod(float(blockIndex), ${_}.) * ${g}. - ${tt}.);
              d1 = offsetX + ${_e} * (int(mod(float(pos), ${nt}.) / ${d}.));

              if(d1 < ${o[ht]} && d1 >= 0) {

                ch = int(mod(float(pos), ${d}.));

                if (${ot}) {
                  innerDims = vec2(d1, ch);
                  result[${it*2+yt}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${it*2+yt}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${pt}

        ${st.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2dByMatMul({x:i,filter:s,convInfo:o,backend:a,bias:c=null,preluActivationWeights:d=null,leakyreluAlpha:g=0,activation:b=null}){const $=i.shape,_=a.texData.get(i.dataId),_e=o.inChannels,et=$[0]*$[1]*$[2],rt=o.outChannels,tt=o.dataFormat==="channelsLast",j=!1,nt=!1;let st;const ot=[],ut=(et===1||rt===1)&&_e>MATMUL_SHARED_DIM_THRESHOLD,ht=$[2]%2!==0&&!!_.isPacked;if(ut||!env().getBool("WEBGL_LAZILY_UNPACK")||!env().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!ht){const pt=tt?$[0]*$[1]*$[2]:$[0]*$[2]*$[3],it=reshape({inputs:{x:i},backend:a,attrs:{shape:[1,pt,o.inChannels]}}),yt=reshape({inputs:{x:s},backend:a,attrs:{shape:[1,o.inChannels,o.outChannels]}}),ft=batchMatMulImpl({a:it,b:yt,transposeA:j,transposeB:nt,backend:a,bias:c,activation:b,preluActivationWeights:d,leakyreluAlpha:g});st=reshape({inputs:{x:ft},backend:a,attrs:{shape:o.outShape}}),ot.push(it),ot.push(yt),ot.push(ft)}else{const pt=tt?$[0]*$[1]*($[2]+1):$[0]*$[2]*($[3]+1),it={dataId:i.dataId,shape:[1,pt,o.inChannels],dtype:i.dtype},yt=_.shape;_.shape=_.shape.slice(),_.shape[_.shape.length-2]++,assert$2(isReshapeFree(_.shape,it.shape),()=>`packed reshape ${_.shape} to ${it.shape} isn't free`);const ft=reshape({inputs:{x:s},backend:a,attrs:{shape:[1,o.inChannels,o.outChannels]}});ot.push(ft);const bt=batchMatMulImpl({a:it,b:ft,backend:a,transposeA:j,transposeB:nt,bias:c,activation:b,preluActivationWeights:d,leakyreluAlpha:g}),Tt=a.texData.get(bt.dataId);assert$2(Tt.isPacked,()=>"batchMatMul result is expected to be packed"),_.shape=yt,Tt.shape=o.outShape,st=identity({inputs:{x:bt},backend:a}),st.shape=o.outShape,ot.push(bt)}for(const pt of ot)a.disposeIntermediateTensorInfo(pt);return st}function conv2dWithIm2Row({x:i,filter:s,convInfo:o,backend:a,bias:c=null,preluActivationWeights:d=null,leakyreluAlpha:g=0,activation:b=null}){const{filterWidth:$,filterHeight:_,inChannels:_e,outWidth:et,outHeight:rt,dataFormat:tt}=o,j=tt==="channelsLast",nt=$*_*_e,st=rt*et,ot=[nt,st],ut=!0,ht=!1,pt=[],it=reshape({inputs:{x:i},backend:a,attrs:{shape:i.shape.slice(1)}}),yt=reshape({inputs:{x:s},backend:a,attrs:{shape:[1,nt,sizeFromShape(s.shape)/nt]}});pt.push(it),pt.push(yt);const ft=new Im2ColPackedProgram(ot,it.shape,o),bt=a.runWebGLProgram(ft,[it],"float32"),Tt=reshape({inputs:{x:bt},backend:a,attrs:{shape:[1,ot[0],ot[1]]}});pt.push(bt),pt.push(Tt);const Ct=c!=null,_t=d!=null,Ot=b==="leakyrelu",kt=b?mapActivationToShaderProgram(b,!0):null,Rt=new MatMulPackedProgram(Tt.shape,yt.shape,[1,st,o.outChannels],ut,ht,Ct,kt,_t,Ot),jt=[Tt,yt];if(c&&jt.push(c),_t&&jt.push(d),Ot){const Ut=a.makeTensorInfo([],"float32",createScalarValue(g,"float32"));jt.push(Ut),pt.push(Ut)}const Gt=a.runWebGLProgram(Rt,jt,"float32"),Bt=j?[1,rt,et,o.outChannels]:[1,o.outChannels,rt,et],zt=reshape({inputs:{x:Gt},backend:a,attrs:{shape:Bt}});pt.push(Gt);for(const Ut of pt)a.disposeIntermediateTensorInfo(Ut);return zt}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2d(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,filter:d}=s,{strides:g,pad:b,dataFormat:$,dilations:_,dimRoundingMode:_e}=a,et=convertConv2DDataFormat($),rt=computeConv2DInfo(c.shape,d.shape,g,_,b,_e,!1,et);let tt;if(rt.filterHeight===1&&rt.filterWidth===1&&rt.dilationHeight===1&&rt.dilationWidth===1&&rt.strideHeight===1&&rt.strideWidth===1&&(rt.padInfo.type==="SAME"||rt.padInfo.type==="VALID"))tt=conv2dByMatMul({x:c,filter:d,convInfo:rt,backend:o});else if(env().getBool("WEBGL_CONV_IM2COL")&&c.shape[0]===1)tt=conv2dWithIm2Row({x:c,filter:d,convInfo:rt,backend:o});else{const nt=new Conv2DProgram(rt);tt=o.runWebGLProgram(nt,[c,d],"float32")}const j=reshape({inputs:{x:tt},backend:o,attrs:{shape:rt.outShape}});return o.disposeIntermediateTensorInfo(tt),j}const conv2DConfig={kernelName:Conv2D$1,backendName:"webgl",kernelFunc:conv2d};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Conv2DDerFilterProgram{constructor(s){this.variableNames=["x","dy"],this.outputShape=s.filterShape;const o=s.strideHeight,a=s.strideWidth,c=s.padInfo.top,d=s.padInfo.left,g=s.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${s.batchSize}; b++) {
          for (int yR = 0; yR < ${s.outHeight}; yR++) {
            int xR = wR + yR * ${o} - ${c};

            if (xR < 0 || xR >= ${s.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${s.outWidth}; yC++) {
              int xC = wC + yC * ${a} - ${d};

              if (xC < 0 || xC >= ${s.inWidth}) {
                continue;
              }

              if (${g}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Conv2DDerInputProgram{constructor(s){this.variableNames=["dy","W"],this.outputShape=s.inShape;const o=s.filterHeight,a=s.filterWidth,c=s.strideHeight,d=s.strideWidth,g=s.dataFormat==="channelsLast",b=o-1-s.padInfo.top,$=a-1-s.padInfo.left,_=g?1:2,_e=g?2:3,et=g?3:1;this.userCode=`
      const ivec2 pads = ivec2(${b}, ${$});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${et}];

        ivec2 dyCorner = ivec2(coords[${_}], coords[${_e}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o}; wR++) {
          float dyR = float(dyRCorner + wR) / ${c}.0;

          if (dyR < 0.0 || dyR >= ${s.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${o} - 1 - wR;

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${d}.0;

            if (dyC < 0.0 || dyC >= ${s.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${a} - 1 - wC;

            for (int d2 = 0; d2 < ${s.outChannels}; d2++) {

              if (${g}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Conv3DDerFilterProgram{constructor(s){this.variableNames=["x","dy"],this.outputShape=s.filterShape;const o=s.strideDepth,a=s.strideHeight,c=s.strideWidth,d=s.padInfo.front,g=s.padInfo.top,b=s.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${s.batchSize}; b++) {
          for (int yF = 0; yF < ${s.outDepth}; yF++) {
            int xF = wF + yF * ${o} - ${d};

            if (xF < 0 || xF >= ${s.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${s.outHeight}; yR++) {
              int xR = wR + yR * ${a} - ${g};

              if (xR < 0 || xR >= ${s.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${s.outWidth}; yC++) {
                int xC = wC + yC * ${c} - ${b};

                if (xC < 0 || xC >= ${s.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Conv3DDerInputProgram{constructor(s){this.variableNames=["dy","W"],this.outputShape=s.inShape;const o=s.filterDepth,a=s.filterHeight,c=s.filterWidth,d=s.strideDepth,g=s.strideHeight,b=s.strideWidth,$=o-1-s.padInfo.front,_=a-1-s.padInfo.top,_e=c-1-s.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${$}, ${_}, ${_e});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${o}; wF++) {
          float dyF = float(dyFCorner + wF) / ${d}.0;

          if (dyF < 0.0 || dyF >= ${s.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${o} - 1 - wF;

          for (int wR = 0; wR < ${a}; wR++) {
            float dyR = float(dyRCorner + wR) / ${g}.0;

            if (dyR < 0.0 || dyR >= ${s.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${a} - 1 - wR;

            for (int wC = 0; wC < ${c}; wC++) {
              float dyC = float(dyCCorner + wC) / ${b}.0;

              if (dyC < 0.0 || dyC >= ${s.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${c} - 1 - wC;

              for (int d2 = 0; d2 < ${s.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropFilter(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,dy:d}=s,{strides:g,pad:b,dataFormat:$,dimRoundingMode:_,filterShape:_e}=a,et=convertConv2DDataFormat($),rt=computeConv2DInfo(c.shape,_e,g,1,b,_,!1,et),tt=new Conv2DDerFilterProgram(rt);return o.runWebGLProgram(tt,[c,d],"float32")}const conv2DBackpropFilterConfig={kernelName:Conv2DBackpropFilter,backendName:"webgl",kernelFunc:conv2DBackpropFilter};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropInput(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,filter:d}=s,{inputShape:g,strides:b,pad:$,dataFormat:_,dimRoundingMode:_e}=a,et=convertConv2DDataFormat(_),rt=computeConv2DInfo(g,d.shape,b,1,$,_e,!1,et),tt=new Conv2DDerInputProgram(rt);return o.runWebGLProgram(tt,[c,d],"float32")}const conv2DBackpropInputConfig={kernelName:Conv2DBackpropInput,backendName:"webgl",kernelFunc:conv2DBackpropInput};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3D(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,filter:d}=s,{strides:g,pad:b,dilations:$}=a,_=computeConv3DInfo(c.shape,d.shape,g,$,b),_e=new Conv3DProgram(_);return o.runWebGLProgram(_e,[c,d],"float32")}const conv3DConfig={kernelName:Conv3D$1,backendName:"webgl",kernelFunc:conv3D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropFilterV2(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,dy:d}=s,{strides:g,pad:b,filterShape:$}=a,_=computeConv3DInfo(c.shape,$,g,1,b),_e=new Conv3DDerFilterProgram(_);return o.runWebGLProgram(_e,[c,d],"float32")}const conv3DBackpropFilterV2Config={kernelName:Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:conv3DBackpropFilterV2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropInput(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,filter:d}=s,{pad:g,strides:b,inputShape:$}=a,_=computeConv3DInfo($,d.shape,b,1,g),_e=new Conv3DDerInputProgram(_);return o.runWebGLProgram(_e,[c,d],"float32")}const conv3DBackpropInputConfig={kernelName:Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:conv3DBackpropInput};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const COS=CHECK_NAN_SNIPPET_UNARY+`
  return cos(x);
`,cos=unaryKernelFunc({opSnippet:COS}),cosConfig={kernelName:Cos,backendName:"webgl",kernelFunc:cos};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const COSH=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,cosh=unaryKernelFunc({opSnippet:COSH}),coshConfig={kernelName:Cosh,backendName:"webgl",kernelFunc:cosh};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CropAndResizeProgram{constructor(s,o,a,c,d){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[g,b,$,_]=s,[_e]=o,[et,rt]=a;this.outputShape=[_e,et,rt,_];const tt=c==="bilinear"?1:0,[j,nt]=[`${b-1}.0`,`${$-1}.0`],[st,ot,ut]=et>1?[`${(b-1)/(et-1)}`,"(y2-y1) * height_ratio",`y1*${j} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${j}`],[ht,pt,it]=rt>1?[`${($-1)/(rt-1)}`,"(x2-x1) * width_ratio",`x1*${nt} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${nt}`];this.userCode=`
      const float height_ratio = float(${st});
      const float width_ratio = float(${ht});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${g}) {
          return;
        }

        float height_scale = ${ot};
        float width_scale = ${pt};

        float in_y = ${ut};
        if( in_y < 0.0 || in_y > ${j} ) {
          setOutput(float(${d}));
          return;
        }
        float in_x = ${it};
        if( in_x < 0.0 || in_x > ${nt} ) {
          setOutput(float(${d}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${tt} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cropAndResize=i=>{const{inputs:s,backend:o,attrs:a}=i,{image:c,boxes:d,boxInd:g}=s,{cropSize:b,method:$,extrapolationValue:_}=a,_e=new CropAndResizeProgram(c.shape,d.shape,b,$,_);return o.runWebGLProgram(_e,[c,d,g],"float32")},cropAndResizeConfig={kernelName:CropAndResize,backendName:"webgl",kernelFunc:cropAndResize};class CumSumProgram{constructor(s,o,a){this.variableNames=["x"],this.outputShape=s;const c=s.length,d=o?"0.0":`getX(${getCoords(c,"coords")})`,g=s[s.length-1];let b="",$="";o?(b=a?`end != ${g-1}`:"end != 0",$=a?"end + 1":"end - 1"):(b=a?`end + pow2 < ${g}`:"end >= pow2",$=a?"end + pow2":"end - pow2"),this.userCode=`
      uniform float index;
      void main() {
        ${getCoordsDataType(c)} coords = getOutputCoords();
        int end = ${getFinalCoord(c,"coords")};
        float val = ${d};
        int pow2 = int(pow(2.0, index));
        if (${b}) {
          int idx = ${$};
          ${getFinalCoord(c,"coords")} = idx;
          val += getX(${getCoords(c,"coords")});
        }
        setOutput(val);
      }
    `}getCustomSetupFunc(s){return(o,a)=>{this.index==null&&(this.index=o.getUniformLocation(a,"index")),o.gl.uniform1f(this.index,s)}}}function getCoords(i,s){if(i===1)return`${s}`;if(i===2)return`${s}.x, ${s}.y`;if(i===3)return`${s}.x, ${s}.y, ${s}.z`;if(i===4)return`${s}.x, ${s}.y, ${s}.z, ${s}.w`;throw Error(`Cumulative sum for rank ${i} is not yet supported`)}function getFinalCoord(i,s){if(i===1)return`${s}`;if(i===2)return`${s}.y`;if(i===3)return`${s}.z`;if(i===4)return`${s}.w`;throw Error(`Cumulative sum for rank ${i} is not yet supported`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cumsum(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,exclusive:g,reverse:b}=a,$=c.shape.length,_=getAxesPermutation([d],$);let _e=c;_!=null&&(_e=transpose({inputs:{x:c},backend:o,attrs:{perm:_}}));const et=getInnerMostAxes(1,$)[0];if(et!==$-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${c.shape.length-1} but got axis=${d}`);const rt=_e.shape[et];let tt=identity({inputs:{x:_e},backend:o});for(let j=0;j<=Math.ceil(Math.log2(rt))-1;j++){const nt=new CumSumProgram(_e.shape,!1,b),st=nt.getCustomSetupFunc(j),ot=tt;tt=o.runWebGLProgram(nt,[tt],tt.dtype,st),o.disposeIntermediateTensorInfo(ot)}if(g){const j=new CumSumProgram(_e.shape,g,b),nt=tt;tt=o.runWebGLProgram(j,[tt],tt.dtype),o.disposeIntermediateTensorInfo(nt)}if(_!=null){const j=getUndoAxesPermutation(_),nt=transpose({inputs:{x:tt},backend:o,attrs:{perm:j}});return o.disposeIntermediateTensorInfo(tt),o.disposeIntermediateTensorInfo(_e),nt}return tt}const cumsumConfig={kernelName:Cumsum,backendName:"webgl",kernelFunc:cumsum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function denseBincount(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,weights:d}=s,{size:g,binaryOutput:b}=a;if(c.shape.length===1){const $=o.readSync(c.dataId),_=o.readSync(d.dataId),_e=bincountImplCPU($,_,d.dtype,d.shape,g);return o.makeTensorInfo([g],d.dtype,_e)}else if(c.shape.length===2){const $=o.bufferSync(c),_=o.bufferSync(d),_e=bincountReduceImplCPU($,_,g,b);return o.makeTensorInfo(_e.shape,d.dtype,_e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${c.shape.length}.`)}const denseBincountConfig={kernelName:DenseBincount,backendName:"webgl",kernelFunc:denseBincount};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DepthToSpaceProgram{constructor(s,o,a){this.variableNames=["x"],this.outputShape=[],this.outputShape=s,this.blockSize=o,this.dataFormat=a,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${o};
      int offset_h = imod(h, ${o});
      int in_w = w / ${o};
      int offset_w = imod(w, ${o});
      int offset_d = (offset_h * ${o} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthToSpace(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{blockSize:d,dataFormat:g}=a;assert$2(d>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${d}`);const b=c.shape[0],$=g==="NHWC"?c.shape[1]:c.shape[2],_=g==="NHWC"?c.shape[2]:c.shape[3],_e=g==="NHWC"?c.shape[3]:c.shape[1],et=$*d,rt=_*d,tt=_e/(d*d),j=g==="NHWC"?[b,et,rt,tt]:[b,tt,et,rt],nt=new DepthToSpaceProgram(j,d,g);return o.runWebGLProgram(nt,[c],c.dtype)}const depthToSpaceConfig={kernelName:DepthToSpace,backendName:"webgl",kernelFunc:depthToSpace};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DepthwiseConv2DProgram{constructor(s,o=!1,a=null,c=!1,d=!1){this.variableNames=["x","W"],this.outputShape=s.outShape;const g=s.inHeight,b=s.inWidth,$=s.padInfo.top,_=s.padInfo.left,_e=s.strideHeight,et=s.strideWidth,rt=s.dilationHeight,tt=s.dilationWidth,j=s.filterHeight,nt=s.filterWidth,st=s.outChannels/s.inChannels;let ot="",ut="";a&&(c?ot=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:d?ot=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:ot=`
          float activation(float x) {
            ${a}
          }
        `,ut="result = activation(result);");const ht=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),d&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${ot}

      const ivec2 strides = ivec2(${_e}, ${et});
      const ivec2 pads = ivec2(${$}, ${_});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${st};
        int q = d2 - d1 * ${st};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${j}; wR++) {
          int xR = xRCorner + wR * ${rt};

          if (xR < 0 || xR >= ${g}) {
            continue;
          }

          for (int wC = 0; wC < ${nt}; wC++) {
            int xC = xCCorner + wC * ${tt};

            if (xC < 0 || xC >= ${b}) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${ht}
        ${ut}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DepthwiseConvPacked2DProgram{constructor(s,o=!1,a=null,c=!1,d=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s.outShape;const g=s.inHeight,b=s.inWidth,$=s.padInfo.top,_=s.padInfo.left,_e=s.strideHeight,et=s.strideWidth,rt=s.dilationHeight,tt=s.dilationWidth,j=s.filterHeight,nt=s.filterWidth,st=nt;let ot="int xR; int xC; int xCOffset;";for(let it=0;it<j;it++)for(let yt=0;yt<nt;yt++)ot+=`
          vec4 xTexelR${it}C${yt*2} = vec4(0.);
          vec4 wR${it}C${yt} = vec4(0.);
          vec4 xR${it}C${yt} = vec4(0.);`;for(let it=0;it<j;it++)for(let yt=0;yt<st;yt++){const ft=yt*2;if(ot+=`
          xR = xRCorner + ${it*rt};
          xC = xCCorner + ${ft*tt};
        `,et===1){if(ft<nt&&(_%2===1?ot+=`
                xCOffset = xC + 1;
                if(xR >= 0 && xR < ${g} && xCOffset >= 0 && xCOffset < ${b}) {
                  xTexelR${it}C${ft} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${b}) {
                    xTexelR${it}C${ft}.zw = vec2(0.);
                  }
                } else {
                  xTexelR${it}C${ft} = vec4(0.);
                }

                xCOffset = xC + 1 - 2;
                if(xR >= 0 && xR < ${g} && xCOffset >= 0 && xCOffset < ${b}) {
                  vec4 previous = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${b}) {
                    previous.zw = vec2(0.);
                  }

                  xR${it}C${ft} = vec4(previous.zw, xTexelR${it}C${ft}.xy);
                } else {
                  xR${it}C${ft} = vec4(0, 0, xTexelR${it}C${ft}.xy);
                }
              `:ot+=`
                if(xR >= 0 && xR < ${g} && xC >= 0 && xC < ${b}) {
                  xTexelR${it}C${ft} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${it}C${ft} = vec4(0.);
                }

                xR${it}C${ft} = xTexelR${it}C${ft};
              `,ft+1<nt)){const bt=_%2===0?nearestLargerEven(tt):tt;tt%2===0&&_%2===1||tt%2!==0&&_%2!==1?(ot+=`
                  xCOffset = xC + ${_%2} + ${bt};

                  if(xR >= 0 && xR < ${g} &&
                    xCOffset >= 0 && xCOffset < ${b}) {
                    xTexelR${it}C${ft+2} = getX(batch, xR, xCOffset, d1);
                  }
                `,tt>1&&(ot+=`
                    xCOffset -= 2;
                    if(xR >= 0 && xR < ${g} &&
                      xCOffset >= 0 && xCOffset < ${b}) {
                      xTexelR${it}C${ft} = getX(batch, xR, xCOffset, d1);
                    } else {
                      xTexelR${it}C${ft} = vec4(0.);
                    }
                  `),ot+=`
                  xR${it}C${ft+1} = vec4(
                    xTexelR${it}C${ft}.zw, xTexelR${it}C${ft+2}.xy);
                `):ot+=`
                  xCOffset = xC + ${bt};

                  if(xR >= 0 && xR < ${g} &&
                    xCOffset >= 0 && xCOffset < ${b}) {
                    xTexelR${it}C${ft+2} = getX(batch, xR, xCOffset, d1);
                  }

                  xR${it}C${ft+1} = xTexelR${it}C${ft+2};
                `}}else ft<nt&&(ot+=`
              if(xR >= 0 && xR < ${g}) {
            `,_%2===1?(ot+=`
                xCOffset = xC + 1 - ${et};
                if(xCOffset >= 0 && xCOffset < ${b}) {
                  xTexelR${it}C${ft} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${it}C${ft} = vec4(0.);
                }

                if(xC + 1 >= 0 && xC + 1 < ${b}) {
                  xTexelR${it}C${ft+2} = getX(batch, xR, xC + 1, d1);
                } else {
                  xTexelR${it}C${ft+2} = vec4(0.);
                }

                xR${it}C${ft} = vec4(
                  xTexelR${it}C${ft}.zw, xTexelR${it}C${ft+2}.zw);
              `,ft+1<nt&&(ot+=`
                  vec4 final = vec4(0.);
                  xCOffset = xC + 1 + ${et};
                  if(xCOffset >= 0 && xCOffset < ${b}) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xR${it}C${ft+1} = vec4(xTexelR${it}C${ft+2}.xy, final.xy);
                `)):(ot+=`
                if(xC >= 0 && xC < ${b}) {
                  xTexelR${it}C${ft} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${it}C${ft} = vec4(0.);
                }

                xCOffset = xC + ${et};
                if(xCOffset >= 0 && xCOffset < ${b}) {
                  xTexelR${it}C${ft+2} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${it}C${ft+2} = vec4(0.);
                }

                xR${it}C${ft} = vec4(
                  xTexelR${it}C${ft}.xy, xTexelR${it}C${ft+2}.xy);
              `,ft+1<nt&&(ot+=`
                  xR${it}C${ft+1} = vec4(
                    xTexelR${it}C${ft}.zw, xTexelR${it}C${ft+2}.zw);
                `)),ot+="}");ft<nt&&(ot+=`
            vec4 wTexelR${it}C${ft} = getW(${it}, ${ft}, d1, q);
            wR${it}C${ft} = vec4(wTexelR${it}C${ft}.xz, wTexelR${it}C${ft}.xz);
          `,ft+1<nt&&(ot+=`
              vec4 wTexelR${it}C${ft+1} = getW(${it}, ${ft+1}, d1, q);
              wR${it}C${ft+1} =
                vec4(wTexelR${it}C${ft+1}.xz, wTexelR${it}C${ft+1}.xz);`))}for(let it=0;it<j;it++)for(let yt=0;yt<nt;yt++)ot+=`dotProd += xR${it}C${yt} * wR${it}C${yt};`;let ut="",ht="";a&&(c?ut=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:d?ut=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:ut=`vec4 activation(vec4 x) {
          ${a}
        }`,ht="result = activation(result);");const pt=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),d&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${ut}

      const ivec2 strides = ivec2(${_e}, ${et});
      const ivec2 pads = ivec2(${$}, ${_});

      void main() {

        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2;
        int q = 0;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        vec4 dotProd = vec4(0.);

        ${ot}

        vec4 result = dotProd;
        ${pt}
        ${ht}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNative(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,filter:d}=s,{strides:g,pad:b,dilations:$,dimRoundingMode:_}=a;let _e=$;_e==null&&(_e=[1,1]),assert$2(eitherStridesOrDilationsAreOne(g,_e),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${g} and dilations '${_e}'`);const et=computeConv2DInfo(c.shape,d.shape,g,_e,b,_,!0);let rt;return env().getBool("WEBGL_PACK_DEPTHWISECONV")&&et.strideWidth<=2&&et.outChannels/et.inChannels===1?rt=new DepthwiseConvPacked2DProgram(et):rt=new DepthwiseConv2DProgram(et),o.runWebGLProgram(rt,[c,d],"float32")}const depthwiseConv2dNativeConfig={kernelName:DepthwiseConv2dNative,backendName:"webgl",kernelFunc:depthwiseConv2dNative};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DepthwiseConv2DDerFilterProgram{constructor(s){this.variableNames=["x","dy"],this.outputShape=s.filterShape;const o=s.strideHeight,a=s.strideWidth,c=s.padInfo.top,d=s.padInfo.left,g=s.outChannels/s.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${g} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${s.batchSize}; b++) {
          for (int yR = 0; yR < ${s.outHeight}; yR++) {
            int xR = wR + yR * ${o} - ${c};

            if (xR < 0 || xR >= ${s.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${s.outWidth}; yC++) {
              int xC = wC + yC * ${a} - ${d};

              if (xC < 0 || xC >= ${s.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class DepthwiseConv2DDerInputProgram{constructor(s){this.variableNames=["dy","W"],this.outputShape=s.inShape;const o=s.filterHeight,a=s.filterWidth,c=s.strideHeight,d=s.strideWidth,g=o-1-s.padInfo.top,b=a-1-s.padInfo.left,$=s.outChannels/s.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${g}, ${b});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${o}; wR++) {
          float dyR = float(dyRCorner + wR) / ${c}.0;

          if (dyR < 0.0 || dyR >= ${s.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${o} - 1 - wR;

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${d}.0;

            if (dyC < 0.0 || dyC >= ${s.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${a} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${$}; dm++) {
              int d2 = d1 * ${$} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropFilter(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,dy:d}=s,{strides:g,dilations:b,pad:$,dimRoundingMode:_,filterShape:_e}=a,et=computeConv2DInfo(c.shape,_e,g,b,$,_,!0),rt=new DepthwiseConv2DDerFilterProgram(et);return o.runWebGLProgram(rt,[c,d],"float32")}const depthwiseConv2dNativeBackpropFilterConfig={kernelName:DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:depthwiseConv2dNativeBackpropFilter};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropInput(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,filter:d}=s,{strides:g,dilations:b,pad:$,dimRoundingMode:_,inputShape:_e}=a,et=computeConv2DInfo(_e,d.shape,g,b,$,_,!0),rt=new DepthwiseConv2DDerInputProgram(et);return o.runWebGLProgram(rt,[c,d],"float32")}const depthwiseConv2dNativeBackpropInputConfig={kernelName:DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:depthwiseConv2dNativeBackpropInput};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DiagProgram{constructor(s){this.variableNames=["X"],this.outputShape=[s,s],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function diag(i){const{inputs:s,backend:o}=i,{x:a}=s,c=[...a.shape,...a.shape],d=sizeFromShape(a.shape),g=reshape({inputs:{x:a},backend:o,attrs:{shape:[d]}}),b=new DiagProgram(d),$=o.runWebGLProgram(b,[g],g.dtype),_=reshape({inputs:{x:$},backend:o,attrs:{shape:c}});return o.disposeIntermediateTensorInfo(g),o.disposeIntermediateTensorInfo($),_}const diagConfig={kernelName:Diag,backendName:"webgl",kernelFunc:diag};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dilation2DProgram{constructor(s){this.variableNames=["x","W"],this.outputShape=s.outShape;const{inHeight:o,inWidth:a,padInfo:c,strideHeight:d,strideWidth:g,filterHeight:b,filterWidth:$,dilationHeight:_,dilationWidth:_e}=s,{top:et,left:rt}=c;this.userCode=`
      const ivec2 strides = ivec2(${d}, ${g});
      const ivec2 pads = ivec2(${et}, ${rt});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${b}; h++) {
          int hIn = hBeg + h * ${_};

          if (hIn >= 0 && hIn < ${o}) {
            for (int w = 0; w < ${$}; w++) {
              int wIn = wBeg + w * ${_e};

              if (wIn >= 0 && wIn < ${a}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dilation2D(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,filter:d}=s,{strides:g,pad:b,dilations:$}=a,_=computeDilation2DInfo(c.shape,d.shape,g,b,"NHWC",$);let _e;const et=new Dilation2DProgram(_);_e=o.runWebGLProgram(et,[c,d],"float32");const rt=reshape({inputs:{x:_e},backend:o,attrs:{shape:_.outShape}});return o.disposeIntermediateTensorInfo(_e),rt}const dilation2DConfig={kernelName:Dilation2D,backendName:"webgl",kernelFunc:dilation2D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ELU="return (x >= 0.0) ? x : (exp(x) - 1.0);",ELU_PACKED=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,elu=unaryKernelFunc({opSnippet:ELU,packedOpSnippet:ELU_PACKED}),eluConfig={kernelName:Elu$1,backendName:"webgl",kernelFunc:elu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ELU_DER="return (b >= 1.0) ? a : a * (b + 1.0);",ELU_DER_PACKED=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,eluGrad=i=>{const{inputs:s,backend:o}=i,{dy:a,y:c}=s,d=env().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BinaryOpPackedProgram(ELU_DER_PACKED,a.shape,c.shape):new BinaryOpProgram(ELU_DER,a.shape,c.shape);return o.runWebGLProgram(d,[a,c],a.dtype)},eluGradConfig={kernelName:EluGrad,backendName:"webgl",kernelFunc:eluGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PACKED_EQUAL=`
  return vec4(equal(a, b));
`,EQUAL="return float(a == b);",equal=binaryKernelFunc({opSnippet:EQUAL,packedOpSnippet:PACKED_EQUAL,dtype:"bool"}),equalConfig={kernelName:Equal,backendName:"webgl",kernelFunc:equal};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ERF=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${ERF_P};
  float a1 = ${ERF_A1};
  float a2 = ${ERF_A2};
  float a3 = ${ERF_A3};
  float a4 = ${ERF_A4};
  float a5 = ${ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,erf=unaryKernelFunc({opSnippet:ERF}),erfConfig={kernelName:Erf,backendName:"webgl",kernelFunc:erf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EXP="return exp(x);",exp=unaryKernelFunc({opSnippet:EXP,packedOpSnippet:EXP,cpuKernelImpl:expImplCPU}),expConfig={kernelName:Exp,backendName:"webgl",kernelFunc:exp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function expandDims(i){const{inputs:s,attrs:o,backend:a}=i,{dim:c}=o,{input:d}=s,g=d.shape.length,b=d.shape.slice();let $=c;return c<0&&(assert$2(-(g+1)<=c,()=>`Axis must be in the interval [${-(g+1)}, ${g}]`),$=g+c+1),b.splice($,0,1),reshape({inputs:{x:d},backend:a,attrs:{shape:b}})}const expandDimsConfig={kernelName:ExpandDims,backendName:"webgl",kernelFunc:expandDims};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EXPM1="return exp(x) - 1.0;",expm1=unaryKernelFunc({opSnippet:EXPM1,packedOpSnippet:EXPM1,cpuKernelImpl:expm1ImplCPU}),expm1Config={kernelName:Expm1,backendName:"webgl",kernelFunc:expm1};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FFTProgram{constructor(s,o,a){this.variableNames=["real","imag"];const c=o[1];this.outputShape=o;const d=a?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,g=a?`${c}.0`:"1.0";let b;if(s==="real")b="return real * expR - imag * expI;";else if(s==="imag")b="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${s}.`);this.userCode=`
      const float exponentMultiplier = ${d};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${b}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${c});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${c}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${g};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fftImpl(i,s,o){const a=o.texData.get(i.dataId),c=sizeFromShape(i.shape),d=i.shape[i.shape.length-1],g=c/d,b=reshape({inputs:{x:i},backend:o,attrs:{shape:[g,d]}}),$=b.shape,_=new FFTProgram("real",$,s),_e=new FFTProgram("imag",$,s),et=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:$},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:$}],rt=o.runWebGLProgram(_,et,"float32"),tt=o.runWebGLProgram(_e,et,"float32"),j=complex({inputs:{real:rt,imag:tt},backend:o});o.disposeIntermediateTensorInfo(rt),o.disposeIntermediateTensorInfo(tt);const nt=reshape({inputs:{x:j},backend:o,attrs:{shape:i.shape}});return o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo(j),nt}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fft(i){const{inputs:s,backend:o}=i,{input:a}=s;return fftImpl(a,!1,o)}const fftConfig={kernelName:FFT$1,backendName:"webgl",kernelFunc:fft};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FillProgram{constructor(s,o){this.outputShape=[],this.variableNames=["x"],this.outputShape=s,this.userCode=`
      uniform float value;
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}getCustomSetupFunc(s){return(o,a)=>{this.valueLoc==null&&(this.valueLoc=o.getUniformLocationNoThrow(a,"value")),o.gl.uniform1f(this.valueLoc,s)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fill(i){const{backend:s,attrs:o}=i,{shape:a,value:c}=o;let{dtype:d}=o;if(d=d||inferDtype(c),d==="string"){const g=getArrayFromDType(d,sizeFromShape(a));return g.fill(c),s.makeTensorInfo(a,d,g)}else{const g=new FillProgram(a,c),b=g.getCustomSetupFunc(c);return s.runWebGLProgram(g,[],d,b)}}const fillConfig={kernelName:Fill,backendName:"webgl",kernelFunc:fill};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FlipLeftRightProgram{constructor(s){this.variableNames=["Image"],this.outputShape=[];const o=s[2];this.outputShape=s,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${o} - x;
          float outputValue;
          if(coordX >= 0 && coordX < ${o}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const flipLeftRightConfig={kernelName:FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:i,backend:s})=>{const{image:o}=i,a=s,c=new FlipLeftRightProgram(o.shape);return a.runWebGLProgram(c,[o],o.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FLOOR="return floor(x);",floor=unaryKernelFunc({opSnippet:FLOOR,packedOpSnippet:FLOOR,cpuKernelImpl:floorImplCPU}),floorConfig={kernelName:Floor,backendName:"webgl",kernelFunc:floor};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const INT_DIV=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,INT_DIV_PACKED=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,floorDiv=binaryKernelFunc({opSnippet:INT_DIV,packedOpSnippet:INT_DIV_PACKED,dtype:"int32"}),floorDivConfig={kernelName:FloorDiv,backendName:"webgl",kernelFunc:floorDiv};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FromPixelsProgram{constructor(s){this.variableNames=["A"];const o=getGlslDifferences(),[a,c]=s;this.outputShape=s,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}.0, ${a}.0);

        vec4 values = ${o.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FromPixelsPackedProgram{constructor(s){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const o=getGlslDifferences(),[a,c]=s;this.outputShape=s,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${c}.0, ${a}.0);
            vec4 values = ${o.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${o.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fromPixelsConfig={kernelName:FromPixels,backendName:"webgl",kernelFunc:fromPixels};let fromPixels2DContext;function fromPixels(i){const{inputs:s,backend:o,attrs:a}=i;let{pixels:c}=s;const{numChannels:d}=a,g=typeof HTMLVideoElement<"u"&&c instanceof HTMLVideoElement,b=typeof HTMLImageElement<"u"&&c instanceof HTMLImageElement,$=typeof ImageBitmap<"u"&&c instanceof ImageBitmap,[_,_e]=g?[c.videoWidth,c.videoHeight]:[c.width,c.height],et=[_e,_],rt=[_e,_,d];(b||g||$)&&(fromPixels2DContext==null&&(fromPixels2DContext=document.createElement("canvas").getContext("2d")),fromPixels2DContext.canvas.width=_,fromPixels2DContext.canvas.height=_e,fromPixels2DContext.drawImage(c,0,0,_,_e),c=fromPixels2DContext.canvas);const tt=o.makeTensorInfo(et,"int32");o.texData.get(tt.dataId).usage=TextureUsage.PIXELS,o.gpgpu.uploadPixelDataToTexture(o.getTexture(tt.dataId),c);const j=env().getBool("WEBGL_PACK")?new FromPixelsPackedProgram(rt):new FromPixelsProgram(rt),nt=o.runWebGLProgram(j,[tt],"int32");return o.disposeData(tt.dataId),nt}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedConv2d(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,filter:d,bias:g,preluActivationWeights:b}=s,{strides:$,pad:_,dataFormat:_e,dilations:et,dimRoundingMode:rt,activation:tt,leakyreluAlpha:j}=a,nt=convertConv2DDataFormat(_e),st=computeConv2DInfo(c.shape,d.shape,$,et,_,rt,!1,nt);let ot;const ut=[];if(st.filterHeight===1&&st.filterWidth===1&&st.dilationHeight===1&&st.dilationWidth===1&&st.strideHeight===1&&st.strideWidth===1&&(st.padInfo.type==="SAME"||st.padInfo.type==="VALID"))ot=conv2dByMatMul({x:c,filter:d,convInfo:st,backend:o,bias:g,activation:tt,preluActivationWeights:b,leakyreluAlpha:j});else if(env().getBool("WEBGL_CONV_IM2COL")&&c.shape[0]===1)ot=conv2dWithIm2Row({x:c,filter:d,convInfo:st,backend:o,bias:g,activation:tt,preluActivationWeights:b,leakyreluAlpha:j});else{const pt=g!=null,it=b!=null,yt=tt==="leakyrelu",ft=tt?mapActivationToShaderProgram(tt,!1):null,bt=new Conv2DProgram(st,pt,ft,it,yt),Tt=[c,d];if(g&&Tt.push(g),b&&Tt.push(b),yt){const Ct=o.makeTensorInfo([],"float32",createScalarValue(j,"float32"));Tt.push(Ct),ut.push(Ct)}ot=o.runWebGLProgram(bt,Tt,"float32")}const ht=reshape({inputs:{x:ot},backend:o,attrs:{shape:st.outShape}});return ut.push(ot),ut.forEach(pt=>o.disposeIntermediateTensorInfo(pt)),ht}const fusedConv2DConfig={kernelName:FusedConv2D,backendName:"webgl",kernelFunc:fusedConv2d};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedDepthwiseConv2D(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,filter:d,bias:g,preluActivationWeights:b}=s,{strides:$,pad:_,dilations:_e,dimRoundingMode:et,activation:rt,leakyreluAlpha:tt}=a,j=[];let nt=_e;nt==null&&(nt=[1,1]),assert$2(eitherStridesOrDilationsAreOne($,nt),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${$} and dilations '${nt}'`);const st=computeConv2DInfo(c.shape,d.shape,$,nt,_,et,!0),ot=env().getBool("WEBGL_PACK_DEPTHWISECONV")&&st.strideWidth<=2&&st.outChannels/st.inChannels===1,ut=rt?mapActivationToShaderProgram(rt,ot):null,ht=[c,d],pt=g!=null,it=b!=null,yt=rt==="leakyrelu";if(pt&&ht.push(g),it&&ht.push(b),yt){const Tt=o.makeTensorInfo([],"float32",createScalarValue(tt,"float32"));ht.push(Tt),j.push(Tt)}let ft;ot?ft=new DepthwiseConvPacked2DProgram(st,pt,ut,it,yt):ft=new DepthwiseConv2DProgram(st,pt,ut,it,yt);const bt=o.runWebGLProgram(ft,ht,"float32");return j.forEach(Tt=>o.disposeIntermediateTensorInfo(Tt)),bt}const fusedDepthwiseConv2DConfig={kernelName:FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:fusedDepthwiseConv2D};class GatherNDProgram{constructor(s,o,a){this.sliceDim=s,this.strides=o,this.variableNames=["x","indices"],this.outputShape=a;const c=getCoordsDataType(o.length),d=getCoordsDataType(a.length),g=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${this.strides});
         void main() {
          ${d} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${g};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherNd(i){const{inputs:s,backend:o}=i,{params:a,indices:c}=s,d=c.shape,g=d[d.length-1],[b,$,_,_e]=prepareAndValidate(a,c),et=reshape({inputs:{x:c},backend:o,attrs:{shape:[$,g]}}),rt=reshape({inputs:{x:a},backend:o,attrs:{shape:[sizeFromShape(a.shape)/_,_]}}),tt=new GatherNDProgram(g,_e,[$,_]),j=o.runWebGLProgram(tt,[rt,et],rt.dtype),nt=reshape({inputs:{x:j},backend:o,attrs:{shape:b}});return o.disposeIntermediateTensorInfo(et),o.disposeIntermediateTensorInfo(rt),o.disposeIntermediateTensorInfo(j),nt}const gatherNdConfig={kernelName:GatherNd,backendName:"webgl",kernelFunc:gatherNd};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GatherProgram{constructor(s,o){this.variableNames=["A","indices"],this.outputShape=o,this.rank=o.length;const a=getCoordsDataType(this.rank),c=getSourceCoords$1(s);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        setOutput(getA(${c}));
      }
    `}}function getSourceCoords$1(i,s){const o=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let c=0;c<i.length;c++)c===2?a.push("int(getIndices(resRC.x, resRC.z))"):a.push(`${o[c]}`);return a.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherV2(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,indices:d}=s,{axis:g,batchDims:b}=a,$=parseAxisParam(g,c.shape)[0],_=collectGatherOpShapeInfo(c,d,$,b),_e=sizeFromShape(d.shape),et=[],rt=reshape({inputs:{x:c},backend:o,attrs:{shape:[_.batchSize,_.outerSize,_.dimSize,_.sliceSize]}}),tt=reshape({inputs:{x:d},backend:o,attrs:{shape:[_.batchSize,_e/_.batchSize]}});et.push(rt),et.push(tt);const j=[_.batchSize,_.outerSize,_e/_.batchSize,_.sliceSize];if(o.shouldExecuteOnCPU([c,d])||c.dtype==="string"){const ut=o.bufferSync(tt),ht=o.bufferSync(rt),pt=gatherV2ImplCPU(ht,ut,j);return et.forEach(it=>o.disposeIntermediateTensorInfo(it)),o.makeTensorInfo(_.outputShape,pt.dtype,pt.values)}const nt=new GatherProgram(rt.shape,j),st=o.runWebGLProgram(nt,[rt,tt],rt.dtype);et.push(st);const ot=reshape({inputs:{x:st},backend:o,attrs:{shape:_.outputShape}});return et.forEach(ut=>o.disposeIntermediateTensorInfo(ut)),ot}const gatherV2Config={kernelName:GatherV2,backendName:"webgl",kernelFunc:gatherV2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GREATER="return float(a > b);",GREATER_PACKED=`
  return vec4(greaterThan(a, b));
`,greater=binaryKernelFunc({opSnippet:GREATER,packedOpSnippet:GREATER_PACKED,cpuKernelImpl:greaterImplCPU,dtype:"bool"}),greaterConfig={kernelName:Greater,backendName:"webgl",kernelFunc:greater};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GREATER_EQUAL="return float(a >= b);",GREATER_EQUAL_PACKED=`
  return vec4(greaterThanEqual(a, b));
`,greaterEqual=binaryKernelFunc({opSnippet:GREATER_EQUAL,packedOpSnippet:GREATER_EQUAL_PACKED,dtype:"bool"}),greaterEqualConfig={kernelName:GreaterEqual,backendName:"webgl",kernelFunc:greaterEqual};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ifft(i){const{inputs:s,backend:o}=i,{input:a}=s;return fftImpl(a,!0,o)}const ifftConfig={kernelName:IFFT,backendName:"webgl",kernelFunc:ifft};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IS_FINITE="return float(!isnan(x) && !isinf(x));",isFinite$1=unaryKernelFunc({opSnippet:IS_FINITE,dtype:"bool"}),isFiniteConfig={kernelName:IsFinite,backendName:"webgl",kernelFunc:isFinite$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IS_INF="return float(isinf(x));",isInf=unaryKernelFunc({opSnippet:IS_INF,dtype:"bool"}),isInfConfig={kernelName:IsInf,backendName:"webgl",kernelFunc:isInf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IS_NAN="return float(isnan(x));",isNaN$1=unaryKernelFunc({opSnippet:IS_NAN,dtype:"bool"}),isNaNConfig={kernelName:IsNan,backendName:"webgl",kernelFunc:isNaN$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LESS="return float(a < b);",LESS_PACKED=`
  return vec4(lessThan(a, b));
`,less=binaryKernelFunc({opSnippet:LESS,packedOpSnippet:LESS_PACKED,cpuKernelImpl:lessImplCPU,dtype:"bool"}),lessConfig={kernelName:Less,backendName:"webgl",kernelFunc:less};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LESS_EQUAL="return float(a <= b);",LESS_EQUAL_PACKED=`
  return vec4(lessThanEqual(a, b));
`,lessEqual=binaryKernelFunc({opSnippet:LESS_EQUAL,packedOpSnippet:LESS_EQUAL_PACKED,dtype:"bool"}),lessEqualConfig={kernelName:LessEqual,backendName:"webgl",kernelFunc:lessEqual};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function linSpace(i){const{backend:s,attrs:o}=i,{start:a,stop:c,num:d}=o,g=linSpaceImplCPU(a,c,d);return s.makeTensorInfo([g.length],"float32",g)}const linSpaceConfig={kernelName:LinSpace,backendName:"webgl",kernelFunc:linSpace};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOG=`if (x < 0.0) return NAN;
  return log(x);`,LOG_PACKED=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,log$1=unaryKernelFunc({opSnippet:LOG,packedOpSnippet:LOG_PACKED,cpuKernelImpl:logImplCPU}),logConfig={kernelName:Log,backendName:"webgl",kernelFunc:log$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOG1P="return log(1.0 + x);",log1p=unaryKernelFunc({opSnippet:LOG1P}),log1pConfig={kernelName:Log1p,backendName:"webgl",kernelFunc:log1p};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOGICAL_AND="return float(a >= 1.0 && b >= 1.0);",LOGICAL_AND_PACKED=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,logicalAnd=binaryKernelFunc({opSnippet:LOGICAL_AND,packedOpSnippet:LOGICAL_AND_PACKED,dtype:"bool"}),logicalAndConfig={kernelName:LogicalAnd,backendName:"webgl",kernelFunc:logicalAnd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOGICAL_NOT="return float(!(x >= 1.0));",logicalNot=unaryKernelFunc({opSnippet:LOGICAL_NOT}),logicalNotConfig={kernelName:LogicalNot,backendName:"webgl",kernelFunc:logicalNot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOGICAL_OR="return float(a >= 1.0 || b >= 1.0);",LOGICAL_OR_PACKED=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,logicalOr=binaryKernelFunc({opSnippet:LOGICAL_OR,packedOpSnippet:LOGICAL_OR_PACKED,dtype:"bool"}),logicalOrConfig={kernelName:LogicalOr,backendName:"webgl",kernelFunc:logicalOr};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LRNProgram{constructor(s,o,a,c,d){this.variableNames=["x"],this.outputShape=[];const g=o,b=s[3]-1;this.outputShape=s;let $;const _=`float(${a}) + float(${c}) * sum`;d===.5?$=`inversesqrt(${_})`:d===1?$=`1.0/(${_})`:$=`exp(log(${_}) * float(-${d}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${g}; j <= ${g}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${b}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${$};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LRNPackedProgram{constructor(s,o,a,c,d){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const g=o,b=s[3]-1;this.outputShape=s;let $;const _=`float(${a}) + float(${c}) * sum`;d===.5?$=`inversesqrt(${_})`:d===1?$=`1.0/(${_})`:$=`exp(log(${_}) * float(-${d}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${g};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${g}; j <= ${g}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${b}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${$};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lrn=i=>{const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{depthRadius:d,bias:g,alpha:b,beta:$}=a,_=env().getBool("WEBGL_PACK_NORMALIZATION")?new LRNPackedProgram(c.shape,d,g,b,$):new LRNProgram(c.shape,d,g,b,$);return o.runWebGLProgram(_,[c],c.dtype)},LRNConfig={kernelName:LRN,backendName:"webgl",kernelFunc:lrn};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LRNGradProgram{constructor(s,o,a,c,d){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=s,this.depth=s[3],this.depthRadius=o,this.bias=a,this.alpha=c,this.beta=d,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${o})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${o} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${c}) * norm + float(${a});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${c})
                * float(${d})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${d});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lrnGrad=i=>{const{inputs:s,backend:o,attrs:a}=i,{x:c,y:d,dy:g}=s,{depthRadius:b,bias:$,alpha:_,beta:_e}=a,et=new LRNGradProgram(c.shape,b,$,_,_e);return o.runWebGLProgram(et,[c,d,g],c.dtype)},LRNGradConfig={kernelName:LRNGrad,backendName:"webgl",kernelFunc:lrnGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxImpl(i,s,o,a){const c=sizeFromShape(s),g=sizeFromShape(i.shape)/c,b=reshape({inputs:{x:i},attrs:{shape:[g,c]},backend:a}),$=reduce(b,i.dtype,"max",a),_=reshape({inputs:{x:$},attrs:{shape:o},backend:a});return a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo($),_}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function max(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{reductionIndices:d,keepDims:g}=a,b=c.shape.length,$=parseAxisParam(d,c.shape);let _=$;const _e=getAxesPermutation(_,b),et=_e!=null,rt=o.shouldExecuteOnCPU([c]);let tt=c;if(et){if(rt){const ht=o.texData.get(tt.dataId).values,pt=new Array(b);for(let ft=0;ft<pt.length;ft++)pt[ft]=c.shape[_e[ft]];const it=transposeImplCPU(ht,c.shape,c.dtype,_e,pt);tt=o.makeTensorInfo(pt,c.dtype);const yt=o.texData.get(tt.dataId);yt.values=it}else tt=transposeImpl(c,_e,o);_=getInnerMostAxes(_.length,b)}assertAxesAreInnerMostDims("max",_,b);const[j,nt]=computeOutAndReduceShapes(tt.shape,_);let st=j;g&&(st=expandShapeToKeepDim(j,$));let ot;if(rt){const ht=o.texData.get(tt.dataId).values,pt=maxImplCPU(ht,sizeFromShape(nt),st,c.dtype);ot=o.makeTensorInfo(st,c.dtype);const it=o.texData.get(ot.dataId);it.values=pt}else ot=maxImpl(tt,nt,st,o);return et&&o.disposeIntermediateTensorInfo(tt),ot}const maxConfig={kernelName:Max,backendName:"webgl",kernelFunc:max};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MAXIMUM=CHECK_NAN_SNIPPET$1+`
  return max(a, b);
`,MAXIMUM_PACKED=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+CHECK_NAN_SNIPPET+`
  return result;
`,maximum=binaryKernelFunc({opSnippet:MAXIMUM,packedOpSnippet:MAXIMUM_PACKED,cpuKernelImpl:maximumImplCPU}),maximumConfig={kernelName:Maximum$1,backendName:"webgl",kernelFunc:maximum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s;assertNotComplex(c,"maxPool");const{filterSize:d,strides:g,pad:b,dimRoundingMode:$}=a,_=1;assert$2(eitherStridesOrDilationsAreOne(g,_),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${g} and dilations '${_}'`);const _e=computePool2DInfo(c.shape,d,g,_,b,$);if(_e.filterWidth===1&&_e.filterHeight===1&&arraysEqual(_e.inShape,_e.outShape))return identity({inputs:{x:c},backend:o});const et=new Pool2DProgram(_e,"max",!1);return o.runWebGLProgram(et,[c],c.dtype)}const maxPoolConfig={kernelName:MaxPool,backendName:"webgl",kernelFunc:maxPool};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3d(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{filterSize:d,strides:g,pad:b,dataFormat:$,dimRoundingMode:_}=a,_e=[1,1,1],et=computePool3DInfo(c.shape,d,g,_e,b,_,$),rt=new Pool3DProgram(et,"max",!1);return o.runWebGLProgram(rt,[c],c.dtype)}const maxPool3DConfig={kernelName:MaxPool3D,backendName:"webgl",kernelFunc:maxPool3d};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MaxPool2DBackpropProgram{constructor(s){this.variableNames=["dy","maxPos"],this.outputShape=s.inShape;const o=s.strideHeight,a=s.strideWidth,c=s.dilationHeight,d=s.effectiveFilterHeight,g=s.effectiveFilterWidth,b=d-1-s.padInfo.top,$=g-1-s.padInfo.left,_=d*g-1;this.userCode=`
      const ivec2 pads = ivec2(${b}, ${$});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d};
          wR += ${c}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${s.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${g}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${s.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${_} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${g} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class MaxPool3DBackpropProgram{constructor(s){this.variableNames=["dy","maxPos"],this.outputShape=s.inShape;const o=s.strideDepth,a=s.strideHeight,c=s.strideWidth,d=s.dilationDepth,g=s.dilationHeight,b=s.dilationWidth,$=s.effectiveFilterDepth,_=s.effectiveFilterHeight,_e=s.effectiveFilterWidth,et=$-1-s.padInfo.front,rt=_-1-s.padInfo.top,tt=_e-1-s.padInfo.left,j=$*_*_e-1;this.userCode=`
      const ivec3 pads = ivec3(${et}, ${rt}, ${tt});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${$};
           wD += ${d}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${s.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${_};
              wR += ${g}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${s.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${_e};
                wC += ${b}) {
              float dyC = float(dyCCorner + wC) / ${c}.0;

              if (dyC < 0.0 || dyC >= ${s.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${j} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${_} * ${_e} +
                  wR * ${_e} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3DGrad(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,input:d}=s,g=d,{filterSize:b,strides:$,pad:_,dimRoundingMode:_e}=a,et=[1,1,1],rt=computePool3DInfo(g.shape,b,$,et,_,_e),tt=new Pool3DProgram(rt,"max",!0),j=o.runWebGLProgram(tt,[g],g.dtype),nt=new MaxPool3DBackpropProgram(rt),st=o.runWebGLProgram(nt,[c,j],g.dtype);return o.disposeIntermediateTensorInfo(j),st}const maxPoolGrad3DConfig={kernelName:MaxPool3DGrad,backendName:"webgl",kernelFunc:maxPool3DGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolGrad(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,input:d,output:g}=s,b=d;assertNotComplex([d,g],"maxPoolGrad");const{filterSize:$,strides:_,pad:_e,dimRoundingMode:et}=a,rt=computePool2DInfo(b.shape,$,_,1,_e,et),tt=!0,j=new Pool2DProgram(rt,"max",tt),nt=o.runWebGLProgram(j,[b],b.dtype),st=new MaxPool2DBackpropProgram(rt),ot=o.runWebGLProgram(st,[c,nt],b.dtype);return o.disposeIntermediateTensorInfo(nt),ot}const maxPoolGradConfig={kernelName:MaxPoolGrad,backendName:"webgl",kernelFunc:maxPoolGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolWithArgmaxImpl(i,s,o,a){let c=new Pool2DProgram(o,"max",!1);const d=a.runWebGLProgram(c,[i],"float32");c=new Pool2DProgram(o,"max",!0,!0,s);const g=a.runWebGLProgram(c,[i],"float32");return[d,g]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxPoolWithArgmaxConfig={kernelName:MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:i,attrs:s,backend:o})=>{const{x:a}=i,{filterSize:c,strides:d,pad:g,includeBatchInIndex:b}=s,$=o;assert$2(a.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`);const _=[1,1];assert$2(eitherStridesOrDilationsAreOne(d,_),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${d} and dilations '${_}'`);const _e=computePool2DInfo(a.shape,c,d,_,g),[et,rt]=maxPoolWithArgmaxImpl(a,b,_e,$);return[et,rt]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function meanImpl(i,s,o,a){const c=sizeFromShape(s),g=sizeFromShape(i.shape)/c,b=reshape({inputs:{x:i},attrs:{shape:[g,c]},backend:a}),$=reduce(b,"float32","mean",a),_=reshape({inputs:{x:$},attrs:{shape:o},backend:a});return a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo($),_}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const meanConfig={kernelName:Mean,backendName:"webgl",kernelFunc:({inputs:i,attrs:s,backend:o})=>{const{x:a}=i,{keepDims:c,axis:d}=s,g=o,b=a.shape.length,$=parseAxisParam(d,a.shape);let _=$;const _e=getAxesPermutation(_,b),et=_e!=null,rt=g.shouldExecuteOnCPU([a]),tt=[];let j=a;if(et){if(rt){const pt=g.texData.get(j.dataId).values,it=new Array(b);for(let bt=0;bt<it.length;bt++)it[bt]=a.shape[_e[bt]];const yt=transposeImplCPU(pt,a.shape,a.dtype,_e,it);j=g.makeTensorInfo(it,a.dtype);const ft=g.texData.get(j.dataId);ft.values=yt}else j=transposeImpl(a,_e,g);tt.push(j),_=getInnerMostAxes(_.length,b)}assertAxesAreInnerMostDims("sum",_,b);const[nt,st]=computeOutAndReduceShapes(j.shape,_);let ot=nt;c&&(ot=expandShapeToKeepDim(nt,$));const ut=meanImpl(j,st,ot,g);for(const ht of tt)g.disposeIntermediateTensorInfo(ht);return ut}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function min(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,keepDims:g}=a,b=c.shape.length,$=parseAxisParam(d,c.shape);let _=$;const _e=getAxesPermutation(_,b);let et=c;_e!=null&&(et=transpose({inputs:{x:c},backend:o,attrs:{perm:_e}}),_=getInnerMostAxes(_.length,c.shape.length)),assertAxesAreInnerMostDims("min",_,b);const[rt,tt]=computeOutAndReduceShapes(et.shape,_),j=sizeFromShape(tt),nt=reshape({inputs:{x:et},backend:o,attrs:{shape:[-1,j]}}),st=reduce(nt,nt.dtype,"min",o);let ot;if(g){const ut=expandShapeToKeepDim(rt,$);ot=reshape({inputs:{x:st},backend:o,attrs:{shape:ut}})}else ot=reshape({inputs:{x:st},backend:o,attrs:{shape:rt}});return o.disposeIntermediateTensorInfo(nt),o.disposeIntermediateTensorInfo(st),_e!=null&&o.disposeIntermediateTensorInfo(et),ot}const minConfig={kernelName:Min,backendName:"webgl",kernelFunc:min};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MINIMUM=CHECK_NAN_SNIPPET$1+`
  return min(a, b);
`,MINIMUM_PACKED=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+CHECK_NAN_SNIPPET+`
  return result;
`,minimum=binaryKernelFunc({opSnippet:MINIMUM,packedOpSnippet:MINIMUM_PACKED,cpuKernelImpl:minimumImplCPU}),minimumConfig={kernelName:Minimum$1,backendName:"webgl",kernelFunc:minimum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MirrorPadProgram{constructor(s,o,a){this.variableNames=["x"],this.outputShape=o.map((_e,et)=>_e[0]+s[et]+_e[1]);const c=s.length,d=getCoordsDataType(c),g=o.map(_e=>_e[0]).join(","),b=o.map((_e,et)=>_e[0]+s[et]).join(","),$=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,c),_=a==="reflect"?0:1;if(c===1){this.userCode=`
        int start = ${g};
        int end = ${b};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${_};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${_};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${d} start = ${d}(${g});
      ${d} end = ${d}(${b});

      void main() {
        ${d} outC = getOutputCoords();
        for (int i = 0; i < ${c}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${_};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${_};
          }
        }
        ${d} coords = outC - start;
        setOutput(getX(${$}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MirrorPadPackedProgram{constructor(s,o,a){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o.map((j,nt)=>j[0]+s[nt]+j[1]);const c=s.length,d=getCoordsDataType(c),g=o.map(j=>j[0]).join(","),b=o.map((j,nt)=>j[0]+s[nt]).join(","),$=getChannels("rc",c),_=getChannels("source",c),_e=`${$[c-1]} < ${this.outputShape[c-1]}`,et=c===1?"source":`vec2(${_.slice(-2).join()})`,rt=a==="reflect"?0:1;let tt="";if(c===1){const j=`
        ${d} source = rc;
        if (source < start) {
          source = start * 2 - source - ${rt};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${rt};
        }
        source -= start;
      `;tt=`
        ${d} rc = outputLoc;
        ${j}
        result[0] = getChannel(getX(${_.join()}), ${et});
        ${$[c-1]} += 1;
        if(${_e}) {
          ${j}
          result[1] = getChannel(getX(${_.join()}), ${et});
        }
      `}else{const j=`
        ${d} source = rc;
        ${d} lt = ${d}(lessThan(source, start));
        ${d} gte = ${d}(greaterThanEqual(source, end));
        ${d} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${rt}) +
                gte * ((end - 1) * 2 - source + ${rt});
        source -= start;
      `;tt=`
        ${d} rc = outputLoc;
        ${j}
        result[0] = getChannel(getX(${_.join()}), ${et});
        ${$[c-1]} += 1;
        if(${_e}) {
          ${j}
          result[1] = getChannel(getX(${_.join()}), ${et});
        }
        rc = outputLoc;
        ${$[c-2]} += 1;
        if(${$[c-2]} < ${this.outputShape[c-2]}) {
          ${j}
          result[2] = getChannel(getX(${_.join()}), ${et});
          ${$[c-1]} += 1;
          if(${_e}) {
            ${j}
            result[3] = getChannel(getX(${_.join()}), ${et});
          }
        }
      `}this.userCode=`
      const ${d} start = ${d}(${g});
      const ${d} end = ${d}(${b});

      void main() {
        ${d} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${tt}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mirrorPadKernelFunc=({inputs:i,backend:s,attrs:o})=>{const{x:a}=i,{paddings:c,mode:d}=o,g=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new MirrorPadPackedProgram(a.shape,c,d):new MirrorPadProgram(a.shape,c,d);return s.runWebGLProgram(g,[a],a.dtype)},mirrorPadConfig={kernelName:MirrorPad,backendName:"webgl",kernelFunc:mirrorPadKernelFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MOD=`if (b == 0.0) return NAN;
  return mod(a, b);`,MOD_PACKED=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+CHECK_NAN_SNIPPET+`
  return result;
`,mod=binaryKernelFunc({opSnippet:MOD,packedOpSnippet:MOD_PACKED}),modConfig={kernelName:Mod,backendName:"webgl",kernelFunc:mod};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MultinomialProgram{constructor(s,o,a){this.variableNames=["probs"],this.outputShape=[s,a],this.userCode=`
      uniform float seed;

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${o-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${o-1}));
      }
    `}getCustomSetupFunc(s){return(o,a)=>{this.seedLoc==null&&(this.seedLoc=o.getUniformLocation(a,"seed")),o.gl.uniform1f(this.seedLoc,s)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DIV=`
if (a == b) {
  return 1.0;
};
return a / b;`,DIV_PACKED=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,realDiv=binaryKernelFunc({opSnippet:DIV,packedOpSnippet:DIV_PACKED,checkOutOfBounds:!0}),realDivConfig={kernelName:RealDiv,backendName:"webgl",kernelFunc:realDiv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SUB="return a - b;",sub=binaryKernelFunc({opSnippet:SUB,packedOpSnippet:SUB,supportsComplex:!0,cpuKernelImpl:subImplCPU}),subConfig={kernelName:Sub,backendName:"webgl",kernelFunc:sub};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function softmax(i){const{inputs:s,backend:o,attrs:a}=i,{logits:c}=s,{dim:d}=a,g=parseAxisParam([d],c.shape),b=max({inputs:{x:c},backend:o,attrs:{reductionIndices:g,keepDims:!1}}),$=expandShapeToKeepDim(b.shape,g),_=reshape({inputs:{x:b},backend:o,attrs:{shape:$}}),_e=sub({inputs:{a:c,b:_},backend:o}),et=exp({inputs:{x:_e},backend:o}),rt=sum({inputs:{x:et},backend:o,attrs:{axis:g,keepDims:!1}}),tt=reshape({inputs:{x:rt},backend:o,attrs:{shape:$}}),j=realDiv({inputs:{a:et,b:tt},backend:o});return o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo(_),o.disposeIntermediateTensorInfo(_e),o.disposeIntermediateTensorInfo(et),o.disposeIntermediateTensorInfo(rt),o.disposeIntermediateTensorInfo(tt),j}const softmaxConfig={kernelName:Softmax$2,backendName:"webgl",kernelFunc:softmax};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function multinomial(i){const{inputs:s,backend:o,attrs:a}=i,{logits:c}=s,{numSamples:d,seed:g,normalized:b}=a,$=b?c:softmax({inputs:{logits:c},backend:o,attrs:{dim:c.shape.length-1}}),_=$.shape[0],_e=$.shape[1],et=new MultinomialProgram(_,_e,d),rt=et.getCustomSetupFunc(g),tt=o.runWebGLProgram(et,[$],"int32",rt);return b||o.disposeIntermediateTensorInfo($),tt}const multinomialConfig={kernelName:Multinomial,backendName:"webgl",kernelFunc:multinomial};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NEG="return -x;";function neg(i){const{inputs:s,backend:o}=i,{x:a}=s;if(o.shouldExecuteOnCPU([a])){const d=o.texData.get(a.dataId),[g,b]=negImplCPU(d.values,a.shape,a.dtype);return o.makeTensorInfo(b,a.dtype,g)}let c;return env().getBool("WEBGL_PACK_UNARY_OPERATIONS")?c=new UnaryOpPackedProgram(a.shape,NEG):c=new UnaryOpProgram(a.shape,NEG),o.runWebGLProgram(c,[a],a.dtype)}const negConfig={kernelName:Neg,backendName:"webgl",kernelFunc:neg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV3Impl=nonMaxSuppressionV3Impl$2;function nonMaxSuppressionV3(i){warn$1("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:s,backend:o,attrs:a}=i,{boxes:c,scores:d}=s,{maxOutputSize:g,iouThreshold:b,scoreThreshold:$}=a,_=o.readSync(c.dataId),_e=o.readSync(d.dataId),{selectedIndices:et}=nonMaxSuppressionV3Impl(_,_e,g,b,$);return o.makeTensorInfo([et.length],"int32",new Int32Array(et))}const nonMaxSuppressionV3Config={kernelName:NonMaxSuppressionV3,backendName:"webgl",kernelFunc:nonMaxSuppressionV3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV4Impl=nonMaxSuppressionV4Impl$2;function nonMaxSuppressionV4(i){warn$1("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:s,backend:o,attrs:a}=i,{boxes:c,scores:d}=s,{maxOutputSize:g,iouThreshold:b,scoreThreshold:$,padToMaxOutputSize:_}=a,_e=o.readSync(c.dataId),et=o.readSync(d.dataId),{selectedIndices:rt,validOutputs:tt}=nonMaxSuppressionV4Impl(_e,et,g,b,$,_);return[o.makeTensorInfo([rt.length],"int32",new Int32Array(rt)),o.makeTensorInfo([],"int32",new Int32Array([tt]))]}const nonMaxSuppressionV4Config={kernelName:NonMaxSuppressionV4,backendName:"webgl",kernelFunc:nonMaxSuppressionV4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV5Impl=nonMaxSuppressionV5Impl$2;function nonMaxSuppressionV5(i){warn$1("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:s,backend:o,attrs:a}=i,{boxes:c,scores:d}=s,{maxOutputSize:g,iouThreshold:b,scoreThreshold:$,softNmsSigma:_}=a,_e=o.readSync(c.dataId),et=o.readSync(d.dataId),rt=g,tt=b,j=$,nt=_,{selectedIndices:st,selectedScores:ot}=nonMaxSuppressionV5Impl(_e,et,rt,tt,j,nt);return[o.makeTensorInfo([st.length],"int32",new Int32Array(st)),o.makeTensorInfo([ot.length],"float32",new Float32Array(ot))]}const nonMaxSuppressionV5Config={kernelName:NonMaxSuppressionV5,backendName:"webgl",kernelFunc:nonMaxSuppressionV5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OneHotProgram{constructor(s,o,a,c){this.variableNames=["indices"],this.outputShape=[s,o],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${c}), float(${a}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oneHot=i=>{const{inputs:s,backend:o,attrs:a}=i,{indices:c}=s,{depth:d,onValue:g,offValue:b}=a,$=sizeFromShape(c.shape),_=new OneHotProgram($,d,g,b),_e=reshape({inputs:{x:c},backend:o,attrs:{shape:[$]}}),et=o.runWebGLProgram(_,[_e],c.dtype);o.disposeIntermediateTensorInfo(_e);const rt=[...c.shape,d],tt=reshape({inputs:{x:et},backend:o,attrs:{shape:rt}});return o.disposeIntermediateTensorInfo(et),tt},oneHotConfig={kernelName:OneHot,backendName:"webgl",kernelFunc:oneHot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zerosLike(i){const{inputs:s,backend:o}=i,{x:a}=s;if(a.dtype==="complex64"){const c=real({inputs:{input:a},backend:o}),d=zerosLike({inputs:{x:c},backend:o}),g=imag({inputs:{input:a},backend:o}),b=zerosLike({inputs:{x:g},backend:o}),$=complex({inputs:{real:d,imag:b},backend:o});return o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(g),o.disposeIntermediateTensorInfo(b),$}else return fill({attrs:{shape:a.shape,dtype:a.dtype,value:a.dtype==="string"?"":0},backend:o})}const zerosLikeConfig={kernelName:ZerosLike,backendName:"webgl",kernelFunc:zerosLike};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function onesLike(i){const{inputs:s,backend:o}=i,{x:a}=s;if(a.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(a.dtype==="complex64"){const c=real({inputs:{input:a},backend:o}),d=onesLike({inputs:{x:c},backend:o}),g=imag({inputs:{input:a},backend:o}),b=zerosLike({inputs:{x:g},backend:o}),$=complex({inputs:{real:d,imag:b},backend:o});return o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(g),o.disposeIntermediateTensorInfo(b),$}else return fill({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:o})}const onesLikeConfig={kernelName:OnesLike,backendName:"webgl",kernelFunc:onesLike};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pack(i){const{inputs:s,backend:o,attrs:a}=i,{axis:c}=a;if(s.length===1)return expandDims({inputs:{input:s[0]},backend:o,attrs:{dim:c}});const d=s[0].shape,g=s[0].dtype;s.forEach(_e=>{assertShapesMatch(d,_e.shape,"All tensors passed to stack must have matching shapes"),assert$2(g===_e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const b=[],$=s.map(_e=>{const et=expandDims({inputs:{input:_e},backend:o,attrs:{dim:c}});return b.push(et),et}),_=concat({inputs:$,backend:o,attrs:{axis:c}});return b.forEach(_e=>o.disposeIntermediateTensorInfo(_e)),_}const packConfig={kernelName:Pack,backendName:"webgl",kernelFunc:pack};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PadProgram{constructor(s,o,a){this.variableNames=["x"],this.outputShape=o.map((_,_e)=>_[0]+s[_e]+_[1]);const c=s.length,d=getCoordsDataType(c),g=o.map(_=>_[0]).join(","),b=o.map((_,_e)=>_[0]+s[_e]).join(","),$=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,c);if(c===1){this.userCode=`
        int start = ${g};
        int end = ${b};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(float(${a}));
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${d} start = ${d}(${g});
      ${d} end = ${d}(${b});

      void main() {
        ${d} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(float(${a}));
        } else {
          ${d} coords = outC - start;
          setOutput(getX(${$}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PadPackedProgram{constructor(s,o,a){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o.map((nt,st)=>nt[0]+s[st]+nt[1]);const c=s.length,d=getCoordsDataType(c),g=o.map(nt=>nt[0]).join(","),b=o.map((nt,st)=>nt[0]+s[st]).join(","),$=getChannels("rc",c),_=getChannels("source",c),_e=`${$[c-1]} < ${this.outputShape[c-1]}`,et=c===1?"source":`vec2(${_.slice(-2).join()})`,rt=[`${d} rc = outputLoc;`,`${$[c-1]} += 1;
       if(${_e}) {
      `,c===1?"":`}
       rc = outputLoc;
       ${$[c-2]} += 1;
       if(${$[c-2]} < ${this.outputShape[c-2]}) {`,c===1?"":`  ${$[c-1]} += 1;
         if(${_e}) {`],tt=c===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let j="";for(let nt=0,st=c===1?2:4;nt<st;nt++)j+=`
        ${rt[nt]}
        if (${tt}) {
          result[${nt}] = float(${a});
        } else {
          ${d} source = rc - start;
          result[${nt}] = getChannel(getX(${_.join()}), ${et});
        }
      `;j+=c===1?"} ":"}}",this.userCode=`
      const ${d} start = ${d}(${g});
      const ${d} end = ${d}(${b});

      void main() {
        ${d} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${j}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const padV2=i=>{const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{paddings:d,constantValue:g}=a,b=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new PadPackedProgram(c.shape,d,g):new PadProgram(c.shape,d,g);return o.runWebGLProgram(b,[c],c.dtype)},padV2Config={kernelName:PadV2,backendName:"webgl",kernelFunc:padV2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const POW=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,POW_PACKED=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+CHECK_NAN_SNIPPET+`
  return result;
`,pow=binaryKernelFunc({opSnippet:POW,packedOpSnippet:POW_PACKED}),powConfig={kernelName:Pow$1,backendName:"webgl",kernelFunc:pow};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function prod(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,keepDims:g}=a,b=c.shape.length,$=[],_=parseAxisParam(d,c.shape);let _e=_;const et=getAxesPermutation(_e,b);let rt=c;et!=null&&(rt=transpose({inputs:{x:c},backend:o,attrs:{perm:et}}),_e=getInnerMostAxes(_e.length,b),$.push(rt)),assertAxesAreInnerMostDims("prod",_e,b);let tt;if(o.shouldExecuteOnCPU([rt])){const j=o.texData.get(rt.dataId).values,{outVals:nt,outShape:st,outDtype:ot}=prodImplCPU(rt.shape,rt.dtype,j,_e);tt=o.makeTensorInfo(st,ot,nt)}else{const[j,nt]=computeOutAndReduceShapes(rt.shape,_e),st=sizeFromShape(nt),ot=reshape({inputs:{x:rt},backend:o,attrs:{shape:[-1,st]}}),ut=sumOutType(c.dtype),ht=reduce(ot,ut,"prod",o);tt=reshape({inputs:{x:ht},backend:o,attrs:{shape:j}}),$.push(ot),$.push(ht)}if(g){$.push(tt);const j=expandShapeToKeepDim(tt.shape,_);tt=reshape({inputs:{x:tt},backend:o,attrs:{shape:j}})}return $.forEach(j=>o.disposeIntermediateTensorInfo(j)),tt}const prodConfig={kernelName:Prod,backendName:"webgl",kernelFunc:prod};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const range$1=i=>{const{backend:s,attrs:o}=i,{start:a,stop:c,step:d,dtype:g}=o,b=rangeImplCPU(a,c,d,g);return s.makeTensorInfo([b.length],g,b)},rangeConfig={kernelName:Range,backendName:"webgl",kernelFunc:range$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RECIPROCAL="return 1.0 / x;",reciprocal=unaryKernelFunc({opSnippet:RECIPROCAL}),reciprocalConfig={kernelName:Reciprocal,backendName:"webgl",kernelFunc:reciprocal};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RELU=CHECK_NAN_SNIPPET$2+`
  return (x < 0.0) ? 0.0 : x;
`,RELU_PACKED=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,relu=unaryKernelFunc({opSnippet:RELU,packedOpSnippet:RELU_PACKED}),reluConfig={kernelName:Relu$1,backendName:"webgl",kernelFunc:relu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RELU6=CHECK_NAN_SNIPPET$2+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,RELU6_PACKED=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,relu6=unaryKernelFunc({opSnippet:RELU6,packedOpSnippet:RELU6_PACKED}),relu6Config={kernelName:Relu6$1,backendName:"webgl",kernelFunc:relu6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeBilinearProgram{constructor(s,o,a,c,d){this.variableNames=["A"],this.outputShape=[];const[g,b,$,_]=s;this.outputShape=[g,o,a,_];const _e=[c&&o>1?b-1:b,c&&a>1?$-1:$],et=[c&&o>1?o-1:o,c&&a>1?a-1:a];let rt;d?rt="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":rt="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${_e[0]/et[0]},
          ${_e[1]/et[1]});
      const vec2 inputShapeRC = vec2(${b}.0, ${$}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${rt};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeBilinearPackedProgram{constructor(s,o,a,c,d){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[g,b,$,_]=s;this.outputShape=[g,o,a,_];const _e=[c&&o>1?b-1:b,c&&a>1?$-1:$],et=[c&&o>1?o-1:o,c&&a>1?a-1:a];let rt;d?rt="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":rt="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${_e[0]/et[0]},
          ${_e[1]/et[1]},
          ${_e[1]/et[1]});
      const vec3 inputShapeRC = vec3(${b}.0, ${$}.0,
                                     ${$}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${rt};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${_-1};
        bool hasNextRow = coords.z < ${a-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinear(i){const{inputs:s,backend:o,attrs:a}=i,{images:c}=s,{alignCorners:d,halfPixelCenters:g,size:b}=a,[$,_]=b,_e=env().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ResizeBilinearPackedProgram(c.shape,$,_,d,g):new ResizeBilinearProgram(c.shape,$,_,d,g);return o.runWebGLProgram(_e,[c],"float32")}const resizeBilinearConfig={kernelName:ResizeBilinear,backendName:"webgl",kernelFunc:resizeBilinear};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeBilinearBackpropProgram{constructor(s,o,a){this.variableNames=["dy"],this.outputShape=[],this.outputShape=o;const[,c,d]=o,[,g,b]=s,$=[a&&g>1?c-1:c,a&&b>1?d-1:d],_=[a&&g>1?g-1:g,a&&b>1?b-1:b],_e=$[0]/_[0],et=$[1]/_[1],rt=1/_e,tt=1/et,j=Math.ceil(rt)*2+2,nt=Math.ceil(tt)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${_e});
        const float widthScale = float(${et});

        const float invHeightScale = float(${rt});
        const float invWidthScale = float(${tt});

        const int winHeight = int(${j});
        const int winWidth = int(${nt});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${g}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${b}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${c-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${d-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinearGrad(i){const{inputs:s,backend:o,attrs:a}=i,{images:c,dy:d}=s,{alignCorners:g}=a,b=new ResizeBilinearBackpropProgram(d.shape,c.shape,g);return o.runWebGLProgram(b,[d],d.dtype)}const resizeBilinearGradConfig={kernelName:ResizeBilinearGrad,backendName:"webgl",kernelFunc:resizeBilinearGrad};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeNearestNeighborProgram{constructor(s,o,a,c,d){this.variableNames=["A"],this.outputShape=[];const[g,b,$,_]=s;this.outputShape=[g,o,a,_];const _e=[c&&o>1?b-1:b,c&&a>1?$-1:$],et=[c&&o>1?o-1:o,c&&a>1?a-1:a],rt=c?"0.5":"0.0";let tt;d?tt="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":tt="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${_e[0]/et[0]},
          ${_e[1]/et[1]});
      const vec2 inputShapeRC = vec2(${b}.0, ${$}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${tt};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${rt})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighbor(i){const{inputs:s,backend:o,attrs:a}=i,{images:c}=s,{alignCorners:d,halfPixelCenters:g,size:b}=a,[$,_]=b,_e=new ResizeNearestNeighborProgram(c.shape,$,_,d,g);return o.runWebGLProgram(_e,[c],c.dtype)}const resizeNearestNeighborConfig={kernelName:ResizeNearestNeighbor,backendName:"webgl",kernelFunc:resizeNearestNeighbor};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeNearestNeigborBackpropProgram{constructor(s,o,a){this.variableNames=["dy"],this.outputShape=[],this.outputShape=o;const[,c,d]=o,[,g,b]=s,$=[a&&g>1?c-1:c,a&&b>1?d-1:d],_=[a&&g>1?g-1:g,a&&b>1?b-1:b],_e=$[0]/_[0],et=$[1]/_[1],rt=1/_e,tt=1/et,j=Math.ceil(rt)*2+2,nt=Math.ceil(tt)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${_e});
        const float widthScale = float(${et});

        const float invHeightScale = float(${rt});
        const float invWidthScale = float(${tt});

        const int winHeight = int(${j});
        const int winWidth = int(${nt});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${g}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${b}) {
              continue;
            }

            float sourceFracRow =
              float(${$[0]}) *
                (float(dyR) / float(${_[0]}));

            float sourceFracCol =
                float(${$[1]}) *
                  (float(dyC) / float(${_[1]}));

            int sourceNearestRow = int(min(
                float(int(${c}) - 1),
                ${a} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${d}) - 1),
                ${a} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighborGrad(i){const{inputs:s,backend:o,attrs:a}=i,{images:c,dy:d}=s,{alignCorners:g}=a,b=new ResizeNearestNeigborBackpropProgram(d.shape,c.shape,g);return o.runWebGLProgram(b,[d],d.dtype)}const resizeNearestNeighborGradConfig={kernelName:ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:resizeNearestNeighborGrad};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ReverseProgram{constructor(s,o){this.variableNames=["x"];const a=s.length;if(a>4)throw new Error(`WebGL backend: Reverse of rank-${a} tensor is not yet supported`);if(this.outputShape=s,a===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${s[0]} - coord - 1));
        }
      `;return}const c=b=>o.indexOf(b)!==-1&&s[b]!==1?`${s[b]} - coords[${b}] - 1`:`coords[${b}]`,d=s.map((b,$)=>c($)).join(","),g=getCoordsDataType(a);this.userCode=`
      void main() {
        ${g} coords = getOutputCoords();
        setOutput(getX(${d}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ReversePackedProgram{constructor(s,o){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const a=s.length;if(a>4)throw new Error(`WebGL backend: Reverse of rank-${a} tensor is not yet supported`);this.outputShape=s;const c=getChannels("rc",a),d=`${c[a-1]} + 1 < ${this.outputShape[a-1]}`,g=`${c[a-2]} + 1 < ${this.outputShape[a-2]}`,b=getCoordsDataType(a);a===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${s[0]} - rc - 1),
            ${s[0]} - rc - 1);
          if(${d}){
              result.g = getChannel(getX(${s[0]} - (rc  + 1) - 1),
                ${s[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${b} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${$(c.slice())};
          if(${d}){
            result.g = ${_(c.slice())};
          }
          if(${g}) {
            result.b = ${_e(c.slice())};
            if(${d}) {
              result.a = ${et(c.slice())};
            }
          }
          setOutput(result);
        }
    `;function $(j){return rt(j)}function _(j){return j[a-1]="("+j[a-1]+" + 1)",rt(j)}function _e(j){return j[a-2]="("+j[a-2]+" + 1)",rt(j)}function et(j){return j[a-1]="("+j[a-1]+" + 1)",j[a-2]="("+j[a-2]+" + 1)",rt(j)}function rt(j){const nt=s.map((ut,ht)=>tt(ht,j)),st=nt.join(","),ot=nt.slice(-2).join(",");return`getChannel(getX(${st}), vec2(${ot}))`}function tt(j,nt){return o.indexOf(j)!==-1&&s[j]!==1?`${s[j]} - ${nt[j]} - 1`:`${nt[j]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reverse(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{dims:d}=a,g=c.shape.length,b=parseAxisParam(d,c.shape);if(g===0)return identity({inputs:{x:c},backend:o});const $=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ReversePackedProgram(c.shape,b):new ReverseProgram(c.shape,b);return o.runWebGLProgram($,[c],c.dtype)}const reverseConfig={kernelName:Reverse,backendName:"webgl",kernelFunc:reverse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RotateProgram{constructor(s,o,a,c){this.variableNames=["Image"],this.outputShape=[];const d=s[1],g=s[2],b=Math.sin(o).toFixed(3),$=Math.cos(o).toFixed(3);this.outputShape=s;const[_,_e]=getImageCenter(c,d,g),et=_.toFixed(3),rt=_e.toFixed(3);let tt="";typeof a=="number"?tt=`float outputValue = ${a.toFixed(2)};`:tt=`
        vec3 fill = vec3(${a.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - ${et}) * ${$} - (float(y) - ${rt}) * ${b};
          float coordYFloat = (float(x) - ${et}) * ${b} + (float(y) - ${rt}) * ${$};
          int coordX = int(round(coordXFloat + ${et}));
          int coordY = int(round(coordYFloat + ${rt}));
          ${tt}
          if(coordX >= 0 && coordX < ${g} && coordY >= 0 && coordY < ${d}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rotateWithOffsetConfig={kernelName:RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:i,attrs:s,backend:o})=>{const{image:a}=i,{radians:c,fillValue:d,center:g}=s,b=o,$=new RotateProgram(a.shape,c,d,g);return b.runWebGLProgram($,[a],a.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ROUND=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,round=unaryKernelFunc({opSnippet:ROUND}),roundConfig={kernelName:Round,backendName:"webgl",kernelFunc:round};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RSQRT="return inversesqrt(x);",rsqrt=unaryKernelFunc({opSnippet:RSQRT,cpuKernelImpl:rsqrtImplCPU}),rsqrtConfig={kernelName:Rsqrt,backendName:"webgl",kernelFunc:rsqrt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ScatterProgram{constructor(s,o,a,c,d,g,b=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=g;const $=getCoordsDataType(d.length),_=getCoordsDataType(g.length);let _e="";a===1?_e="i":a===2&&(_e="i, j");const et=`getIndices(${_e})`;let rt="";c===1?rt="i":c===2&&(rt="i, coords[1]");const tt=`getUpdates(${rt})`,j=o>1?"strides[j]":"strides";this.userCode=`
        ${$} strides = ${$}(${d});

        void main() {
          ${_} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${s}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${o}; j++) {
              int index = round(${et});
              flattenedIndex += index * ${j};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${tt};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function scatterNd(i){const{inputs:s,backend:o,attrs:a}=i,{indices:c,updates:d}=s,{shape:g}=a,{sliceRank:b,numUpdates:$,sliceSize:_,strides:_e,outputSize:et}=calculateShapes(d,c,g),rt=[et/_,_];if(et===0)return o.makeTensorInfo(g,c.dtype);const tt=reshape({inputs:{x:c},backend:o,attrs:{shape:[$,b]}}),j=reshape({inputs:{x:d},backend:o,attrs:{shape:[$,_]}}),nt=o.makeTensorInfo([],"float32",new Float32Array([0])),st=new ScatterProgram($,b,tt.shape.length,j.shape.length,_e,rt),ot=o.runWebGLProgram(st,[j,tt,nt],j.dtype),ut=reshape({inputs:{x:ot},backend:o,attrs:{shape:g}});return o.disposeIntermediateTensorInfo(tt),o.disposeIntermediateTensorInfo(j),o.disposeIntermediateTensorInfo(ot),o.disposeIntermediateTensorInfo(nt),ut}const scatterNdConfig={kernelName:ScatterNd,backendName:"webgl",kernelFunc:scatterNd};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SelectProgram{constructor(s,o,a){this.variableNames=["c","a","b"],this.outputShape=o;let c,d;if(a>4)throw Error(`Where for rank ${a} is not yet supported`);if(a===1)d="resRC",c="resRC";else{const b=["resRC.x","resRC.y","resRC.z","resRC.w"],$=[],_=[];for(let _e=0;_e<o.length;_e++)_.push(`${b[_e]}`),_e<s&&$.push(`${b[_e]}`);c=$.join(),d=_.join()}const g=getCoordsDataType(a);this.userCode=`
      void main() {
        ${g} resRC = getOutputCoords();
        float cVal = getC(${c});
        if (cVal >= 1.0) {
          setOutput(getA(${d}));
        } else {
          setOutput(getB(${d}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function select(i){const{inputs:s,backend:o}=i,{condition:a,t:c,e:d}=s,g=new SelectProgram(a.shape.length,c.shape,c.shape.length);return o.runWebGLProgram(g,[a,c,d],upcastType(c.dtype,d.dtype))}const selectConfig={kernelName:Select,backendName:"webgl",kernelFunc:select};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SELU=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${SELU_SCALEALPHA};
  float scale = ${SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,selu=unaryKernelFunc({opSnippet:SELU}),seluConfig={kernelName:Selu$1,backendName:"webgl",kernelFunc:selu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SIGMOID="return 1.0 / (1.0 + exp(-1.0 * x));",sigmoid=unaryKernelFunc({opSnippet:SIGMOID}),sigmoidConfig={kernelName:Sigmoid$1,backendName:"webgl",kernelFunc:sigmoid};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SIGN=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,sign=unaryKernelFunc({opSnippet:SIGN}),signConfig={kernelName:Sign,backendName:"webgl",kernelFunc:sign};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SIN=CHECK_NAN_SNIPPET_UNARY+`
  return sin(x);
`,sin=unaryKernelFunc({opSnippet:SIN}),sinConfig={kernelName:Sin,backendName:"webgl",kernelFunc:sin};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SINH=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,sinh=unaryKernelFunc({opSnippet:SINH}),sinhConfig={kernelName:Sinh,backendName:"webgl",kernelFunc:sinh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SOFTPLUS=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,softplus=unaryKernelFunc({opSnippet:SOFTPLUS}),softplusConfig={kernelName:Softplus$1,backendName:"webgl",kernelFunc:softplus};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const spaceToBatchND=i=>{const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{blockShape:d,paddings:g}=a;assert$2(c.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const b=d.reduce((ot,ut)=>ot*ut),$=[[0,0]];$.push(...g);for(let ot=1+d.length;ot<c.shape.length;++ot)$.push([0,0]);const _=[],_e=padV2({inputs:{x:c},backend:o,attrs:{paddings:$,constantValue:0}}),et=getReshaped(_e.shape,d,b,!1),rt=getPermuted(et.length,d.length,!1),tt=getReshapedPermuted(_e.shape,d,b,!1),j=reshape({inputs:{x:_e},backend:o,attrs:{shape:et}}),nt=transpose({inputs:{x:j},backend:o,attrs:{perm:rt}}),st=reshape({inputs:{x:nt},backend:o,attrs:{shape:tt}});return _.push(_e),_.push(j),_.push(nt),_.forEach(ot=>o.disposeIntermediateTensorInfo(ot)),st},spaceToBatchNDConfig={kernelName:SpaceToBatchND,backendName:"webgl",kernelFunc:spaceToBatchND};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseToDense(i){const{inputs:s,backend:o,attrs:a}=i,{sparseIndices:c,sparseValues:d,defaultValue:g}=s,{outputShape:b}=a,{sliceRank:$,numUpdates:_,strides:_e,outputSize:et}=calculateShapes(d,c,b),rt=!1,tt=new ScatterProgram(_,$,c.shape.length,d.shape.length,_e,[et,1],rt),j=o.runWebGLProgram(tt,[d,c,g],d.dtype),nt=reshape({inputs:{x:j},backend:o,attrs:{shape:b}});return o.disposeIntermediateTensorInfo(j),nt}const sparseToDenseConfig={kernelName:SparseToDense,backendName:"webgl",kernelFunc:sparseToDense};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function splitV(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{numOrSizeSplits:d,axis:g}=a,b=parseAxisParam(g,c.shape)[0],$=prepareSplitSize(c,d,b),_=c.shape.length,_e=new Array(_).fill(0),et=c.shape.slice();return $.map(rt=>{const tt=[...et];tt[b]=rt;const j=slice({inputs:{x:c},backend:o,attrs:{begin:_e,size:tt}});return _e[b]+=rt,j})}const splitVConfig={kernelName:SplitV,backendName:"webgl",kernelFunc:splitV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SQRT="return sqrt(x);",sqrt=unaryKernelFunc({opSnippet:SQRT}),sqrtConfig={kernelName:Sqrt,backendName:"webgl",kernelFunc:sqrt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SQUARE="return x * x;",square=unaryKernelFunc({opSnippet:SQUARE}),squareConfig={kernelName:Square,backendName:"webgl",kernelFunc:square};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SQUARED_DIFFERENCE="return (a - b) * (a - b);",squaredDifference=binaryKernelFunc({opSnippet:SQUARED_DIFFERENCE,packedOpSnippet:SQUARED_DIFFERENCE}),squaredDifferenceConfig={kernelName:SquaredDifference,backendName:"webgl",kernelFunc:squaredDifference};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function step({inputs:i,attrs:s,backend:o}){const{x:a}=i,c=CHECK_NAN_SNIPPET$2+`
    return x > 0.0 ? 1.0 : float(${s.alpha});
  `,d=new UnaryOpProgram(a.shape,c);return o.runWebGLProgram(d,[a],a.dtype)}const stepConfig={kernelName:Step,backendName:"webgl",kernelFunc:step};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class StridedSliceProgram{constructor(s,o,a){this.variableNames=["x"],this.outputShape=a;const c=a.length,d=getCoordsDataType(a.length),g=getCoordsDataType(a.length);let b="";if(c===1)b="coords * strides + begin";else{let $=0;b=a.map((_,_e)=>($++,a.length===1?`coords * strides[${_e}] + begin[${_e}]`:`coords[${$-1}] * strides[${_e}] + begin[${_e}]`)).join(",")}this.userCode=`
      ${d} begin = ${d}(${s});
      ${d} strides = ${d}(${o});

      void main() {
        ${g} coords = getOutputCoords();
        setOutput(getX(${b}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stridedSlice(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{begin:d,end:g,strides:b,beginMask:$,endMask:_,ellipsisMask:_e,newAxisMask:et,shrinkAxisMask:rt}=a,{nonStrided:tt,$begin:j,$strides:nt,size:st,newShape:ot,outShape:ut}=sliceInfo(c.shape,d,g,b,$,_,_e,et,rt),ht=reshape({inputs:{x:c},backend:o,attrs:{shape:ot}});let pt;if(tt){const yt=slice({inputs:{x:ht},backend:o,attrs:{begin:j,size:st}});pt=reshape({inputs:{x:yt},backend:o,attrs:{shape:ut}}),o.disposeIntermediateTensorInfo(yt)}else if(ut.some(yt=>yt===0))pt=o.makeTensorInfo(ut,c.dtype,[]);else if(o.shouldExecuteOnCPU([ht])){const bt=o.texData.get(ht.dataId).values,Tt=buffer(ht.shape,ht.dtype,bt),Ct=stridedSliceImplCPU(ut,Tt,nt,j);pt=o.makeTensorInfo(ut,ht.dtype,Ct.values)}else{const ft=new StridedSliceProgram(j,nt,ut);pt=o.runWebGLProgram(ft,[ht],ht.dtype)}const it=reshape({inputs:{x:pt},backend:o,attrs:{shape:ut}});return o.disposeIntermediateTensorInfo(ht),o.disposeIntermediateTensorInfo(pt),it}const stridedSliceConfig={kernelName:StridedSlice,backendName:"webgl",kernelFunc:stridedSlice};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TAN="return tan(x);",tan=unaryKernelFunc({opSnippet:TAN}),tanConfig={kernelName:Tan,backendName:"webgl",kernelFunc:tan};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TANH=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,tanh=unaryKernelFunc({opSnippet:TANH}),tanhConfig={kernelName:Tanh$1,backendName:"webgl",kernelFunc:tanh};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TileProgram{constructor(s,o){this.variableNames=["A"];const a=new Array(s.length);for(let g=0;g<a.length;g++)a[g]=s[g]*o[g];this.outputShape=a,this.rank=a.length;const c=getCoordsDataType(this.rank),d=getSourceCoords(s);this.userCode=`
      void main() {
        ${c} resRC = getOutputCoords();
        setOutput(getA(${d}));
      }
    `}}function getSourceCoords(i){const s=i.length;if(s>5)throw Error(`Tile for rank ${s} is not yet supported`);if(s===1)return`imod(resRC, ${i[0]})`;const o=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let c=0;c<i.length;c++)a.push(`imod(${o[c]}, ${i[c]})`);return a.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tile(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{reps:d}=a;if(c.dtype==="string"){const _=o.readSync(c.dataId).map(rt=>decodeString(rt)),_e=buffer(c.shape,c.dtype,_),et=tileImplCPU(_e,d);return o.makeTensorInfo(et.shape,et.dtype,et.values)}const g=new TileProgram(c.shape,d);return o.runWebGLProgram(g,[c],c.dtype)}const tileConfig={kernelName:Tile,backendName:"webgl",kernelFunc:tile};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function topK(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{k:d,sorted:g}=a,b=o.readSync(c.dataId),[$,_]=topKImplCPU(b,c.shape,c.dtype,d,g);return[o.makeTensorInfo($.shape,$.dtype,$.values),o.makeTensorInfo(_.shape,_.dtype,_.values)]}const topKConfig={kernelName:TopK,backendName:"webgl",kernelFunc:topK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unique(i){const{inputs:s,attrs:o,backend:a}=i,{axis:c}=o,{x:d}=s;assertNotComplex(d,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const g=a.readSync(d.dataId),{outputValues:b,outputShape:$,indices:_}=uniqueImplCPU(g,c,d.shape,d.dtype);return[a.makeTensorInfo($,d.dtype,b),a.makeTensorInfo([_.length],"int32",_)]}const uniqueConfig={kernelName:Unique,backendName:"webgl",kernelFunc:unique};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unpack(i){const{inputs:s,backend:o,attrs:a}=i,{value:c}=s;let{axis:d}=a;d<0&&(d+=c.shape.length);const g=c,b=g.shape.length,$=c.shape[d],_=new Array(b-1);let _e=0;for(let nt=0;nt<b;nt++)nt!==d&&(_[_e++]=g.shape[nt]);const et=[],rt=new Array(b).fill(0),tt=g.shape.slice();tt[d]=1;const j=new Array($);for(let nt=0;nt<j.length;nt++){rt[d]=nt;const st=slice({inputs:{x:g},backend:o,attrs:{begin:rt,size:tt}}),ot=reshape({inputs:{x:st},backend:o,attrs:{shape:_}});j[nt]=ot,et.push(st)}return et.forEach(nt=>o.disposeIntermediateTensorInfo(nt)),j}const unpackConfig={kernelName:Unpack,backendName:"webgl",kernelFunc:unpack};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SegmentOpProgram{constructor(s,o){this.variableNames=["x","segmentIds"];const a=s.windowSize,c=s.batchSize,d=s.inSize,g=s.numSegments,b=g*Math.ceil(d/a);this.outputShape=[c,b];const $="0.0",_="sumValue",_e=Math.floor(a/4)*4,et=a%4,rt=`
        sumValue += dot(values, segFilter);
    `;let tt="";d%a>0&&(tt=`
        if (inIdx < 0 || inIdx >= ${d}) {
          return initializationValue;
        }
      `);let j="";d%a>0&&(j=`
        if (inIdx < 0 || inIdx >= ${d}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${$};

      float getValue(int batch, int inIdx) {
        ${tt}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${j}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${g})) * float(${a}));
        int currentSeg = int(mod(float(outIdx), float(${g})));

        float sumValue = 0.0;

        for (int i = 0; i < ${_e}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${rt}
        }

        int inIdx = inOffset + ${_e};
        if (${et===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${rt}
        } else if (${et===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${rt}
        } else if (${et===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${rt}
        }
        setOutput(${_});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unsortedSegmentSum(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,segmentIds:d}=s,{numSegments:g}=a,b=c.shape.length,$=[];let _=0;const _e=getAxesPermutation([_],b);let et=c;_e!=null&&(et=transpose({inputs:{x:c},backend:o,attrs:{perm:_e}}),$.push(et),_=getInnerMostAxes(1,b)[0]);const rt=computeOutShape(et.shape,_,g),tt=sizeFromShape([et.shape[_]]),j=reshape({inputs:{x:et},backend:o,attrs:{shape:[-1,tt]}});$.push(j);const nt=sumOutType(c.dtype),st=(pt,it,yt,ft,bt)=>{const Tt=pt.shape[0],Ct=pt.shape[1],_t=segOpComputeOptimalWindowSize(Ct,bt),Ot={windowSize:_t,inSize:Ct,batchSize:Tt,numSegments:bt},kt=new SegmentOpProgram(Ot,it),Rt=o.compileAndRun(kt,[pt,yt],ft);if($.push(Rt),Rt.shape[1]===bt)return Rt;const jt=range$1({backend:o,attrs:{start:0,stop:bt,step:1,dtype:"float32"}}),Gt=tile({inputs:{x:jt},backend:o,attrs:{reps:[Ct/_t]}});return $.push(jt),$.push(Gt),st(Rt,it,Gt,ft,bt)},ot=st(j,"unsortedSegmentSum",d,nt,g),ut=reshape({inputs:{x:ot},backend:o,attrs:{shape:rt}});let ht=ut;if(_e!=null){$.push(ut);const pt=getUndoAxesPermutation(_e);ht=transpose({inputs:{x:ht},backend:o,attrs:{perm:pt}})}return $.forEach(pt=>o.disposeIntermediateTensorInfo(pt)),ht}const unsortedSegmentSumConfig={kernelName:UnsortedSegmentSum,backendName:"webgl",kernelFunc:unsortedSegmentSum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kernelConfigs=[LRNConfig,LRNGradConfig,_fusedMatMulConfig,absConfig,acosConfig,acoshConfig,addConfig,addNConfig,allConfig,anyConfig,argMaxConfig,argMinConfig,asinConfig,asinhConfig,atan2Config,atanConfig,atanhConfig,avgPool3DConfig,avgPoolConfig,avgPoolGrad3DConfig,avgPoolGradConfig,batchMatMulConfig,batchNormConfig,batchToSpaceNDConfig,bincountConfig,castConfig,ceilConfig,clipByValueConfig,complexAbsConfig,complexConfig,concatConfig,conv2DBackpropFilterConfig,conv2DBackpropInputConfig,conv2DConfig,conv3DBackpropFilterV2Config,conv3DBackpropInputConfig,conv3DConfig,cosConfig,coshConfig,cropAndResizeConfig,cumsumConfig,denseBincountConfig,depthToSpaceConfig,depthwiseConv2dNativeBackpropFilterConfig,depthwiseConv2dNativeBackpropInputConfig,depthwiseConv2dNativeConfig,diagConfig,dilation2DConfig,eluConfig,eluGradConfig,equalConfig,erfConfig,expConfig,expandDimsConfig,expm1Config,fftConfig,fillConfig,flipLeftRightConfig,floorConfig,floorDivConfig,fromPixelsConfig,fusedConv2DConfig,fusedDepthwiseConv2DConfig,gatherNdConfig,gatherV2Config,greaterConfig,greaterEqualConfig,identityConfig,ifftConfig,imagConfig,isFiniteConfig,isInfConfig,isNaNConfig,leakyReluConfig,lessConfig,lessEqualConfig,linSpaceConfig,log1pConfig,logConfig,logicalAndConfig,logicalNotConfig,logicalOrConfig,maxConfig,maxPool3DConfig,maxPoolConfig,maxPoolGrad3DConfig,maxPoolGradConfig,maxPoolWithArgmaxConfig,maximumConfig,meanConfig,minConfig,minimumConfig,mirrorPadConfig,modConfig,multinomialConfig,multiplyConfig,negConfig,nonMaxSuppressionV3Config,nonMaxSuppressionV4Config,nonMaxSuppressionV5Config,notEqualConfig,oneHotConfig,onesLikeConfig,packConfig,padV2Config,powConfig,preluConfig,prodConfig,rangeConfig,realConfig,realDivConfig,reciprocalConfig,relu6Config,reluConfig,reshapeConfig,resizeBilinearConfig,resizeBilinearGradConfig,resizeNearestNeighborConfig,resizeNearestNeighborGradConfig,reverseConfig,rotateWithOffsetConfig,roundConfig,rsqrtConfig,scatterNdConfig,selectConfig,seluConfig,sigmoidConfig,signConfig,sinConfig,sinhConfig,sliceConfig,softmaxConfig,softplusConfig,spaceToBatchNDConfig,sparseToDenseConfig,splitVConfig,sqrtConfig,squareConfig,squaredDifferenceConfig,stepConfig,stridedSliceConfig,subConfig,sumConfig,tanConfig,tanhConfig,tileConfig,topKConfig,transposeConfig,uniqueConfig,unpackConfig,unsortedSegmentSumConfig,zerosLikeConfig];for(const i of kernelConfigs)registerKernel(i);/** @license See the LICENSE file. */const version$2="2.8.6";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const version$1={"tfjs-core":version$8,"tfjs-backend-cpu":version$4,"tfjs-backend-webgl":version$3,"tfjs-data":version$5,"tfjs-layers":version$7,"tfjs-converter":version$6,tfjs:version$2},dist=Object.freeze(Object.defineProperty({__proto__:null,Abs:Abs$1,Acos,Acosh,AdadeltaOptimizer,AdagradOptimizer,AdamOptimizer,AdamaxOptimizer,Add:Add$2,AddN,All,Any,ArgMax,ArgMin,Asin,Asinh,Atan,Atan2,Atanh,AvgPool,AvgPool3D,AvgPool3DGrad,AvgPoolGrad,BatchMatMul,BatchToSpaceND,Bincount,BroadcastTo,Callback,CallbackList,Cast,Ceil,ClipByValue,Complex,ComplexAbs,Concat,Conv2D:Conv2D$1,Conv2DBackpropFilter,Conv2DBackpropInput,Conv3D:Conv3D$1,Conv3DBackpropFilterV2,Conv3DBackpropInputV2,Cos,Cosh,CropAndResize,Cumsum,CustomCallback,DataStorage,DenseBincount,DepthToSpace,DepthwiseConv2dNative,DepthwiseConv2dNativeBackpropFilter,DepthwiseConv2dNativeBackpropInput,Diag,Dilation2D,Dilation2DBackpropFilter,Dilation2DBackpropInput,get ENV(){return ENV$2},EarlyStopping,Elu:Elu$1,EluGrad,Environment,Equal,Erf,Exp,ExpandDims,Expm1,FFT:FFT$1,Fill,FlipLeftRight,Floor,FloorDiv,FromPixels,FusedBatchNorm,FusedConv2D,FusedDepthwiseConv2D,GatherNd,GatherV2,GraphModel,Greater,GreaterEqual,History,IFFT,Identity:Identity$1,Imag,InputSpec,IsFinite,IsInf,IsNan,KernelBackend,LRN,LRNGrad,LayerVariable,LayersModel,LeakyRelu,Less,LessEqual,LinSpace,Log,Log1p,LogSoftmax:LogSoftmax$1,LogicalAnd,LogicalNot,LogicalOr,Max,MaxPool,MaxPool3D,MaxPool3DGrad,MaxPoolGrad,MaxPoolWithArgmax,Maximum:Maximum$1,Mean,Min,Minimum:Minimum$1,MirrorPad,Mod,MomentumOptimizer,Multinomial,Multiply:Multiply$2,Neg,NonMaxSuppressionV3,NonMaxSuppressionV4,NonMaxSuppressionV5,NotEqual,OP_SCOPE_SUFFIX,OneHot,OnesLike,Optimizer,Pack,PadV2,Pool,Pow:Pow$1,Prelu,Prod,RMSPropOptimizer,RNN,Range,get Rank(){return Rank},Real,RealDiv,Reciprocal,get Reduction(){return Reduction},Relu:Relu$1,Relu6:Relu6$1,Reshape:Reshape$1,ResizeBilinear,ResizeBilinearGrad,ResizeNearestNeighbor,ResizeNearestNeighborGrad,Reverse,RotateWithOffset,Round,Rsqrt,SGDOptimizer,ScatterNd,Select,Selu:Selu$1,Sequential,Sigmoid:Sigmoid$1,Sign,Sin,Sinh,Slice,Softmax:Softmax$2,Softplus:Softplus$1,SpaceToBatchND,SparseToDense,SplitV,Sqrt,Square,SquaredDifference,Step,StridedSlice,Sub,Sum,SymbolicTensor,Tan,Tanh:Tanh$1,Tensor,TensorBuffer,Tile,TopK,Transpose,Unique,Unpack,UnsortedSegmentSum,Variable,ZerosLike,_FusedMatMul,abs:abs$2,acos:acos$2,acosh:acosh$2,add:add$2,addN:addN$2,addStrict,all:all$2,any:any$2,argMax:argMax$2,argMin:argMin$2,asin:asin$2,asinh:asinh$2,atan:atan$2,atan2:atan2$2,atanh:atanh$2,avgPool:avgPool$2,avgPool3d:avgPool3d$1,backend,backend_util,basicLSTMCell,batchNorm:batchNorm$2,batchNorm2d,batchNorm3d,batchNorm4d,batchToSpaceND:batchToSpaceND$2,bincount:bincount$2,booleanMaskAsync,broadcastTo,browser,buffer,callbacks,cast:cast$3,ceil:ceil$2,clipByValue:clipByValue$1,clone,complex:complex$2,concat:concat$2,concat1d,concat2d,concat3d,concat4d,constraints:exports_constraints,conv1d:conv1d$1,conv2d:conv2d$3,conv2dTranspose:conv2dTranspose$1,conv3d:conv3d$1,conv3dTranspose,copyRegisteredKernels,cos:cos$2,cosh:cosh$2,cosineWindow,cumsum:cumsum$2,customGrad,data:index$1,denseBincount:denseBincount$2,deprecationWarn,depthToSpace:depthToSpace$2,depthwiseConv2d:depthwiseConv2d$3,deregisterOp,device_util,diag:diag$2,dilation2d,disableDeprecationWarnings,dispose,disposeVariables,div:div$1,divNoNan,divStrict,dot:dot$2,dropout:dropout$2,elu:elu$4,enableDebugMode,enableProdMode,enclosingPowerOfTwo,engine,env,equal:equal$2,equalStrict,erf:erf$2,exp:exp$2,expandDims:expandDims$3,expm1:expm1$2,eye,fft:fft$2,fill:fill$2,findBackend,findBackendFactory,floor:floor$2,floorDiv:floorDiv$2,fused:fused_ops,gather:gather$1,gatherND,gather_util:gather_nd_util,getBackend,getGradient,getKernel,getKernelsForBackend,grad,grads,greater:greater$3,greaterEqual:greaterEqual$2,greaterEqualStrict,greaterStrict,ifft:ifft$2,imag:imag$2,image:image$1,inTopKAsync,initializers:exports_initializers,input,io,irfft,isFinite:isFinite$3,isInf:isInf$2,isNaN:isNaN$3,keep,kernel_impls,layers:exports_layers,leakyRelu:leakyRelu$2,less:less$3,lessEqual:lessEqual$2,lessEqualStrict,lessStrict,linalg,linspace,loadGraphModel,loadLayersModel,localResponseNormalization,log:log$4,log1p:log1p$2,logSigmoid,logSoftmax,logSumExp,logicalAnd:logicalAnd$2,logicalNot:logicalNot$2,logicalOr:logicalOr$2,logicalXor,losses,matMul:matMul$1,math,max:max$3,maxPool:maxPool$2,maxPool3d:maxPool3d$1,maxPoolWithArgmax,maximum:maximum$3,maximumStrict,mean:mean$1,memory,metrics:exports_metrics,min:min$3,minimum:minimum$3,minimumStrict,mirrorPad:mirrorPad$1,mod:mod$2,modStrict,model,models:exports_models,moments,movingAverage,mul,mulStrict,multiRNNCell,multinomial:multinomial$2,neg:neg$2,nextFrame,norm,notEqual:notEqual$2,notEqualStrict,oneHot:oneHot$2,ones:ones$1,onesLike:onesLike$2,op,outerProduct,pad,pad1d,pad2d,pad3d,pad4d,pool:pool$1,pow:pow$2,powStrict,prelu:prelu$3,print,prod:prod$2,profile,rand,randomGamma,randomNormal:randomNormal$2,randomUniform:randomUniform$1,range:range$4,ready,real:real$2,reciprocal:reciprocal$2,registerBackend,registerCallbackConstructor,registerGradient,registerKernel,registerOp,regularizers:exports_regularizers,relu:relu$2,relu6:relu6$2,removeBackend,reshape:reshape$3,reverse:reverse$2,reverse1d,reverse2d,reverse3d,reverse4d,rfft,round:round$2,rsqrt:rsqrt$2,scalar,scatterND,scatter_util:scatter_nd_util,selu:selu$2,separableConv2d:separableConv2d$1,sequential,serialization,setBackend,setPlatform,setdiff1dAsync,sigmoid:sigmoid$2,sign:sign$2,signal,sin:sin$2,sinh:sinh$2,slice:slice$2,slice1d,slice2d,slice3d,slice4d,slice_util,softmax:softmax$3,softplus:softplus$2,spaceToBatchND:spaceToBatchND$2,sparseToDense:sparseToDense$2,spectral:spectral$1,split:split$1,sqrt:sqrt$2,square:square$2,squaredDifference:squaredDifference$2,squaredDifferenceStrict,squeeze,stack,step:step$2,stridedSlice:stridedSlice$2,sub:sub$2,subStrict,sum:sum$2,sumOutType,tan:tan$2,tanh:tanh$2,tensor,tensor1d,tensor2d,tensor3d,tensor4d,tensor5d,tensor6d,tensor_util,test_util,tidy,tile:tile$3,time,topk,train,transpose:transpose$2,truncatedNormal:truncatedNormal$1,unique:unique$3,unregisterGradient,unregisterKernel,unsortedSegmentSum:unsortedSegmentSum$2,unstack,upcastType,util,valueAndGrad,valueAndGrads,variable,variableGrads,version:version$1,version_converter:version$6,version_core:version$8,version_layers:version$7,where,whereAsync,zeros:zeros$2,zerosLike:zerosLike$2},Symbol.toStringTag,{value:"Module"})),require$$0=getAugmentedNamespace(dist),version="14.7.77",createExtendedExponentialRampToValueAutomationEvent=(i,s,o)=>({endTime:s,insertTime:o,type:"exponentialRampToValue",value:i}),createExtendedLinearRampToValueAutomationEvent=(i,s,o)=>({endTime:s,insertTime:o,type:"linearRampToValue",value:i}),createSetValueAutomationEvent=(i,s)=>({startTime:s,type:"setValue",value:i}),createSetValueCurveAutomationEvent=(i,s,o)=>({duration:o,startTime:s,type:"setValueCurve",values:i}),getTargetValueAtTime=(i,s,{startTime:o,target:a,timeConstant:c})=>a+(s-a)*Math.exp((o-i)/c),isExponentialRampToValueAutomationEvent=i=>i.type==="exponentialRampToValue",isLinearRampToValueAutomationEvent=i=>i.type==="linearRampToValue",isAnyRampToValueAutomationEvent=i=>isExponentialRampToValueAutomationEvent(i)||isLinearRampToValueAutomationEvent(i),isSetValueAutomationEvent=i=>i.type==="setValue",isSetValueCurveAutomationEvent=i=>i.type==="setValueCurve",getValueOfAutomationEventAtIndexAtTime=(i,s,o,a)=>{const c=i[s];return c===void 0?a:isAnyRampToValueAutomationEvent(c)||isSetValueAutomationEvent(c)?c.value:isSetValueCurveAutomationEvent(c)?c.values[c.values.length-1]:getTargetValueAtTime(o,getValueOfAutomationEventAtIndexAtTime(i,s-1,c.startTime,a),c)},getEndTimeAndValueOfPreviousAutomationEvent=(i,s,o,a,c)=>o===void 0?[a.insertTime,c]:isAnyRampToValueAutomationEvent(o)?[o.endTime,o.value]:isSetValueAutomationEvent(o)?[o.startTime,o.value]:isSetValueCurveAutomationEvent(o)?[o.startTime+o.duration,o.values[o.values.length-1]]:[o.startTime,getValueOfAutomationEventAtIndexAtTime(i,s-1,o.startTime,c)],isCancelAndHoldAutomationEvent=i=>i.type==="cancelAndHold",isCancelScheduledValuesAutomationEvent=i=>i.type==="cancelScheduledValues",getEventTime=i=>isCancelAndHoldAutomationEvent(i)||isCancelScheduledValuesAutomationEvent(i)?i.cancelTime:isExponentialRampToValueAutomationEvent(i)||isLinearRampToValueAutomationEvent(i)?i.endTime:i.startTime,getExponentialRampValueAtTime=(i,s,o,{endTime:a,value:c})=>o===c?c:0<o&&0<c||o<0&&c<0?o*(c/o)**((i-s)/(a-s)):0,getLinearRampValueAtTime=(i,s,o,{endTime:a,value:c})=>o+(i-s)/(a-s)*(c-o),interpolateValue=(i,s)=>{const o=Math.floor(s),a=Math.ceil(s);return o===a?i[o]:(1-(s-o))*i[o]+(1-(a-s))*i[a]},getValueCurveValueAtTime=(i,{duration:s,startTime:o,values:a})=>{const c=(i-o)/s*(a.length-1);return interpolateValue(a,c)},isSetTargetAutomationEvent=i=>i.type==="setTarget";class AutomationEventList{constructor(s){this._automationEvents=[],this._currenTime=0,this._defaultValue=s}[Symbol.iterator](){return this._automationEvents[Symbol.iterator]()}add(s){const o=getEventTime(s);if(isCancelAndHoldAutomationEvent(s)||isCancelScheduledValuesAutomationEvent(s)){const a=this._automationEvents.findIndex(d=>isCancelScheduledValuesAutomationEvent(s)&&isSetValueCurveAutomationEvent(d)?d.startTime+d.duration>=o:getEventTime(d)>=o),c=this._automationEvents[a];if(a!==-1&&(this._automationEvents=this._automationEvents.slice(0,a)),isCancelAndHoldAutomationEvent(s)){const d=this._automationEvents[this._automationEvents.length-1];if(c!==void 0&&isAnyRampToValueAutomationEvent(c)){if(d!==void 0&&isSetTargetAutomationEvent(d))throw new Error("The internal list is malformed.");const g=d===void 0?c.insertTime:isSetValueCurveAutomationEvent(d)?d.startTime+d.duration:getEventTime(d),b=d===void 0?this._defaultValue:isSetValueCurveAutomationEvent(d)?d.values[d.values.length-1]:d.value,$=isExponentialRampToValueAutomationEvent(c)?getExponentialRampValueAtTime(o,g,b,c):getLinearRampValueAtTime(o,g,b,c),_=isExponentialRampToValueAutomationEvent(c)?createExtendedExponentialRampToValueAutomationEvent($,o,this._currenTime):createExtendedLinearRampToValueAutomationEvent($,o,this._currenTime);this._automationEvents.push(_)}if(d!==void 0&&isSetTargetAutomationEvent(d)&&this._automationEvents.push(createSetValueAutomationEvent(this.getValue(o),o)),d!==void 0&&isSetValueCurveAutomationEvent(d)&&d.startTime+d.duration>o){const g=o-d.startTime,b=(d.values.length-1)/d.duration,$=Math.max(2,1+Math.ceil(g*b)),_=g/($-1)*b,_e=d.values.slice(0,$);if(_<1)for(let et=1;et<$;et+=1){const rt=_*et%1;_e[et]=d.values[et-1]*(1-rt)+d.values[et]*rt}this._automationEvents[this._automationEvents.length-1]=createSetValueCurveAutomationEvent(_e,d.startTime,g)}}}else{const a=this._automationEvents.findIndex(g=>getEventTime(g)>o),c=a===-1?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[a-1];if(c!==void 0&&isSetValueCurveAutomationEvent(c)&&getEventTime(c)+c.duration>o)return!1;const d=isExponentialRampToValueAutomationEvent(s)?createExtendedExponentialRampToValueAutomationEvent(s.value,s.endTime,this._currenTime):isLinearRampToValueAutomationEvent(s)?createExtendedLinearRampToValueAutomationEvent(s.value,o,this._currenTime):s;if(a===-1)this._automationEvents.push(d);else{if(isSetValueCurveAutomationEvent(s)&&o+s.duration>getEventTime(this._automationEvents[a]))return!1;this._automationEvents.splice(a,0,d)}}return!0}flush(s){const o=this._automationEvents.findIndex(a=>getEventTime(a)>s);if(o>1){const a=this._automationEvents.slice(o-1),c=a[0];isSetTargetAutomationEvent(c)&&a.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents,o-2,c.startTime,this._defaultValue),c.startTime)),this._automationEvents=a}}getValue(s){if(this._automationEvents.length===0)return this._defaultValue;const o=this._automationEvents.findIndex(g=>getEventTime(g)>s),a=this._automationEvents[o],c=(o===-1?this._automationEvents.length:o)-1,d=this._automationEvents[c];if(d!==void 0&&isSetTargetAutomationEvent(d)&&(a===void 0||!isAnyRampToValueAutomationEvent(a)||a.insertTime>s))return getTargetValueAtTime(s,getValueOfAutomationEventAtIndexAtTime(this._automationEvents,c-1,d.startTime,this._defaultValue),d);if(d!==void 0&&isSetValueAutomationEvent(d)&&(a===void 0||!isAnyRampToValueAutomationEvent(a)))return d.value;if(d!==void 0&&isSetValueCurveAutomationEvent(d)&&(a===void 0||!isAnyRampToValueAutomationEvent(a)||d.startTime+d.duration>s))return s<d.startTime+d.duration?getValueCurveValueAtTime(s,d):d.values[d.values.length-1];if(d!==void 0&&isAnyRampToValueAutomationEvent(d)&&(a===void 0||!isAnyRampToValueAutomationEvent(a)))return d.value;if(a!==void 0&&isExponentialRampToValueAutomationEvent(a)){const[g,b]=getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents,c,d,a,this._defaultValue);return getExponentialRampValueAtTime(s,g,b,a)}if(a!==void 0&&isLinearRampToValueAutomationEvent(a)){const[g,b]=getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents,c,d,a,this._defaultValue);return getLinearRampValueAtTime(s,g,b,a)}return this._defaultValue}}const createCancelAndHoldAutomationEvent=i=>({cancelTime:i,type:"cancelAndHold"}),createCancelScheduledValuesAutomationEvent=i=>({cancelTime:i,type:"cancelScheduledValues"}),createExponentialRampToValueAutomationEvent=(i,s)=>({endTime:s,type:"exponentialRampToValue",value:i}),createLinearRampToValueAutomationEvent=(i,s)=>({endTime:s,type:"linearRampToValue",value:i}),createSetTargetAutomationEvent=(i,s,o)=>({startTime:s,target:i,timeConstant:o,type:"setTarget"}),createAbortError=()=>new DOMException("","AbortError"),createAddActiveInputConnectionToAudioNode=i=>(s,o,[a,c,d],g)=>{i(s[c],[o,a,d],b=>b[0]===o&&b[1]===a,g)},createAddAudioNodeConnections=i=>(s,o,a)=>{const c=[];for(let d=0;d<a.numberOfInputs;d+=1)c.push(new Set);i.set(s,{activeInputs:c,outputs:new Set,passiveInputs:new WeakMap,renderer:o})},createAddAudioParamConnections=i=>(s,o)=>{i.set(s,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:o})},ACTIVE_AUDIO_NODE_STORE=new WeakSet,AUDIO_NODE_CONNECTIONS_STORE=new WeakMap,AUDIO_NODE_STORE=new WeakMap,AUDIO_PARAM_CONNECTIONS_STORE=new WeakMap,AUDIO_PARAM_STORE=new WeakMap,CONTEXT_STORE=new WeakMap,EVENT_LISTENERS=new WeakMap,CYCLE_COUNTERS=new WeakMap,NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS=new WeakMap,NODE_TO_PROCESSOR_MAPS=new WeakMap,handler={construct(){return handler}},isConstructible=i=>{try{const s=new Proxy(i,handler);new s}catch{return!1}return!0},IMPORT_STATEMENT_REGEX=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,splitImportStatements=(i,s)=>{const o=[];let a=i.replace(/^[\s]+/,""),c=a.match(IMPORT_STATEMENT_REGEX);for(;c!==null;){const d=c[1].slice(1,-1),g=c[0].replace(/([\s]+)?;?$/,"").replace(d,new URL(d,s).toString());o.push(g),a=a.slice(c[0].length).replace(/^[\s]+/,""),c=a.match(IMPORT_STATEMENT_REGEX)}return[o.join(";"),a]},verifyParameterDescriptors=i=>{if(i!==void 0&&!Array.isArray(i))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},verifyProcessorCtor=i=>{if(!isConstructible(i))throw new TypeError("The given value for processorCtor should be a constructor.");if(i.prototype===null||typeof i.prototype!="object")throw new TypeError("The given value for processorCtor should have a prototype.")},createAddAudioWorkletModule=(i,s,o,a,c,d,g,b,$,_,_e,et,rt)=>{let tt=0;return(j,nt,st={credentials:"omit"})=>{const ot=_e.get(j);if(ot!==void 0&&ot.has(nt))return Promise.resolve();const ut=_.get(j);if(ut!==void 0){const it=ut.get(nt);if(it!==void 0)return it}const ht=d(j),pt=ht.audioWorklet===void 0?c(nt).then(([it,yt])=>{const[ft,bt]=splitImportStatements(it,yt),Tt=`${ft};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${bt}
})})(window,'_AWGS')`;return o(Tt)}).then(()=>{const it=rt._AWGS.pop();if(it===void 0)throw new SyntaxError;a(ht.currentTime,ht.sampleRate,()=>it(class{},void 0,(yt,ft)=>{if(yt.trim()==="")throw s();const bt=NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(ht);if(bt!==void 0){if(bt.has(yt))throw s();verifyProcessorCtor(ft),verifyParameterDescriptors(ft.parameterDescriptors),bt.set(yt,ft)}else verifyProcessorCtor(ft),verifyParameterDescriptors(ft.parameterDescriptors),NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(ht,new Map([[yt,ft]]))},ht.sampleRate,void 0,void 0))}):Promise.all([c(nt),Promise.resolve(i(et,et))]).then(([[it,yt],ft])=>{const bt=tt+1;tt=bt;const[Tt,Ct]=splitImportStatements(it,yt),Rt=`${Tt};((AudioWorkletProcessor,registerProcessor)=>{${Ct}
})(${ft?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${ft?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${ft?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${bt}',class extends AudioWorkletProcessor{process(){return !1}})`,jt=new Blob([Rt],{type:"application/javascript; charset=utf-8"}),Gt=URL.createObjectURL(jt);return ht.audioWorklet.addModule(Gt,st).then(()=>{if(b(ht))return ht;const Bt=g(ht);return Bt.audioWorklet.addModule(Gt,st).then(()=>Bt)}).then(Bt=>{if($===null)throw new SyntaxError;try{new $(Bt,`__sac${bt}`)}catch{throw new SyntaxError}}).finally(()=>URL.revokeObjectURL(Gt))});return ut===void 0?_.set(j,new Map([[nt,pt]])):ut.set(nt,pt),pt.then(()=>{const it=_e.get(j);it===void 0?_e.set(j,new Set([nt])):it.add(nt)}).finally(()=>{const it=_.get(j);it!==void 0&&it.delete(nt)}),pt}},getValueForKey=(i,s)=>{const o=i.get(s);if(o===void 0)throw new Error("A value with the given key could not be found.");return o},pickElementFromSet=(i,s)=>{const o=Array.from(i).filter(s);if(o.length>1)throw Error("More than one element was found.");if(o.length===0)throw Error("No element was found.");const[a]=o;return i.delete(a),a},deletePassiveInputConnectionToAudioNode=(i,s,o,a)=>{const c=getValueForKey(i,s),d=pickElementFromSet(c,g=>g[0]===o&&g[1]===a);return c.size===0&&i.delete(s),d},getEventListenersOfAudioNode=i=>getValueForKey(EVENT_LISTENERS,i),setInternalStateToActive=i=>{if(ACTIVE_AUDIO_NODE_STORE.has(i))throw new Error("The AudioNode is already stored.");ACTIVE_AUDIO_NODE_STORE.add(i),getEventListenersOfAudioNode(i).forEach(s=>s(!0))},isAudioWorkletNode=i=>"port"in i,setInternalStateToPassive=i=>{if(!ACTIVE_AUDIO_NODE_STORE.has(i))throw new Error("The AudioNode is not stored.");ACTIVE_AUDIO_NODE_STORE.delete(i),getEventListenersOfAudioNode(i).forEach(s=>s(!1))},setInternalStateToPassiveWhenNecessary=(i,s)=>{!isAudioWorkletNode(i)&&s.every(o=>o.size===0)&&setInternalStateToPassive(i)},createAddConnectionToAudioNode=(i,s,o,a,c,d,g,b,$,_,_e,et,rt)=>{const tt=new WeakMap;return(j,nt,st,ot,ut)=>{const{activeInputs:ht,passiveInputs:pt}=d(nt),{outputs:it}=d(j),yt=b(j),ft=bt=>{const Tt=$(nt),Ct=$(j);if(bt){const _t=deletePassiveInputConnectionToAudioNode(pt,j,st,ot);i(ht,j,_t,!1),!ut&&!et(j)&&o(Ct,Tt,st,ot),rt(nt)&&setInternalStateToActive(nt)}else{const _t=a(ht,j,st,ot);s(pt,ot,_t,!1),!ut&&!et(j)&&c(Ct,Tt,st,ot);const Ot=g(nt);if(Ot===0)_e(nt)&&setInternalStateToPassiveWhenNecessary(nt,ht);else{const kt=tt.get(nt);kt!==void 0&&clearTimeout(kt),tt.set(nt,setTimeout(()=>{_e(nt)&&setInternalStateToPassiveWhenNecessary(nt,ht)},Ot*1e3))}}};return _(it,[nt,st,ot],bt=>bt[0]===nt&&bt[1]===st&&bt[2]===ot,!0)?(yt.add(ft),_e(j)?i(ht,j,[st,ot,ft],!0):s(pt,ot,[j,st,ft],!0),!0):!1}},createAddPassiveInputConnectionToAudioNode=i=>(s,o,[a,c,d],g)=>{const b=s.get(a);b===void 0?s.set(a,new Set([[c,o,d]])):i(b,[c,o,d],$=>$[0]===c&&$[1]===o,g)},createAddSilentConnection=i=>(s,o)=>{const a=i(s,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});o.connect(a).connect(s.destination);const c=()=>{o.removeEventListener("ended",c),o.disconnect(a),a.disconnect()};o.addEventListener("ended",c)},createAddUnrenderedAudioWorkletNode=i=>(s,o)=>{i(s).add(o)},DEFAULT_OPTIONS$j={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},createAnalyserNodeConstructor=(i,s,o,a,c,d)=>class extends i{constructor(b,$){const _=c(b),_e={...DEFAULT_OPTIONS$j,...$},et=a(_,_e),rt=d(_)?s():null;super(b,!1,et,rt),this._nativeAnalyserNode=et}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(b){this._nativeAnalyserNode.fftSize=b}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(b){const $=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=b,!(b>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=$,o()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(b){const $=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=b,!(this._nativeAnalyserNode.maxDecibels>b))throw this._nativeAnalyserNode.minDecibels=$,o()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(b){this._nativeAnalyserNode.smoothingTimeConstant=b}getByteFrequencyData(b){this._nativeAnalyserNode.getByteFrequencyData(b)}getByteTimeDomainData(b){this._nativeAnalyserNode.getByteTimeDomainData(b)}getFloatFrequencyData(b){this._nativeAnalyserNode.getFloatFrequencyData(b)}getFloatTimeDomainData(b){this._nativeAnalyserNode.getFloatTimeDomainData(b)}},isOwnedByContext=(i,s)=>i.context===s,createAnalyserNodeRendererFactory=(i,s,o)=>()=>{const a=new WeakMap,c=async(d,g)=>{let b=s(d);if(!isOwnedByContext(b,g)){const _={channelCount:b.channelCount,channelCountMode:b.channelCountMode,channelInterpretation:b.channelInterpretation,fftSize:b.fftSize,maxDecibels:b.maxDecibels,minDecibels:b.minDecibels,smoothingTimeConstant:b.smoothingTimeConstant};b=i(g,_)}return a.set(g,b),await o(d,g,b),b};return{render(d,g){const b=a.get(g);return b!==void 0?Promise.resolve(b):c(d,g)}}},testAudioBufferCopyChannelMethodsOutOfBoundsSupport=i=>{try{i.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},createIndexSizeError=()=>new DOMException("","IndexSizeError"),wrapAudioBufferGetChannelDataMethod=i=>{i.getChannelData=(s=>o=>{try{return s.call(i,o)}catch(a){throw a.code===12?createIndexSizeError():a}})(i.getChannelData)},DEFAULT_OPTIONS$i={numberOfChannels:1},createAudioBufferConstructor=(i,s,o,a,c,d,g,b)=>{let $=null;return class Qp{constructor(_e){if(c===null)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:et,numberOfChannels:rt,sampleRate:tt}={...DEFAULT_OPTIONS$i,..._e};$===null&&($=new c(1,1,44100));const j=a!==null&&s(d,d)?new a({length:et,numberOfChannels:rt,sampleRate:tt}):$.createBuffer(rt,et,tt);if(j.numberOfChannels===0)throw o();return typeof j.copyFromChannel!="function"?(g(j),wrapAudioBufferGetChannelDataMethod(j)):s(testAudioBufferCopyChannelMethodsOutOfBoundsSupport,()=>testAudioBufferCopyChannelMethodsOutOfBoundsSupport(j))||b(j),i.add(j),j}static[Symbol.hasInstance](_e){return _e!==null&&typeof _e=="object"&&Object.getPrototypeOf(_e)===Qp.prototype||i.has(_e)}}},MOST_NEGATIVE_SINGLE_FLOAT=-34028234663852886e22,MOST_POSITIVE_SINGLE_FLOAT=-MOST_NEGATIVE_SINGLE_FLOAT,isActiveAudioNode=i=>ACTIVE_AUDIO_NODE_STORE.has(i),DEFAULT_OPTIONS$h={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},createAudioBufferSourceNodeConstructor=(i,s,o,a,c,d,g,b)=>class extends i{constructor(_,_e){const et=d(_),rt={...DEFAULT_OPTIONS$h,..._e},tt=c(et,rt),j=g(et),nt=j?s():null;super(_,!1,tt,nt),this._audioBufferSourceNodeRenderer=nt,this._isBufferNullified=!1,this._isBufferSet=rt.buffer!==null,this._nativeAudioBufferSourceNode=tt,this._onended=null,this._playbackRate=o(this,j,tt.playbackRate,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(_){if(this._nativeAudioBufferSourceNode.buffer=_,_!==null){if(this._isBufferSet)throw a();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(_){this._nativeAudioBufferSourceNode.loop=_}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(_){this._nativeAudioBufferSourceNode.loopEnd=_}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(_){this._nativeAudioBufferSourceNode.loopStart=_}get onended(){return this._onended}set onended(_){const _e=typeof _=="function"?b(this,_):null;this._nativeAudioBufferSourceNode.onended=_e;const et=this._nativeAudioBufferSourceNode.onended;this._onended=et!==null&&et===_e?_:et}get playbackRate(){return this._playbackRate}start(_=0,_e=0,et){if(this._nativeAudioBufferSourceNode.start(_,_e,et),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.start=et===void 0?[_,_e]:[_,_e,et]),this.context.state!=="closed"){setInternalStateToActive(this);const rt=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",rt),isActiveAudioNode(this)&&setInternalStateToPassive(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",rt)}}stop(_=0){this._nativeAudioBufferSourceNode.stop(_),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.stop=_)}},createAudioBufferSourceNodeRendererFactory=(i,s,o,a,c)=>()=>{const d=new WeakMap;let g=null,b=null;const $=async(_,_e)=>{let et=o(_);const rt=isOwnedByContext(et,_e);if(!rt){const tt={buffer:et.buffer,channelCount:et.channelCount,channelCountMode:et.channelCountMode,channelInterpretation:et.channelInterpretation,loop:et.loop,loopEnd:et.loopEnd,loopStart:et.loopStart,playbackRate:et.playbackRate.value};et=s(_e,tt),g!==null&&et.start(...g),b!==null&&et.stop(b)}return d.set(_e,et),rt?await i(_e,_.playbackRate,et.playbackRate):await a(_e,_.playbackRate,et.playbackRate),await c(_,_e,et),et};return{set start(_){g=_},set stop(_){b=_},render(_,_e){const et=d.get(_e);return et!==void 0?Promise.resolve(et):$(_,_e)}}},isAudioBufferSourceNode=i=>"playbackRate"in i,isBiquadFilterNode=i=>"frequency"in i&&"gain"in i,isConstantSourceNode=i=>"offset"in i,isGainNode=i=>!("frequency"in i)&&"gain"in i,isOscillatorNode=i=>"detune"in i&&"frequency"in i,isStereoPannerNode=i=>"pan"in i,getAudioNodeConnections=i=>getValueForKey(AUDIO_NODE_CONNECTIONS_STORE,i),getAudioParamConnections=i=>getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE,i),deactivateActiveAudioNodeInputConnections=(i,s)=>{const{activeInputs:o}=getAudioNodeConnections(i);o.forEach(c=>c.forEach(([d])=>{s.includes(i)||deactivateActiveAudioNodeInputConnections(d,[...s,i])}));const a=isAudioBufferSourceNode(i)?[i.playbackRate]:isAudioWorkletNode(i)?Array.from(i.parameters.values()):isBiquadFilterNode(i)?[i.Q,i.detune,i.frequency,i.gain]:isConstantSourceNode(i)?[i.offset]:isGainNode(i)?[i.gain]:isOscillatorNode(i)?[i.detune,i.frequency]:isStereoPannerNode(i)?[i.pan]:[];for(const c of a){const d=getAudioParamConnections(c);d!==void 0&&d.activeInputs.forEach(([g])=>deactivateActiveAudioNodeInputConnections(g,s))}isActiveAudioNode(i)&&setInternalStateToPassive(i)},deactivateAudioGraph=i=>{deactivateActiveAudioNodeInputConnections(i.destination,[])},isValidLatencyHint=i=>i===void 0||typeof i=="number"||typeof i=="string"&&(i==="balanced"||i==="interactive"||i==="playback"),createAudioContextConstructor=(i,s,o,a,c,d,g,b,$)=>class extends i{constructor(_e={}){if($===null)throw new Error("Missing the native AudioContext constructor.");let et;try{et=new $(_e)}catch(j){throw j.code===12&&j.message==="sampleRate is not in range"?o():j}if(et===null)throw a();if(!isValidLatencyHint(_e.latencyHint))throw new TypeError(`The provided value '${_e.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(_e.sampleRate!==void 0&&et.sampleRate!==_e.sampleRate)throw o();super(et,2);const{latencyHint:rt}=_e,{sampleRate:tt}=et;if(this._baseLatency=typeof et.baseLatency=="number"?et.baseLatency:rt==="balanced"?512/tt:rt==="interactive"||rt===void 0?256/tt:rt==="playback"?1024/tt:Math.max(2,Math.min(128,Math.round(rt*tt/128)))*128/tt,this._nativeAudioContext=et,$.name==="webkitAudioContext"?(this._nativeGainNode=et.createGain(),this._nativeOscillatorNode=et.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(et.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,et.state==="running"){this._state="suspended";const j=()=>{this._state==="suspended"&&(this._state=null),et.removeEventListener("statechange",j)};et.addEventListener("statechange",j)}}get baseLatency(){return this._baseLatency}get state(){return this._state!==null?this._state:this._nativeAudioContext.state}close(){return this.state==="closed"?this._nativeAudioContext.close().then(()=>{throw s()}):(this._state==="suspended"&&(this._state=null),this._nativeAudioContext.close().then(()=>{this._nativeGainNode!==null&&this._nativeOscillatorNode!==null&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),deactivateAudioGraph(this)}))}createMediaElementSource(_e){return new c(this,{mediaElement:_e})}createMediaStreamDestination(){return new d(this)}createMediaStreamSource(_e){return new g(this,{mediaStream:_e})}createMediaStreamTrackSource(_e){return new b(this,{mediaStreamTrack:_e})}resume(){return this._state==="suspended"?new Promise((_e,et)=>{const rt=()=>{this._nativeAudioContext.removeEventListener("statechange",rt),this._nativeAudioContext.state==="running"?_e():this.resume().then(_e,et)};this._nativeAudioContext.addEventListener("statechange",rt)}):this._nativeAudioContext.resume().catch(_e=>{throw _e===void 0||_e.code===15?s():_e})}suspend(){return this._nativeAudioContext.suspend().catch(_e=>{throw _e===void 0?s():_e})}},createAudioDestinationNodeConstructor=(i,s,o,a,c,d,g,b)=>class extends i{constructor(_,_e){const et=d(_),rt=g(et),tt=c(et,_e,rt),j=rt?s(b):null;super(_,!1,tt,j),this._isNodeOfNativeOfflineAudioContext=rt,this._nativeAudioDestinationNode=tt}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(_){if(this._isNodeOfNativeOfflineAudioContext)throw a();if(_>this._nativeAudioDestinationNode.maxChannelCount)throw o();this._nativeAudioDestinationNode.channelCount=_}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(_){if(this._isNodeOfNativeOfflineAudioContext)throw a();this._nativeAudioDestinationNode.channelCountMode=_}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}},createAudioDestinationNodeRenderer=i=>{const s=new WeakMap,o=async(a,c)=>{const d=c.destination;return s.set(c,d),await i(a,c,d),d};return{render(a,c){const d=s.get(c);return d!==void 0?Promise.resolve(d):o(a,c)}}},createAudioListenerFactory=(i,s,o,a,c,d,g,b)=>($,_)=>{const _e=_.listener,et=()=>{const it=new Float32Array(1),yt=s(_,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),ft=g(_);let bt=!1,Tt=[0,0,-1,0,1,0],Ct=[0,0,0];const _t=()=>{if(bt)return;bt=!0;const jt=a(_,256,9,0);jt.onaudioprocess=({inputBuffer:Gt})=>{const Bt=[d(Gt,it,0),d(Gt,it,1),d(Gt,it,2),d(Gt,it,3),d(Gt,it,4),d(Gt,it,5)];Bt.some((Ut,Qt)=>Ut!==Tt[Qt])&&(_e.setOrientation(...Bt),Tt=Bt);const zt=[d(Gt,it,6),d(Gt,it,7),d(Gt,it,8)];zt.some((Ut,Qt)=>Ut!==Ct[Qt])&&(_e.setPosition(...zt),Ct=zt)},yt.connect(jt)},Ot=jt=>Gt=>{Gt!==Tt[jt]&&(Tt[jt]=Gt,_e.setOrientation(...Tt))},kt=jt=>Gt=>{Gt!==Ct[jt]&&(Ct[jt]=Gt,_e.setPosition(...Ct))},Rt=(jt,Gt,Bt)=>{const zt=o(_,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:Gt});zt.connect(yt,0,jt),zt.start(),Object.defineProperty(zt.offset,"defaultValue",{get(){return Gt}});const Ut=i({context:$},ft,zt.offset,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT);return b(Ut,"value",Qt=>()=>Qt.call(Ut),Qt=>tn=>{try{Qt.call(Ut,tn)}catch(sn){if(sn.code!==9)throw sn}_t(),ft&&Bt(tn)}),Ut.cancelAndHoldAtTime=(Qt=>ft?()=>{throw c()}:(...tn)=>{const sn=Qt.apply(Ut,tn);return _t(),sn})(Ut.cancelAndHoldAtTime),Ut.cancelScheduledValues=(Qt=>ft?()=>{throw c()}:(...tn)=>{const sn=Qt.apply(Ut,tn);return _t(),sn})(Ut.cancelScheduledValues),Ut.exponentialRampToValueAtTime=(Qt=>ft?()=>{throw c()}:(...tn)=>{const sn=Qt.apply(Ut,tn);return _t(),sn})(Ut.exponentialRampToValueAtTime),Ut.linearRampToValueAtTime=(Qt=>ft?()=>{throw c()}:(...tn)=>{const sn=Qt.apply(Ut,tn);return _t(),sn})(Ut.linearRampToValueAtTime),Ut.setTargetAtTime=(Qt=>ft?()=>{throw c()}:(...tn)=>{const sn=Qt.apply(Ut,tn);return _t(),sn})(Ut.setTargetAtTime),Ut.setValueAtTime=(Qt=>ft?()=>{throw c()}:(...tn)=>{const sn=Qt.apply(Ut,tn);return _t(),sn})(Ut.setValueAtTime),Ut.setValueCurveAtTime=(Qt=>ft?()=>{throw c()}:(...tn)=>{const sn=Qt.apply(Ut,tn);return _t(),sn})(Ut.setValueCurveAtTime),Ut};return{forwardX:Rt(0,0,Ot(0)),forwardY:Rt(1,0,Ot(1)),forwardZ:Rt(2,-1,Ot(2)),positionX:Rt(6,0,kt(0)),positionY:Rt(7,0,kt(1)),positionZ:Rt(8,0,kt(2)),upX:Rt(3,0,Ot(3)),upY:Rt(4,1,Ot(4)),upZ:Rt(5,0,Ot(5))}},{forwardX:rt,forwardY:tt,forwardZ:j,positionX:nt,positionY:st,positionZ:ot,upX:ut,upY:ht,upZ:pt}=_e.forwardX===void 0?et():_e;return{get forwardX(){return rt},get forwardY(){return tt},get forwardZ(){return j},get positionX(){return nt},get positionY(){return st},get positionZ(){return ot},get upX(){return ut},get upY(){return ht},get upZ(){return pt}}},isAudioNode$1=i=>"context"in i,isAudioNodeOutputConnection=i=>isAudioNode$1(i[0]),insertElementInSet=(i,s,o,a)=>{for(const c of i)if(o(c)){if(a)return!1;throw Error("The set contains at least one similar element.")}return i.add(s),!0},addActiveInputConnectionToAudioParam=(i,s,[o,a],c)=>{insertElementInSet(i,[s,o,a],d=>d[0]===s&&d[1]===o,c)},addPassiveInputConnectionToAudioParam=(i,[s,o,a],c)=>{const d=i.get(s);d===void 0?i.set(s,new Set([[o,a]])):insertElementInSet(d,[o,a],g=>g[0]===o,c)},isNativeAudioNodeFaker=i=>"inputs"in i,connectNativeAudioNodeToNativeAudioNode=(i,s,o,a)=>{if(isNativeAudioNodeFaker(s)){const c=s.inputs[a];return i.connect(c,o,0),[c,o,0]}return i.connect(s,o,a),[s,o,a]},deleteActiveInputConnection=(i,s,o)=>{for(const a of i)if(a[0]===s&&a[1]===o)return i.delete(a),a;return null},deleteActiveInputConnectionToAudioParam=(i,s,o)=>pickElementFromSet(i,a=>a[0]===s&&a[1]===o),deleteEventListenerOfAudioNode=(i,s)=>{if(!getEventListenersOfAudioNode(i).delete(s))throw new Error("Missing the expected event listener.")},deletePassiveInputConnectionToAudioParam=(i,s,o)=>{const a=getValueForKey(i,s),c=pickElementFromSet(a,d=>d[0]===o);return a.size===0&&i.delete(s),c},disconnectNativeAudioNodeFromNativeAudioNode=(i,s,o,a)=>{isNativeAudioNodeFaker(s)?i.disconnect(s.inputs[a],o,0):i.disconnect(s,o,a)},getNativeAudioNode=i=>getValueForKey(AUDIO_NODE_STORE,i),getNativeAudioParam=i=>getValueForKey(AUDIO_PARAM_STORE,i),isPartOfACycle=i=>CYCLE_COUNTERS.has(i),isPassiveAudioNode=i=>!ACTIVE_AUDIO_NODE_STORE.has(i),testAudioNodeDisconnectMethodSupport=(i,s)=>new Promise(o=>{if(s!==null)o(!0);else{const a=i.createScriptProcessor(256,1,1),c=i.createGain(),d=i.createBuffer(1,2,44100),g=d.getChannelData(0);g[0]=1,g[1]=1;const b=i.createBufferSource();b.buffer=d,b.loop=!0,b.connect(a).connect(i.destination),b.connect(c),b.disconnect(c),a.onaudioprocess=$=>{const _=$.inputBuffer.getChannelData(0);Array.prototype.some.call(_,_e=>_e===1)?o(!0):o(!1),b.stop(),a.onaudioprocess=null,b.disconnect(a),a.disconnect(i.destination)},b.start()}}),visitEachAudioNodeOnce=(i,s)=>{const o=new Map;for(const a of i)for(const c of a){const d=o.get(c);o.set(c,d===void 0?1:d+1)}o.forEach((a,c)=>s(c,a))},isNativeAudioNode$1=i=>"context"in i,wrapAudioNodeDisconnectMethod=i=>{const s=new Map;i.connect=(o=>(a,c=0,d=0)=>{const g=isNativeAudioNode$1(a)?o(a,c,d):o(a,c),b=s.get(a);return b===void 0?s.set(a,[{input:d,output:c}]):b.every($=>$.input!==d||$.output!==c)&&b.push({input:d,output:c}),g})(i.connect.bind(i)),i.disconnect=(o=>(a,c,d)=>{if(o.apply(i),a===void 0)s.clear();else if(typeof a=="number")for(const[g,b]of s){const $=b.filter(_=>_.output!==a);$.length===0?s.delete(g):s.set(g,$)}else if(s.has(a))if(c===void 0)s.delete(a);else{const g=s.get(a);if(g!==void 0){const b=g.filter($=>$.output!==c&&($.input!==d||d===void 0));b.length===0?s.delete(a):s.set(a,b)}}for(const[g,b]of s)b.forEach($=>{isNativeAudioNode$1(g)?i.connect(g,$.output,$.input):i.connect(g,$.output)})})(i.disconnect)},addConnectionToAudioParamOfAudioContext=(i,s,o,a)=>{const{activeInputs:c,passiveInputs:d}=getAudioParamConnections(s),{outputs:g}=getAudioNodeConnections(i),b=getEventListenersOfAudioNode(i),$=_=>{const _e=getNativeAudioNode(i),et=getNativeAudioParam(s);if(_){const rt=deletePassiveInputConnectionToAudioParam(d,i,o);addActiveInputConnectionToAudioParam(c,i,rt,!1),!a&&!isPartOfACycle(i)&&_e.connect(et,o)}else{const rt=deleteActiveInputConnectionToAudioParam(c,i,o);addPassiveInputConnectionToAudioParam(d,rt,!1),!a&&!isPartOfACycle(i)&&_e.disconnect(et,o)}};return insertElementInSet(g,[s,o],_=>_[0]===s&&_[1]===o,!0)?(b.add($),isActiveAudioNode(i)?addActiveInputConnectionToAudioParam(c,i,[o,$],!0):addPassiveInputConnectionToAudioParam(d,[i,o,$],!0),!0):!1},deleteInputConnectionOfAudioNode=(i,s,o,a)=>{const{activeInputs:c,passiveInputs:d}=getAudioNodeConnections(s),g=deleteActiveInputConnection(c[a],i,o);return g===null?[deletePassiveInputConnectionToAudioNode(d,i,o,a)[2],!1]:[g[2],!0]},deleteInputConnectionOfAudioParam=(i,s,o)=>{const{activeInputs:a,passiveInputs:c}=getAudioParamConnections(s),d=deleteActiveInputConnection(a,i,o);return d===null?[deletePassiveInputConnectionToAudioParam(c,i,o)[1],!1]:[d[2],!0]},deleteInputsOfAudioNode=(i,s,o,a,c)=>{const[d,g]=deleteInputConnectionOfAudioNode(i,o,a,c);if(d!==null&&(deleteEventListenerOfAudioNode(i,d),g&&!s&&!isPartOfACycle(i)&&disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(i),getNativeAudioNode(o),a,c)),isActiveAudioNode(o)){const{activeInputs:b}=getAudioNodeConnections(o);setInternalStateToPassiveWhenNecessary(o,b)}},deleteInputsOfAudioParam=(i,s,o,a)=>{const[c,d]=deleteInputConnectionOfAudioParam(i,o,a);c!==null&&(deleteEventListenerOfAudioNode(i,c),d&&!s&&!isPartOfACycle(i)&&getNativeAudioNode(i).disconnect(getNativeAudioParam(o),a))},deleteAnyConnection=(i,s)=>{const o=getAudioNodeConnections(i),a=[];for(const c of o.outputs)isAudioNodeOutputConnection(c)?deleteInputsOfAudioNode(i,s,...c):deleteInputsOfAudioParam(i,s,...c),a.push(c[0]);return o.outputs.clear(),a},deleteConnectionAtOutput=(i,s,o)=>{const a=getAudioNodeConnections(i),c=[];for(const d of a.outputs)d[1]===o&&(isAudioNodeOutputConnection(d)?deleteInputsOfAudioNode(i,s,...d):deleteInputsOfAudioParam(i,s,...d),c.push(d[0]),a.outputs.delete(d));return c},deleteConnectionToDestination=(i,s,o,a,c)=>{const d=getAudioNodeConnections(i);return Array.from(d.outputs).filter(g=>g[0]===o&&(a===void 0||g[1]===a)&&(c===void 0||g[2]===c)).map(g=>(isAudioNodeOutputConnection(g)?deleteInputsOfAudioNode(i,s,...g):deleteInputsOfAudioParam(i,s,...g),d.outputs.delete(g),g[0]))},createAudioNodeConstructor=(i,s,o,a,c,d,g,b,$,_,_e,et,rt,tt,j,nt)=>class extends _{constructor(ot,ut,ht,pt){super(ht),this._context=ot,this._nativeAudioNode=ht;const it=_e(ot);et(it)&&o(testAudioNodeDisconnectMethodSupport,()=>testAudioNodeDisconnectMethodSupport(it,nt))!==!0&&wrapAudioNodeDisconnectMethod(ht),AUDIO_NODE_STORE.set(this,ht),EVENT_LISTENERS.set(this,new Set),ot.state!=="closed"&&ut&&setInternalStateToActive(this),i(this,pt,ht)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(ot){this._nativeAudioNode.channelCount=ot}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(ot){this._nativeAudioNode.channelCountMode=ot}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(ot){this._nativeAudioNode.channelInterpretation=ot}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(ot,ut=0,ht=0){if(ut<0||ut>=this._nativeAudioNode.numberOfOutputs)throw c();const pt=_e(this._context),it=j(pt);if(rt(ot)||tt(ot))throw d();if(isAudioNode$1(ot)){const bt=getNativeAudioNode(ot);try{const Ct=connectNativeAudioNodeToNativeAudioNode(this._nativeAudioNode,bt,ut,ht),_t=isPassiveAudioNode(this);(it||_t)&&this._nativeAudioNode.disconnect(...Ct),this.context.state!=="closed"&&!_t&&isPassiveAudioNode(ot)&&setInternalStateToActive(ot)}catch(Ct){throw Ct.code===12?d():Ct}if(s(this,ot,ut,ht,it)){const Ct=$([this],ot);visitEachAudioNodeOnce(Ct,a(it))}return ot}const yt=getNativeAudioParam(ot);if(yt.name==="playbackRate"&&yt.maxValue===1024)throw g();try{this._nativeAudioNode.connect(yt,ut),(it||isPassiveAudioNode(this))&&this._nativeAudioNode.disconnect(yt,ut)}catch(bt){throw bt.code===12?d():bt}if(addConnectionToAudioParamOfAudioContext(this,ot,ut,it)){const bt=$([this],ot);visitEachAudioNodeOnce(bt,a(it))}}disconnect(ot,ut,ht){let pt;const it=_e(this._context),yt=j(it);if(ot===void 0)pt=deleteAnyConnection(this,yt);else if(typeof ot=="number"){if(ot<0||ot>=this.numberOfOutputs)throw c();pt=deleteConnectionAtOutput(this,yt,ot)}else{if(ut!==void 0&&(ut<0||ut>=this.numberOfOutputs)||isAudioNode$1(ot)&&ht!==void 0&&(ht<0||ht>=ot.numberOfInputs))throw c();if(pt=deleteConnectionToDestination(this,yt,ot,ut,ht),pt.length===0)throw d()}for(const ft of pt){const bt=$([this],ft);visitEachAudioNodeOnce(bt,b)}}},createAudioParamFactory=(i,s,o,a,c,d,g,b,$,_,_e,et,rt)=>(tt,j,nt,st=null,ot=null)=>{const ut=nt.value,ht=new AutomationEventList(ut),pt=j?a(ht):null,it={get defaultValue(){return ut},get maxValue(){return st===null?nt.maxValue:st},get minValue(){return ot===null?nt.minValue:ot},get value(){return nt.value},set value(yt){nt.value=yt,it.setValueAtTime(yt,tt.context.currentTime)},cancelAndHoldAtTime(yt){if(typeof nt.cancelAndHoldAtTime=="function")pt===null&&ht.flush(tt.context.currentTime),ht.add(c(yt)),nt.cancelAndHoldAtTime(yt);else{const ft=Array.from(ht).pop();pt===null&&ht.flush(tt.context.currentTime),ht.add(c(yt));const bt=Array.from(ht).pop();nt.cancelScheduledValues(yt),ft!==bt&&bt!==void 0&&(bt.type==="exponentialRampToValue"?nt.exponentialRampToValueAtTime(bt.value,bt.endTime):bt.type==="linearRampToValue"?nt.linearRampToValueAtTime(bt.value,bt.endTime):bt.type==="setValue"?nt.setValueAtTime(bt.value,bt.startTime):bt.type==="setValueCurve"&&nt.setValueCurveAtTime(bt.values,bt.startTime,bt.duration))}return it},cancelScheduledValues(yt){return pt===null&&ht.flush(tt.context.currentTime),ht.add(d(yt)),nt.cancelScheduledValues(yt),it},exponentialRampToValueAtTime(yt,ft){if(yt===0)throw new RangeError;if(!Number.isFinite(ft)||ft<0)throw new RangeError;const bt=tt.context.currentTime;return pt===null&&ht.flush(bt),Array.from(ht).length===0&&(ht.add(_(ut,bt)),nt.setValueAtTime(ut,bt)),ht.add(g(yt,ft)),nt.exponentialRampToValueAtTime(yt,ft),it},linearRampToValueAtTime(yt,ft){const bt=tt.context.currentTime;return pt===null&&ht.flush(bt),Array.from(ht).length===0&&(ht.add(_(ut,bt)),nt.setValueAtTime(ut,bt)),ht.add(b(yt,ft)),nt.linearRampToValueAtTime(yt,ft),it},setTargetAtTime(yt,ft,bt){return pt===null&&ht.flush(tt.context.currentTime),ht.add($(yt,ft,bt)),nt.setTargetAtTime(yt,ft,bt),it},setValueAtTime(yt,ft){return pt===null&&ht.flush(tt.context.currentTime),ht.add(_(yt,ft)),nt.setValueAtTime(yt,ft),it},setValueCurveAtTime(yt,ft,bt){const Tt=yt instanceof Float32Array?yt:new Float32Array(yt);if(et!==null&&et.name==="webkitAudioContext"){const Ct=ft+bt,_t=tt.context.sampleRate,Ot=Math.ceil(ft*_t),kt=Math.floor(Ct*_t),Rt=kt-Ot,jt=new Float32Array(Rt);for(let Bt=0;Bt<Rt;Bt+=1){const zt=(Tt.length-1)/bt*((Ot+Bt)/_t-ft),Ut=Math.floor(zt),Qt=Math.ceil(zt);jt[Bt]=Ut===Qt?Tt[Ut]:(1-(zt-Ut))*Tt[Ut]+(1-(Qt-zt))*Tt[Qt]}pt===null&&ht.flush(tt.context.currentTime),ht.add(_e(jt,ft,bt)),nt.setValueCurveAtTime(jt,ft,bt);const Gt=kt/_t;Gt<Ct&&rt(it,jt[jt.length-1],Gt),rt(it,Tt[Tt.length-1],Ct)}else pt===null&&ht.flush(tt.context.currentTime),ht.add(_e(Tt,ft,bt)),nt.setValueCurveAtTime(Tt,ft,bt);return it}};return o.set(it,nt),s.set(it,tt),i(it,pt),it},createAudioParamRenderer=i=>({replay(s){for(const o of i)if(o.type==="exponentialRampToValue"){const{endTime:a,value:c}=o;s.exponentialRampToValueAtTime(c,a)}else if(o.type==="linearRampToValue"){const{endTime:a,value:c}=o;s.linearRampToValueAtTime(c,a)}else if(o.type==="setTarget"){const{startTime:a,target:c,timeConstant:d}=o;s.setTargetAtTime(c,a,d)}else if(o.type==="setValue"){const{startTime:a,value:c}=o;s.setValueAtTime(c,a)}else if(o.type==="setValueCurve"){const{duration:a,startTime:c,values:d}=o;s.setValueCurveAtTime(d,c,a)}else throw new Error("Can't apply an unknown automation.")}});class ReadOnlyMap{constructor(s){this._map=new Map(s)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(s,o=null){return this._map.forEach((a,c)=>s.call(o,a,c,this))}get(s){return this._map.get(s)}has(s){return this._map.has(s)}keys(){return this._map.keys()}values(){return this._map.values()}}const DEFAULT_OPTIONS$g={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}},createAudioWorkletNodeConstructor=(i,s,o,a,c,d,g,b,$,_,_e,et,rt,tt)=>class extends s{constructor(nt,st,ot){var ut;const ht=b(nt),pt=$(ht),it=_e({...DEFAULT_OPTIONS$g,...ot});rt(it);const yt=NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(ht),ft=yt==null?void 0:yt.get(st),bt=pt||ht.state!=="closed"?ht:(ut=g(ht))!==null&&ut!==void 0?ut:ht,Tt=c(bt,pt?null:nt.baseLatency,_,st,ft,it),Ct=pt?a(st,it,ft):null;super(nt,!0,Tt,Ct);const _t=[];Tt.parameters.forEach((kt,Rt)=>{const jt=o(this,pt,kt);_t.push([Rt,jt])}),this._nativeAudioWorkletNode=Tt,this._onprocessorerror=null,this._parameters=new ReadOnlyMap(_t),pt&&i(ht,this);const{activeInputs:Ot}=d(this);et(Tt,Ot)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(nt){const st=typeof nt=="function"?tt(this,nt):null;this._nativeAudioWorkletNode.onprocessorerror=st;const ot=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=ot!==null&&ot===st?nt:ot}get parameters(){return this._parameters===null?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}};function copyFromChannel(i,s,o,a,c){if(typeof i.copyFromChannel=="function")s[o].byteLength===0&&(s[o]=new Float32Array(128)),i.copyFromChannel(s[o],a,c);else{const d=i.getChannelData(a);if(s[o].byteLength===0)s[o]=d.slice(c,c+128);else{const g=new Float32Array(d.buffer,c*Float32Array.BYTES_PER_ELEMENT,128);s[o].set(g)}}}const copyToChannel=(i,s,o,a,c)=>{typeof i.copyToChannel=="function"?s[o].byteLength!==0&&i.copyToChannel(s[o],a,c):s[o].byteLength!==0&&i.getChannelData(a).set(s[o],c)},createNestedArrays=(i,s)=>{const o=[];for(let a=0;a<i;a+=1){const c=[],d=typeof s=="number"?s:s[a];for(let g=0;g<d;g+=1)c.push(new Float32Array(128));o.push(c)}return o},getAudioWorkletProcessor=(i,s)=>{const o=getValueForKey(NODE_TO_PROCESSOR_MAPS,i),a=getNativeAudioNode(s);return getValueForKey(o,a)},processBuffer=async(i,s,o,a,c,d,g)=>{const b=s===null?Math.ceil(i.context.length/128)*128:s.length,$=a.channelCount*a.numberOfInputs,_=c.reduce((st,ot)=>st+ot,0),_e=_===0?null:o.createBuffer(_,b,o.sampleRate);if(d===void 0)throw new Error("Missing the processor constructor.");const et=getAudioNodeConnections(i),rt=await getAudioWorkletProcessor(o,i),tt=createNestedArrays(a.numberOfInputs,a.channelCount),j=createNestedArrays(a.numberOfOutputs,c),nt=Array.from(i.parameters.keys()).reduce((st,ot)=>({...st,[ot]:new Float32Array(128)}),{});for(let st=0;st<b;st+=128){if(a.numberOfInputs>0&&s!==null)for(let ot=0;ot<a.numberOfInputs;ot+=1)for(let ut=0;ut<a.channelCount;ut+=1)copyFromChannel(s,tt[ot],ut,ut,st);d.parameterDescriptors!==void 0&&s!==null&&d.parameterDescriptors.forEach(({name:ot},ut)=>{copyFromChannel(s,nt,ot,$+ut,st)});for(let ot=0;ot<a.numberOfInputs;ot+=1)for(let ut=0;ut<c[ot];ut+=1)j[ot][ut].byteLength===0&&(j[ot][ut]=new Float32Array(128));try{const ot=tt.map((ht,pt)=>et.activeInputs[pt].size===0?[]:ht),ut=g(st/o.sampleRate,o.sampleRate,()=>rt.process(ot,j,nt));if(_e!==null)for(let ht=0,pt=0;ht<a.numberOfOutputs;ht+=1){for(let it=0;it<c[ht];it+=1)copyToChannel(_e,j[ht],it,pt+it,st);pt+=c[ht]}if(!ut)break}catch(ot){i.dispatchEvent(new ErrorEvent("processorerror",{colno:ot.colno,filename:ot.filename,lineno:ot.lineno,message:ot.message}));break}}return _e},createAudioWorkletNodeRendererFactory=(i,s,o,a,c,d,g,b,$,_,_e,et,rt,tt,j,nt)=>(st,ot,ut)=>{const ht=new WeakMap;let pt=null;const it=async(yt,ft)=>{let bt=_e(yt),Tt=null;const Ct=isOwnedByContext(bt,ft),_t=Array.isArray(ot.outputChannelCount)?ot.outputChannelCount:Array.from(ot.outputChannelCount);if(et===null){const Ot=_t.reduce((Gt,Bt)=>Gt+Bt,0),kt=c(ft,{channelCount:Math.max(1,Ot),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,Ot)}),Rt=[];for(let Gt=0;Gt<yt.numberOfOutputs;Gt+=1)Rt.push(a(ft,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:_t[Gt]}));const jt=g(ft,{channelCount:ot.channelCount,channelCountMode:ot.channelCountMode,channelInterpretation:ot.channelInterpretation,gain:1});jt.connect=s.bind(null,Rt),jt.disconnect=$.bind(null,Rt),Tt=[kt,Rt,jt]}else Ct||(bt=new et(ft,st));if(ht.set(ft,Tt===null?bt:Tt[2]),Tt!==null){if(pt===null){if(ut===void 0)throw new Error("Missing the processor constructor.");if(rt===null)throw new Error("Missing the native OfflineAudioContext constructor.");const Bt=yt.channelCount*yt.numberOfInputs,zt=ut.parameterDescriptors===void 0?0:ut.parameterDescriptors.length,Ut=Bt+zt;pt=processBuffer(yt,Ut===0?null:await(async()=>{const tn=new rt(Ut,Math.ceil(yt.context.length/128)*128,ft.sampleRate),sn=[],ln=[];for(let cn=0;cn<ot.numberOfInputs;cn+=1)sn.push(g(tn,{channelCount:ot.channelCount,channelCountMode:ot.channelCountMode,channelInterpretation:ot.channelInterpretation,gain:1})),ln.push(c(tn,{channelCount:ot.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:ot.channelCount}));const an=await Promise.all(Array.from(yt.parameters.values()).map(async cn=>{const Wt=d(tn,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:cn.value});return await tt(tn,cn,Wt.offset),Wt})),Yt=a(tn,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,Bt+zt)});for(let cn=0;cn<ot.numberOfInputs;cn+=1){sn[cn].connect(ln[cn]);for(let Wt=0;Wt<ot.channelCount;Wt+=1)ln[cn].connect(Yt,Wt,cn*ot.channelCount+Wt)}for(const[cn,Wt]of an.entries())Wt.connect(Yt,0,Bt+cn),Wt.start(0);return Yt.connect(tn.destination),await Promise.all(sn.map(cn=>j(yt,tn,cn))),nt(tn)})(),ft,ot,_t,ut,_)}const Ot=await pt,kt=o(ft,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[Rt,jt,Gt]=Tt;Ot!==null&&(kt.buffer=Ot,kt.start(0)),kt.connect(Rt);for(let Bt=0,zt=0;Bt<yt.numberOfOutputs;Bt+=1){const Ut=jt[Bt];for(let Qt=0;Qt<_t[Bt];Qt+=1)Rt.connect(Ut,zt+Qt,Qt);zt+=_t[Bt]}return Gt}if(Ct)for(const[Ot,kt]of yt.parameters.entries())await i(ft,kt,bt.parameters.get(Ot));else for(const[Ot,kt]of yt.parameters.entries())await tt(ft,kt,bt.parameters.get(Ot));return await j(yt,ft,bt),bt};return{render(yt,ft){b(ft,yt);const bt=ht.get(ft);return bt!==void 0?Promise.resolve(bt):it(yt,ft)}}},createBaseAudioContextConstructor=(i,s,o,a,c,d,g,b,$,_,_e,et,rt,tt,j,nt,st,ot,ut,ht)=>class extends j{constructor(it,yt){super(it,yt),this._nativeContext=it,this._audioWorklet=i===void 0?void 0:{addModule:(ft,bt)=>i(this,ft,bt)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new s(this)}createBiquadFilter(){return new c(this)}createBuffer(it,yt,ft){return new o({length:yt,numberOfChannels:it,sampleRate:ft})}createBufferSource(){return new a(this)}createChannelMerger(it=6){return new d(this,{numberOfInputs:it})}createChannelSplitter(it=6){return new g(this,{numberOfOutputs:it})}createConstantSource(){return new b(this)}createConvolver(){return new $(this)}createDelay(it=1){return new _e(this,{maxDelayTime:it})}createDynamicsCompressor(){return new et(this)}createGain(){return new rt(this)}createIIRFilter(it,yt){return new tt(this,{feedback:yt,feedforward:it})}createOscillator(){return new nt(this)}createPanner(){return new st(this)}createPeriodicWave(it,yt,ft={disableNormalization:!1}){return new ot(this,{...ft,imag:yt,real:it})}createStereoPanner(){return new ut(this)}createWaveShaper(){return new ht(this)}decodeAudioData(it,yt,ft){return _(this._nativeContext,it).then(bt=>(typeof yt=="function"&&yt(bt),bt),bt=>{throw typeof ft=="function"&&ft(bt),bt})}},DEFAULT_OPTIONS$f={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},createBiquadFilterNodeConstructor=(i,s,o,a,c,d,g,b)=>class extends i{constructor(_,_e){const et=d(_),rt={...DEFAULT_OPTIONS$f,..._e},tt=c(et,rt),j=g(et),nt=j?o():null;super(_,!1,tt,nt),this._Q=s(this,j,tt.Q,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._detune=s(this,j,tt.detune,1200*Math.log2(MOST_POSITIVE_SINGLE_FLOAT),-1200*Math.log2(MOST_POSITIVE_SINGLE_FLOAT)),this._frequency=s(this,j,tt.frequency,_.sampleRate/2,0),this._gain=s(this,j,tt.gain,40*Math.log10(MOST_POSITIVE_SINGLE_FLOAT),MOST_NEGATIVE_SINGLE_FLOAT),this._nativeBiquadFilterNode=tt,b(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(_){this._nativeBiquadFilterNode.type=_}getFrequencyResponse(_,_e,et){try{this._nativeBiquadFilterNode.getFrequencyResponse(_,_e,et)}catch(rt){throw rt.code===11?a():rt}if(_.length!==_e.length||_e.length!==et.length)throw a()}},createBiquadFilterNodeRendererFactory=(i,s,o,a,c)=>()=>{const d=new WeakMap,g=async(b,$)=>{let _=o(b);const _e=isOwnedByContext(_,$);if(!_e){const et={Q:_.Q.value,channelCount:_.channelCount,channelCountMode:_.channelCountMode,channelInterpretation:_.channelInterpretation,detune:_.detune.value,frequency:_.frequency.value,gain:_.gain.value,type:_.type};_=s($,et)}return d.set($,_),_e?(await i($,b.Q,_.Q),await i($,b.detune,_.detune),await i($,b.frequency,_.frequency),await i($,b.gain,_.gain)):(await a($,b.Q,_.Q),await a($,b.detune,_.detune),await a($,b.frequency,_.frequency),await a($,b.gain,_.gain)),await c(b,$,_),_};return{render(b,$){const _=d.get($);return _!==void 0?Promise.resolve(_):g(b,$)}}},createCacheTestResult=(i,s)=>(o,a)=>{const c=s.get(o);if(c!==void 0)return c;const d=i.get(o);if(d!==void 0)return d;try{const g=a();return g instanceof Promise?(i.set(o,g),g.catch(()=>!1).then(b=>(i.delete(o),s.set(o,b),b))):(s.set(o,g),g)}catch{return s.set(o,!1),!1}},DEFAULT_OPTIONS$e={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},createChannelMergerNodeConstructor=(i,s,o,a,c)=>class extends i{constructor(g,b){const $=a(g),_={...DEFAULT_OPTIONS$e,...b},_e=o($,_),et=c($)?s():null;super(g,!1,_e,et)}},createChannelMergerNodeRendererFactory=(i,s,o)=>()=>{const a=new WeakMap,c=async(d,g)=>{let b=s(d);if(!isOwnedByContext(b,g)){const _={channelCount:b.channelCount,channelCountMode:b.channelCountMode,channelInterpretation:b.channelInterpretation,numberOfInputs:b.numberOfInputs};b=i(g,_)}return a.set(g,b),await o(d,g,b),b};return{render(d,g){const b=a.get(g);return b!==void 0?Promise.resolve(b):c(d,g)}}},DEFAULT_OPTIONS$d={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},createChannelSplitterNodeConstructor=(i,s,o,a,c,d)=>class extends i{constructor(b,$){const _=a(b),_e=d({...DEFAULT_OPTIONS$d,...$}),et=o(_,_e),rt=c(_)?s():null;super(b,!1,et,rt)}},createChannelSplitterNodeRendererFactory=(i,s,o)=>()=>{const a=new WeakMap,c=async(d,g)=>{let b=s(d);if(!isOwnedByContext(b,g)){const _={channelCount:b.channelCount,channelCountMode:b.channelCountMode,channelInterpretation:b.channelInterpretation,numberOfOutputs:b.numberOfOutputs};b=i(g,_)}return a.set(g,b),await o(d,g,b),b};return{render(d,g){const b=a.get(g);return b!==void 0?Promise.resolve(b):c(d,g)}}},createConnectAudioParam=i=>(s,o,a)=>i(o,s,a),createConnectMultipleOutputs=i=>(s,o,a=0,c=0)=>{const d=s[a];if(d===void 0)throw i();return isNativeAudioNode$1(o)?d.connect(o,0,c):d.connect(o,0)},createConnectedNativeAudioBufferSourceNodeFactory=i=>(s,o)=>{const a=i(s,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),c=s.createBuffer(1,2,44100);return a.buffer=c,a.loop=!0,a.connect(o),a.start(),()=>{a.stop(),a.disconnect(o)}},DEFAULT_OPTIONS$c={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},createConstantSourceNodeConstructor=(i,s,o,a,c,d,g)=>class extends i{constructor($,_){const _e=c($),et={...DEFAULT_OPTIONS$c,..._},rt=a(_e,et),tt=d(_e),j=tt?o():null;super($,!1,rt,j),this._constantSourceNodeRenderer=j,this._nativeConstantSourceNode=rt,this._offset=s(this,tt,rt.offset,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended($){const _=typeof $=="function"?g(this,$):null;this._nativeConstantSourceNode.onended=_;const _e=this._nativeConstantSourceNode.onended;this._onended=_e!==null&&_e===_?$:_e}start($=0){if(this._nativeConstantSourceNode.start($),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.start=$),this.context.state!=="closed"){setInternalStateToActive(this);const _=()=>{this._nativeConstantSourceNode.removeEventListener("ended",_),isActiveAudioNode(this)&&setInternalStateToPassive(this)};this._nativeConstantSourceNode.addEventListener("ended",_)}}stop($=0){this._nativeConstantSourceNode.stop($),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.stop=$)}},createConstantSourceNodeRendererFactory=(i,s,o,a,c)=>()=>{const d=new WeakMap;let g=null,b=null;const $=async(_,_e)=>{let et=o(_);const rt=isOwnedByContext(et,_e);if(!rt){const tt={channelCount:et.channelCount,channelCountMode:et.channelCountMode,channelInterpretation:et.channelInterpretation,offset:et.offset.value};et=s(_e,tt),g!==null&&et.start(g),b!==null&&et.stop(b)}return d.set(_e,et),rt?await i(_e,_.offset,et.offset):await a(_e,_.offset,et.offset),await c(_,_e,et),et};return{set start(_){g=_},set stop(_){b=_},render(_,_e){const et=d.get(_e);return et!==void 0?Promise.resolve(et):$(_,_e)}}},createConvertNumberToUnsignedLong=i=>s=>(i[0]=s,i[0]),DEFAULT_OPTIONS$b={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},createConvolverNodeConstructor=(i,s,o,a,c,d)=>class extends i{constructor(b,$){const _=a(b),_e={...DEFAULT_OPTIONS$b,...$},et=o(_,_e),tt=c(_)?s():null;super(b,!1,et,tt),this._isBufferNullified=!1,this._nativeConvolverNode=et,_e.buffer!==null&&d(this,_e.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(b){if(this._nativeConvolverNode.buffer=b,b===null&&this._nativeConvolverNode.buffer!==null){const $=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=$.createBuffer(1,1,$.sampleRate),this._isBufferNullified=!0,d(this,0)}else this._isBufferNullified=!1,d(this,this._nativeConvolverNode.buffer===null?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(b){this._nativeConvolverNode.normalize=b}},createConvolverNodeRendererFactory=(i,s,o)=>()=>{const a=new WeakMap,c=async(d,g)=>{let b=s(d);if(!isOwnedByContext(b,g)){const _={buffer:b.buffer,channelCount:b.channelCount,channelCountMode:b.channelCountMode,channelInterpretation:b.channelInterpretation,disableNormalization:!b.normalize};b=i(g,_)}return a.set(g,b),isNativeAudioNodeFaker(b)?await o(d,g,b.inputs[0]):await o(d,g,b),b};return{render(d,g){const b=a.get(g);return b!==void 0?Promise.resolve(b):c(d,g)}}},createCreateNativeOfflineAudioContext=(i,s)=>(o,a,c)=>{if(s===null)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new s(o,a,c)}catch(d){throw d.name==="SyntaxError"?i():d}},createDataCloneError=()=>new DOMException("","DataCloneError"),detachArrayBuffer=i=>{const{port1:s,port2:o}=new MessageChannel;return new Promise(a=>{const c=()=>{o.onmessage=null,s.close(),o.close(),a()};o.onmessage=()=>c();try{s.postMessage(i,[i])}catch{}finally{c()}})},createDecodeAudioData=(i,s,o,a,c,d,g,b,$,_,_e)=>(et,rt)=>{const tt=g(et)?et:d(et);if(c.has(rt)){const j=o();return Promise.reject(j)}try{c.add(rt)}catch{}return s($,()=>$(tt))?tt.decodeAudioData(rt).then(j=>(detachArrayBuffer(rt).catch(()=>{}),s(b,()=>b(j))||_e(j),i.add(j),j)):new Promise((j,nt)=>{const st=async()=>{try{await detachArrayBuffer(rt)}catch{}},ot=ut=>{nt(ut),st()};try{tt.decodeAudioData(rt,ut=>{typeof ut.copyFromChannel!="function"&&(_(ut),wrapAudioBufferGetChannelDataMethod(ut)),i.add(ut),st().then(()=>j(ut))},ut=>{ot(ut===null?a():ut)})}catch(ut){ot(ut)}})},createDecrementCycleCounter=(i,s,o,a,c,d,g,b)=>($,_)=>{const _e=s.get($);if(_e===void 0)throw new Error("Missing the expected cycle count.");const et=d($.context),rt=b(et);if(_e===_){if(s.delete($),!rt&&g($)){const tt=a($),{outputs:j}=o($);for(const nt of j)if(isAudioNodeOutputConnection(nt)){const st=a(nt[0]);i(tt,st,nt[1],nt[2])}else{const st=c(nt[0]);tt.connect(st,nt[1])}}}else s.set($,_e-_)},DEFAULT_OPTIONS$a={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},createDelayNodeConstructor=(i,s,o,a,c,d,g)=>class extends i{constructor($,_){const _e=c($),et={...DEFAULT_OPTIONS$a,..._},rt=a(_e,et),tt=d(_e),j=tt?o(et.maxDelayTime):null;super($,!1,rt,j),this._delayTime=s(this,tt,rt.delayTime),g(this,et.maxDelayTime)}get delayTime(){return this._delayTime}},createDelayNodeRendererFactory=(i,s,o,a,c)=>d=>{const g=new WeakMap,b=async($,_)=>{let _e=o($);const et=isOwnedByContext(_e,_);if(!et){const rt={channelCount:_e.channelCount,channelCountMode:_e.channelCountMode,channelInterpretation:_e.channelInterpretation,delayTime:_e.delayTime.value,maxDelayTime:d};_e=s(_,rt)}return g.set(_,_e),et?await i(_,$.delayTime,_e.delayTime):await a(_,$.delayTime,_e.delayTime),await c($,_,_e),_e};return{render($,_){const _e=g.get(_);return _e!==void 0?Promise.resolve(_e):b($,_)}}},createDeleteActiveInputConnectionToAudioNode=i=>(s,o,a,c)=>i(s[c],d=>d[0]===o&&d[1]===a),createDeleteUnrenderedAudioWorkletNode=i=>(s,o)=>{i(s).delete(o)},isDelayNode=i=>"delayTime"in i,createDetectCycles=(i,s,o)=>function a(c,d){const g=isAudioNode$1(d)?d:o(i,d);if(isDelayNode(g))return[];if(c[0]===g)return[c];if(c.includes(g))return[];const{outputs:b}=s(g);return Array.from(b).map($=>a([...c,g],$[0])).reduce(($,_)=>$.concat(_),[])},getOutputAudioNodeAtIndex=(i,s,o)=>{const a=s[o];if(a===void 0)throw i();return a},createDisconnectMultipleOutputs=i=>(s,o=void 0,a=void 0,c=0)=>o===void 0?s.forEach(d=>d.disconnect()):typeof o=="number"?getOutputAudioNodeAtIndex(i,s,o).disconnect():isNativeAudioNode$1(o)?a===void 0?s.forEach(d=>d.disconnect(o)):c===void 0?getOutputAudioNodeAtIndex(i,s,a).disconnect(o,0):getOutputAudioNodeAtIndex(i,s,a).disconnect(o,0,c):a===void 0?s.forEach(d=>d.disconnect(o)):getOutputAudioNodeAtIndex(i,s,a).disconnect(o,0),DEFAULT_OPTIONS$9={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},createDynamicsCompressorNodeConstructor=(i,s,o,a,c,d,g,b)=>class extends i{constructor(_,_e){const et=d(_),rt={...DEFAULT_OPTIONS$9,..._e},tt=a(et,rt),j=g(et),nt=j?o():null;super(_,!1,tt,nt),this._attack=s(this,j,tt.attack),this._knee=s(this,j,tt.knee),this._nativeDynamicsCompressorNode=tt,this._ratio=s(this,j,tt.ratio),this._release=s(this,j,tt.release),this._threshold=s(this,j,tt.threshold),b(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(_){const _e=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=_,_>2)throw this._nativeDynamicsCompressorNode.channelCount=_e,c()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(_){const _e=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=_,_==="max")throw this._nativeDynamicsCompressorNode.channelCountMode=_e,c()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return typeof this._nativeDynamicsCompressorNode.reduction.value=="number"?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}},createDynamicsCompressorNodeRendererFactory=(i,s,o,a,c)=>()=>{const d=new WeakMap,g=async(b,$)=>{let _=o(b);const _e=isOwnedByContext(_,$);if(!_e){const et={attack:_.attack.value,channelCount:_.channelCount,channelCountMode:_.channelCountMode,channelInterpretation:_.channelInterpretation,knee:_.knee.value,ratio:_.ratio.value,release:_.release.value,threshold:_.threshold.value};_=s($,et)}return d.set($,_),_e?(await i($,b.attack,_.attack),await i($,b.knee,_.knee),await i($,b.ratio,_.ratio),await i($,b.release,_.release),await i($,b.threshold,_.threshold)):(await a($,b.attack,_.attack),await a($,b.knee,_.knee),await a($,b.ratio,_.ratio),await a($,b.release,_.release),await a($,b.threshold,_.threshold)),await c(b,$,_),_};return{render(b,$){const _=d.get($);return _!==void 0?Promise.resolve(_):g(b,$)}}},createEncodingError=()=>new DOMException("","EncodingError"),createEvaluateSource=i=>s=>new Promise((o,a)=>{if(i===null){a(new SyntaxError);return}const c=i.document.head;if(c===null)a(new SyntaxError);else{const d=i.document.createElement("script"),g=new Blob([s],{type:"application/javascript"}),b=URL.createObjectURL(g),$=i.onerror,_=()=>{i.onerror=$,URL.revokeObjectURL(b)};i.onerror=(_e,et,rt,tt,j)=>{if(et===b||et===i.location.href&&rt===1&&tt===1)return _(),a(j),!1;if($!==null)return $(_e,et,rt,tt,j)},d.onerror=()=>{_(),a(new SyntaxError)},d.onload=()=>{_(),o()},d.src=b,d.type="module",c.appendChild(d)}}),createEventTargetConstructor=i=>class{constructor(o){this._nativeEventTarget=o,this._listeners=new WeakMap}addEventListener(o,a,c){if(a!==null){let d=this._listeners.get(a);d===void 0&&(d=i(this,a),typeof a=="function"&&this._listeners.set(a,d)),this._nativeEventTarget.addEventListener(o,d,c)}}dispatchEvent(o){return this._nativeEventTarget.dispatchEvent(o)}removeEventListener(o,a,c){const d=a===null?void 0:this._listeners.get(a);this._nativeEventTarget.removeEventListener(o,d===void 0?null:d,c)}},createExposeCurrentFrameAndCurrentTime=i=>(s,o,a)=>{Object.defineProperties(i,{currentFrame:{configurable:!0,get(){return Math.round(s*o)}},currentTime:{configurable:!0,get(){return s}}});try{return a()}finally{i!==null&&(delete i.currentFrame,delete i.currentTime)}},createFetchSource=i=>async s=>{try{const o=await fetch(s);if(o.ok)return[await o.text(),o.url]}catch{}throw i()},DEFAULT_OPTIONS$8={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},createGainNodeConstructor=(i,s,o,a,c,d)=>class extends i{constructor(b,$){const _=c(b),_e={...DEFAULT_OPTIONS$8,...$},et=a(_,_e),rt=d(_),tt=rt?o():null;super(b,!1,et,tt),this._gain=s(this,rt,et.gain,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT)}get gain(){return this._gain}},createGainNodeRendererFactory=(i,s,o,a,c)=>()=>{const d=new WeakMap,g=async(b,$)=>{let _=o(b);const _e=isOwnedByContext(_,$);if(!_e){const et={channelCount:_.channelCount,channelCountMode:_.channelCountMode,channelInterpretation:_.channelInterpretation,gain:_.gain.value};_=s($,et)}return d.set($,_),_e?await i($,b.gain,_.gain):await a($,b.gain,_.gain),await c(b,$,_),_};return{render(b,$){const _=d.get($);return _!==void 0?Promise.resolve(_):g(b,$)}}},createGetActiveAudioWorkletNodeInputs=(i,s)=>o=>s(i,o),createGetAudioNodeRenderer=i=>s=>{const o=i(s);if(o.renderer===null)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return o.renderer},createGetAudioNodeTailTime=i=>s=>{var o;return(o=i.get(s))!==null&&o!==void 0?o:0},createGetAudioParamRenderer=i=>s=>{const o=i(s);if(o.renderer===null)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return o.renderer},createGetBackupOfflineAudioContext=i=>s=>i.get(s),createInvalidStateError=()=>new DOMException("","InvalidStateError"),createGetNativeContext=i=>s=>{const o=i.get(s);if(o===void 0)throw createInvalidStateError();return o},createGetOrCreateBackupOfflineAudioContext=(i,s)=>o=>{let a=i.get(o);if(a!==void 0)return a;if(s===null)throw new Error("Missing the native OfflineAudioContext constructor.");return a=new s(1,1,44100),i.set(o,a),a},createGetUnrenderedAudioWorkletNodes=i=>s=>{const o=i.get(s);if(o===void 0)throw new Error("The context has no set of AudioWorkletNodes.");return o},createInvalidAccessError=()=>new DOMException("","InvalidAccessError"),wrapIIRFilterNodeGetFrequencyResponseMethod=i=>{i.getFrequencyResponse=(s=>(o,a,c)=>{if(o.length!==a.length||a.length!==c.length)throw createInvalidAccessError();return s.call(i,o,a,c)})(i.getFrequencyResponse)},DEFAULT_OPTIONS$7={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},createIIRFilterNodeConstructor=(i,s,o,a,c,d)=>class extends i{constructor(b,$){const _=a(b),_e=c(_),et={...DEFAULT_OPTIONS$7,...$},rt=s(_,_e?null:b.baseLatency,et),tt=_e?o(et.feedback,et.feedforward):null;super(b,!1,rt,tt),wrapIIRFilterNodeGetFrequencyResponseMethod(rt),this._nativeIIRFilterNode=rt,d(this,1)}getFrequencyResponse(b,$,_){return this._nativeIIRFilterNode.getFrequencyResponse(b,$,_)}},filterBuffer=(i,s,o,a,c,d,g,b,$,_,_e)=>{const et=_.length;let rt=b;for(let tt=0;tt<et;tt+=1){let j=o[0]*_[tt];for(let nt=1;nt<c;nt+=1){const st=rt-nt&$-1;j+=o[nt]*d[st],j-=i[nt]*g[st]}for(let nt=c;nt<a;nt+=1)j+=o[nt]*d[rt-nt&$-1];for(let nt=c;nt<s;nt+=1)j-=i[nt]*g[rt-nt&$-1];d[rt]=_[tt],g[rt]=j,rt=rt+1&$-1,_e[tt]=j}return rt},filterFullBuffer=(i,s,o,a)=>{const c=o instanceof Float64Array?o:new Float64Array(o),d=a instanceof Float64Array?a:new Float64Array(a),g=c.length,b=d.length,$=Math.min(g,b);if(c[0]!==1){for(let j=0;j<g;j+=1)d[j]/=c[0];for(let j=1;j<b;j+=1)c[j]/=c[0]}const _=32,_e=new Float32Array(_),et=new Float32Array(_),rt=s.createBuffer(i.numberOfChannels,i.length,i.sampleRate),tt=i.numberOfChannels;for(let j=0;j<tt;j+=1){const nt=i.getChannelData(j),st=rt.getChannelData(j);_e.fill(0),et.fill(0),filterBuffer(c,g,d,b,$,_e,et,0,_,nt,st)}return rt},createIIRFilterNodeRendererFactory=(i,s,o,a,c)=>(d,g)=>{const b=new WeakMap;let $=null;const _=async(_e,et)=>{let rt=null,tt=s(_e);const j=isOwnedByContext(tt,et);if(et.createIIRFilter===void 0?rt=i(et,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):j||(tt=et.createIIRFilter(g,d)),b.set(et,rt===null?tt:rt),rt!==null){if($===null){if(o===null)throw new Error("Missing the native OfflineAudioContext constructor.");const st=new o(_e.context.destination.channelCount,_e.context.length,et.sampleRate);$=(async()=>{await a(_e,st,st.destination);const ot=await c(st);return filterFullBuffer(ot,et,d,g)})()}const nt=await $;return rt.buffer=nt,rt.start(0),rt}return await a(_e,et,tt),tt};return{render(_e,et){const rt=b.get(et);return rt!==void 0?Promise.resolve(rt):_(_e,et)}}},createIncrementCycleCounterFactory=(i,s,o,a,c,d)=>g=>(b,$)=>{const _=i.get(b);if(_===void 0){if(!g&&d(b)){const _e=a(b),{outputs:et}=o(b);for(const rt of et)if(isAudioNodeOutputConnection(rt)){const tt=a(rt[0]);s(_e,tt,rt[1],rt[2])}else{const tt=c(rt[0]);_e.disconnect(tt,rt[1])}}i.set(b,$)}else i.set(b,_+$)},createIsAnyAudioContext=(i,s)=>o=>{const a=i.get(o);return s(a)||s(o)},createIsAnyAudioNode=(i,s)=>o=>i.has(o)||s(o),createIsAnyAudioParam=(i,s)=>o=>i.has(o)||s(o),createIsAnyOfflineAudioContext=(i,s)=>o=>{const a=i.get(o);return s(a)||s(o)},createIsNativeAudioContext=i=>s=>i!==null&&s instanceof i,createIsNativeAudioNode=i=>s=>i!==null&&typeof i.AudioNode=="function"&&s instanceof i.AudioNode,createIsNativeAudioParam=i=>s=>i!==null&&typeof i.AudioParam=="function"&&s instanceof i.AudioParam,createIsNativeContext=(i,s)=>o=>i(o)||s(o),createIsNativeOfflineAudioContext=i=>s=>i!==null&&s instanceof i,createIsSecureContext=i=>i!==null&&i.isSecureContext,createIsSupportedPromise=async(i,s,o,a,c,d,g,b,$,_,_e,et,rt,tt,j,nt)=>i(s,s)&&i(o,o)&&i(c,c)&&i(d,d)&&i(b,b)&&i($,$)&&i(_,_)&&i(_e,_e)&&i(et,et)&&i(rt,rt)&&i(tt,tt)?(await Promise.all([i(a,a),i(g,g),i(j,j),i(nt,nt)])).every(ot=>ot):!1,createMediaElementAudioSourceNodeConstructor=(i,s,o,a)=>class extends i{constructor(d,g){const b=o(d),$=s(b,g);if(a(b))throw TypeError();super(d,!0,$,null),this._nativeMediaElementAudioSourceNode=$}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}},DEFAULT_OPTIONS$6={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},createMediaStreamAudioDestinationNodeConstructor=(i,s,o,a)=>class extends i{constructor(d,g){const b=o(d);if(a(b))throw new TypeError;const $={...DEFAULT_OPTIONS$6,...g},_=s(b,$);super(d,!1,_,null),this._nativeMediaStreamAudioDestinationNode=_}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}},createMediaStreamAudioSourceNodeConstructor=(i,s,o,a)=>class extends i{constructor(d,g){const b=o(d),$=s(b,g);if(a(b))throw new TypeError;super(d,!0,$,null),this._nativeMediaStreamAudioSourceNode=$}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}},createMediaStreamTrackAudioSourceNodeConstructor=(i,s,o)=>class extends i{constructor(c,d){const g=o(c),b=s(g,d);super(c,!0,b,null)}},createMinimalBaseAudioContextConstructor=(i,s,o,a,c,d)=>class extends o{constructor(b,$){super(b),this._nativeContext=b,CONTEXT_STORE.set(this,b),a(b)&&c.set(b,new Set),this._destination=new i(this,$),this._listener=s(this,b),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(b){const $=typeof b=="function"?d(this,b):null;this._nativeContext.onstatechange=$;const _=this._nativeContext.onstatechange;this._onstatechange=_!==null&&_===$?b:_}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}},testPromiseSupport=i=>{const s=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const o=i.decodeAudioData(s.buffer,()=>{});return o===void 0?!1:(o.catch(()=>{}),!0)}catch{}return!1},createMonitorConnections=(i,s)=>(o,a,c)=>{const d=new Set;return o.connect=(g=>(b,$=0,_=0)=>{const _e=d.size===0;if(s(b))return g.call(o,b,$,_),i(d,[b,$,_],et=>et[0]===b&&et[1]===$&&et[2]===_,!0),_e&&a(),b;g.call(o,b,$),i(d,[b,$],et=>et[0]===b&&et[1]===$,!0),_e&&a()})(o.connect),o.disconnect=(g=>(b,$,_)=>{const _e=d.size>0;if(b===void 0)g.apply(o),d.clear();else if(typeof b=="number"){g.call(o,b);for(const rt of d)rt[1]===b&&d.delete(rt)}else{s(b)?g.call(o,b,$,_):g.call(o,b,$);for(const rt of d)rt[0]===b&&($===void 0||rt[1]===$)&&(_===void 0||rt[2]===_)&&d.delete(rt)}const et=d.size===0;_e&&et&&c()})(o.disconnect),o},assignNativeAudioNodeOption=(i,s,o)=>{const a=s[o];a!==void 0&&a!==i[o]&&(i[o]=a)},assignNativeAudioNodeOptions=(i,s)=>{assignNativeAudioNodeOption(i,s,"channelCount"),assignNativeAudioNodeOption(i,s,"channelCountMode"),assignNativeAudioNodeOption(i,s,"channelInterpretation")},testAnalyserNodeGetFloatTimeDomainDataMethodSupport=i=>typeof i.getFloatTimeDomainData=="function",wrapAnalyserNodeGetFloatTimeDomainDataMethod=i=>{i.getFloatTimeDomainData=s=>{const o=new Uint8Array(s.length);i.getByteTimeDomainData(o);const a=Math.max(o.length,i.fftSize);for(let c=0;c<a;c+=1)s[c]=(o[c]-128)*.0078125;return s}},createNativeAnalyserNodeFactory=(i,s)=>(o,a)=>{const c=o.createAnalyser();if(assignNativeAudioNodeOptions(c,a),!(a.maxDecibels>a.minDecibels))throw s();return assignNativeAudioNodeOption(c,a,"fftSize"),assignNativeAudioNodeOption(c,a,"maxDecibels"),assignNativeAudioNodeOption(c,a,"minDecibels"),assignNativeAudioNodeOption(c,a,"smoothingTimeConstant"),i(testAnalyserNodeGetFloatTimeDomainDataMethodSupport,()=>testAnalyserNodeGetFloatTimeDomainDataMethodSupport(c))||wrapAnalyserNodeGetFloatTimeDomainDataMethod(c),c},createNativeAudioBufferConstructor=i=>i===null?null:i.hasOwnProperty("AudioBuffer")?i.AudioBuffer:null,assignNativeAudioNodeAudioParamValue=(i,s,o)=>{const a=s[o];a!==void 0&&a!==i[o].value&&(i[o].value=a)},wrapAudioBufferSourceNodeStartMethodConsecutiveCalls=i=>{i.start=(s=>{let o=!1;return(a=0,c=0,d)=>{if(o)throw createInvalidStateError();s.call(i,a,c,d),o=!0}})(i.start)},wrapAudioScheduledSourceNodeStartMethodNegativeParameters=i=>{i.start=(s=>(o=0,a=0,c)=>{if(typeof c=="number"&&c<0||a<0||o<0)throw new RangeError("The parameters can't be negative.");s.call(i,o,a,c)})(i.start)},wrapAudioScheduledSourceNodeStopMethodNegativeParameters=i=>{i.stop=(s=>(o=0)=>{if(o<0)throw new RangeError("The parameter can't be negative.");s.call(i,o)})(i.stop)},createNativeAudioBufferSourceNodeFactory=(i,s,o,a,c,d,g,b,$,_,_e)=>(et,rt)=>{const tt=et.createBufferSource();return assignNativeAudioNodeOptions(tt,rt),assignNativeAudioNodeAudioParamValue(tt,rt,"playbackRate"),assignNativeAudioNodeOption(tt,rt,"buffer"),assignNativeAudioNodeOption(tt,rt,"loop"),assignNativeAudioNodeOption(tt,rt,"loopEnd"),assignNativeAudioNodeOption(tt,rt,"loopStart"),s(o,()=>o(et))||wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(tt),s(a,()=>a(et))||$(tt),s(c,()=>c(et))||_(tt,et),s(d,()=>d(et))||wrapAudioScheduledSourceNodeStartMethodNegativeParameters(tt),s(g,()=>g(et))||_e(tt,et),s(b,()=>b(et))||wrapAudioScheduledSourceNodeStopMethodNegativeParameters(tt),i(et,tt),tt},createNativeAudioContextConstructor=i=>i===null?null:i.hasOwnProperty("AudioContext")?i.AudioContext:i.hasOwnProperty("webkitAudioContext")?i.webkitAudioContext:null,createNativeAudioDestinationNodeFactory=(i,s)=>(o,a,c)=>{const d=o.destination;if(d.channelCount!==a)try{d.channelCount=a}catch{}c&&d.channelCountMode!=="explicit"&&(d.channelCountMode="explicit"),d.maxChannelCount===0&&Object.defineProperty(d,"maxChannelCount",{value:a});const g=i(o,{channelCount:a,channelCountMode:d.channelCountMode,channelInterpretation:d.channelInterpretation,gain:1});return s(g,"channelCount",b=>()=>b.call(g),b=>$=>{b.call(g,$);try{d.channelCount=$}catch(_){if($>d.maxChannelCount)throw _}}),s(g,"channelCountMode",b=>()=>b.call(g),b=>$=>{b.call(g,$),d.channelCountMode=$}),s(g,"channelInterpretation",b=>()=>b.call(g),b=>$=>{b.call(g,$),d.channelInterpretation=$}),Object.defineProperty(g,"maxChannelCount",{get:()=>d.maxChannelCount}),g.connect(d),g},createNativeAudioWorkletNodeConstructor=i=>i===null?null:i.hasOwnProperty("AudioWorkletNode")?i.AudioWorkletNode:null,testClonabilityOfAudioWorkletNodeOptions=i=>{const{port1:s}=new MessageChannel;try{s.postMessage(i)}finally{s.close()}},createNativeAudioWorkletNodeFactory=(i,s,o,a,c)=>(d,g,b,$,_,_e)=>{if(b!==null)try{const et=new b(d,$,_e),rt=new Map;let tt=null;if(Object.defineProperties(et,{channelCount:{get:()=>_e.channelCount,set:()=>{throw i()}},channelCountMode:{get:()=>"explicit",set:()=>{throw i()}},onprocessorerror:{get:()=>tt,set:j=>{typeof tt=="function"&&et.removeEventListener("processorerror",tt),tt=typeof j=="function"?j:null,typeof tt=="function"&&et.addEventListener("processorerror",tt)}}}),et.addEventListener=(j=>(...nt)=>{if(nt[0]==="processorerror"){const st=typeof nt[1]=="function"?nt[1]:typeof nt[1]=="object"&&nt[1]!==null&&typeof nt[1].handleEvent=="function"?nt[1].handleEvent:null;if(st!==null){const ot=rt.get(nt[1]);ot!==void 0?nt[1]=ot:(nt[1]=ut=>{ut.type==="error"?(Object.defineProperties(ut,{type:{value:"processorerror"}}),st(ut)):st(new ErrorEvent(nt[0],{...ut}))},rt.set(st,nt[1]))}}return j.call(et,"error",nt[1],nt[2]),j.call(et,...nt)})(et.addEventListener),et.removeEventListener=(j=>(...nt)=>{if(nt[0]==="processorerror"){const st=rt.get(nt[1]);st!==void 0&&(rt.delete(nt[1]),nt[1]=st)}return j.call(et,"error",nt[1],nt[2]),j.call(et,nt[0],nt[1],nt[2])})(et.removeEventListener),_e.numberOfOutputs!==0){const j=o(d,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return et.connect(j).connect(d.destination),c(et,()=>j.disconnect(),()=>j.connect(d.destination))}return et}catch(et){throw et.code===11?a():et}if(_===void 0)throw a();return testClonabilityOfAudioWorkletNodeOptions(_e),s(d,g,_,_e)},computeBufferSize=(i,s)=>i===null?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(i*s))))),cloneAudioWorkletNodeOptions=i=>new Promise((s,o)=>{const{port1:a,port2:c}=new MessageChannel;a.onmessage=({data:d})=>{a.close(),c.close(),s(d)},a.onmessageerror=({data:d})=>{a.close(),c.close(),o(d)},c.postMessage(i)}),createAudioWorkletProcessorPromise=async(i,s)=>{const o=await cloneAudioWorkletNodeOptions(s);return new i(o)},createAudioWorkletProcessor=(i,s,o,a)=>{let c=NODE_TO_PROCESSOR_MAPS.get(i);c===void 0&&(c=new WeakMap,NODE_TO_PROCESSOR_MAPS.set(i,c));const d=createAudioWorkletProcessorPromise(o,a);return c.set(s,d),d},createNativeAudioWorkletNodeFakerFactory=(i,s,o,a,c,d,g,b,$,_,_e,et,rt)=>(tt,j,nt,st)=>{if(st.numberOfInputs===0&&st.numberOfOutputs===0)throw $();const ot=Array.isArray(st.outputChannelCount)?st.outputChannelCount:Array.from(st.outputChannelCount);if(ot.some(dn=>dn<1))throw $();if(ot.length!==st.numberOfOutputs)throw s();if(st.channelCountMode!=="explicit")throw $();const ut=st.channelCount*st.numberOfInputs,ht=ot.reduce((dn,wn)=>dn+wn,0),pt=nt.parameterDescriptors===void 0?0:nt.parameterDescriptors.length;if(ut+pt>6||ht>6)throw $();const it=new MessageChannel,yt=[],ft=[];for(let dn=0;dn<st.numberOfInputs;dn+=1)yt.push(g(tt,{channelCount:st.channelCount,channelCountMode:st.channelCountMode,channelInterpretation:st.channelInterpretation,gain:1})),ft.push(c(tt,{channelCount:st.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:st.channelCount}));const bt=[];if(nt.parameterDescriptors!==void 0)for(const{defaultValue:dn,maxValue:wn,minValue:kn,name:Pn}of nt.parameterDescriptors){const On=d(tt,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:st.parameterData[Pn]!==void 0?st.parameterData[Pn]:dn===void 0?0:dn});Object.defineProperties(On.offset,{defaultValue:{get:()=>dn===void 0?0:dn},maxValue:{get:()=>wn===void 0?MOST_POSITIVE_SINGLE_FLOAT:wn},minValue:{get:()=>kn===void 0?MOST_NEGATIVE_SINGLE_FLOAT:kn}}),bt.push(On)}const Tt=a(tt,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,ut+pt)}),Ct=computeBufferSize(j,tt.sampleRate),_t=b(tt,Ct,ut+pt,Math.max(1,ht)),Ot=c(tt,{channelCount:Math.max(1,ht),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,ht)}),kt=[];for(let dn=0;dn<st.numberOfOutputs;dn+=1)kt.push(a(tt,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:ot[dn]}));for(let dn=0;dn<st.numberOfInputs;dn+=1){yt[dn].connect(ft[dn]);for(let wn=0;wn<st.channelCount;wn+=1)ft[dn].connect(Tt,wn,dn*st.channelCount+wn)}const Rt=new ReadOnlyMap(nt.parameterDescriptors===void 0?[]:nt.parameterDescriptors.map(({name:dn},wn)=>{const kn=bt[wn];return kn.connect(Tt,0,ut+wn),kn.start(0),[dn,kn.offset]}));Tt.connect(_t);let jt=st.channelInterpretation,Gt=null;const Bt=st.numberOfOutputs===0?[_t]:kt,zt={get bufferSize(){return Ct},get channelCount(){return st.channelCount},set channelCount(dn){throw o()},get channelCountMode(){return st.channelCountMode},set channelCountMode(dn){throw o()},get channelInterpretation(){return jt},set channelInterpretation(dn){for(const wn of yt)wn.channelInterpretation=dn;jt=dn},get context(){return _t.context},get inputs(){return yt},get numberOfInputs(){return st.numberOfInputs},get numberOfOutputs(){return st.numberOfOutputs},get onprocessorerror(){return Gt},set onprocessorerror(dn){typeof Gt=="function"&&zt.removeEventListener("processorerror",Gt),Gt=typeof dn=="function"?dn:null,typeof Gt=="function"&&zt.addEventListener("processorerror",Gt)},get parameters(){return Rt},get port(){return it.port2},addEventListener(...dn){return _t.addEventListener(dn[0],dn[1],dn[2])},connect:i.bind(null,Bt),disconnect:_.bind(null,Bt),dispatchEvent(...dn){return _t.dispatchEvent(dn[0])},removeEventListener(...dn){return _t.removeEventListener(dn[0],dn[1],dn[2])}},Ut=new Map;it.port1.addEventListener=(dn=>(...wn)=>{if(wn[0]==="message"){const kn=typeof wn[1]=="function"?wn[1]:typeof wn[1]=="object"&&wn[1]!==null&&typeof wn[1].handleEvent=="function"?wn[1].handleEvent:null;if(kn!==null){const Pn=Ut.get(wn[1]);Pn!==void 0?wn[1]=Pn:(wn[1]=On=>{_e(tt.currentTime,tt.sampleRate,()=>kn(On))},Ut.set(kn,wn[1]))}}return dn.call(it.port1,wn[0],wn[1],wn[2])})(it.port1.addEventListener),it.port1.removeEventListener=(dn=>(...wn)=>{if(wn[0]==="message"){const kn=Ut.get(wn[1]);kn!==void 0&&(Ut.delete(wn[1]),wn[1]=kn)}return dn.call(it.port1,wn[0],wn[1],wn[2])})(it.port1.removeEventListener);let Qt=null;Object.defineProperty(it.port1,"onmessage",{get:()=>Qt,set:dn=>{typeof Qt=="function"&&it.port1.removeEventListener("message",Qt),Qt=typeof dn=="function"?dn:null,typeof Qt=="function"&&(it.port1.addEventListener("message",Qt),it.port1.start())}}),nt.prototype.port=it.port1;let tn=null;createAudioWorkletProcessor(tt,zt,nt,st).then(dn=>tn=dn);const ln=createNestedArrays(st.numberOfInputs,st.channelCount),an=createNestedArrays(st.numberOfOutputs,ot),Yt=nt.parameterDescriptors===void 0?[]:nt.parameterDescriptors.reduce((dn,{name:wn})=>({...dn,[wn]:new Float32Array(128)}),{});let cn=!0;const Wt=()=>{st.numberOfOutputs>0&&_t.disconnect(Ot);for(let dn=0,wn=0;dn<st.numberOfOutputs;dn+=1){const kn=kt[dn];for(let Pn=0;Pn<ot[dn];Pn+=1)Ot.disconnect(kn,wn+Pn,Pn);wn+=ot[dn]}},wt=new Map;_t.onaudioprocess=({inputBuffer:dn,outputBuffer:wn})=>{if(tn!==null){const kn=et(zt);for(let Pn=0;Pn<Ct;Pn+=128){for(let On=0;On<st.numberOfInputs;On+=1)for(let Bn=0;Bn<st.channelCount;Bn+=1)copyFromChannel(dn,ln[On],Bn,Bn,Pn);nt.parameterDescriptors!==void 0&&nt.parameterDescriptors.forEach(({name:On},Bn)=>{copyFromChannel(dn,Yt,On,ut+Bn,Pn)});for(let On=0;On<st.numberOfInputs;On+=1)for(let Bn=0;Bn<ot[On];Bn+=1)an[On][Bn].byteLength===0&&(an[On][Bn]=new Float32Array(128));try{const On=ln.map((Zn,jn)=>{if(kn[jn].size>0)return wt.set(jn,Ct/128),Zn;const Un=wt.get(jn);return Un===void 0?[]:(Zn.every(or=>or.every(Cr=>Cr===0))&&(Un===1?wt.delete(jn):wt.set(jn,Un-1)),Zn)});cn=_e(tt.currentTime+Pn/tt.sampleRate,tt.sampleRate,()=>tn.process(On,an,Yt));for(let Zn=0,jn=0;Zn<st.numberOfOutputs;Zn+=1){for(let tr=0;tr<ot[Zn];tr+=1)copyToChannel(wn,an[Zn],tr,jn+tr,Pn);jn+=ot[Zn]}}catch(On){cn=!1,zt.dispatchEvent(new ErrorEvent("processorerror",{colno:On.colno,filename:On.filename,lineno:On.lineno,message:On.message}))}if(!cn){for(let On=0;On<st.numberOfInputs;On+=1){yt[On].disconnect(ft[On]);for(let Bn=0;Bn<st.channelCount;Bn+=1)ft[Pn].disconnect(Tt,Bn,On*st.channelCount+Bn)}if(nt.parameterDescriptors!==void 0){const On=nt.parameterDescriptors.length;for(let Bn=0;Bn<On;Bn+=1){const Zn=bt[Bn];Zn.disconnect(Tt,0,ut+Bn),Zn.stop()}}Tt.disconnect(_t),_t.onaudioprocess=null,xt?Wt():Pt();break}}}};let xt=!1;const At=g(tt,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),qt=()=>_t.connect(At).connect(tt.destination),Pt=()=>{_t.disconnect(At),At.disconnect()},Zt=()=>{if(cn){Pt(),st.numberOfOutputs>0&&_t.connect(Ot);for(let dn=0,wn=0;dn<st.numberOfOutputs;dn+=1){const kn=kt[dn];for(let Pn=0;Pn<ot[dn];Pn+=1)Ot.connect(kn,wn+Pn,Pn);wn+=ot[dn]}}xt=!0},nn=()=>{cn&&(qt(),Wt()),xt=!1};return qt(),rt(zt,Zt,nn)},createNativeBiquadFilterNode=(i,s)=>{const o=i.createBiquadFilter();return assignNativeAudioNodeOptions(o,s),assignNativeAudioNodeAudioParamValue(o,s,"Q"),assignNativeAudioNodeAudioParamValue(o,s,"detune"),assignNativeAudioNodeAudioParamValue(o,s,"frequency"),assignNativeAudioNodeAudioParamValue(o,s,"gain"),assignNativeAudioNodeOption(o,s,"type"),o},createNativeChannelMergerNodeFactory=(i,s)=>(o,a)=>{const c=o.createChannelMerger(a.numberOfInputs);return i!==null&&i.name==="webkitAudioContext"&&s(o,c),assignNativeAudioNodeOptions(c,a),c},wrapChannelSplitterNode=i=>{const s=i.numberOfOutputs;Object.defineProperty(i,"channelCount",{get:()=>s,set:o=>{if(o!==s)throw createInvalidStateError()}}),Object.defineProperty(i,"channelCountMode",{get:()=>"explicit",set:o=>{if(o!=="explicit")throw createInvalidStateError()}}),Object.defineProperty(i,"channelInterpretation",{get:()=>"discrete",set:o=>{if(o!=="discrete")throw createInvalidStateError()}})},createNativeChannelSplitterNode=(i,s)=>{const o=i.createChannelSplitter(s.numberOfOutputs);return assignNativeAudioNodeOptions(o,s),wrapChannelSplitterNode(o),o},createNativeConstantSourceNodeFactory=(i,s,o,a,c)=>(d,g)=>{if(d.createConstantSource===void 0)return o(d,g);const b=d.createConstantSource();return assignNativeAudioNodeOptions(b,g),assignNativeAudioNodeAudioParamValue(b,g,"offset"),s(a,()=>a(d))||wrapAudioScheduledSourceNodeStartMethodNegativeParameters(b),s(c,()=>c(d))||wrapAudioScheduledSourceNodeStopMethodNegativeParameters(b),i(d,b),b},interceptConnections=(i,s)=>(i.connect=s.connect.bind(s),i.disconnect=s.disconnect.bind(s),i),createNativeConstantSourceNodeFakerFactory=(i,s,o,a)=>(c,{offset:d,...g})=>{const b=c.createBuffer(1,2,44100),$=s(c,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),_=o(c,{...g,gain:d}),_e=b.getChannelData(0);_e[0]=1,_e[1]=1,$.buffer=b,$.loop=!0;const et={get bufferSize(){},get channelCount(){return _.channelCount},set channelCount(j){_.channelCount=j},get channelCountMode(){return _.channelCountMode},set channelCountMode(j){_.channelCountMode=j},get channelInterpretation(){return _.channelInterpretation},set channelInterpretation(j){_.channelInterpretation=j},get context(){return _.context},get inputs(){return[]},get numberOfInputs(){return $.numberOfInputs},get numberOfOutputs(){return _.numberOfOutputs},get offset(){return _.gain},get onended(){return $.onended},set onended(j){$.onended=j},addEventListener(...j){return $.addEventListener(j[0],j[1],j[2])},dispatchEvent(...j){return $.dispatchEvent(j[0])},removeEventListener(...j){return $.removeEventListener(j[0],j[1],j[2])},start(j=0){$.start.call($,j)},stop(j=0){$.stop.call($,j)}},rt=()=>$.connect(_),tt=()=>$.disconnect(_);return i(c,$),a(interceptConnections(et,_),rt,tt)},createNativeConvolverNodeFactory=(i,s)=>(o,a)=>{const c=o.createConvolver();if(assignNativeAudioNodeOptions(c,a),a.disableNormalization===c.normalize&&(c.normalize=!a.disableNormalization),assignNativeAudioNodeOption(c,a,"buffer"),a.channelCount>2||(s(c,"channelCount",d=>()=>d.call(c),d=>g=>{if(g>2)throw i();return d.call(c,g)}),a.channelCountMode==="max"))throw i();return s(c,"channelCountMode",d=>()=>d.call(c),d=>g=>{if(g==="max")throw i();return d.call(c,g)}),c},createNativeDelayNode=(i,s)=>{const o=i.createDelay(s.maxDelayTime);return assignNativeAudioNodeOptions(o,s),assignNativeAudioNodeAudioParamValue(o,s,"delayTime"),o},createNativeDynamicsCompressorNodeFactory=i=>(s,o)=>{const a=s.createDynamicsCompressor();if(assignNativeAudioNodeOptions(a,o),o.channelCount>2||o.channelCountMode==="max")throw i();return assignNativeAudioNodeAudioParamValue(a,o,"attack"),assignNativeAudioNodeAudioParamValue(a,o,"knee"),assignNativeAudioNodeAudioParamValue(a,o,"ratio"),assignNativeAudioNodeAudioParamValue(a,o,"release"),assignNativeAudioNodeAudioParamValue(a,o,"threshold"),a},createNativeGainNode=(i,s)=>{const o=i.createGain();return assignNativeAudioNodeOptions(o,s),assignNativeAudioNodeAudioParamValue(o,s,"gain"),o},createNativeIIRFilterNodeFactory=i=>(s,o,a)=>{if(s.createIIRFilter===void 0)return i(s,o,a);const c=s.createIIRFilter(a.feedforward,a.feedback);return assignNativeAudioNodeOptions(c,a),c};function divide(i,s){const o=s[0]*s[0]+s[1]*s[1];return[(i[0]*s[0]+i[1]*s[1])/o,(i[1]*s[0]-i[0]*s[1])/o]}function multiply(i,s){return[i[0]*s[0]-i[1]*s[1],i[0]*s[1]+i[1]*s[0]]}function evaluatePolynomial(i,s){let o=[0,0];for(let a=i.length-1;a>=0;a-=1)o=multiply(o,s),o[0]+=i[a];return o}const createNativeIIRFilterNodeFakerFactory=(i,s,o,a)=>(c,d,{channelCount:g,channelCountMode:b,channelInterpretation:$,feedback:_,feedforward:_e})=>{const et=computeBufferSize(d,c.sampleRate),rt=_ instanceof Float64Array?_:new Float64Array(_),tt=_e instanceof Float64Array?_e:new Float64Array(_e),j=rt.length,nt=tt.length,st=Math.min(j,nt);if(j===0||j>20)throw a();if(rt[0]===0)throw s();if(nt===0||nt>20)throw a();if(tt[0]===0)throw s();if(rt[0]!==1){for(let bt=0;bt<nt;bt+=1)tt[bt]/=rt[0];for(let bt=1;bt<j;bt+=1)rt[bt]/=rt[0]}const ot=o(c,et,g,g);ot.channelCount=g,ot.channelCountMode=b,ot.channelInterpretation=$;const ut=32,ht=[],pt=[],it=[];for(let bt=0;bt<g;bt+=1){ht.push(0);const Tt=new Float32Array(ut),Ct=new Float32Array(ut);Tt.fill(0),Ct.fill(0),pt.push(Tt),it.push(Ct)}ot.onaudioprocess=bt=>{const Tt=bt.inputBuffer,Ct=bt.outputBuffer,_t=Tt.numberOfChannels;for(let Ot=0;Ot<_t;Ot+=1){const kt=Tt.getChannelData(Ot),Rt=Ct.getChannelData(Ot);ht[Ot]=filterBuffer(rt,j,tt,nt,st,pt[Ot],it[Ot],ht[Ot],ut,kt,Rt)}};const yt=c.sampleRate/2;return interceptConnections({get bufferSize(){return et},get channelCount(){return ot.channelCount},set channelCount(bt){ot.channelCount=bt},get channelCountMode(){return ot.channelCountMode},set channelCountMode(bt){ot.channelCountMode=bt},get channelInterpretation(){return ot.channelInterpretation},set channelInterpretation(bt){ot.channelInterpretation=bt},get context(){return ot.context},get inputs(){return[ot]},get numberOfInputs(){return ot.numberOfInputs},get numberOfOutputs(){return ot.numberOfOutputs},addEventListener(...bt){return ot.addEventListener(bt[0],bt[1],bt[2])},dispatchEvent(...bt){return ot.dispatchEvent(bt[0])},getFrequencyResponse(bt,Tt,Ct){if(bt.length!==Tt.length||Tt.length!==Ct.length)throw i();const _t=bt.length;for(let Ot=0;Ot<_t;Ot+=1){const kt=-Math.PI*(bt[Ot]/yt),Rt=[Math.cos(kt),Math.sin(kt)],jt=evaluatePolynomial(tt,Rt),Gt=evaluatePolynomial(rt,Rt),Bt=divide(jt,Gt);Tt[Ot]=Math.sqrt(Bt[0]*Bt[0]+Bt[1]*Bt[1]),Ct[Ot]=Math.atan2(Bt[1],Bt[0])}},removeEventListener(...bt){return ot.removeEventListener(bt[0],bt[1],bt[2])}},ot)},createNativeMediaElementAudioSourceNode=(i,s)=>i.createMediaElementSource(s.mediaElement),createNativeMediaStreamAudioDestinationNode=(i,s)=>{const o=i.createMediaStreamDestination();return assignNativeAudioNodeOptions(o,s),o.numberOfOutputs===1&&Object.defineProperty(o,"numberOfOutputs",{get:()=>0}),o},createNativeMediaStreamAudioSourceNode=(i,{mediaStream:s})=>{const o=s.getAudioTracks();o.sort((d,g)=>d.id<g.id?-1:d.id>g.id?1:0);const a=o.slice(0,1),c=i.createMediaStreamSource(new MediaStream(a));return Object.defineProperty(c,"mediaStream",{value:s}),c},createNativeMediaStreamTrackAudioSourceNodeFactory=(i,s)=>(o,{mediaStreamTrack:a})=>{if(typeof o.createMediaStreamTrackSource=="function")return o.createMediaStreamTrackSource(a);const c=new MediaStream([a]),d=o.createMediaStreamSource(c);if(a.kind!=="audio")throw i();if(s(o))throw new TypeError;return d},createNativeOfflineAudioContextConstructor=i=>i===null?null:i.hasOwnProperty("OfflineAudioContext")?i.OfflineAudioContext:i.hasOwnProperty("webkitOfflineAudioContext")?i.webkitOfflineAudioContext:null,createNativeOscillatorNodeFactory=(i,s,o,a,c,d)=>(g,b)=>{const $=g.createOscillator();return assignNativeAudioNodeOptions($,b),assignNativeAudioNodeAudioParamValue($,b,"detune"),assignNativeAudioNodeAudioParamValue($,b,"frequency"),b.periodicWave!==void 0?$.setPeriodicWave(b.periodicWave):assignNativeAudioNodeOption($,b,"type"),s(o,()=>o(g))||wrapAudioScheduledSourceNodeStartMethodNegativeParameters($),s(a,()=>a(g))||d($,g),s(c,()=>c(g))||wrapAudioScheduledSourceNodeStopMethodNegativeParameters($),i(g,$),$},createNativePannerNodeFactory=i=>(s,o)=>{const a=s.createPanner();return a.orientationX===void 0?i(s,o):(assignNativeAudioNodeOptions(a,o),assignNativeAudioNodeAudioParamValue(a,o,"orientationX"),assignNativeAudioNodeAudioParamValue(a,o,"orientationY"),assignNativeAudioNodeAudioParamValue(a,o,"orientationZ"),assignNativeAudioNodeAudioParamValue(a,o,"positionX"),assignNativeAudioNodeAudioParamValue(a,o,"positionY"),assignNativeAudioNodeAudioParamValue(a,o,"positionZ"),assignNativeAudioNodeOption(a,o,"coneInnerAngle"),assignNativeAudioNodeOption(a,o,"coneOuterAngle"),assignNativeAudioNodeOption(a,o,"coneOuterGain"),assignNativeAudioNodeOption(a,o,"distanceModel"),assignNativeAudioNodeOption(a,o,"maxDistance"),assignNativeAudioNodeOption(a,o,"panningModel"),assignNativeAudioNodeOption(a,o,"refDistance"),assignNativeAudioNodeOption(a,o,"rolloffFactor"),a)},createNativePannerNodeFakerFactory=(i,s,o,a,c,d,g,b,$,_)=>(_e,{coneInnerAngle:et,coneOuterAngle:rt,coneOuterGain:tt,distanceModel:j,maxDistance:nt,orientationX:st,orientationY:ot,orientationZ:ut,panningModel:ht,positionX:pt,positionY:it,positionZ:yt,refDistance:ft,rolloffFactor:bt,...Tt})=>{const Ct=_e.createPanner();if(Tt.channelCount>2||Tt.channelCountMode==="max")throw g();assignNativeAudioNodeOptions(Ct,Tt);const _t={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},Ot=o(_e,{..._t,channelInterpretation:"speakers",numberOfInputs:6}),kt=a(_e,{...Tt,gain:1}),Rt=a(_e,{..._t,gain:1}),jt=a(_e,{..._t,gain:0}),Gt=a(_e,{..._t,gain:0}),Bt=a(_e,{..._t,gain:0}),zt=a(_e,{..._t,gain:0}),Ut=a(_e,{..._t,gain:0}),Qt=c(_e,256,6,1),tn=d(_e,{..._t,curve:new Float32Array([1,1]),oversample:"none"});let sn=[st,ot,ut],ln=[pt,it,yt];const an=new Float32Array(1);Qt.onaudioprocess=({inputBuffer:wt})=>{const xt=[$(wt,an,0),$(wt,an,1),$(wt,an,2)];xt.some((qt,Pt)=>qt!==sn[Pt])&&(Ct.setOrientation(...xt),sn=xt);const At=[$(wt,an,3),$(wt,an,4),$(wt,an,5)];At.some((qt,Pt)=>qt!==ln[Pt])&&(Ct.setPosition(...At),ln=At)},Object.defineProperty(jt.gain,"defaultValue",{get:()=>0}),Object.defineProperty(Gt.gain,"defaultValue",{get:()=>0}),Object.defineProperty(Bt.gain,"defaultValue",{get:()=>0}),Object.defineProperty(zt.gain,"defaultValue",{get:()=>0}),Object.defineProperty(Ut.gain,"defaultValue",{get:()=>0});const Yt={get bufferSize(){},get channelCount(){return Ct.channelCount},set channelCount(wt){if(wt>2)throw g();kt.channelCount=wt,Ct.channelCount=wt},get channelCountMode(){return Ct.channelCountMode},set channelCountMode(wt){if(wt==="max")throw g();kt.channelCountMode=wt,Ct.channelCountMode=wt},get channelInterpretation(){return Ct.channelInterpretation},set channelInterpretation(wt){kt.channelInterpretation=wt,Ct.channelInterpretation=wt},get coneInnerAngle(){return Ct.coneInnerAngle},set coneInnerAngle(wt){Ct.coneInnerAngle=wt},get coneOuterAngle(){return Ct.coneOuterAngle},set coneOuterAngle(wt){Ct.coneOuterAngle=wt},get coneOuterGain(){return Ct.coneOuterGain},set coneOuterGain(wt){if(wt<0||wt>1)throw s();Ct.coneOuterGain=wt},get context(){return Ct.context},get distanceModel(){return Ct.distanceModel},set distanceModel(wt){Ct.distanceModel=wt},get inputs(){return[kt]},get maxDistance(){return Ct.maxDistance},set maxDistance(wt){if(wt<0)throw new RangeError;Ct.maxDistance=wt},get numberOfInputs(){return Ct.numberOfInputs},get numberOfOutputs(){return Ct.numberOfOutputs},get orientationX(){return Rt.gain},get orientationY(){return jt.gain},get orientationZ(){return Gt.gain},get panningModel(){return Ct.panningModel},set panningModel(wt){Ct.panningModel=wt},get positionX(){return Bt.gain},get positionY(){return zt.gain},get positionZ(){return Ut.gain},get refDistance(){return Ct.refDistance},set refDistance(wt){if(wt<0)throw new RangeError;Ct.refDistance=wt},get rolloffFactor(){return Ct.rolloffFactor},set rolloffFactor(wt){if(wt<0)throw new RangeError;Ct.rolloffFactor=wt},addEventListener(...wt){return kt.addEventListener(wt[0],wt[1],wt[2])},dispatchEvent(...wt){return kt.dispatchEvent(wt[0])},removeEventListener(...wt){return kt.removeEventListener(wt[0],wt[1],wt[2])}};et!==Yt.coneInnerAngle&&(Yt.coneInnerAngle=et),rt!==Yt.coneOuterAngle&&(Yt.coneOuterAngle=rt),tt!==Yt.coneOuterGain&&(Yt.coneOuterGain=tt),j!==Yt.distanceModel&&(Yt.distanceModel=j),nt!==Yt.maxDistance&&(Yt.maxDistance=nt),st!==Yt.orientationX.value&&(Yt.orientationX.value=st),ot!==Yt.orientationY.value&&(Yt.orientationY.value=ot),ut!==Yt.orientationZ.value&&(Yt.orientationZ.value=ut),ht!==Yt.panningModel&&(Yt.panningModel=ht),pt!==Yt.positionX.value&&(Yt.positionX.value=pt),it!==Yt.positionY.value&&(Yt.positionY.value=it),yt!==Yt.positionZ.value&&(Yt.positionZ.value=yt),ft!==Yt.refDistance&&(Yt.refDistance=ft),bt!==Yt.rolloffFactor&&(Yt.rolloffFactor=bt),(sn[0]!==1||sn[1]!==0||sn[2]!==0)&&Ct.setOrientation(...sn),(ln[0]!==0||ln[1]!==0||ln[2]!==0)&&Ct.setPosition(...ln);const cn=()=>{kt.connect(Ct),i(kt,tn,0,0),tn.connect(Rt).connect(Ot,0,0),tn.connect(jt).connect(Ot,0,1),tn.connect(Gt).connect(Ot,0,2),tn.connect(Bt).connect(Ot,0,3),tn.connect(zt).connect(Ot,0,4),tn.connect(Ut).connect(Ot,0,5),Ot.connect(Qt).connect(_e.destination)},Wt=()=>{kt.disconnect(Ct),b(kt,tn,0,0),tn.disconnect(Rt),Rt.disconnect(Ot),tn.disconnect(jt),jt.disconnect(Ot),tn.disconnect(Gt),Gt.disconnect(Ot),tn.disconnect(Bt),Bt.disconnect(Ot),tn.disconnect(zt),zt.disconnect(Ot),tn.disconnect(Ut),Ut.disconnect(Ot),Ot.disconnect(Qt),Qt.disconnect(_e.destination)};return _(interceptConnections(Yt,Ct),cn,Wt)},createNativePeriodicWaveFactory=i=>(s,{disableNormalization:o,imag:a,real:c})=>{const d=a instanceof Float32Array?a:new Float32Array(a),g=c instanceof Float32Array?c:new Float32Array(c),b=s.createPeriodicWave(g,d,{disableNormalization:o});if(Array.from(a).length<2)throw i();return b},createNativeScriptProcessorNode=(i,s,o,a)=>i.createScriptProcessor(s,o,a),createNativeStereoPannerNodeFactory=(i,s)=>(o,a)=>{const c=a.channelCountMode;if(c==="clamped-max")throw s();if(o.createStereoPanner===void 0)return i(o,a);const d=o.createStereoPanner();return assignNativeAudioNodeOptions(d,a),assignNativeAudioNodeAudioParamValue(d,a,"pan"),Object.defineProperty(d,"channelCountMode",{get:()=>c,set:g=>{if(g!==c)throw s()}}),d},createNativeStereoPannerNodeFakerFactory=(i,s,o,a,c,d)=>{const b=new Float32Array([1,1]),$=Math.PI/2,_={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},_e={..._,oversample:"none"},et=(j,nt,st,ot)=>{const ut=new Float32Array(16385),ht=new Float32Array(16385);for(let Tt=0;Tt<16385;Tt+=1){const Ct=Tt/16384*$;ut[Tt]=Math.cos(Ct),ht[Tt]=Math.sin(Ct)}const pt=o(j,{..._,gain:0}),it=a(j,{..._e,curve:ut}),yt=a(j,{..._e,curve:b}),ft=o(j,{..._,gain:0}),bt=a(j,{..._e,curve:ht});return{connectGraph(){nt.connect(pt),nt.connect(yt.inputs===void 0?yt:yt.inputs[0]),nt.connect(ft),yt.connect(st),st.connect(it.inputs===void 0?it:it.inputs[0]),st.connect(bt.inputs===void 0?bt:bt.inputs[0]),it.connect(pt.gain),bt.connect(ft.gain),pt.connect(ot,0,0),ft.connect(ot,0,1)},disconnectGraph(){nt.disconnect(pt),nt.disconnect(yt.inputs===void 0?yt:yt.inputs[0]),nt.disconnect(ft),yt.disconnect(st),st.disconnect(it.inputs===void 0?it:it.inputs[0]),st.disconnect(bt.inputs===void 0?bt:bt.inputs[0]),it.disconnect(pt.gain),bt.disconnect(ft.gain),pt.disconnect(ot,0,0),ft.disconnect(ot,0,1)}}},rt=(j,nt,st,ot)=>{const ut=new Float32Array(16385),ht=new Float32Array(16385),pt=new Float32Array(16385),it=new Float32Array(16385),yt=Math.floor(16385/2);for(let Bt=0;Bt<16385;Bt+=1)if(Bt>yt){const zt=(Bt-yt)/(16384-yt)*$;ut[Bt]=Math.cos(zt),ht[Bt]=Math.sin(zt),pt[Bt]=0,it[Bt]=1}else{const zt=Bt/(16384-yt)*$;ut[Bt]=1,ht[Bt]=0,pt[Bt]=Math.cos(zt),it[Bt]=Math.sin(zt)}const ft=s(j,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),bt=o(j,{..._,gain:0}),Tt=a(j,{..._e,curve:ut}),Ct=o(j,{..._,gain:0}),_t=a(j,{..._e,curve:ht}),Ot=a(j,{..._e,curve:b}),kt=o(j,{..._,gain:0}),Rt=a(j,{..._e,curve:pt}),jt=o(j,{..._,gain:0}),Gt=a(j,{..._e,curve:it});return{connectGraph(){nt.connect(ft),nt.connect(Ot.inputs===void 0?Ot:Ot.inputs[0]),ft.connect(bt,0),ft.connect(Ct,0),ft.connect(kt,1),ft.connect(jt,1),Ot.connect(st),st.connect(Tt.inputs===void 0?Tt:Tt.inputs[0]),st.connect(_t.inputs===void 0?_t:_t.inputs[0]),st.connect(Rt.inputs===void 0?Rt:Rt.inputs[0]),st.connect(Gt.inputs===void 0?Gt:Gt.inputs[0]),Tt.connect(bt.gain),_t.connect(Ct.gain),Rt.connect(kt.gain),Gt.connect(jt.gain),bt.connect(ot,0,0),kt.connect(ot,0,0),Ct.connect(ot,0,1),jt.connect(ot,0,1)},disconnectGraph(){nt.disconnect(ft),nt.disconnect(Ot.inputs===void 0?Ot:Ot.inputs[0]),ft.disconnect(bt,0),ft.disconnect(Ct,0),ft.disconnect(kt,1),ft.disconnect(jt,1),Ot.disconnect(st),st.disconnect(Tt.inputs===void 0?Tt:Tt.inputs[0]),st.disconnect(_t.inputs===void 0?_t:_t.inputs[0]),st.disconnect(Rt.inputs===void 0?Rt:Rt.inputs[0]),st.disconnect(Gt.inputs===void 0?Gt:Gt.inputs[0]),Tt.disconnect(bt.gain),_t.disconnect(Ct.gain),Rt.disconnect(kt.gain),Gt.disconnect(jt.gain),bt.disconnect(ot,0,0),kt.disconnect(ot,0,0),Ct.disconnect(ot,0,1),jt.disconnect(ot,0,1)}}},tt=(j,nt,st,ot,ut)=>{if(nt===1)return et(j,st,ot,ut);if(nt===2)return rt(j,st,ot,ut);throw c()};return(j,{channelCount:nt,channelCountMode:st,pan:ot,...ut})=>{if(st==="max")throw c();const ht=i(j,{...ut,channelCount:1,channelCountMode:st,numberOfInputs:2}),pt=o(j,{...ut,channelCount:nt,channelCountMode:st,gain:1}),it=o(j,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:ot});let{connectGraph:yt,disconnectGraph:ft}=tt(j,nt,pt,it,ht);Object.defineProperty(it.gain,"defaultValue",{get:()=>0}),Object.defineProperty(it.gain,"maxValue",{get:()=>1}),Object.defineProperty(it.gain,"minValue",{get:()=>-1});const bt={get bufferSize(){},get channelCount(){return pt.channelCount},set channelCount(Ot){pt.channelCount!==Ot&&(Tt&&ft(),{connectGraph:yt,disconnectGraph:ft}=tt(j,Ot,pt,it,ht),Tt&&yt()),pt.channelCount=Ot},get channelCountMode(){return pt.channelCountMode},set channelCountMode(Ot){if(Ot==="clamped-max"||Ot==="max")throw c();pt.channelCountMode=Ot},get channelInterpretation(){return pt.channelInterpretation},set channelInterpretation(Ot){pt.channelInterpretation=Ot},get context(){return pt.context},get inputs(){return[pt]},get numberOfInputs(){return pt.numberOfInputs},get numberOfOutputs(){return pt.numberOfOutputs},get pan(){return it.gain},addEventListener(...Ot){return pt.addEventListener(Ot[0],Ot[1],Ot[2])},dispatchEvent(...Ot){return pt.dispatchEvent(Ot[0])},removeEventListener(...Ot){return pt.removeEventListener(Ot[0],Ot[1],Ot[2])}};let Tt=!1;const Ct=()=>{yt(),Tt=!0},_t=()=>{ft(),Tt=!1};return d(interceptConnections(bt,ht),Ct,_t)}},createNativeWaveShaperNodeFactory=(i,s,o,a,c,d,g)=>(b,$)=>{const _=b.createWaveShaper();if(d!==null&&d.name==="webkitAudioContext"&&b.createGain().gain.automationRate===void 0)return o(b,$);assignNativeAudioNodeOptions(_,$);const _e=$.curve===null||$.curve instanceof Float32Array?$.curve:new Float32Array($.curve);if(_e!==null&&_e.length<2)throw s();assignNativeAudioNodeOption(_,{curve:_e},"curve"),assignNativeAudioNodeOption(_,$,"oversample");let et=null,rt=!1;return g(_,"curve",nt=>()=>nt.call(_),nt=>st=>(nt.call(_,st),rt&&(a(st)&&et===null?et=i(b,_):!a(st)&&et!==null&&(et(),et=null)),st)),c(_,()=>{rt=!0,a(_.curve)&&(et=i(b,_))},()=>{rt=!1,et!==null&&(et(),et=null)})},createNativeWaveShaperNodeFakerFactory=(i,s,o,a,c)=>(d,{curve:g,oversample:b,...$})=>{const _=d.createWaveShaper(),_e=d.createWaveShaper();assignNativeAudioNodeOptions(_,$),assignNativeAudioNodeOptions(_e,$);const et=o(d,{...$,gain:1}),rt=o(d,{...$,gain:-1}),tt=o(d,{...$,gain:1}),j=o(d,{...$,gain:-1});let nt=null,st=!1,ot=null;const ut={get bufferSize(){},get channelCount(){return _.channelCount},set channelCount(it){et.channelCount=it,rt.channelCount=it,_.channelCount=it,tt.channelCount=it,_e.channelCount=it,j.channelCount=it},get channelCountMode(){return _.channelCountMode},set channelCountMode(it){et.channelCountMode=it,rt.channelCountMode=it,_.channelCountMode=it,tt.channelCountMode=it,_e.channelCountMode=it,j.channelCountMode=it},get channelInterpretation(){return _.channelInterpretation},set channelInterpretation(it){et.channelInterpretation=it,rt.channelInterpretation=it,_.channelInterpretation=it,tt.channelInterpretation=it,_e.channelInterpretation=it,j.channelInterpretation=it},get context(){return _.context},get curve(){return ot},set curve(it){if(it!==null&&it.length<2)throw s();if(it===null)_.curve=it,_e.curve=it;else{const yt=it.length,ft=new Float32Array(yt+2-yt%2),bt=new Float32Array(yt+2-yt%2);ft[0]=it[0],bt[0]=-it[yt-1];const Tt=Math.ceil((yt+1)/2),Ct=(yt+1)/2-1;for(let _t=1;_t<Tt;_t+=1){const Ot=_t/Tt*Ct,kt=Math.floor(Ot),Rt=Math.ceil(Ot);ft[_t]=kt===Rt?it[kt]:(1-(Ot-kt))*it[kt]+(1-(Rt-Ot))*it[Rt],bt[_t]=kt===Rt?-it[yt-1-kt]:-((1-(Ot-kt))*it[yt-1-kt])-(1-(Rt-Ot))*it[yt-1-Rt]}ft[Tt]=yt%2===1?it[Tt-1]:(it[Tt-2]+it[Tt-1])/2,_.curve=ft,_e.curve=bt}ot=it,st&&(a(ot)&&nt===null?nt=i(d,et):nt!==null&&(nt(),nt=null))},get inputs(){return[et]},get numberOfInputs(){return _.numberOfInputs},get numberOfOutputs(){return _.numberOfOutputs},get oversample(){return _.oversample},set oversample(it){_.oversample=it,_e.oversample=it},addEventListener(...it){return et.addEventListener(it[0],it[1],it[2])},dispatchEvent(...it){return et.dispatchEvent(it[0])},removeEventListener(...it){return et.removeEventListener(it[0],it[1],it[2])}};g!==null&&(ut.curve=g instanceof Float32Array?g:new Float32Array(g)),b!==ut.oversample&&(ut.oversample=b);const ht=()=>{et.connect(_).connect(tt),et.connect(rt).connect(_e).connect(j).connect(tt),st=!0,a(ot)&&(nt=i(d,et))},pt=()=>{et.disconnect(_),_.disconnect(tt),et.disconnect(rt),rt.disconnect(_e),_e.disconnect(j),j.disconnect(tt),st=!1,nt!==null&&(nt(),nt=null)};return c(interceptConnections(ut,tt),ht,pt)},createNotSupportedError=()=>new DOMException("","NotSupportedError"),DEFAULT_OPTIONS$5={numberOfChannels:1},createOfflineAudioContextConstructor=(i,s,o,a,c)=>class extends i{constructor(g,b,$){let _;if(typeof g=="number"&&b!==void 0&&$!==void 0)_={length:b,numberOfChannels:g,sampleRate:$};else if(typeof g=="object")_=g;else throw new Error("The given parameters are not valid.");const{length:_e,numberOfChannels:et,sampleRate:rt}={...DEFAULT_OPTIONS$5,..._},tt=a(et,_e,rt);s(testPromiseSupport,()=>testPromiseSupport(tt))||tt.addEventListener("statechange",(()=>{let j=0;const nt=st=>{this._state==="running"&&(j>0?(tt.removeEventListener("statechange",nt),st.stopImmediatePropagation(),this._waitForThePromiseToSettle(st)):j+=1)};return nt})()),super(tt,et),this._length=_e,this._nativeOfflineAudioContext=tt,this._state=null}get length(){return this._nativeOfflineAudioContext.length===void 0?this._length:this._nativeOfflineAudioContext.length}get state(){return this._state===null?this._nativeOfflineAudioContext.state:this._state}startRendering(){return this._state==="running"?Promise.reject(o()):(this._state="running",c(this.destination,this._nativeOfflineAudioContext).finally(()=>{this._state=null,deactivateAudioGraph(this)}))}_waitForThePromiseToSettle(g){this._state===null?this._nativeOfflineAudioContext.dispatchEvent(g):setTimeout(()=>this._waitForThePromiseToSettle(g))}},DEFAULT_OPTIONS$4={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},createOscillatorNodeConstructor=(i,s,o,a,c,d,g)=>class extends i{constructor($,_){const _e=c($),et={...DEFAULT_OPTIONS$4,..._},rt=o(_e,et),tt=d(_e),j=tt?a():null,nt=$.sampleRate/2;super($,!1,rt,j),this._detune=s(this,tt,rt.detune,153600,-153600),this._frequency=s(this,tt,rt.frequency,nt,-nt),this._nativeOscillatorNode=rt,this._onended=null,this._oscillatorNodeRenderer=j,this._oscillatorNodeRenderer!==null&&et.periodicWave!==void 0&&(this._oscillatorNodeRenderer.periodicWave=et.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended($){const _=typeof $=="function"?g(this,$):null;this._nativeOscillatorNode.onended=_;const _e=this._nativeOscillatorNode.onended;this._onended=_e!==null&&_e===_?$:_e}get type(){return this._nativeOscillatorNode.type}set type($){this._nativeOscillatorNode.type=$,this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave($){this._nativeOscillatorNode.setPeriodicWave($),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=$)}start($=0){if(this._nativeOscillatorNode.start($),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.start=$),this.context.state!=="closed"){setInternalStateToActive(this);const _=()=>{this._nativeOscillatorNode.removeEventListener("ended",_),isActiveAudioNode(this)&&setInternalStateToPassive(this)};this._nativeOscillatorNode.addEventListener("ended",_)}}stop($=0){this._nativeOscillatorNode.stop($),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.stop=$)}},createOscillatorNodeRendererFactory=(i,s,o,a,c)=>()=>{const d=new WeakMap;let g=null,b=null,$=null;const _=async(_e,et)=>{let rt=o(_e);const tt=isOwnedByContext(rt,et);if(!tt){const j={channelCount:rt.channelCount,channelCountMode:rt.channelCountMode,channelInterpretation:rt.channelInterpretation,detune:rt.detune.value,frequency:rt.frequency.value,periodicWave:g===null?void 0:g,type:rt.type};rt=s(et,j),b!==null&&rt.start(b),$!==null&&rt.stop($)}return d.set(et,rt),tt?(await i(et,_e.detune,rt.detune),await i(et,_e.frequency,rt.frequency)):(await a(et,_e.detune,rt.detune),await a(et,_e.frequency,rt.frequency)),await c(_e,et,rt),rt};return{set periodicWave(_e){g=_e},set start(_e){b=_e},set stop(_e){$=_e},render(_e,et){const rt=d.get(et);return rt!==void 0?Promise.resolve(rt):_(_e,et)}}},DEFAULT_OPTIONS$3={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},createPannerNodeConstructor=(i,s,o,a,c,d,g)=>class extends i{constructor($,_){const _e=c($),et={...DEFAULT_OPTIONS$3,..._},rt=o(_e,et),tt=d(_e),j=tt?a():null;super($,!1,rt,j),this._nativePannerNode=rt,this._orientationX=s(this,tt,rt.orientationX,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._orientationY=s(this,tt,rt.orientationY,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._orientationZ=s(this,tt,rt.orientationZ,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._positionX=s(this,tt,rt.positionX,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._positionY=s(this,tt,rt.positionY,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._positionZ=s(this,tt,rt.positionZ,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),g(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle($){this._nativePannerNode.coneInnerAngle=$}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle($){this._nativePannerNode.coneOuterAngle=$}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain($){this._nativePannerNode.coneOuterGain=$}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel($){this._nativePannerNode.distanceModel=$}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance($){this._nativePannerNode.maxDistance=$}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel($){this._nativePannerNode.panningModel=$}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance($){this._nativePannerNode.refDistance=$}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor($){this._nativePannerNode.rolloffFactor=$}},createPannerNodeRendererFactory=(i,s,o,a,c,d,g,b,$,_)=>()=>{const _e=new WeakMap;let et=null;const rt=async(tt,j)=>{let nt=null,st=d(tt);const ot={channelCount:st.channelCount,channelCountMode:st.channelCountMode,channelInterpretation:st.channelInterpretation},ut={...ot,coneInnerAngle:st.coneInnerAngle,coneOuterAngle:st.coneOuterAngle,coneOuterGain:st.coneOuterGain,distanceModel:st.distanceModel,maxDistance:st.maxDistance,panningModel:st.panningModel,refDistance:st.refDistance,rolloffFactor:st.rolloffFactor},ht=isOwnedByContext(st,j);if("bufferSize"in st)nt=a(j,{...ot,gain:1});else if(!ht){const pt={...ut,orientationX:st.orientationX.value,orientationY:st.orientationY.value,orientationZ:st.orientationZ.value,positionX:st.positionX.value,positionY:st.positionY.value,positionZ:st.positionZ.value};st=c(j,pt)}if(_e.set(j,nt===null?st:nt),nt!==null){if(et===null){if(g===null)throw new Error("Missing the native OfflineAudioContext constructor.");const _t=new g(6,tt.context.length,j.sampleRate),Ot=s(_t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});Ot.connect(_t.destination),et=(async()=>{const kt=await Promise.all([tt.orientationX,tt.orientationY,tt.orientationZ,tt.positionX,tt.positionY,tt.positionZ].map(async(Rt,jt)=>{const Gt=o(_t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:jt===0?1:0});return await b(_t,Rt,Gt.offset),Gt}));for(let Rt=0;Rt<6;Rt+=1)kt[Rt].connect(Ot,0,Rt),kt[Rt].start(0);return _(_t)})()}const pt=await et,it=a(j,{...ot,gain:1});await $(tt,j,it);const yt=[];for(let _t=0;_t<pt.numberOfChannels;_t+=1)yt.push(pt.getChannelData(_t));let ft=[yt[0][0],yt[1][0],yt[2][0]],bt=[yt[3][0],yt[4][0],yt[5][0]],Tt=a(j,{...ot,gain:1}),Ct=c(j,{...ut,orientationX:ft[0],orientationY:ft[1],orientationZ:ft[2],positionX:bt[0],positionY:bt[1],positionZ:bt[2]});it.connect(Tt).connect(Ct.inputs[0]),Ct.connect(nt);for(let _t=128;_t<pt.length;_t+=128){const Ot=[yt[0][_t],yt[1][_t],yt[2][_t]],kt=[yt[3][_t],yt[4][_t],yt[5][_t]];if(Ot.some((Rt,jt)=>Rt!==ft[jt])||kt.some((Rt,jt)=>Rt!==bt[jt])){ft=Ot,bt=kt;const Rt=_t/j.sampleRate;Tt.gain.setValueAtTime(0,Rt),Tt=a(j,{...ot,gain:0}),Ct=c(j,{...ut,orientationX:ft[0],orientationY:ft[1],orientationZ:ft[2],positionX:bt[0],positionY:bt[1],positionZ:bt[2]}),Tt.gain.setValueAtTime(1,Rt),it.connect(Tt).connect(Ct.inputs[0]),Ct.connect(nt)}}return nt}return ht?(await i(j,tt.orientationX,st.orientationX),await i(j,tt.orientationY,st.orientationY),await i(j,tt.orientationZ,st.orientationZ),await i(j,tt.positionX,st.positionX),await i(j,tt.positionY,st.positionY),await i(j,tt.positionZ,st.positionZ)):(await b(j,tt.orientationX,st.orientationX),await b(j,tt.orientationY,st.orientationY),await b(j,tt.orientationZ,st.orientationZ),await b(j,tt.positionX,st.positionX),await b(j,tt.positionY,st.positionY),await b(j,tt.positionZ,st.positionZ)),isNativeAudioNodeFaker(st)?await $(tt,j,st.inputs[0]):await $(tt,j,st),st};return{render(tt,j){const nt=_e.get(j);return nt!==void 0?Promise.resolve(nt):rt(tt,j)}}},DEFAULT_OPTIONS$2={disableNormalization:!1},createPeriodicWaveConstructor=(i,s,o,a)=>class Zp{constructor(d,g){const b=s(d),$=a({...DEFAULT_OPTIONS$2,...g}),_=i(b,$);return o.add(_),_}static[Symbol.hasInstance](d){return d!==null&&typeof d=="object"&&Object.getPrototypeOf(d)===Zp.prototype||o.has(d)}},createRenderAutomation=(i,s)=>(o,a,c)=>(i(a).replay(c),s(a,o,c)),createRenderInputsOfAudioNode=(i,s,o)=>async(a,c,d)=>{const g=i(a);await Promise.all(g.activeInputs.map((b,$)=>Array.from(b).map(async([_,_e])=>{const rt=await s(_).render(_,c),tt=a.context.destination;!o(_)&&(a!==tt||!o(a))&&rt.connect(d,_e,$)})).reduce((b,$)=>[...b,...$],[]))},createRenderInputsOfAudioParam=(i,s,o)=>async(a,c,d)=>{const g=s(a);await Promise.all(Array.from(g.activeInputs).map(async([b,$])=>{const _e=await i(b).render(b,c);o(b)||_e.connect(d,$)}))},createRenderNativeOfflineAudioContext=(i,s,o,a)=>c=>i(testPromiseSupport,()=>testPromiseSupport(c))?Promise.resolve(i(a,a)).then(d=>{if(!d){const g=o(c,512,0,1);c.oncomplete=()=>{g.onaudioprocess=null,g.disconnect()},g.onaudioprocess=()=>c.currentTime,g.connect(c.destination)}return c.startRendering()}):new Promise(d=>{const g=s(c,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});c.oncomplete=b=>{g.disconnect(),d(b.renderedBuffer)},g.connect(c.destination),c.startRendering()}),createSetActiveAudioWorkletNodeInputs=i=>(s,o)=>{i.set(s,o)},createSetAudioNodeTailTime=i=>(s,o)=>i.set(s,o),createStartRendering=(i,s,o,a,c,d,g,b)=>($,_)=>o($).render($,_).then(()=>Promise.all(Array.from(a(_)).map(_e=>o(_e).render(_e,_)))).then(()=>c(_)).then(_e=>(typeof _e.copyFromChannel!="function"?(g(_e),wrapAudioBufferGetChannelDataMethod(_e)):s(d,()=>d(_e))||b(_e),i.add(_e),_e)),DEFAULT_OPTIONS$1={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},createStereoPannerNodeConstructor=(i,s,o,a,c,d)=>class extends i{constructor(b,$){const _=c(b),_e={...DEFAULT_OPTIONS$1,...$},et=o(_,_e),rt=d(_),tt=rt?a():null;super(b,!1,et,tt),this._pan=s(this,rt,et.pan)}get pan(){return this._pan}},createStereoPannerNodeRendererFactory=(i,s,o,a,c)=>()=>{const d=new WeakMap,g=async(b,$)=>{let _=o(b);const _e=isOwnedByContext(_,$);if(!_e){const et={channelCount:_.channelCount,channelCountMode:_.channelCountMode,channelInterpretation:_.channelInterpretation,pan:_.pan.value};_=s($,et)}return d.set($,_),_e?await i($,b.pan,_.pan):await a($,b.pan,_.pan),isNativeAudioNodeFaker(_)?await c(b,$,_.inputs[0]):await c(b,$,_),_};return{render(b,$){const _=d.get($);return _!==void 0?Promise.resolve(_):g(b,$)}}},createTestAudioBufferConstructorSupport=i=>()=>{if(i===null)return!1;try{new i({length:1,sampleRate:44100})}catch{return!1}return!0},createTestAudioBufferCopyChannelMethodsSubarraySupport=i=>()=>{if(i===null)return!1;const o=new i(1,1,44100).createBuffer(1,1,44100);if(o.copyToChannel===void 0)return!0;const a=new Float32Array(2);try{o.copyFromChannel(a,0,0)}catch{return!1}return!0},createTestAudioContextCloseMethodSupport=i=>()=>{if(i===null)return!1;if(i.prototype!==void 0&&i.prototype.close!==void 0)return!0;const s=new i,o=s.close!==void 0;try{s.close()}catch{}return o},createTestAudioContextDecodeAudioDataMethodTypeErrorSupport=i=>()=>{if(i===null)return Promise.resolve(!1);const s=new i(1,1,44100);return new Promise(o=>{let a=!0;const c=g=>{a&&(a=!1,s.startRendering(),o(g instanceof TypeError))};let d;try{d=s.decodeAudioData(null,()=>{},c)}catch(g){c(g)}d!==void 0&&d.catch(c)})},createTestAudioContextOptionsSupport=i=>()=>{if(i===null)return!1;let s;try{s=new i({latencyHint:"balanced"})}catch{return!1}return s.close(),!0},createTestAudioNodeConnectMethodSupport=i=>()=>{if(i===null)return!1;const o=new i(1,1,44100).createGain(),a=o.connect(o)===o;return o.disconnect(o),a},createTestAudioWorkletProcessorNoOutputsSupport=(i,s)=>async()=>{if(i===null)return!0;if(s===null)return!1;const o=new Blob(['let c,p;class A extends AudioWorkletProcessor{constructor(){super();this.port.onmessage=(e)=>{p=e.data;p.onmessage=()=>{p.postMessage(c);p.close()};this.port.postMessage(0)}}process(){c=1}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),a=new MessageChannel,c=new s(1,128,44100),d=URL.createObjectURL(o);let g=!1;try{await c.audioWorklet.addModule(d);const b=new i(c,"a",{numberOfOutputs:0}),$=c.createOscillator();await new Promise(_=>{b.port.onmessage=()=>_(),b.port.postMessage(a.port2,[a.port2])}),b.port.onmessage=()=>g=!0,$.connect(b),$.start(0),await c.startRendering(),g=await new Promise(_=>{a.port1.onmessage=({data:_e})=>_(_e===1),a.port1.postMessage(0)})}catch{}finally{a.port1.close(),URL.revokeObjectURL(d)}return g},createTestAudioWorkletProcessorPostMessageSupport=(i,s)=>async()=>{if(i===null)return!0;if(s===null)return!1;const o=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),a=new s(1,128,44100),c=URL.createObjectURL(o);let d=!1,g=!1;try{await a.audioWorklet.addModule(c);const b=new i(a,"a",{numberOfOutputs:0}),$=a.createOscillator();b.port.onmessage=()=>d=!0,b.onprocessorerror=()=>g=!0,$.connect(b),$.start(0),await a.startRendering()}catch{}finally{URL.revokeObjectURL(c)}return d&&!g},createTestChannelMergerNodeChannelCountSupport=i=>()=>{if(i===null)return!1;const o=new i(1,1,44100).createChannelMerger();if(o.channelCountMode==="max")return!0;try{o.channelCount=2}catch{return!0}return!1},createTestConstantSourceNodeAccurateSchedulingSupport=i=>()=>{if(i===null)return!1;const s=new i(1,1,44100);return s.createConstantSource===void 0?!0:s.createConstantSource().offset.maxValue!==Number.POSITIVE_INFINITY},createTestConvolverNodeBufferReassignabilitySupport=i=>()=>{if(i===null)return!1;const s=new i(1,1,44100),o=s.createConvolver();o.buffer=s.createBuffer(1,1,s.sampleRate);try{o.buffer=s.createBuffer(1,1,s.sampleRate)}catch{return!1}return!0},createTestConvolverNodeChannelCountSupport=i=>()=>{if(i===null)return!1;const o=new i(1,1,44100).createConvolver();try{o.channelCount=1}catch{return!1}return!0},createTestIsSecureContextSupport=i=>()=>i!==null&&i.hasOwnProperty("isSecureContext"),createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport=i=>()=>{if(i===null)return!1;const s=new i;try{return s.createMediaStreamSource(new MediaStream),!1}catch{return!0}finally{s.close()}},createTestOfflineAudioContextCurrentTimeSupport=(i,s)=>()=>{if(s===null)return Promise.resolve(!1);const o=new s(1,1,44100),a=i(o,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise(c=>{o.oncomplete=()=>{a.disconnect(),c(o.currentTime!==0)},o.startRendering()})},createTestStereoPannerNodeDefaultValueSupport=i=>()=>{if(i===null)return Promise.resolve(!1);const s=new i(1,1,44100);if(s.createStereoPanner===void 0||s.createConstantSource===void 0)return Promise.resolve(!0);const o=s.createConstantSource(),a=s.createStereoPanner();return o.channelCount=1,o.offset.value=1,a.channelCount=1,o.start(),o.connect(a).connect(s.destination),s.startRendering().then(c=>c.getChannelData(0)[0]!==1)},createUnknownError=()=>new DOMException("","UnknownError"),DEFAULT_OPTIONS={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},createWaveShaperNodeConstructor=(i,s,o,a,c,d,g)=>class extends i{constructor($,_){const _e=c($),et={...DEFAULT_OPTIONS,..._},rt=o(_e,et),j=d(_e)?a():null;super($,!0,rt,j),this._isCurveNullified=!1,this._nativeWaveShaperNode=rt,g(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve($){if($===null)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if($.length<2)throw s();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=$}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample($){this._nativeWaveShaperNode.oversample=$}},createWaveShaperNodeRendererFactory=(i,s,o)=>()=>{const a=new WeakMap,c=async(d,g)=>{let b=s(d);if(!isOwnedByContext(b,g)){const _={channelCount:b.channelCount,channelCountMode:b.channelCountMode,channelInterpretation:b.channelInterpretation,curve:b.curve,oversample:b.oversample};b=i(g,_)}return a.set(g,b),isNativeAudioNodeFaker(b)?await o(d,g,b.inputs[0]):await o(d,g,b),b};return{render(d,g){const b=a.get(g);return b!==void 0?Promise.resolve(b):c(d,g)}}},createWindow=()=>typeof window>"u"?null:window,createWrapAudioBufferCopyChannelMethods=(i,s)=>o=>{o.copyFromChannel=(a,c,d=0)=>{const g=i(d),b=i(c);if(b>=o.numberOfChannels)throw s();const $=o.length,_=o.getChannelData(b),_e=a.length;for(let et=g<0?-g:0;et+g<$&&et<_e;et+=1)a[et]=_[et+g]},o.copyToChannel=(a,c,d=0)=>{const g=i(d),b=i(c);if(b>=o.numberOfChannels)throw s();const $=o.length,_=o.getChannelData(b),_e=a.length;for(let et=g<0?-g:0;et+g<$&&et<_e;et+=1)_[et+g]=a[et]}},createWrapAudioBufferCopyChannelMethodsOutOfBounds=i=>s=>{s.copyFromChannel=(o=>(a,c,d=0)=>{const g=i(d),b=i(c);if(g<s.length)return o.call(s,a,b,g)})(s.copyFromChannel),s.copyToChannel=(o=>(a,c,d=0)=>{const g=i(d),b=i(c);if(g<s.length)return o.call(s,a,b,g)})(s.copyToChannel)},createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer=i=>(s,o)=>{const a=o.createBuffer(1,1,44100);s.buffer===null&&(s.buffer=a),i(s,"buffer",c=>()=>{const d=c.call(s);return d===a?null:d},c=>d=>c.call(s,d===null?a:d))},createWrapChannelMergerNode=(i,s)=>(o,a)=>{a.channelCount=1,a.channelCountMode="explicit",Object.defineProperty(a,"channelCount",{get:()=>1,set:()=>{throw i()}}),Object.defineProperty(a,"channelCountMode",{get:()=>"explicit",set:()=>{throw i()}});const c=o.createBufferSource();s(a,()=>{const b=a.numberOfInputs;for(let $=0;$<b;$+=1)c.connect(a,0,$)},()=>c.disconnect(a))},getFirstSample=(i,s,o)=>i.copyFromChannel===void 0?i.getChannelData(o)[0]:(i.copyFromChannel(s,o),s[0]),isDCCurve=i=>{if(i===null)return!1;const s=i.length;return s%2!==0?i[Math.floor(s/2)]!==0:i[s/2-1]+i[s/2]!==0},overwriteAccessors=(i,s,o,a)=>{let c=i;for(;!c.hasOwnProperty(s);)c=Object.getPrototypeOf(c);const{get:d,set:g}=Object.getOwnPropertyDescriptor(c,s);Object.defineProperty(i,s,{get:o(d),set:a(g)})},sanitizeAudioWorkletNodeOptions=i=>({...i,outputChannelCount:i.outputChannelCount!==void 0?i.outputChannelCount:i.numberOfInputs===1&&i.numberOfOutputs===1?[i.channelCount]:Array.from({length:i.numberOfOutputs},()=>1)}),sanitizeChannelSplitterOptions=i=>({...i,channelCount:i.numberOfOutputs}),sanitizePeriodicWaveOptions=i=>{const{imag:s,real:o}=i;return s===void 0?o===void 0?{...i,imag:[0,0],real:[0,0]}:{...i,imag:Array.from(o,()=>0),real:o}:o===void 0?{...i,imag:s,real:Array.from(s,()=>0)}:{...i,imag:s,real:o}},setValueAtTimeUntilPossible=(i,s,o)=>{try{i.setValueAtTime(s,o)}catch(a){if(a.code!==9)throw a;setValueAtTimeUntilPossible(i,s,o+1e-7)}},testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport=i=>{const s=i.createBufferSource();s.start();try{s.start()}catch{return!0}return!1},testAudioBufferSourceNodeStartMethodOffsetClampingSupport=i=>{const s=i.createBufferSource(),o=i.createBuffer(1,1,44100);s.buffer=o;try{s.start(0,1)}catch{return!1}return!0},testAudioBufferSourceNodeStopMethodNullifiedBufferSupport=i=>{const s=i.createBufferSource();s.start();try{s.stop()}catch{return!1}return!0},testAudioScheduledSourceNodeStartMethodNegativeParametersSupport=i=>{const s=i.createOscillator();try{s.start(-1)}catch(o){return o instanceof RangeError}return!1},testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport=i=>{const s=i.createBuffer(1,1,44100),o=i.createBufferSource();o.buffer=s,o.start(),o.stop();try{return o.stop(),!0}catch{return!1}},testAudioScheduledSourceNodeStopMethodNegativeParametersSupport=i=>{const s=i.createOscillator();try{s.stop(-1)}catch(o){return o instanceof RangeError}return!1},testAudioWorkletNodeOptionsClonability=i=>{const{port1:s,port2:o}=new MessageChannel;try{s.postMessage(i)}finally{s.close(),o.close()}},testDomExceptionConstructorSupport=()=>{try{new DOMException}catch{return!1}return!0},testTransferablesSupport=()=>new Promise(i=>{const s=new ArrayBuffer(0),{port1:o,port2:a}=new MessageChannel;o.onmessage=({data:c})=>i(c!==null),a.postMessage(s,[s])}),wrapAudioBufferSourceNodeStartMethodOffsetClamping=i=>{i.start=(s=>(o=0,a=0,c)=>{const d=i.buffer,g=d===null?a:Math.min(d.duration,a);d!==null&&g>d.duration-.5/i.context.sampleRate?s.call(i,o,0,0):s.call(i,o,g,c)})(i.start)},wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls=(i,s)=>{const o=s.createGain();i.connect(o);const a=(c=>()=>{c.call(i,o),i.removeEventListener("ended",a)})(i.disconnect);i.addEventListener("ended",a),interceptConnections(i,o),i.stop=(c=>{let d=!1;return(g=0)=>{if(d)try{c.call(i,g)}catch{o.gain.setValueAtTime(0,g)}else c.call(i,g),d=!0}})(i.stop)},wrapEventListener=(i,s)=>o=>{const a={value:i};return Object.defineProperties(o,{currentTarget:a,target:a}),typeof s=="function"?s.call(i,o):s.handleEvent.call(i,o)},addActiveInputConnectionToAudioNode=createAddActiveInputConnectionToAudioNode(insertElementInSet),addPassiveInputConnectionToAudioNode=createAddPassiveInputConnectionToAudioNode(insertElementInSet),deleteActiveInputConnectionToAudioNode=createDeleteActiveInputConnectionToAudioNode(pickElementFromSet),audioNodeTailTimeStore=new WeakMap,getAudioNodeTailTime=createGetAudioNodeTailTime(audioNodeTailTimeStore),cacheTestResult=createCacheTestResult(new Map,new WeakMap),window$1=createWindow(),createNativeAnalyserNode=createNativeAnalyserNodeFactory(cacheTestResult,createIndexSizeError),getAudioNodeRenderer=createGetAudioNodeRenderer(getAudioNodeConnections),renderInputsOfAudioNode=createRenderInputsOfAudioNode(getAudioNodeConnections,getAudioNodeRenderer,isPartOfACycle),createAnalyserNodeRenderer=createAnalyserNodeRendererFactory(createNativeAnalyserNode,getNativeAudioNode,renderInputsOfAudioNode),getNativeContext=createGetNativeContext(CONTEXT_STORE),nativeOfflineAudioContextConstructor=createNativeOfflineAudioContextConstructor(window$1),isNativeOfflineAudioContext=createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor),audioParamAudioNodeStore=new WeakMap,eventTargetConstructor=createEventTargetConstructor(wrapEventListener),nativeAudioContextConstructor=createNativeAudioContextConstructor(window$1),isNativeAudioContext=createIsNativeAudioContext(nativeAudioContextConstructor),isNativeAudioNode=createIsNativeAudioNode(window$1),isNativeAudioParam=createIsNativeAudioParam(window$1),nativeAudioWorkletNodeConstructor=createNativeAudioWorkletNodeConstructor(window$1),audioNodeConstructor=createAudioNodeConstructor(createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE),createAddConnectionToAudioNode(addActiveInputConnectionToAudioNode,addPassiveInputConnectionToAudioNode,connectNativeAudioNodeToNativeAudioNode,deleteActiveInputConnectionToAudioNode,disconnectNativeAudioNodeFromNativeAudioNode,getAudioNodeConnections,getAudioNodeTailTime,getEventListenersOfAudioNode,getNativeAudioNode,insertElementInSet,isActiveAudioNode,isPartOfACycle,isPassiveAudioNode),cacheTestResult,createIncrementCycleCounterFactory(CYCLE_COUNTERS,disconnectNativeAudioNodeFromNativeAudioNode,getAudioNodeConnections,getNativeAudioNode,getNativeAudioParam,isActiveAudioNode),createIndexSizeError,createInvalidAccessError,createNotSupportedError,createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode,CYCLE_COUNTERS,getAudioNodeConnections,getNativeAudioNode,getNativeAudioParam,getNativeContext,isActiveAudioNode,isNativeOfflineAudioContext),createDetectCycles(audioParamAudioNodeStore,getAudioNodeConnections,getValueForKey),eventTargetConstructor,getNativeContext,isNativeAudioContext,isNativeAudioNode,isNativeAudioParam,isNativeOfflineAudioContext,nativeAudioWorkletNodeConstructor),analyserNodeConstructor=createAnalyserNodeConstructor(audioNodeConstructor,createAnalyserNodeRenderer,createIndexSizeError,createNativeAnalyserNode,getNativeContext,isNativeOfflineAudioContext),audioBufferStore=new WeakSet,nativeAudioBufferConstructor=createNativeAudioBufferConstructor(window$1),convertNumberToUnsignedLong=createConvertNumberToUnsignedLong(new Uint32Array(1)),wrapAudioBufferCopyChannelMethods=createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong,createIndexSizeError),wrapAudioBufferCopyChannelMethodsOutOfBounds=createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong),audioBufferConstructor=createAudioBufferConstructor(audioBufferStore,cacheTestResult,createNotSupportedError,nativeAudioBufferConstructor,nativeOfflineAudioContextConstructor,createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor),wrapAudioBufferCopyChannelMethods,wrapAudioBufferCopyChannelMethodsOutOfBounds),addSilentConnection=createAddSilentConnection(createNativeGainNode),renderInputsOfAudioParam=createRenderInputsOfAudioParam(getAudioNodeRenderer,getAudioParamConnections,isPartOfACycle),connectAudioParam=createConnectAudioParam(renderInputsOfAudioParam),createNativeAudioBufferSourceNode=createNativeAudioBufferSourceNodeFactory(addSilentConnection,cacheTestResult,testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport,testAudioBufferSourceNodeStartMethodOffsetClampingSupport,testAudioBufferSourceNodeStopMethodNullifiedBufferSupport,testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport,testAudioScheduledSourceNodeStopMethodNegativeParametersSupport,wrapAudioBufferSourceNodeStartMethodOffsetClamping,createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors),wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls),renderAutomation=createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections),renderInputsOfAudioParam),createAudioBufferSourceNodeRenderer=createAudioBufferSourceNodeRendererFactory(connectAudioParam,createNativeAudioBufferSourceNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),createAudioParam=createAudioParamFactory(createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE),audioParamAudioNodeStore,AUDIO_PARAM_STORE,createAudioParamRenderer,createCancelAndHoldAutomationEvent,createCancelScheduledValuesAutomationEvent,createExponentialRampToValueAutomationEvent,createLinearRampToValueAutomationEvent,createSetTargetAutomationEvent,createSetValueAutomationEvent,createSetValueCurveAutomationEvent,nativeAudioContextConstructor,setValueAtTimeUntilPossible),audioBufferSourceNodeConstructor=createAudioBufferSourceNodeConstructor(audioNodeConstructor,createAudioBufferSourceNodeRenderer,createAudioParam,createInvalidStateError,createNativeAudioBufferSourceNode,getNativeContext,isNativeOfflineAudioContext,wrapEventListener),audioDestinationNodeConstructor=createAudioDestinationNodeConstructor(audioNodeConstructor,createAudioDestinationNodeRenderer,createIndexSizeError,createInvalidStateError,createNativeAudioDestinationNodeFactory(createNativeGainNode,overwriteAccessors),getNativeContext,isNativeOfflineAudioContext,renderInputsOfAudioNode),createBiquadFilterNodeRenderer=createBiquadFilterNodeRendererFactory(connectAudioParam,createNativeBiquadFilterNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),setAudioNodeTailTime=createSetAudioNodeTailTime(audioNodeTailTimeStore),biquadFilterNodeConstructor=createBiquadFilterNodeConstructor(audioNodeConstructor,createAudioParam,createBiquadFilterNodeRenderer,createInvalidAccessError,createNativeBiquadFilterNode,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),monitorConnections=createMonitorConnections(insertElementInSet,isNativeAudioNode),wrapChannelMergerNode=createWrapChannelMergerNode(createInvalidStateError,monitorConnections),createNativeChannelMergerNode=createNativeChannelMergerNodeFactory(nativeAudioContextConstructor,wrapChannelMergerNode),createChannelMergerNodeRenderer=createChannelMergerNodeRendererFactory(createNativeChannelMergerNode,getNativeAudioNode,renderInputsOfAudioNode),channelMergerNodeConstructor=createChannelMergerNodeConstructor(audioNodeConstructor,createChannelMergerNodeRenderer,createNativeChannelMergerNode,getNativeContext,isNativeOfflineAudioContext),createChannelSplitterNodeRenderer=createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode,getNativeAudioNode,renderInputsOfAudioNode),channelSplitterNodeConstructor=createChannelSplitterNodeConstructor(audioNodeConstructor,createChannelSplitterNodeRenderer,createNativeChannelSplitterNode,getNativeContext,isNativeOfflineAudioContext,sanitizeChannelSplitterOptions),createNativeConstantSourceNodeFaker=createNativeConstantSourceNodeFakerFactory(addSilentConnection,createNativeAudioBufferSourceNode,createNativeGainNode,monitorConnections),createNativeConstantSourceNode=createNativeConstantSourceNodeFactory(addSilentConnection,cacheTestResult,createNativeConstantSourceNodeFaker,testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,testAudioScheduledSourceNodeStopMethodNegativeParametersSupport),createConstantSourceNodeRenderer=createConstantSourceNodeRendererFactory(connectAudioParam,createNativeConstantSourceNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),constantSourceNodeConstructor=createConstantSourceNodeConstructor(audioNodeConstructor,createAudioParam,createConstantSourceNodeRenderer,createNativeConstantSourceNode,getNativeContext,isNativeOfflineAudioContext,wrapEventListener),createNativeConvolverNode=createNativeConvolverNodeFactory(createNotSupportedError,overwriteAccessors),createConvolverNodeRenderer=createConvolverNodeRendererFactory(createNativeConvolverNode,getNativeAudioNode,renderInputsOfAudioNode),convolverNodeConstructor=createConvolverNodeConstructor(audioNodeConstructor,createConvolverNodeRenderer,createNativeConvolverNode,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),createDelayNodeRenderer=createDelayNodeRendererFactory(connectAudioParam,createNativeDelayNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),delayNodeConstructor=createDelayNodeConstructor(audioNodeConstructor,createAudioParam,createDelayNodeRenderer,createNativeDelayNode,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),createNativeDynamicsCompressorNode=createNativeDynamicsCompressorNodeFactory(createNotSupportedError),createDynamicsCompressorNodeRenderer=createDynamicsCompressorNodeRendererFactory(connectAudioParam,createNativeDynamicsCompressorNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),dynamicsCompressorNodeConstructor=createDynamicsCompressorNodeConstructor(audioNodeConstructor,createAudioParam,createDynamicsCompressorNodeRenderer,createNativeDynamicsCompressorNode,createNotSupportedError,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),createGainNodeRenderer=createGainNodeRendererFactory(connectAudioParam,createNativeGainNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),gainNodeConstructor=createGainNodeConstructor(audioNodeConstructor,createAudioParam,createGainNodeRenderer,createNativeGainNode,getNativeContext,isNativeOfflineAudioContext),createNativeIIRFilterNodeFaker=createNativeIIRFilterNodeFakerFactory(createInvalidAccessError,createInvalidStateError,createNativeScriptProcessorNode,createNotSupportedError),renderNativeOfflineAudioContext=createRenderNativeOfflineAudioContext(cacheTestResult,createNativeGainNode,createNativeScriptProcessorNode,createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode,nativeOfflineAudioContextConstructor)),createIIRFilterNodeRenderer=createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode,getNativeAudioNode,nativeOfflineAudioContextConstructor,renderInputsOfAudioNode,renderNativeOfflineAudioContext),createNativeIIRFilterNode=createNativeIIRFilterNodeFactory(createNativeIIRFilterNodeFaker),iIRFilterNodeConstructor=createIIRFilterNodeConstructor(audioNodeConstructor,createNativeIIRFilterNode,createIIRFilterNodeRenderer,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),createAudioListener=createAudioListenerFactory(createAudioParam,createNativeChannelMergerNode,createNativeConstantSourceNode,createNativeScriptProcessorNode,createNotSupportedError,getFirstSample,isNativeOfflineAudioContext,overwriteAccessors),unrenderedAudioWorkletNodeStore=new WeakMap,minimalBaseAudioContextConstructor=createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor,createAudioListener,eventTargetConstructor,isNativeOfflineAudioContext,unrenderedAudioWorkletNodeStore,wrapEventListener),createNativeOscillatorNode=createNativeOscillatorNodeFactory(addSilentConnection,cacheTestResult,testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport,testAudioScheduledSourceNodeStopMethodNegativeParametersSupport,wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls),createOscillatorNodeRenderer=createOscillatorNodeRendererFactory(connectAudioParam,createNativeOscillatorNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),oscillatorNodeConstructor=createOscillatorNodeConstructor(audioNodeConstructor,createAudioParam,createNativeOscillatorNode,createOscillatorNodeRenderer,getNativeContext,isNativeOfflineAudioContext,wrapEventListener),createConnectedNativeAudioBufferSourceNode=createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode),createNativeWaveShaperNodeFaker=createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode,createInvalidStateError,createNativeGainNode,isDCCurve,monitorConnections),createNativeWaveShaperNode=createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode,createInvalidStateError,createNativeWaveShaperNodeFaker,isDCCurve,monitorConnections,nativeAudioContextConstructor,overwriteAccessors),createNativePannerNodeFaker=createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode,createInvalidStateError,createNativeChannelMergerNode,createNativeGainNode,createNativeScriptProcessorNode,createNativeWaveShaperNode,createNotSupportedError,disconnectNativeAudioNodeFromNativeAudioNode,getFirstSample,monitorConnections),createNativePannerNode=createNativePannerNodeFactory(createNativePannerNodeFaker),createPannerNodeRenderer=createPannerNodeRendererFactory(connectAudioParam,createNativeChannelMergerNode,createNativeConstantSourceNode,createNativeGainNode,createNativePannerNode,getNativeAudioNode,nativeOfflineAudioContextConstructor,renderAutomation,renderInputsOfAudioNode,renderNativeOfflineAudioContext),pannerNodeConstructor=createPannerNodeConstructor(audioNodeConstructor,createAudioParam,createNativePannerNode,createPannerNodeRenderer,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),createNativePeriodicWave=createNativePeriodicWaveFactory(createIndexSizeError),periodicWaveConstructor=createPeriodicWaveConstructor(createNativePeriodicWave,getNativeContext,new WeakSet,sanitizePeriodicWaveOptions),nativeStereoPannerNodeFakerFactory=createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode,createNativeChannelSplitterNode,createNativeGainNode,createNativeWaveShaperNode,createNotSupportedError,monitorConnections),createNativeStereoPannerNode=createNativeStereoPannerNodeFactory(nativeStereoPannerNodeFakerFactory,createNotSupportedError),createStereoPannerNodeRenderer=createStereoPannerNodeRendererFactory(connectAudioParam,createNativeStereoPannerNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),stereoPannerNodeConstructor=createStereoPannerNodeConstructor(audioNodeConstructor,createAudioParam,createNativeStereoPannerNode,createStereoPannerNodeRenderer,getNativeContext,isNativeOfflineAudioContext),createWaveShaperNodeRenderer=createWaveShaperNodeRendererFactory(createNativeWaveShaperNode,getNativeAudioNode,renderInputsOfAudioNode),waveShaperNodeConstructor=createWaveShaperNodeConstructor(audioNodeConstructor,createInvalidStateError,createNativeWaveShaperNode,createWaveShaperNodeRenderer,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),isSecureContext=createIsSecureContext(window$1),exposeCurrentFrameAndCurrentTime=createExposeCurrentFrameAndCurrentTime(window$1),backupOfflineAudioContextStore=new WeakMap,getOrCreateBackupOfflineAudioContext=createGetOrCreateBackupOfflineAudioContext(backupOfflineAudioContextStore,nativeOfflineAudioContextConstructor),addAudioWorkletModule=isSecureContext?createAddAudioWorkletModule(cacheTestResult,createNotSupportedError,createEvaluateSource(window$1),exposeCurrentFrameAndCurrentTime,createFetchSource(createAbortError),getNativeContext,getOrCreateBackupOfflineAudioContext,isNativeOfflineAudioContext,nativeAudioWorkletNodeConstructor,new WeakMap,new WeakMap,createTestAudioWorkletProcessorPostMessageSupport(nativeAudioWorkletNodeConstructor,nativeOfflineAudioContextConstructor),window$1):void 0,isNativeContext=createIsNativeContext(isNativeAudioContext,isNativeOfflineAudioContext),decodeAudioData=createDecodeAudioData(audioBufferStore,cacheTestResult,createDataCloneError,createEncodingError,new WeakSet,getNativeContext,isNativeContext,testAudioBufferCopyChannelMethodsOutOfBoundsSupport,testPromiseSupport,wrapAudioBufferCopyChannelMethods,wrapAudioBufferCopyChannelMethodsOutOfBounds),baseAudioContextConstructor=createBaseAudioContextConstructor(addAudioWorkletModule,analyserNodeConstructor,audioBufferConstructor,audioBufferSourceNodeConstructor,biquadFilterNodeConstructor,channelMergerNodeConstructor,channelSplitterNodeConstructor,constantSourceNodeConstructor,convolverNodeConstructor,decodeAudioData,delayNodeConstructor,dynamicsCompressorNodeConstructor,gainNodeConstructor,iIRFilterNodeConstructor,minimalBaseAudioContextConstructor,oscillatorNodeConstructor,pannerNodeConstructor,periodicWaveConstructor,stereoPannerNodeConstructor,waveShaperNodeConstructor),mediaElementAudioSourceNodeConstructor=createMediaElementAudioSourceNodeConstructor(audioNodeConstructor,createNativeMediaElementAudioSourceNode,getNativeContext,isNativeOfflineAudioContext),mediaStreamAudioDestinationNodeConstructor=createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor,createNativeMediaStreamAudioDestinationNode,getNativeContext,isNativeOfflineAudioContext),mediaStreamAudioSourceNodeConstructor=createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor,createNativeMediaStreamAudioSourceNode,getNativeContext,isNativeOfflineAudioContext),createNativeMediaStreamTrackAudioSourceNode=createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError,isNativeOfflineAudioContext),mediaStreamTrackAudioSourceNodeConstructor=createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor,createNativeMediaStreamTrackAudioSourceNode,getNativeContext),audioContextConstructor=createAudioContextConstructor(baseAudioContextConstructor,createInvalidStateError,createNotSupportedError,createUnknownError,mediaElementAudioSourceNodeConstructor,mediaStreamAudioDestinationNodeConstructor,mediaStreamAudioSourceNodeConstructor,mediaStreamTrackAudioSourceNodeConstructor,nativeAudioContextConstructor),getUnrenderedAudioWorkletNodes=createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore),addUnrenderedAudioWorkletNode=createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes),connectMultipleOutputs=createConnectMultipleOutputs(createIndexSizeError),deleteUnrenderedAudioWorkletNode=createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes),disconnectMultipleOutputs=createDisconnectMultipleOutputs(createIndexSizeError),activeAudioWorkletNodeInputsStore=new WeakMap,getActiveAudioWorkletNodeInputs=createGetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore,getValueForKey),createNativeAudioWorkletNodeFaker=createNativeAudioWorkletNodeFakerFactory(connectMultipleOutputs,createIndexSizeError,createInvalidStateError,createNativeChannelMergerNode,createNativeChannelSplitterNode,createNativeConstantSourceNode,createNativeGainNode,createNativeScriptProcessorNode,createNotSupportedError,disconnectMultipleOutputs,exposeCurrentFrameAndCurrentTime,getActiveAudioWorkletNodeInputs,monitorConnections),createNativeAudioWorkletNode=createNativeAudioWorkletNodeFactory(createInvalidStateError,createNativeAudioWorkletNodeFaker,createNativeGainNode,createNotSupportedError,monitorConnections),createAudioWorkletNodeRenderer=createAudioWorkletNodeRendererFactory(connectAudioParam,connectMultipleOutputs,createNativeAudioBufferSourceNode,createNativeChannelMergerNode,createNativeChannelSplitterNode,createNativeConstantSourceNode,createNativeGainNode,deleteUnrenderedAudioWorkletNode,disconnectMultipleOutputs,exposeCurrentFrameAndCurrentTime,getNativeAudioNode,nativeAudioWorkletNodeConstructor,nativeOfflineAudioContextConstructor,renderAutomation,renderInputsOfAudioNode,renderNativeOfflineAudioContext),getBackupOfflineAudioContext=createGetBackupOfflineAudioContext(backupOfflineAudioContextStore),setActiveAudioWorkletNodeInputs=createSetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore),audioWorkletNodeConstructor=isSecureContext?createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode,audioNodeConstructor,createAudioParam,createAudioWorkletNodeRenderer,createNativeAudioWorkletNode,getAudioNodeConnections,getBackupOfflineAudioContext,getNativeContext,isNativeOfflineAudioContext,nativeAudioWorkletNodeConstructor,sanitizeAudioWorkletNodeOptions,setActiveAudioWorkletNodeInputs,testAudioWorkletNodeOptionsClonability,wrapEventListener):void 0,createNativeOfflineAudioContext=createCreateNativeOfflineAudioContext(createNotSupportedError,nativeOfflineAudioContextConstructor),startRendering=createStartRendering(audioBufferStore,cacheTestResult,getAudioNodeRenderer,getUnrenderedAudioWorkletNodes,renderNativeOfflineAudioContext,testAudioBufferCopyChannelMethodsOutOfBoundsSupport,wrapAudioBufferCopyChannelMethods,wrapAudioBufferCopyChannelMethodsOutOfBounds),offlineAudioContextConstructor=createOfflineAudioContextConstructor(baseAudioContextConstructor,cacheTestResult,createInvalidStateError,createNativeOfflineAudioContext,startRendering),isAnyAudioContext=createIsAnyAudioContext(CONTEXT_STORE,isNativeAudioContext),isAnyAudioNode=createIsAnyAudioNode(AUDIO_NODE_STORE,isNativeAudioNode),isAnyAudioParam=createIsAnyAudioParam(AUDIO_PARAM_STORE,isNativeAudioParam),isAnyOfflineAudioContext=createIsAnyOfflineAudioContext(CONTEXT_STORE,isNativeOfflineAudioContext),isSupported=()=>createIsSupportedPromise(cacheTestResult,createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor),createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor),createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor),createTestAudioContextOptionsSupport(nativeAudioContextConstructor),createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor),createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor,nativeOfflineAudioContextConstructor),createTestChannelMergerNodeChannelCountSupport(nativeOfflineAudioContextConstructor),createTestConstantSourceNodeAccurateSchedulingSupport(nativeOfflineAudioContextConstructor),createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor),createTestConvolverNodeChannelCountSupport(nativeOfflineAudioContextConstructor),testDomExceptionConstructorSupport,createTestIsSecureContextSupport(window$1),createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor),createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor),testTransferablesSupport);function assert(i,s){if(!i)throw new Error(s)}function assertRange(i,s,o=1/0){if(!(s<=i&&i<=o))throw new RangeError(`Value must be within [${s}, ${o}], got: ${i}`)}function assertContextRunning(i){!i.isOffline&&i.state!=="running"&&warn('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let defaultLogger=console;function setLogger(i){defaultLogger=i}function log(...i){defaultLogger.log(...i)}function warn(...i){defaultLogger.warn(...i)}const Debug=Object.freeze(Object.defineProperty({__proto__:null,assert,assertContextRunning,assertRange,log,setLogger,warn},Symbol.toStringTag,{value:"Module"}));function isUndef(i){return typeof i>"u"}function isDefined(i){return!isUndef(i)}function isFunction(i){return typeof i=="function"}function isNumber(i){return typeof i=="number"}function isObject(i){return Object.prototype.toString.call(i)==="[object Object]"&&i.constructor===Object}function isBoolean(i){return typeof i=="boolean"}function isArray(i){return Array.isArray(i)}function isString(i){return typeof i=="string"}function isNote(i){return isString(i)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(i)}function createAudioContext(i){return new audioContextConstructor(i)}function createOfflineAudioContext(i,s,o){return new offlineAudioContextConstructor(i,s,o)}const theWindow=typeof self=="object"?self:null,hasAudioContext=theWindow&&(theWindow.hasOwnProperty("AudioContext")||theWindow.hasOwnProperty("webkitAudioContext"));function createAudioWorkletNode(i,s,o){return assert(isDefined(audioWorkletNodeConstructor),"This node only works in a secure context (https or localhost)"),new audioWorkletNodeConstructor(i,s,o)}function __decorate(i,s,o,a){var c=arguments.length,d=c<3?s:a===null?a=Object.getOwnPropertyDescriptor(s,o):a,g;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")d=Reflect.decorate(i,s,o,a);else for(var b=i.length-1;b>=0;b--)(g=i[b])&&(d=(c<3?g(d):c>3?g(s,o,d):g(s,o))||d);return c>3&&d&&Object.defineProperty(s,o,d),d}function __awaiter(i,s,o,a){function c(d){return d instanceof o?d:new o(function(g){g(d)})}return new(o||(o=Promise))(function(d,g){function b(_e){try{_(a.next(_e))}catch(et){g(et)}}function $(_e){try{_(a.throw(_e))}catch(et){g(et)}}function _(_e){_e.done?d(_e.value):c(_e.value).then(b,$)}_((a=a.apply(i,s||[])).next())})}class Ticker{constructor(s,o,a){this._callback=s,this._type=o,this._updateInterval=a,this._createClock()}_createWorker(){const s=new Blob([`
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval*1e3).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`],{type:"text/javascript"}),o=URL.createObjectURL(s),a=new Worker(o);a.onmessage=this._callback.bind(this),this._worker=a}_createTimeout(){this._timeout=setTimeout(()=>{this._createTimeout(),this._callback()},this._updateInterval*1e3)}_createClock(){if(this._type==="worker")try{this._createWorker()}catch{this._type="timeout",this._createClock()}else this._type==="timeout"&&this._createTimeout()}_disposeClock(){this._timeout&&(clearTimeout(this._timeout),this._timeout=0),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(s){this._updateInterval=Math.max(s,128/44100),this._type==="worker"&&this._worker.postMessage(Math.max(s*1e3,1))}get type(){return this._type}set type(s){this._disposeClock(),this._type=s,this._createClock()}dispose(){this._disposeClock()}}function isAudioParam(i){return isAnyAudioParam(i)}function isAudioNode(i){return isAnyAudioNode(i)}function isOfflineAudioContext(i){return isAnyOfflineAudioContext(i)}function isAudioContext(i){return isAnyAudioContext(i)}function isAudioBuffer(i){return i instanceof AudioBuffer}function noCopy(i,s){return i==="value"||isAudioParam(s)||isAudioNode(s)||isAudioBuffer(s)}function deepMerge(i,...s){if(!s.length)return i;const o=s.shift();if(isObject(i)&&isObject(o))for(const a in o)noCopy(a,o[a])?i[a]=o[a]:isObject(o[a])?(i[a]||Object.assign(i,{[a]:{}}),deepMerge(i[a],o[a])):Object.assign(i,{[a]:o[a]});return deepMerge(i,...s)}function deepEquals(i,s){return i.length===s.length&&i.every((o,a)=>s[a]===o)}function optionsFromArguments(i,s,o=[],a){const c={},d=Array.from(s);if(isObject(d[0])&&a&&!Reflect.has(d[0],a)&&(Object.keys(d[0]).some(b=>Reflect.has(i,b))||(deepMerge(c,{[a]:d[0]}),o.splice(o.indexOf(a),1),d.shift())),d.length===1&&isObject(d[0]))deepMerge(c,d[0]);else for(let g=0;g<o.length;g++)isDefined(d[g])&&(c[o[g]]=d[g]);return deepMerge(i,c)}function getDefaultsFromInstance(i){return i.constructor.getDefaults()}function defaultArg(i,s){return isUndef(i)?s:i}function omitFromObject(i,s){return s.forEach(o=>{Reflect.has(i,o)&&delete i[o]}),i}/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2019 Yotam Mann
 */class Tone{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...s){(this.debug||theWindow&&this.toString()===theWindow.TONE_DEBUG_CLASS)&&log(this,...s)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}}Tone.version=version;const EPSILON=1e-6;function GT(i,s){return i>s+EPSILON}function GTE(i,s){return GT(i,s)||EQ(i,s)}function LT(i,s){return i+EPSILON<s}function EQ(i,s){return Math.abs(i-s)<EPSILON}function clamp(i,s,o){return Math.max(Math.min(i,o),s)}class Timeline extends Tone{constructor(){super(),this.name="Timeline",this._timeline=[];const s=optionsFromArguments(Timeline.getDefaults(),arguments,["memory"]);this.memory=s.memory,this.increasing=s.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(s){if(assert(Reflect.has(s,"time"),"Timeline: events must have a time attribute"),s.time=s.time.valueOf(),this.increasing&&this.length){const o=this._timeline[this.length-1];assert(GTE(s.time,o.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(s)}else{const o=this._search(s.time);this._timeline.splice(o+1,0,s)}if(this.length>this.memory){const o=this.length-this.memory;this._timeline.splice(0,o)}return this}remove(s){const o=this._timeline.indexOf(s);return o!==-1&&this._timeline.splice(o,1),this}get(s,o="time"){const a=this._search(s,o);return a!==-1?this._timeline[a]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(s,o="time"){const a=this._search(s,o);return a+1<this._timeline.length?this._timeline[a+1]:null}getBefore(s){const o=this._timeline.length;if(o>0&&this._timeline[o-1].time<s)return this._timeline[o-1];const a=this._search(s);return a-1>=0?this._timeline[a-1]:null}cancel(s){if(this._timeline.length>1){let o=this._search(s);if(o>=0)if(EQ(this._timeline[o].time,s)){for(let a=o;a>=0&&EQ(this._timeline[a].time,s);a--)o=a;this._timeline=this._timeline.slice(0,o)}else this._timeline=this._timeline.slice(0,o+1);else this._timeline=[]}else this._timeline.length===1&&GTE(this._timeline[0].time,s)&&(this._timeline=[]);return this}cancelBefore(s){const o=this._search(s);return o>=0&&(this._timeline=this._timeline.slice(o+1)),this}previousEvent(s){const o=this._timeline.indexOf(s);return o>0?this._timeline[o-1]:null}_search(s,o="time"){if(this._timeline.length===0)return-1;let a=0;const c=this._timeline.length;let d=c;if(c>0&&this._timeline[c-1][o]<=s)return c-1;for(;a<d;){let g=Math.floor(a+(d-a)/2);const b=this._timeline[g],$=this._timeline[g+1];if(EQ(b[o],s)){for(let _=g;_<this._timeline.length;_++){const _e=this._timeline[_];if(EQ(_e[o],s))g=_;else break}return g}else{if(LT(b[o],s)&&GT($[o],s))return g;GT(b[o],s)?d=g:a=g+1}}return-1}_iterate(s,o=0,a=this._timeline.length-1){this._timeline.slice(o,a+1).forEach(s)}forEach(s){return this._iterate(s),this}forEachBefore(s,o){const a=this._search(s);return a!==-1&&this._iterate(o,0,a),this}forEachAfter(s,o){const a=this._search(s);return this._iterate(o,a+1),this}forEachBetween(s,o,a){let c=this._search(s),d=this._search(o);return c!==-1&&d!==-1?(this._timeline[c].time!==s&&(c+=1),this._timeline[d].time===o&&(d-=1),this._iterate(a,c,d)):c===-1&&this._iterate(a,0,d),this}forEachFrom(s,o){let a=this._search(s);for(;a>=0&&this._timeline[a].time>=s;)a--;return this._iterate(o,a+1),this}forEachAtTime(s,o){const a=this._search(s);if(a!==-1&&EQ(this._timeline[a].time,s)){let c=a;for(let d=a;d>=0&&EQ(this._timeline[d].time,s);d--)c=d;this._iterate(d=>{o(d)},c,a)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const notifyNewContext=[];function onContextInit(i){notifyNewContext.push(i)}function initializeContext(i){notifyNewContext.forEach(s=>s(i))}const notifyCloseContext=[];function onContextClose(i){notifyCloseContext.push(i)}function closeContext(i){notifyCloseContext.forEach(s=>s(i))}class Emitter extends Tone{constructor(){super(...arguments),this.name="Emitter"}on(s,o){return s.split(/\W+/).forEach(c=>{isUndef(this._events)&&(this._events={}),this._events.hasOwnProperty(c)||(this._events[c]=[]),this._events[c].push(o)}),this}once(s,o){const a=(...c)=>{o(...c),this.off(s,a)};return this.on(s,a),this}off(s,o){return s.split(/\W+/).forEach(c=>{if(isUndef(this._events)&&(this._events={}),this._events.hasOwnProperty(s))if(isUndef(o))this._events[s]=[];else{const d=this._events[s];for(let g=d.length-1;g>=0;g--)d[g]===o&&d.splice(g,1)}}),this}emit(s,...o){if(this._events&&this._events.hasOwnProperty(s)){const a=this._events[s].slice(0);for(let c=0,d=a.length;c<d;c++)a[c].apply(this,o)}return this}static mixin(s){["on","once","off","emit"].forEach(o=>{const a=Object.getOwnPropertyDescriptor(Emitter.prototype,o);Object.defineProperty(s.prototype,o,a)})}dispose(){return super.dispose(),this._events=void 0,this}}class BaseContext extends Emitter{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class Context extends BaseContext{constructor(){super(),this.name="Context",this._constants=new Map,this._timeouts=new Timeline,this._timeoutIds=0,this._initialized=!1,this.isOffline=!1,this._workletModules=new Map;const s=optionsFromArguments(Context.getDefaults(),arguments,["context"]);s.context?this._context=s.context:this._context=createAudioContext({latencyHint:s.latencyHint}),this._ticker=new Ticker(this.emit.bind(this,"tick"),s.clockSource,s.updateInterval),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this._setLatencyHint(s.latencyHint),this.lookAhead=s.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){return this._initialized||(initializeContext(this),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(s,o,a){return this._context.createBuffer(s,o,a)}createChannelMerger(s){return this._context.createChannelMerger(s)}createChannelSplitter(s){return this._context.createChannelSplitter(s)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(s){return this._context.createDelay(s)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(s,o){return this._context.createIIRFilter(s,o)}createPanner(){return this._context.createPanner()}createPeriodicWave(s,o,a){return this._context.createPeriodicWave(s,o,a)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(s){return assert(isAudioContext(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(s)}createMediaElementSource(s){return assert(isAudioContext(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(s)}createMediaStreamDestination(){return assert(isAudioContext(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(s){return this._context.decodeAudioData(s)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(s){assert(!this._initialized,"The listener cannot be set after initialization."),this._listener=s}get transport(){return this.initialize(),this._transport}set transport(s){assert(!this._initialized,"The transport cannot be set after initialization."),this._transport=s}get draw(){return this.initialize(),this._draw}set draw(s){assert(!this._initialized,"Draw cannot be set after initialization."),this._draw=s}get destination(){return this.initialize(),this._destination}set destination(s){assert(!this._initialized,"The destination cannot be set after initialization."),this._destination=s}createAudioWorkletNode(s,o){return createAudioWorkletNode(this.rawContext,s,o)}addAudioWorkletModule(s,o){return __awaiter(this,void 0,void 0,function*(){assert(isDefined(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletModules.has(o)||this._workletModules.set(o,this.rawContext.audioWorklet.addModule(s)),yield this._workletModules.get(o)})}workletsAreReady(){return __awaiter(this,void 0,void 0,function*(){const s=[];this._workletModules.forEach(o=>s.push(o)),yield Promise.all(s)})}get updateInterval(){return this._ticker.updateInterval}set updateInterval(s){this._ticker.updateInterval=s}get clockSource(){return this._ticker.type}set clockSource(s){this._ticker.type=s}get latencyHint(){return this._latencyHint}_setLatencyHint(s){let o=0;if(this._latencyHint=s,isString(s))switch(s){case"interactive":o=.1;break;case"playback":o=.5;break;case"balanced":o=.25;break}this.lookAhead=o,this.updateInterval=o/2}get rawContext(){return this._context}now(){return this._context.currentTime+this.lookAhead}immediate(){return this._context.currentTime}resume(){return isAudioContext(this._context)?this._context.resume():Promise.resolve()}close(){return __awaiter(this,void 0,void 0,function*(){isAudioContext(this._context)&&(yield this._context.close()),this._initialized&&closeContext(this)})}getConstant(s){if(this._constants.has(s))return this._constants.get(s);{const o=this._context.createBuffer(1,128,this._context.sampleRate),a=o.getChannelData(0);for(let d=0;d<a.length;d++)a[d]=s;const c=this._context.createBufferSource();return c.channelCount=1,c.channelCountMode="explicit",c.buffer=o,c.loop=!0,c.start(0),this._constants.set(s,c),c}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map(s=>this._constants[s].disconnect()),this}_timeoutLoop(){const s=this.now();let o=this._timeouts.peek();for(;this._timeouts.length&&o&&o.time<=s;)o.callback(),this._timeouts.shift(),o=this._timeouts.peek()}setTimeout(s,o){this._timeoutIds++;const a=this.now();return this._timeouts.add({callback:s,id:this._timeoutIds,time:a+o}),this._timeoutIds}clearTimeout(s){return this._timeouts.forEach(o=>{o.id===s&&this._timeouts.remove(o)}),this}clearInterval(s){return this.clearTimeout(s)}setInterval(s,o){const a=++this._timeoutIds,c=()=>{const d=this.now();this._timeouts.add({callback:()=>{s(),c()},id:a,time:d+o})};return c(),a}}class DummyContext extends BaseContext{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(s,o,a){return{}}createChannelMerger(s){return{}}createChannelSplitter(s){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(s){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(s,o){return{}}createPanner(){return{}}createPeriodicWave(s,o,a){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(s){return{}}createMediaElementSource(s){return{}}createMediaStreamDestination(){return{}}decodeAudioData(s){return Promise.resolve({})}createAudioWorkletNode(s,o){return{}}get rawContext(){return{}}addAudioWorkletModule(s,o){return __awaiter(this,void 0,void 0,function*(){return Promise.resolve()})}resume(){return Promise.resolve()}setTimeout(s,o){return 0}clearTimeout(s){return this}setInterval(s,o){return 0}clearInterval(s){return this}getConstant(s){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(s){}get destination(){return{}}set destination(s){}now(){return 0}immediate(){return 0}}function readOnly(i,s){isArray(s)?s.forEach(o=>readOnly(i,o)):Object.defineProperty(i,s,{enumerable:!0,writable:!1})}function writable(i,s){isArray(s)?s.forEach(o=>writable(i,o)):Object.defineProperty(i,s,{writable:!0})}const noOp=()=>{};class ToneAudioBuffer extends Tone{constructor(){super(),this.name="ToneAudioBuffer",this.onload=noOp;const s=optionsFromArguments(ToneAudioBuffer.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=s.reverse,this.onload=s.onload,s.url&&isAudioBuffer(s.url)||s.url instanceof ToneAudioBuffer?this.set(s.url):isString(s.url)&&this.load(s.url).catch(s.onerror)}static getDefaults(){return{onerror:noOp,onload:noOp,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:getContext().sampleRate}set(s){return s instanceof ToneAudioBuffer?s.loaded?this._buffer=s.get():s.onload=()=>{this.set(s),this.onload(this)}:this._buffer=s,this._reversed&&this._reverse(),this}get(){return this._buffer}load(s){return __awaiter(this,void 0,void 0,function*(){const o=ToneAudioBuffer.load(s).then(a=>{this.set(a),this.onload(this)});ToneAudioBuffer.downloads.push(o);try{yield o}finally{const a=ToneAudioBuffer.downloads.indexOf(o);ToneAudioBuffer.downloads.splice(a,1)}return this})}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(s){const o=isArray(s)&&s[0].length>0,a=o?s.length:1,c=o?s[0].length:s.length,d=getContext(),g=d.createBuffer(a,c,d.sampleRate),b=!o&&a===1?[s]:s;for(let $=0;$<a;$++)g.copyToChannel(b[$],$);return this._buffer=g,this}toMono(s){if(isNumber(s))this.fromArray(this.toArray(s));else{let o=new Float32Array(this.length);const a=this.numberOfChannels;for(let c=0;c<a;c++){const d=this.toArray(c);for(let g=0;g<d.length;g++)o[g]+=d[g]}o=o.map(c=>c/a),this.fromArray(o)}return this}toArray(s){if(isNumber(s))return this.getChannelData(s);if(this.numberOfChannels===1)return this.toArray(0);{const o=[];for(let a=0;a<this.numberOfChannels;a++)o[a]=this.getChannelData(a);return o}}getChannelData(s){return this._buffer?this._buffer.getChannelData(s):new Float32Array(0)}slice(s,o=this.duration){const a=Math.floor(s*this.sampleRate),c=Math.floor(o*this.sampleRate);assert(a<c,"The start time must be less than the end time");const d=c-a,g=getContext().createBuffer(this.numberOfChannels,d,this.sampleRate);for(let b=0;b<this.numberOfChannels;b++)g.copyToChannel(this.getChannelData(b).subarray(a,c),b);return new ToneAudioBuffer(g)}_reverse(){if(this.loaded)for(let s=0;s<this.numberOfChannels;s++)this.getChannelData(s).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(s){this._reversed!==s&&(this._reversed=s,this._reverse())}static fromArray(s){return new ToneAudioBuffer().fromArray(s)}static fromUrl(s){return __awaiter(this,void 0,void 0,function*(){return yield new ToneAudioBuffer().load(s)})}static load(s){return __awaiter(this,void 0,void 0,function*(){const o=s.match(/\[([^\]\[]+\|.+)\]$/);if(o){const b=o[1].split("|");let $=b[0];for(const _ of b)if(ToneAudioBuffer.supportsType(_)){$=_;break}s=s.replace(o[0],$)}const a=ToneAudioBuffer.baseUrl===""||ToneAudioBuffer.baseUrl.endsWith("/")?ToneAudioBuffer.baseUrl:ToneAudioBuffer.baseUrl+"/",c=yield fetch(a+s);if(!c.ok)throw new Error(`could not load url: ${s}`);const d=yield c.arrayBuffer();return yield getContext().decodeAudioData(d)})}static supportsType(s){const o=s.split("."),a=o[o.length-1];return document.createElement("audio").canPlayType("audio/"+a)!==""}static loaded(){return __awaiter(this,void 0,void 0,function*(){for(yield Promise.resolve();ToneAudioBuffer.downloads.length;)yield ToneAudioBuffer.downloads[0]})}}ToneAudioBuffer.baseUrl="";ToneAudioBuffer.downloads=[];class OfflineContext extends Context{constructor(){super({clockSource:"offline",context:isOfflineAudioContext(arguments[0])?arguments[0]:createOfflineAudioContext(arguments[0],arguments[1]*arguments[2],arguments[2]),lookAhead:0,updateInterval:isOfflineAudioContext(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=isOfflineAudioContext(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(s){return __awaiter(this,void 0,void 0,function*(){let o=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,o++;const a=Math.floor(this.sampleRate/128);s&&o%a===0&&(yield new Promise(c=>setTimeout(c,1)))}})}render(s=!0){return __awaiter(this,void 0,void 0,function*(){yield this.workletsAreReady(),yield this._renderClock(s);const o=yield this._context.startRendering();return new ToneAudioBuffer(o)})}close(){return Promise.resolve()}}const dummyContext=new DummyContext;let globalContext=dummyContext;function getContext(){return globalContext===dummyContext&&hasAudioContext&&setContext(new Context),globalContext}function setContext(i){isAudioContext(i)?globalContext=new Context(i):isOfflineAudioContext(i)?globalContext=new OfflineContext(i):globalContext=i}function start(){return globalContext.resume()}if(theWindow&&!theWindow.TONE_SILENCE_LOGGING){const s=` * Tone.js v${version} * `;console.log(`%c${s}`,"background: #000; color: #fff")}function dbToGain(i){return Math.pow(10,i/20)}function gainToDb(i){return 20*(Math.log(i)/Math.LN10)}function intervalToFrequencyRatio(i){return Math.pow(2,i/12)}let A4=440;function getA4(){return A4}function setA4(i){A4=i}function ftom(i){return Math.round(ftomf(i))}function ftomf(i){return 69+12*Math.log2(i/A4)}function mtof(i){return A4*Math.pow(2,(i-69)/12)}class TimeBaseClass extends Tone{constructor(s,o,a){super(),this.defaultUnits="s",this._val=o,this._units=a,this.context=s,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:s=>this._frequencyToUnits(parseFloat(s)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:s=>this._ticksToUnits(parseInt(s,10)),regexp:/^(\d+)i$/i},m:{method:s=>this._beatsToUnits(parseInt(s,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(s,o)=>{const a=parseInt(s,10),c=o==="."?1.5:1;return a===1?this._beatsToUnits(this._getTimeSignature())*c:this._beatsToUnits(4/a)*c},regexp:/^(\d+)n(\.?)$/i},number:{method:s=>this._expressions[this.defaultUnits].method.call(this,s),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:s=>this._secondsToUnits(parseFloat(s)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:s=>parseInt(s,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:s=>{const o=parseInt(s,10);return this._beatsToUnits(8/(Math.floor(o)*3))},regexp:/^(\d+)t$/i},tr:{method:(s,o,a)=>{let c=0;return s&&s!=="0"&&(c+=this._beatsToUnits(this._getTimeSignature()*parseFloat(s))),o&&o!=="0"&&(c+=this._beatsToUnits(parseFloat(o))),a&&a!=="0"&&(c+=this._beatsToUnits(parseFloat(a)/4)),c},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof TimeBaseClass&&this.fromType(this._val),isUndef(this._val))return this._noArg();if(isString(this._val)&&isUndef(this._units)){for(const s in this._expressions)if(this._expressions[s].regexp.test(this._val.trim())){this._units=s;break}}else if(isObject(this._val)){let s=0;for(const o in this._val)if(isDefined(this._val[o])){const a=this._val[o],c=new this.constructor(this.context,o).valueOf()*a;s+=c}return s}if(isDefined(this._units)){const s=this._expressions[this._units],o=this._val.toString().trim().match(s.regexp);return o?s.method.apply(this,o.slice(1)):s.method.call(this,this._val)}else return isString(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(s){return 1/s}_beatsToUnits(s){return 60/this._getBpm()*s}_secondsToUnits(s){return s}_ticksToUnits(s){return s*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(s){switch(this._units=void 0,this.defaultUnits){case"s":this._val=s.toSeconds();break;case"i":this._val=s.toTicks();break;case"hz":this._val=s.toFrequency();break;case"midi":this._val=s.toMidi();break}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return this.toSeconds()*1e3}}class TimeClass extends TimeBaseClass{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:s=>this._now()+new this.constructor(this.context,s).valueOf(),regexp:/^\+(.+)/},quantize:{method:s=>{const o=new TimeClass(this.context,s).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(o))},regexp:/^@(.+)/}})}quantize(s,o=1){const a=new this.constructor(this.context,s).valueOf(),c=this.valueOf(),b=Math.round(c/a)*a-c;return c+b*o}toNotation(){const s=this.toSeconds(),o=["1m"];for(let d=1;d<9;d++){const g=Math.pow(2,d);o.push(g+"n."),o.push(g+"n"),o.push(g+"t")}o.push("0");let a=o[0],c=new TimeClass(this.context,o[0]).toSeconds();return o.forEach(d=>{const g=new TimeClass(this.context,d).toSeconds();Math.abs(g-s)<Math.abs(c-s)&&(a=d,c=g)}),a}toBarsBeatsSixteenths(){const s=this._beatsToUnits(1);let o=this.valueOf()/s;o=parseFloat(o.toFixed(4));const a=Math.floor(o/this._getTimeSignature());let c=o%1*4;o=Math.floor(o)%this._getTimeSignature();const d=c.toString();return d.length>3&&(c=parseFloat(parseFloat(d).toFixed(3))),[a,o,c].join(":")}toTicks(){const s=this._beatsToUnits(1),o=this.valueOf()/s;return Math.round(o*this._getPPQ())}toSeconds(){return this.valueOf()}toMidi(){return ftom(this.toFrequency())}_now(){return this.context.now()}}function Time(i,s){return new TimeClass(getContext(),i,s)}class FrequencyClass extends TimeClass{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return getA4()}static set A4(s){setA4(s)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(s){return this.defaultUnits==="midi"?s:FrequencyClass.mtof(s)}},note:{regexp:/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,method(s,o){const c=noteToScaleIndex[s.toLowerCase()]+(parseInt(o,10)+1)*12;return this.defaultUnits==="midi"?c:FrequencyClass.mtof(c)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(s,o,a){let c=1;return s&&s!=="0"&&(c*=this._beatsToUnits(this._getTimeSignature()*parseFloat(s))),o&&o!=="0"&&(c*=this._beatsToUnits(parseFloat(o))),a&&a!=="0"&&(c*=this._beatsToUnits(parseFloat(a)/4)),c}}})}transpose(s){return new FrequencyClass(this.context,this.valueOf()*intervalToFrequencyRatio(s))}harmonize(s){return s.map(o=>this.transpose(o))}toMidi(){return ftom(this.valueOf())}toNote(){const s=this.toFrequency(),o=Math.log2(s/FrequencyClass.A4);let a=Math.round(12*o)+57;const c=Math.floor(a/12);return c<0&&(a+=-12*c),scaleIndexToNote[a%12]+c.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const s=this._beatsToUnits(1),o=this.valueOf()/s;return Math.floor(o*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(s){return s}_ticksToUnits(s){return 1/(s*60/(this._getBpm()*this._getPPQ()))}_beatsToUnits(s){return 1/super._beatsToUnits(s)}_secondsToUnits(s){return 1/s}static mtof(s){return mtof(s)}static ftom(s){return ftom(s)}}const noteToScaleIndex={cbb:-2,cb:-1,c:0,"c#":1,cx:2,dbb:0,db:1,d:2,"d#":3,dx:4,ebb:2,eb:3,e:4,"e#":5,ex:6,fbb:3,fb:4,f:5,"f#":6,fx:7,gbb:5,gb:6,g:7,"g#":8,gx:9,abb:7,ab:8,a:9,"a#":10,ax:11,bbb:9,bb:10,b:11,"b#":12,bx:13},scaleIndexToNote=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];function Frequency(i,s){return new FrequencyClass(getContext(),i,s)}class TransportTimeClass extends TimeClass{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}function TransportTime(i,s){return new TransportTimeClass(getContext(),i,s)}class ToneWithContext extends Tone{constructor(){super();const s=optionsFromArguments(ToneWithContext.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=s.context}static getDefaults(){return{context:getContext()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(s){return new TimeClass(this.context,s).toSeconds()}toFrequency(s){return new FrequencyClass(this.context,s).toFrequency()}toTicks(s){return new TransportTimeClass(this.context,s).toTicks()}_getPartialProperties(s){const o=this.get();return Object.keys(o).forEach(a=>{isUndef(s[a])&&delete o[a]}),o}get(){const s=getDefaultsFromInstance(this);return Object.keys(s).forEach(o=>{if(Reflect.has(this,o)){const a=this[o];isDefined(a)&&isDefined(a.value)&&isDefined(a.setValueAtTime)?s[o]=a.value:a instanceof ToneWithContext?s[o]=a._getPartialProperties(s[o]):isArray(a)||isNumber(a)||isString(a)||isBoolean(a)?s[o]=a:delete s[o]}}),s}set(s){return Object.keys(s).forEach(o=>{Reflect.has(this,o)&&isDefined(this[o])&&(this[o]&&isDefined(this[o].value)&&isDefined(this[o].setValueAtTime)?this[o].value!==s[o]&&(this[o].value=s[o]):this[o]instanceof ToneWithContext?this[o].set(s[o]):this[o]=s[o])}),this}}class StateTimeline extends Timeline{constructor(s="stopped"){super(),this.name="StateTimeline",this._initial=s,this.setStateAtTime(this._initial,0)}getValueAtTime(s){const o=this.get(s);return o!==null?o.state:this._initial}setStateAtTime(s,o,a){return assertRange(o,0),this.add(Object.assign({},a,{state:s,time:o})),this}getLastState(s,o){const a=this._search(o);for(let c=a;c>=0;c--){const d=this._timeline[c];if(d.state===s)return d}}getNextState(s,o){const a=this._search(o);if(a!==-1)for(let c=a;c<this._timeline.length;c++){const d=this._timeline[c];if(d.state===s)return d}}}class Param extends ToneWithContext{constructor(){super(optionsFromArguments(Param.getDefaults(),arguments,["param","units","convert"])),this.name="Param",this.overridden=!1,this._minOutput=1e-7;const s=optionsFromArguments(Param.getDefaults(),arguments,["param","units","convert"]);for(assert(isDefined(s.param)&&(isAudioParam(s.param)||s.param instanceof Param),"param must be an AudioParam");!isAudioParam(s.param);)s.param=s.param._param;this._swappable=isDefined(s.swappable)?s.swappable:!1,this._swappable?(this.input=this.context.createGain(),this._param=s.param,this.input.connect(this._param)):this._param=this.input=s.param,this._events=new Timeline(1e3),this._initialValue=this._param.defaultValue,this.units=s.units,this.convert=s.convert,this._minValue=s.minValue,this._maxValue=s.maxValue,isDefined(s.value)&&s.value!==this._toType(this._initialValue)&&this.setValueAtTime(s.value,0)}static getDefaults(){return Object.assign(ToneWithContext.getDefaults(),{convert:!0,units:"number"})}get value(){const s=this.now();return this.getValueAtTime(s)}set value(s){this.cancelScheduledValues(this.now()),this.setValueAtTime(s,this.now())}get minValue(){return isDefined(this._minValue)?this._minValue:this.units==="time"||this.units==="frequency"||this.units==="normalRange"||this.units==="positive"||this.units==="transportTime"||this.units==="ticks"||this.units==="bpm"||this.units==="hertz"||this.units==="samples"?0:this.units==="audioRange"?-1:this.units==="decibels"?-1/0:this._param.minValue}get maxValue(){return isDefined(this._maxValue)?this._maxValue:this.units==="normalRange"||this.units==="audioRange"?1:this._param.maxValue}_is(s,o){return this.units===o}_assertRange(s){return isDefined(this.maxValue)&&isDefined(this.minValue)&&assertRange(s,this._fromType(this.minValue),this._fromType(this.maxValue)),s}_fromType(s){return this.convert&&!this.overridden?this._is(s,"time")?this.toSeconds(s):this._is(s,"decibels")?dbToGain(s):this._is(s,"frequency")?this.toFrequency(s):s:this.overridden?0:s}_toType(s){return this.convert&&this.units==="decibels"?gainToDb(s):s}setValueAtTime(s,o){const a=this.toSeconds(o),c=this._fromType(s);return assert(isFinite(c)&&isFinite(a),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(s)}, ${JSON.stringify(o)}`),this._assertRange(c),this.log(this.units,"setValueAtTime",s,a),this._events.add({time:a,type:"setValueAtTime",value:c}),this._param.setValueAtTime(c,a),this}getValueAtTime(s){const o=Math.max(this.toSeconds(s),0),a=this._events.getAfter(o),c=this._events.get(o);let d=this._initialValue;if(c===null)d=this._initialValue;else if(c.type==="setTargetAtTime"&&(a===null||a.type==="setValueAtTime")){const g=this._events.getBefore(c.time);let b;g===null?b=this._initialValue:b=g.value,c.type==="setTargetAtTime"&&(d=this._exponentialApproach(c.time,b,c.value,c.constant,o))}else if(a===null)d=c.value;else if(a.type==="linearRampToValueAtTime"||a.type==="exponentialRampToValueAtTime"){let g=c.value;if(c.type==="setTargetAtTime"){const b=this._events.getBefore(c.time);b===null?g=this._initialValue:g=b.value}a.type==="linearRampToValueAtTime"?d=this._linearInterpolate(c.time,g,a.time,a.value,o):d=this._exponentialInterpolate(c.time,g,a.time,a.value,o)}else d=c.value;return this._toType(d)}setRampPoint(s){s=this.toSeconds(s);let o=this.getValueAtTime(s);return this.cancelAndHoldAtTime(s),this._fromType(o)===0&&(o=this._toType(this._minOutput)),this.setValueAtTime(o,s),this}linearRampToValueAtTime(s,o){const a=this._fromType(s),c=this.toSeconds(o);return assert(isFinite(a)&&isFinite(c),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(s)}, ${JSON.stringify(o)}`),this._assertRange(a),this._events.add({time:c,type:"linearRampToValueAtTime",value:a}),this.log(this.units,"linearRampToValueAtTime",s,c),this._param.linearRampToValueAtTime(a,c),this}exponentialRampToValueAtTime(s,o){let a=this._fromType(s);a=EQ(a,0)?this._minOutput:a,this._assertRange(a);const c=this.toSeconds(o);return assert(isFinite(a)&&isFinite(c),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(s)}, ${JSON.stringify(o)}`),this._events.add({time:c,type:"exponentialRampToValueAtTime",value:a}),this.log(this.units,"exponentialRampToValueAtTime",s,c),this._param.exponentialRampToValueAtTime(a,c),this}exponentialRampTo(s,o,a){return a=this.toSeconds(a),this.setRampPoint(a),this.exponentialRampToValueAtTime(s,a+this.toSeconds(o)),this}linearRampTo(s,o,a){return a=this.toSeconds(a),this.setRampPoint(a),this.linearRampToValueAtTime(s,a+this.toSeconds(o)),this}targetRampTo(s,o,a){return a=this.toSeconds(a),this.setRampPoint(a),this.exponentialApproachValueAtTime(s,a,o),this}exponentialApproachValueAtTime(s,o,a){o=this.toSeconds(o),a=this.toSeconds(a);const c=Math.log(a+1)/Math.log(200);return this.setTargetAtTime(s,o,c),this.cancelAndHoldAtTime(o+a*.9),this.linearRampToValueAtTime(s,o+a),this}setTargetAtTime(s,o,a){const c=this._fromType(s);assert(isFinite(a)&&a>0,"timeConstant must be a number greater than 0");const d=this.toSeconds(o);return this._assertRange(c),assert(isFinite(c)&&isFinite(d),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(s)}, ${JSON.stringify(o)}`),this._events.add({constant:a,time:d,type:"setTargetAtTime",value:c}),this.log(this.units,"setTargetAtTime",s,d,a),this._param.setTargetAtTime(c,d,a),this}setValueCurveAtTime(s,o,a,c=1){a=this.toSeconds(a),o=this.toSeconds(o);const d=this._fromType(s[0])*c;this.setValueAtTime(this._toType(d),o);const g=a/(s.length-1);for(let b=1;b<s.length;b++){const $=this._fromType(s[b])*c;this.linearRampToValueAtTime(this._toType($),o+b*g)}return this}cancelScheduledValues(s){const o=this.toSeconds(s);return assert(isFinite(o),`Invalid argument to cancelScheduledValues: ${JSON.stringify(s)}`),this._events.cancel(o),this._param.cancelScheduledValues(o),this.log(this.units,"cancelScheduledValues",o),this}cancelAndHoldAtTime(s){const o=this.toSeconds(s),a=this._fromType(this.getValueAtTime(o));assert(isFinite(o),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(s)}`),this.log(this.units,"cancelAndHoldAtTime",o,"value="+a);const c=this._events.get(o),d=this._events.getAfter(o);return c&&EQ(c.time,o)?d?(this._param.cancelScheduledValues(d.time),this._events.cancel(d.time)):(this._param.cancelAndHoldAtTime(o),this._events.cancel(o+this.sampleTime)):d&&(this._param.cancelScheduledValues(d.time),this._events.cancel(d.time),d.type==="linearRampToValueAtTime"?this.linearRampToValueAtTime(this._toType(a),o):d.type==="exponentialRampToValueAtTime"&&this.exponentialRampToValueAtTime(this._toType(a),o)),this._events.add({time:o,type:"setValueAtTime",value:a}),this._param.setValueAtTime(a,o),this}rampTo(s,o=.1,a){return this.units==="frequency"||this.units==="bpm"||this.units==="decibels"?this.exponentialRampTo(s,o,a):this.linearRampTo(s,o,a),this}apply(s){const o=this.context.currentTime;s.setValueAtTime(this.getValueAtTime(o),o);const a=this._events.get(o);if(a&&a.type==="setTargetAtTime"){const c=this._events.getAfter(a.time),d=c?c.time:o+2,g=(d-o)/10;for(let b=o;b<d;b+=g)s.linearRampToValueAtTime(this.getValueAtTime(b),b)}return this._events.forEachAfter(this.context.currentTime,c=>{c.type==="cancelScheduledValues"?s.cancelScheduledValues(c.time):c.type==="setTargetAtTime"?s.setTargetAtTime(c.value,c.time,c.constant):s[c.type](c.value,c.time)}),this}setParam(s){assert(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const o=this.input;return o.disconnect(this._param),this.apply(s),this._param=s,o.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(s,o,a,c,d){return a+(o-a)*Math.exp(-(d-s)/c)}_linearInterpolate(s,o,a,c,d){return o+(c-o)*((d-s)/(a-s))}_exponentialInterpolate(s,o,a,c,d){return o*Math.pow(c/o,(d-s)/(a-s))}}class ToneAudioNode extends ToneWithContext{constructor(){super(...arguments),this.name="ToneAudioNode",this._internalChannels=[]}get numberOfInputs(){return isDefined(this.input)?isAudioParam(this.input)||this.input instanceof Param?1:this.input.numberOfInputs:0}get numberOfOutputs(){return isDefined(this.output)?this.output.numberOfOutputs:0}_isAudioNode(s){return isDefined(s)&&(s instanceof ToneAudioNode||isAudioNode(s))}_getInternalNodes(){const s=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&s.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&s.push(this.output),s}_setChannelProperties(s){this._getInternalNodes().forEach(a=>{a.channelCount=s.channelCount,a.channelCountMode=s.channelCountMode,a.channelInterpretation=s.channelInterpretation})}_getChannelProperties(){const s=this._getInternalNodes();assert(s.length>0,"ToneAudioNode does not have any internal nodes");const o=s[0];return{channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(s){const o=this._getChannelProperties();this._setChannelProperties(Object.assign(o,{channelCount:s}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(s){const o=this._getChannelProperties();this._setChannelProperties(Object.assign(o,{channelCountMode:s}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(s){const o=this._getChannelProperties();this._setChannelProperties(Object.assign(o,{channelInterpretation:s}))}connect(s,o=0,a=0){return connect(this,s,o,a),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return warn("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(s,o=0,a=0){return disconnect(this,s,o,a),this}chain(...s){return connectSeries(this,...s),this}fan(...s){return s.forEach(o=>this.connect(o)),this}dispose(){return super.dispose(),isDefined(this.input)&&(this.input instanceof ToneAudioNode?this.input.dispose():isAudioNode(this.input)&&this.input.disconnect()),isDefined(this.output)&&(this.output instanceof ToneAudioNode?this.output.dispose():isAudioNode(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function connectSeries(...i){const s=i.shift();i.reduce((o,a)=>(o instanceof ToneAudioNode?o.connect(a):isAudioNode(o)&&connect(o,a),a),s)}function connect(i,s,o=0,a=0){for(assert(isDefined(i),"Cannot connect from undefined node"),assert(isDefined(s),"Cannot connect to undefined node"),(s instanceof ToneAudioNode||isAudioNode(s))&&assert(s.numberOfInputs>0,"Cannot connect to node with no inputs"),assert(i.numberOfOutputs>0,"Cannot connect from node with no outputs");s instanceof ToneAudioNode||s instanceof Param;)isDefined(s.input)&&(s=s.input);for(;i instanceof ToneAudioNode;)isDefined(i.output)&&(i=i.output);isAudioParam(s)?i.connect(s,o):i.connect(s,o,a)}function disconnect(i,s,o=0,a=0){if(isDefined(s))for(;s instanceof ToneAudioNode;)s=s.input;for(;!isAudioNode(i);)isDefined(i.output)&&(i=i.output);isAudioParam(s)?i.disconnect(s,o):isAudioNode(s)?i.disconnect(s,o,a):i.disconnect()}class Gain extends ToneAudioNode{constructor(){super(optionsFromArguments(Gain.getDefaults(),arguments,["gain","units"])),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode;const s=optionsFromArguments(Gain.getDefaults(),arguments,["gain","units"]);this.gain=new Param({context:this.context,convert:s.convert,param:this._gainNode.gain,units:s.units,value:s.gain,minValue:s.minValue,maxValue:s.maxValue}),readOnly(this,"gain")}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class OneShotSource extends ToneAudioNode{constructor(s){super(s),this.onended=noOp,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new Gain({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(o){const a=this.toSeconds(o);return this._startTime!==-1&&a>=this._startTime&&(this._stopTime===-1||a<=this._stopTime)?"started":"stopped"},this._fadeIn=s.fadeIn,this._fadeOut=s.fadeOut,this._curve=s.curve,this.onended=s.onended}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:noOp})}_startGain(s,o=1){assert(this._startTime===-1,"Source cannot be started more than once");const a=this.toSeconds(this._fadeIn);return this._startTime=s+a,this._startTime=Math.max(this._startTime,this.context.currentTime),a>0?(this._gainNode.gain.setValueAtTime(0,s),this._curve==="linear"?this._gainNode.gain.linearRampToValueAtTime(o,s+a):this._gainNode.gain.exponentialApproachValueAtTime(o,s,a)):this._gainNode.gain.setValueAtTime(o,s),this}stop(s){return this.log("stop",s),this._stopGain(this.toSeconds(s)),this}_stopGain(s){assert(this._startTime!==-1,"'start' must be called before 'stop'"),this.cancelStop();const o=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(s)+o,this._stopTime=Math.max(this._stopTime,this.context.currentTime),o>0?this._curve==="linear"?this._gainNode.gain.linearRampTo(0,o,s):this._gainNode.gain.targetRampTo(0,o,s):(this._gainNode.gain.cancelAndHoldAtTime(s),this._gainNode.gain.setValueAtTime(0,s)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout(()=>{const a=this._curve==="exponential"?o*2:0;this._stopSource(this.now()+a),this._onended()},this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==noOp&&(this.onended(this),this.onended=noOp,!this.context.isOffline)){const s=()=>this.dispose();typeof window.requestIdleCallback<"u"?window.requestIdleCallback(s):setTimeout(s,1e3)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),assert(this._startTime!==-1,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.disconnect(),this}}class ToneConstantSource extends OneShotSource{constructor(){super(optionsFromArguments(ToneConstantSource.getDefaults(),arguments,["offset"])),this.name="ToneConstantSource",this._source=this.context.createConstantSource();const s=optionsFromArguments(ToneConstantSource.getDefaults(),arguments,["offset"]);connect(this._source,this._gainNode),this.offset=new Param({context:this.context,convert:s.convert,param:this._source.offset,units:s.units,value:s.offset,minValue:s.minValue,maxValue:s.maxValue})}static getDefaults(){return Object.assign(OneShotSource.getDefaults(),{convert:!0,offset:1,units:"number"})}start(s){const o=this.toSeconds(s);return this.log("start",o),this._startGain(o),this._source.start(o),this}_stopSource(s){this._source.stop(s)}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class Signal extends ToneAudioNode{constructor(){super(optionsFromArguments(Signal.getDefaults(),arguments,["value","units"])),this.name="Signal",this.override=!0;const s=optionsFromArguments(Signal.getDefaults(),arguments,["value","units"]);this.output=this._constantSource=new ToneConstantSource({context:this.context,convert:s.convert,offset:s.value,units:s.units,minValue:s.minValue,maxValue:s.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{convert:!0,units:"number",value:0})}connect(s,o=0,a=0){return connectSignal(this,s,o,a),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(s,o){return this._param.setValueAtTime(s,o),this}getValueAtTime(s){return this._param.getValueAtTime(s)}setRampPoint(s){return this._param.setRampPoint(s),this}linearRampToValueAtTime(s,o){return this._param.linearRampToValueAtTime(s,o),this}exponentialRampToValueAtTime(s,o){return this._param.exponentialRampToValueAtTime(s,o),this}exponentialRampTo(s,o,a){return this._param.exponentialRampTo(s,o,a),this}linearRampTo(s,o,a){return this._param.linearRampTo(s,o,a),this}targetRampTo(s,o,a){return this._param.targetRampTo(s,o,a),this}exponentialApproachValueAtTime(s,o,a){return this._param.exponentialApproachValueAtTime(s,o,a),this}setTargetAtTime(s,o,a){return this._param.setTargetAtTime(s,o,a),this}setValueCurveAtTime(s,o,a,c){return this._param.setValueCurveAtTime(s,o,a,c),this}cancelScheduledValues(s){return this._param.cancelScheduledValues(s),this}cancelAndHoldAtTime(s){return this._param.cancelAndHoldAtTime(s),this}rampTo(s,o,a){return this._param.rampTo(s,o,a),this}get value(){return this._param.value}set value(s){this._param.value=s}get convert(){return this._param.convert}set convert(s){this._param.convert=s}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(s){this._param.overridden=s}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(s){return this._param.apply(s),this}}function connectSignal(i,s,o,a){(s instanceof Param||isAudioParam(s)||s instanceof Signal&&s.override)&&(s.cancelScheduledValues(0),s.setValueAtTime(0,0),s instanceof Signal&&(s.overridden=!0)),connect(i,s,o,a)}class TickParam extends Param{constructor(){super(optionsFromArguments(TickParam.getDefaults(),arguments,["value"])),this.name="TickParam",this._events=new Timeline(1/0),this._multiplier=1;const s=optionsFromArguments(TickParam.getDefaults(),arguments,["value"]);this._multiplier=s.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(s.value)}),this.setValueAtTime(s.value,0)}static getDefaults(){return Object.assign(Param.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(s,o,a){o=this.toSeconds(o),this.setRampPoint(o);const c=this._fromType(s),d=this._events.get(o),g=Math.round(Math.max(1/a,1));for(let b=0;b<=g;b++){const $=a*b+o,_=this._exponentialApproach(d.time,d.value,c,a,$);this.linearRampToValueAtTime(this._toType(_),$)}return this}setValueAtTime(s,o){const a=this.toSeconds(o);super.setValueAtTime(s,o);const c=this._events.get(a),d=this._events.previousEvent(c),g=this._getTicksUntilEvent(d,a);return c.ticks=Math.max(g,0),this}linearRampToValueAtTime(s,o){const a=this.toSeconds(o);super.linearRampToValueAtTime(s,o);const c=this._events.get(a),d=this._events.previousEvent(c),g=this._getTicksUntilEvent(d,a);return c.ticks=Math.max(g,0),this}exponentialRampToValueAtTime(s,o){o=this.toSeconds(o);const a=this._fromType(s),c=this._events.get(o),d=Math.round(Math.max((o-c.time)*10,1)),g=(o-c.time)/d;for(let b=0;b<=d;b++){const $=g*b+c.time,_=this._exponentialInterpolate(c.time,c.value,o,a,$);this.linearRampToValueAtTime(this._toType(_),$)}return this}_getTicksUntilEvent(s,o){if(s===null)s={ticks:0,time:0,type:"setValueAtTime",value:0};else if(isUndef(s.ticks)){const g=this._events.previousEvent(s);s.ticks=this._getTicksUntilEvent(g,s.time)}const a=this._fromType(this.getValueAtTime(s.time));let c=this._fromType(this.getValueAtTime(o));const d=this._events.get(o);return d&&d.time===o&&d.type==="setValueAtTime"&&(c=this._fromType(this.getValueAtTime(o-this.sampleTime))),.5*(o-s.time)*(a+c)+s.ticks}getTicksAtTime(s){const o=this.toSeconds(s),a=this._events.get(o);return Math.max(this._getTicksUntilEvent(a,o),0)}getDurationOfTicks(s,o){const a=this.toSeconds(o),c=this.getTicksAtTime(o);return this.getTimeOfTick(c+s)-a}getTimeOfTick(s){const o=this._events.get(s,"ticks"),a=this._events.getAfter(s,"ticks");if(o&&o.ticks===s)return o.time;if(o&&a&&a.type==="linearRampToValueAtTime"&&o.value!==a.value){const c=this._fromType(this.getValueAtTime(o.time)),g=(this._fromType(this.getValueAtTime(a.time))-c)/(a.time-o.time),b=Math.sqrt(Math.pow(c,2)-2*g*(o.ticks-s)),$=(-c+b)/g,_=(-c-b)/g;return($>0?$:_)+o.time}else return o?o.value===0?1/0:o.time+(s-o.ticks)/o.value:s/this._initialValue}ticksToTime(s,o){return this.getDurationOfTicks(s,o)}timeToTicks(s,o){const a=this.toSeconds(o),c=this.toSeconds(s),d=this.getTicksAtTime(a);return this.getTicksAtTime(a+c)-d}_fromType(s){return this.units==="bpm"&&this.multiplier?1/(60/s/this.multiplier):super._fromType(s)}_toType(s){return this.units==="bpm"&&this.multiplier?s/this.multiplier*60:super._toType(s)}get multiplier(){return this._multiplier}set multiplier(s){const o=this.value;this._multiplier=s,this.cancelScheduledValues(0),this.setValueAtTime(o,0)}}class TickSignal extends Signal{constructor(){super(optionsFromArguments(TickSignal.getDefaults(),arguments,["value"])),this.name="TickSignal";const s=optionsFromArguments(TickSignal.getDefaults(),arguments,["value"]);this.input=this._param=new TickParam({context:this.context,convert:s.convert,multiplier:s.multiplier,param:this._constantSource.offset,units:s.units,value:s.value})}static getDefaults(){return Object.assign(Signal.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(s,o){return this._param.ticksToTime(s,o)}timeToTicks(s,o){return this._param.timeToTicks(s,o)}getTimeOfTick(s){return this._param.getTimeOfTick(s)}getDurationOfTicks(s,o){return this._param.getDurationOfTicks(s,o)}getTicksAtTime(s){return this._param.getTicksAtTime(s)}get multiplier(){return this._param.multiplier}set multiplier(s){this._param.multiplier=s}dispose(){return super.dispose(),this._param.dispose(),this}}class TickSource extends ToneWithContext{constructor(){super(optionsFromArguments(TickSource.getDefaults(),arguments,["frequency"])),this.name="TickSource",this._state=new StateTimeline,this._tickOffset=new Timeline;const s=optionsFromArguments(TickSource.getDefaults(),arguments,["frequency"]);this.frequency=new TickSignal({context:this.context,units:s.units,value:s.frequency}),readOnly(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},ToneWithContext.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(s,o){const a=this.toSeconds(s);return this._state.getValueAtTime(a)!=="started"&&(this._state.setStateAtTime("started",a),isDefined(o)&&this.setTicksAtTime(o,a)),this}stop(s){const o=this.toSeconds(s);if(this._state.getValueAtTime(o)==="stopped"){const a=this._state.get(o);a&&a.time>0&&(this._tickOffset.cancel(a.time),this._state.cancel(a.time))}return this._state.cancel(o),this._state.setStateAtTime("stopped",o),this.setTicksAtTime(0,o),this}pause(s){const o=this.toSeconds(s);return this._state.getValueAtTime(o)==="started"&&this._state.setStateAtTime("paused",o),this}cancel(s){return s=this.toSeconds(s),this._state.cancel(s),this._tickOffset.cancel(s),this}getTicksAtTime(s){const o=this.toSeconds(s),a=this._state.getLastState("stopped",o),c={state:"paused",time:o};this._state.add(c);let d=a,g=0;return this._state.forEachBetween(a.time,o+this.sampleTime,b=>{let $=d.time;const _=this._tickOffset.get(b.time);_&&_.time>=d.time&&(g=_.ticks,$=_.time),d.state==="started"&&b.state!=="started"&&(g+=this.frequency.getTicksAtTime(b.time)-this.frequency.getTicksAtTime($)),d=b}),this._state.remove(c),g}get ticks(){return this.getTicksAtTime(this.now())}set ticks(s){this.setTicksAtTime(s,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(s){const o=this.now(),a=this.frequency.timeToTicks(s,o);this.setTicksAtTime(a,o)}getSecondsAtTime(s){s=this.toSeconds(s);const o=this._state.getLastState("stopped",s),a={state:"paused",time:s};this._state.add(a);let c=o,d=0;return this._state.forEachBetween(o.time,s+this.sampleTime,g=>{let b=c.time;const $=this._tickOffset.get(g.time);$&&$.time>=c.time&&(d=$.seconds,b=$.time),c.state==="started"&&g.state!=="started"&&(d+=g.time-b),c=g}),this._state.remove(a),d}setTicksAtTime(s,o){return o=this.toSeconds(o),this._tickOffset.cancel(o),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(s,o),ticks:s,time:o}),this}getStateAtTime(s){return s=this.toSeconds(s),this._state.getValueAtTime(s)}getTimeOfTick(s,o=this.now()){const a=this._tickOffset.get(o),c=this._state.get(o),d=Math.max(a.time,c.time),g=this.frequency.getTicksAtTime(d)+s-a.ticks;return this.frequency.getTimeOfTick(g)}forEachTickBetween(s,o,a){let c=this._state.get(s);this._state.forEachBetween(s,o,g=>{c&&c.state==="started"&&g.state!=="started"&&this.forEachTickBetween(Math.max(c.time,s),g.time-this.sampleTime,a),c=g});let d=null;if(c&&c.state==="started"){const g=Math.max(c.time,s),b=this.frequency.getTicksAtTime(g),$=this.frequency.getTicksAtTime(c.time),_=b-$;let _e=Math.ceil(_)-_;_e=EQ(_e,1)?0:_e;let et=this.frequency.getTimeOfTick(b+_e);for(;et<o;){try{a(et,Math.round(this.getTicksAtTime(et)))}catch(rt){d=rt;break}et+=this.frequency.getDurationOfTicks(1,et)}}if(d)throw d;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this.frequency.dispose(),this}}class Clock extends ToneWithContext{constructor(){super(optionsFromArguments(Clock.getDefaults(),arguments,["callback","frequency"])),this.name="Clock",this.callback=noOp,this._lastUpdate=0,this._state=new StateTimeline("stopped"),this._boundLoop=this._loop.bind(this);const s=optionsFromArguments(Clock.getDefaults(),arguments,["callback","frequency"]);this.callback=s.callback,this._tickSource=new TickSource({context:this.context,frequency:s.frequency,units:s.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,readOnly(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(ToneWithContext.getDefaults(),{callback:noOp,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(s,o){assertContextRunning(this.context);const a=this.toSeconds(s);return this.log("start",a),this._state.getValueAtTime(a)!=="started"&&(this._state.setStateAtTime("started",a),this._tickSource.start(a,o),a<this._lastUpdate&&this.emit("start",a,o)),this}stop(s){const o=this.toSeconds(s);return this.log("stop",o),this._state.cancel(o),this._state.setStateAtTime("stopped",o),this._tickSource.stop(o),o<this._lastUpdate&&this.emit("stop",o),this}pause(s){const o=this.toSeconds(s);return this._state.getValueAtTime(o)==="started"&&(this._state.setStateAtTime("paused",o),this._tickSource.pause(o),o<this._lastUpdate&&this.emit("pause",o)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(s){this._tickSource.ticks=s}get seconds(){return this._tickSource.seconds}set seconds(s){this._tickSource.seconds=s}getSecondsAtTime(s){return this._tickSource.getSecondsAtTime(s)}setTicksAtTime(s,o){return this._tickSource.setTicksAtTime(s,o),this}getTimeOfTick(s,o=this.now()){return this._tickSource.getTimeOfTick(s,o)}getTicksAtTime(s){return this._tickSource.getTicksAtTime(s)}nextTickTime(s,o){const a=this.toSeconds(o),c=this.getTicksAtTime(a);return this._tickSource.getTimeOfTick(c+s,a)}_loop(){const s=this._lastUpdate,o=this.now();this._lastUpdate=o,this.log("loop",s,o),s!==o&&(this._state.forEachBetween(s,o,a=>{switch(a.state){case"started":const c=this._tickSource.getTicksAtTime(a.time);this.emit("start",a.time,c);break;case"stopped":a.time!==0&&this.emit("stop",a.time);break;case"paused":this.emit("pause",a.time);break}}),this._tickSource.forEachTickBetween(s,o,(a,c)=>{this.callback(a,c)}))}getStateAtTime(s){const o=this.toSeconds(s);return this._state.getValueAtTime(o)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}Emitter.mixin(Clock);class Delay extends ToneAudioNode{constructor(){super(optionsFromArguments(Delay.getDefaults(),arguments,["delayTime","maxDelay"])),this.name="Delay";const s=optionsFromArguments(Delay.getDefaults(),arguments,["delayTime","maxDelay"]),o=this.toSeconds(s.maxDelay);this._maxDelay=Math.max(o,this.toSeconds(s.delayTime)),this._delayNode=this.input=this.output=this.context.createDelay(o),this.delayTime=new Param({context:this.context,param:this._delayNode.delayTime,units:"time",value:s.delayTime,minValue:0,maxValue:this.maxDelay}),readOnly(this,"delayTime")}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{delayTime:0,maxDelay:1})}get maxDelay(){return this._maxDelay}dispose(){return super.dispose(),this._delayNode.disconnect(),this.delayTime.dispose(),this}}function Offline(i,s,o=2,a=getContext().sampleRate){return __awaiter(this,void 0,void 0,function*(){const c=getContext(),d=new OfflineContext(o,s,a);setContext(d),yield i(d);const g=d.render();setContext(c);const b=yield g;return new ToneAudioBuffer(b)})}class ToneAudioBuffers extends Tone{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const s=optionsFromArguments(ToneAudioBuffers.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=s.baseUrl,Object.keys(s.urls).forEach(o=>{this._loadingCount++;const a=s.urls[o];this.add(o,a,this._bufferLoaded.bind(this,s.onload),s.onerror)})}static getDefaults(){return{baseUrl:"",onerror:noOp,onload:noOp,urls:{}}}has(s){return this._buffers.has(s.toString())}get(s){return assert(this.has(s),`ToneAudioBuffers has no buffer named: ${s}`),this._buffers.get(s.toString())}_bufferLoaded(s){this._loadingCount--,this._loadingCount===0&&s&&s()}get loaded(){return Array.from(this._buffers).every(([s,o])=>o.loaded)}add(s,o,a=noOp,c=noOp){return isString(o)?this._buffers.set(s.toString(),new ToneAudioBuffer(this.baseUrl+o,a,c)):this._buffers.set(s.toString(),new ToneAudioBuffer(o,a,c)),this}dispose(){return super.dispose(),this._buffers.forEach(s=>s.dispose()),this._buffers.clear(),this}}class MidiClass extends FrequencyClass{constructor(){super(...arguments),this.name="MidiClass",this.defaultUnits="midi"}_frequencyToUnits(s){return ftom(super._frequencyToUnits(s))}_ticksToUnits(s){return ftom(super._ticksToUnits(s))}_beatsToUnits(s){return ftom(super._beatsToUnits(s))}_secondsToUnits(s){return ftom(super._secondsToUnits(s))}toMidi(){return this.valueOf()}toFrequency(){return mtof(this.toMidi())}transpose(s){return new MidiClass(this.context,this.toMidi()+s)}}function Midi(i,s){return new MidiClass(getContext(),i,s)}class TicksClass extends TransportTimeClass{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(s){return this._getPPQ()*s}_secondsToUnits(s){return Math.floor(s/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(s){return s}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}function Ticks(i,s){return new TicksClass(getContext(),i,s)}let Draw$1=class extends ToneWithContext{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new Timeline,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(s,o){return this._events.add({callback:s,time:this.toSeconds(o)}),this._events.length===1&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(s){return this._events.cancel(this.toSeconds(s)),this}_drawLoop(){const s=this.context.currentTime;for(;this._events.length&&this._events.peek().time-this.anticipation<=s;){const o=this._events.shift();o&&s-o.time<=this.expiration&&o.callback()}this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}};onContextInit(i=>{i.draw=new Draw$1({context:i})});onContextClose(i=>{i.draw.dispose()});class IntervalTimeline extends Tone{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(s){assert(isDefined(s.time),"Events must have a time property"),assert(isDefined(s.duration),"Events must have a duration parameter"),s.time=s.time.valueOf();let o=new IntervalNode(s.time,s.time+s.duration,s);for(this._root===null?this._root=o:this._root.insert(o),this._length++;o!==null;)o.updateHeight(),o.updateMax(),this._rebalance(o),o=o.parent;return this}remove(s){if(this._root!==null){const o=[];this._root.search(s.time,o);for(const a of o)if(a.event===s){this._removeNode(a),this._length--;break}}return this}get length(){return this._length}cancel(s){return this.forEachFrom(s,o=>this.remove(o)),this}_setRoot(s){this._root=s,this._root!==null&&(this._root.parent=null)}_replaceNodeInParent(s,o){s.parent!==null?(s.isLeftChild()?s.parent.left=o:s.parent.right=o,this._rebalance(s.parent)):this._setRoot(o)}_removeNode(s){if(s.left===null&&s.right===null)this._replaceNodeInParent(s,null);else if(s.right===null)this._replaceNodeInParent(s,s.left);else if(s.left===null)this._replaceNodeInParent(s,s.right);else{const o=s.getBalance();let a,c=null;if(o>0)if(s.left.right===null)a=s.left,a.right=s.right,c=a;else{for(a=s.left.right;a.right!==null;)a=a.right;a.parent&&(a.parent.right=a.left,c=a.parent,a.left=s.left,a.right=s.right)}else if(s.right.left===null)a=s.right,a.left=s.left,c=a;else{for(a=s.right.left;a.left!==null;)a=a.left;a.parent&&(a.parent.left=a.right,c=a.parent,a.left=s.left,a.right=s.right)}s.parent!==null?s.isLeftChild()?s.parent.left=a:s.parent.right=a:this._setRoot(a),c&&this._rebalance(c)}s.dispose()}_rotateLeft(s){const o=s.parent,a=s.isLeftChild(),c=s.right;c&&(s.right=c.left,c.left=s),o!==null?a?o.left=c:o.right=c:this._setRoot(c)}_rotateRight(s){const o=s.parent,a=s.isLeftChild(),c=s.left;c&&(s.left=c.right,c.right=s),o!==null?a?o.left=c:o.right=c:this._setRoot(c)}_rebalance(s){const o=s.getBalance();o>1&&s.left?s.left.getBalance()<0?this._rotateLeft(s.left):this._rotateRight(s):o<-1&&s.right&&(s.right.getBalance()>0?this._rotateRight(s.right):this._rotateLeft(s))}get(s){if(this._root!==null){const o=[];if(this._root.search(s,o),o.length>0){let a=o[0];for(let c=1;c<o.length;c++)o[c].low>a.low&&(a=o[c]);return a.event}}return null}forEach(s){if(this._root!==null){const o=[];this._root.traverse(a=>o.push(a)),o.forEach(a=>{a.event&&s(a.event)})}return this}forEachAtTime(s,o){if(this._root!==null){const a=[];this._root.search(s,a),a.forEach(c=>{c.event&&o(c.event)})}return this}forEachFrom(s,o){if(this._root!==null){const a=[];this._root.searchAfter(s,a),a.forEach(c=>{c.event&&o(c.event)})}return this}dispose(){return super.dispose(),this._root!==null&&this._root.traverse(s=>s.dispose()),this._root=null,this}}class IntervalNode{constructor(s,o,a){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=a,this.low=s,this.high=o,this.max=this.high}insert(s){s.low<=this.low?this.left===null?this.left=s:this.left.insert(s):this.right===null?this.right=s:this.right.insert(s)}search(s,o){s>this.max||(this.left!==null&&this.left.search(s,o),this.low<=s&&this.high>s&&o.push(this),!(this.low>s)&&this.right!==null&&this.right.search(s,o))}searchAfter(s,o){this.low>=s&&(o.push(this),this.left!==null&&this.left.searchAfter(s,o)),this.right!==null&&this.right.searchAfter(s,o)}traverse(s){s(this),this.left!==null&&this.left.traverse(s),this.right!==null&&this.right.traverse(s)}updateHeight(){this.left!==null&&this.right!==null?this.height=Math.max(this.left.height,this.right.height)+1:this.right!==null?this.height=this.right.height+1:this.left!==null?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,this.left!==null&&(this.max=Math.max(this.max,this.left.max)),this.right!==null&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let s=0;return this.left!==null&&this.right!==null?s=this.left.height-this.right.height:this.left!==null?s=this.left.height+1:this.right!==null&&(s=-(this.right.height+1)),s}isLeftChild(){return this.parent!==null&&this.parent.left===this}get left(){return this._left}set left(s){this._left=s,s!==null&&(s.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(s){this._right=s,s!==null&&(s.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}const Units=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));class Volume extends ToneAudioNode{constructor(){super(optionsFromArguments(Volume.getDefaults(),arguments,["volume"])),this.name="Volume";const s=optionsFromArguments(Volume.getDefaults(),arguments,["volume"]);this.input=this.output=new Gain({context:this.context,gain:s.volume,units:"decibels"}),this.volume=this.output.gain,readOnly(this,"volume"),this._unmutedVolume=s.volume,this.mute=s.mute}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(s){!this.mute&&s?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!s&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}let Destination$1=class zp extends ToneAudioNode{constructor(){super(optionsFromArguments(zp.getDefaults(),arguments)),this.name="Destination",this.input=new Volume({context:this.context}),this.output=new Gain({context:this.context}),this.volume=this.input.volume;const s=optionsFromArguments(zp.getDefaults(),arguments);connectSeries(this.input,this.output,this.context.rawContext.destination),this.mute=s.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(s){this.input.mute=s}chain(...s){return this.input.disconnect(),s.unshift(this.input),s.push(this.output),connectSeries(...s),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}};onContextInit(i=>{i.destination=new Destination$1({context:i})});onContextClose(i=>{i.destination.dispose()});class TimelineValue extends Tone{constructor(s){super(),this.name="TimelineValue",this._timeline=new Timeline({memory:10}),this._initialValue=s}set(s,o){return this._timeline.add({value:s,time:o}),this}get(s){const o=this._timeline.get(s);return o?o.value:this._initialValue}}class TransportEvent{constructor(s,o){this.id=TransportEvent._eventId++;const a=Object.assign(TransportEvent.getDefaults(),o);this.transport=s,this.callback=a.callback,this._once=a.once,this.time=a.time}static getDefaults(){return{callback:noOp,once:!1,time:0}}invoke(s){this.callback&&(this.callback(s),this._once&&this.transport.clear(this.id))}dispose(){return this.callback=void 0,this}}TransportEvent._eventId=0;class TransportRepeatEvent extends TransportEvent{constructor(s,o){super(s,o),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const a=Object.assign(TransportRepeatEvent.getDefaults(),o);this.duration=new TicksClass(s.context,a.duration).valueOf(),this._interval=new TicksClass(s.context,a.interval).valueOf(),this._nextTick=a.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},TransportEvent.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(s){this._createEvents(s),super.invoke(s)}_createEvents(s){const o=this.transport.getTicksAtTime(s);o>=this.time&&o>=this._nextTick&&this._nextTick+this._interval<this.time+this.duration&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new TicksClass(this.context,this._nextTick).toSeconds()))}_restart(s){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.time;const o=this.transport.getTicksAtTime(s);o>this.time&&(this._nextTick=this.time+Math.ceil((o-this.time)/this._interval)*this._interval),this._currentId=this.transport.scheduleOnce(this.invoke.bind(this),new TicksClass(this.context,this._nextTick).toSeconds()),this._nextTick+=this._interval,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new TicksClass(this.context,this._nextTick).toSeconds())}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this}}let Transport$1=class Vp extends ToneWithContext{constructor(){super(optionsFromArguments(Vp.getDefaults(),arguments)),this.name="Transport",this._loop=new TimelineValue(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new Timeline,this._repeatedEvents=new IntervalTimeline,this._syncedSignals=[],this._swingAmount=0;const s=optionsFromArguments(Vp.getDefaults(),arguments);this._ppq=s.ppq,this._clock=new Clock({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=s.ppq,this.bpm.setValueAtTime(s.bpm,0),readOnly(this,"bpm"),this._timeSignature=s.timeSignature,this._swingTicks=s.ppq/2}static getDefaults(){return Object.assign(ToneWithContext.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(s,o){if(this._loop.get(s)&&o>=this._loopEnd&&(this.emit("loopEnd",s),this._clock.setTicksAtTime(this._loopStart,s),o=this._loopStart,this.emit("loopStart",s,this._clock.getSecondsAtTime(s)),this.emit("loop",s)),this._swingAmount>0&&o%this._ppq!==0&&o%(this._swingTicks*2)!==0){const a=o%(this._swingTicks*2)/(this._swingTicks*2),c=Math.sin(a*Math.PI)*this._swingAmount;s+=new TicksClass(this.context,this._swingTicks*2/3).toSeconds()*c}this._timeline.forEachAtTime(o,a=>a.invoke(s))}schedule(s,o){const a=new TransportEvent(this,{callback:s,time:new TransportTimeClass(this.context,o).toTicks()});return this._addEvent(a,this._timeline)}scheduleRepeat(s,o,a,c=1/0){const d=new TransportRepeatEvent(this,{callback:s,duration:new TimeClass(this.context,c).toTicks(),interval:new TimeClass(this.context,o).toTicks(),time:new TransportTimeClass(this.context,a).toTicks()});return this._addEvent(d,this._repeatedEvents)}scheduleOnce(s,o){const a=new TransportEvent(this,{callback:s,once:!0,time:new TransportTimeClass(this.context,o).toTicks()});return this._addEvent(a,this._timeline)}clear(s){if(this._scheduledEvents.hasOwnProperty(s)){const o=this._scheduledEvents[s.toString()];o.timeline.remove(o.event),o.event.dispose(),delete this._scheduledEvents[s.toString()]}return this}_addEvent(s,o){return this._scheduledEvents[s.id.toString()]={event:s,timeline:o},o.add(s),s.id}cancel(s=0){const o=this.toTicks(s);return this._timeline.forEachFrom(o,a=>this.clear(a.id)),this._repeatedEvents.forEachFrom(o,a=>this.clear(a.id)),this}_bindClockEvents(){this._clock.on("start",(s,o)=>{o=new TicksClass(this.context,o).toSeconds(),this.emit("start",s,o)}),this._clock.on("stop",s=>{this.emit("stop",s)}),this._clock.on("pause",s=>{this.emit("pause",s)})}get state(){return this._clock.getStateAtTime(this.now())}start(s,o){let a;return isDefined(o)&&(a=this.toTicks(o)),this._clock.start(s,a),this}stop(s){return this._clock.stop(s),this}pause(s){return this._clock.pause(s),this}toggle(s){return s=this.toSeconds(s),this._clock.getStateAtTime(s)!=="started"?this.start(s):this.stop(s),this}get timeSignature(){return this._timeSignature}set timeSignature(s){isArray(s)&&(s=s[0]/s[1]*4),this._timeSignature=s}get loopStart(){return new TimeClass(this.context,this._loopStart,"i").toSeconds()}set loopStart(s){this._loopStart=this.toTicks(s)}get loopEnd(){return new TimeClass(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(s){this._loopEnd=this.toTicks(s)}get loop(){return this._loop.get(this.now())}set loop(s){this._loop.set(s,this.now())}setLoopPoints(s,o){return this.loopStart=s,this.loopEnd=o,this}get swing(){return this._swingAmount}set swing(s){this._swingAmount=s}get swingSubdivision(){return new TicksClass(this.context,this._swingTicks).toNotation()}set swingSubdivision(s){this._swingTicks=this.toTicks(s)}get position(){const s=this.now(),o=this._clock.getTicksAtTime(s);return new TicksClass(this.context,o).toBarsBeatsSixteenths()}set position(s){const o=this.toTicks(s);this.ticks=o}get seconds(){return this._clock.seconds}set seconds(s){const o=this.now(),a=this._clock.frequency.timeToTicks(s,o);this.ticks=a}get progress(){if(this.loop){const s=this.now();return(this._clock.getTicksAtTime(s)-this._loopStart)/(this._loopEnd-this._loopStart)}else return 0}get ticks(){return this._clock.ticks}set ticks(s){if(this._clock.ticks!==s){const o=this.now();if(this.state==="started"){const a=this._clock.getTicksAtTime(o),c=this._clock.frequency.getDurationOfTicks(Math.ceil(a)-a,o),d=o+c;this.emit("stop",d),this._clock.setTicksAtTime(s,d),this.emit("start",d,this._clock.getSecondsAtTime(d))}else this._clock.setTicksAtTime(s,o)}}getTicksAtTime(s){return Math.round(this._clock.getTicksAtTime(s))}getSecondsAtTime(s){return this._clock.getSecondsAtTime(s)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(s){this._clock.frequency.multiplier=s}nextSubdivision(s){if(s=this.toTicks(s),this.state!=="started")return 0;{const o=this.now(),a=this.getTicksAtTime(o),c=s-a%s;return this._clock.nextTickTime(c,o)}}syncSignal(s,o){if(!o){const c=this.now();if(s.getValueAtTime(c)!==0){const g=1/(60/this.bpm.getValueAtTime(c)/this.PPQ);o=s.getValueAtTime(c)/g}else o=0}const a=new Gain(o);return this.bpm.connect(a),a.connect(s._param),this._syncedSignals.push({initial:s.value,ratio:a,signal:s}),s.value=0,this}unsyncSignal(s){for(let o=this._syncedSignals.length-1;o>=0;o--){const a=this._syncedSignals[o];a.signal===s&&(a.ratio.dispose(),a.signal.value=a.initial,this._syncedSignals.splice(o,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),writable(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}};Emitter.mixin(Transport$1);onContextInit(i=>{i.transport=new Transport$1({context:i})});onContextClose(i=>{i.transport.dispose()});class Source extends ToneAudioNode{constructor(s){super(s),this.input=void 0,this._state=new StateTimeline("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=noOp,this._syncedStop=noOp,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new Volume({context:this.context,mute:s.mute,volume:s.volume}),this.volume=this._volume.volume,readOnly(this,"volume"),this.onstop=s.onstop}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{mute:!1,onstop:noOp,volume:0})}get state(){return this._synced?this.context.transport.state==="started"?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(s){this._volume.mute=s}_clampToCurrentTime(s){return this._synced?s:Math.max(s,this.context.currentTime)}start(s,o,a){let c=isUndef(s)&&this._synced?this.context.transport.seconds:this.toSeconds(s);if(c=this._clampToCurrentTime(c),!this._synced&&this._state.getValueAtTime(c)==="started")assert(GT(c,this._state.get(c).time),"Start time must be strictly greater than previous start time"),this._state.cancel(c),this._state.setStateAtTime("started",c),this.log("restart",c),this.restart(c,o,a);else if(this.log("start",c),this._state.setStateAtTime("started",c),this._synced){const d=this._state.get(c);d&&(d.offset=this.toSeconds(defaultArg(o,0)),d.duration=a?this.toSeconds(a):void 0);const g=this.context.transport.schedule(b=>{this._start(b,o,a)},c);this._scheduled.push(g),this.context.transport.state==="started"&&this.context.transport.getSecondsAtTime(this.immediate())>c&&this._syncedStart(this.now(),this.context.transport.seconds)}else assertContextRunning(this.context),this._start(c,o,a);return this}stop(s){let o=isUndef(s)&&this._synced?this.context.transport.seconds:this.toSeconds(s);if(o=this._clampToCurrentTime(o),this._state.getValueAtTime(o)==="started"||isDefined(this._state.getNextState("started",o))){if(this.log("stop",o),!this._synced)this._stop(o);else{const a=this.context.transport.schedule(this._stop.bind(this),o);this._scheduled.push(a)}this._state.cancel(o),this._state.setStateAtTime("stopped",o)}return this}restart(s,o,a){return s=this.toSeconds(s),this._state.getValueAtTime(s)==="started"&&(this._state.cancel(s),this._restart(s,o,a)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(s,o)=>{if(o>0){const a=this._state.get(o);if(a&&a.state==="started"&&a.time!==o){const c=o-this.toSeconds(a.time);let d;a.duration&&(d=this.toSeconds(a.duration)-c),this._start(s,this.toSeconds(a.offset)+c,d)}}},this._syncedStop=s=>{const o=this.context.transport.getSecondsAtTime(Math.max(s-this.sampleTime,0));this._state.getValueAtTime(o)==="started"&&this._stop(s)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach(s=>this.context.transport.clear(s)),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=noOp,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class ToneBufferSource extends OneShotSource{constructor(){super(optionsFromArguments(ToneBufferSource.getDefaults(),arguments,["url","onload"])),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1;const s=optionsFromArguments(ToneBufferSource.getDefaults(),arguments,["url","onload"]);connect(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new Param({context:this.context,param:this._source.playbackRate,units:"positive",value:s.playbackRate}),this.loop=s.loop,this.loopStart=s.loopStart,this.loopEnd=s.loopEnd,this._buffer=new ToneAudioBuffer(s.url,s.onload,s.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(OneShotSource.getDefaults(),{url:new ToneAudioBuffer,loop:!1,loopEnd:0,loopStart:0,onload:noOp,onerror:noOp,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(s){this._fadeIn=s}get fadeOut(){return this._fadeOut}set fadeOut(s){this._fadeOut=s}get curve(){return this._curve}set curve(s){this._curve=s}start(s,o,a,c=1){assert(this.buffer.loaded,"buffer is either not set or not loaded");const d=this.toSeconds(s);this._startGain(d,c),this.loop?o=defaultArg(o,this.loopStart):o=defaultArg(o,0);let g=Math.max(this.toSeconds(o),0);if(this.loop){const b=this.toSeconds(this.loopEnd)||this.buffer.duration,$=this.toSeconds(this.loopStart),_=b-$;GTE(g,b)&&(g=(g-$)%_+$),EQ(g,this.buffer.duration)&&(g=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,LT(g,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(d,g)),isDefined(a)){let b=this.toSeconds(a);b=Math.max(b,0),this.stop(d+b)}return this}_stopSource(s){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(s)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(s){this._source.loopStart=this.toSeconds(s)}get loopEnd(){return this._source.loopEnd}set loopEnd(s){this._source.loopEnd=this.toSeconds(s)}get buffer(){return this._buffer}set buffer(s){this._buffer.set(s)}get loop(){return this._source.loop}set loop(s){this._source.loop=s,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}class Noise extends Source{constructor(){super(optionsFromArguments(Noise.getDefaults(),arguments,["type"])),this.name="Noise",this._source=null;const s=optionsFromArguments(Noise.getDefaults(),arguments,["type"]);this._playbackRate=s.playbackRate,this.type=s.type,this._fadeIn=s.fadeIn,this._fadeOut=s.fadeOut}static getDefaults(){return Object.assign(Source.getDefaults(),{fadeIn:0,fadeOut:0,playbackRate:1,type:"white"})}get type(){return this._type}set type(s){if(assert(s in _noiseBuffers,"Noise: invalid type: "+s),this._type!==s&&(this._type=s,this.state==="started")){const o=this.now();this._stop(o),this._start(o)}}get playbackRate(){return this._playbackRate}set playbackRate(s){this._playbackRate=s,this._source&&(this._source.playbackRate.value=s)}_start(s){const o=_noiseBuffers[this._type];this._source=new ToneBufferSource({url:o,context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,loop:!0,onended:()=>this.onstop(this),playbackRate:this._playbackRate}).connect(this.output),this._source.start(this.toSeconds(s),Math.random()*(o.duration-.001))}_stop(s){this._source&&(this._source.stop(this.toSeconds(s)),this._source=null)}get fadeIn(){return this._fadeIn}set fadeIn(s){this._fadeIn=s,this._source&&(this._source.fadeIn=this._fadeIn)}get fadeOut(){return this._fadeOut}set fadeOut(s){this._fadeOut=s,this._source&&(this._source.fadeOut=this._fadeOut)}_restart(s){this._stop(s),this._start(s)}dispose(){return super.dispose(),this._source&&this._source.disconnect(),this}}const BUFFER_LENGTH=44100*5,NUM_CHANNELS=2,_noiseCache={brown:null,pink:null,white:null},_noiseBuffers={get brown(){if(!_noiseCache.brown){const i=[];for(let s=0;s<NUM_CHANNELS;s++){const o=new Float32Array(BUFFER_LENGTH);i[s]=o;let a=0;for(let c=0;c<BUFFER_LENGTH;c++){const d=Math.random()*2-1;o[c]=(a+.02*d)/1.02,a=o[c],o[c]*=3.5}}_noiseCache.brown=new ToneAudioBuffer().fromArray(i)}return _noiseCache.brown},get pink(){if(!_noiseCache.pink){const i=[];for(let s=0;s<NUM_CHANNELS;s++){const o=new Float32Array(BUFFER_LENGTH);i[s]=o;let a,c,d,g,b,$,_;a=c=d=g=b=$=_=0;for(let _e=0;_e<BUFFER_LENGTH;_e++){const et=Math.random()*2-1;a=.99886*a+et*.0555179,c=.99332*c+et*.0750759,d=.969*d+et*.153852,g=.8665*g+et*.3104856,b=.55*b+et*.5329522,$=-.7616*$-et*.016898,o[_e]=a+c+d+g+b+$+_+et*.5362,o[_e]*=.11,_=et*.115926}}_noiseCache.pink=new ToneAudioBuffer().fromArray(i)}return _noiseCache.pink},get white(){if(!_noiseCache.white){const i=[];for(let s=0;s<NUM_CHANNELS;s++){const o=new Float32Array(BUFFER_LENGTH);i[s]=o;for(let a=0;a<BUFFER_LENGTH;a++)o[a]=Math.random()*2-1}_noiseCache.white=new ToneAudioBuffer().fromArray(i)}return _noiseCache.white}};class UserMedia extends ToneAudioNode{constructor(){super(optionsFromArguments(UserMedia.getDefaults(),arguments,["volume"])),this.name="UserMedia";const s=optionsFromArguments(UserMedia.getDefaults(),arguments,["volume"]);this._volume=this.output=new Volume({context:this.context,volume:s.volume}),this.volume=this._volume.volume,readOnly(this,"volume"),this.mute=s.mute}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{mute:!1,volume:0})}open(s){return __awaiter(this,void 0,void 0,function*(){assert(UserMedia.supported,"UserMedia is not supported"),this.state==="started"&&this.close();const o=yield UserMedia.enumerateDevices();isNumber(s)?this._device=o[s]:(this._device=o.find(d=>d.label===s||d.deviceId===s),!this._device&&o.length>0&&(this._device=o[0]),assert(isDefined(this._device),`No matching device ${s}`));const a={audio:{echoCancellation:!1,sampleRate:this.context.sampleRate,noiseSuppression:!1,mozNoiseSuppression:!1}};this._device&&(a.audio.deviceId=this._device.deviceId);const c=yield navigator.mediaDevices.getUserMedia(a);if(!this._stream){this._stream=c;const d=this.context.createMediaStreamSource(c);connect(d,this.output),this._mediaStream=d}return this})}close(){return this._stream&&this._mediaStream&&(this._stream.getAudioTracks().forEach(s=>{s.stop()}),this._stream=void 0,this._mediaStream.disconnect(),this._mediaStream=void 0),this._device=void 0,this}static enumerateDevices(){return __awaiter(this,void 0,void 0,function*(){return(yield navigator.mediaDevices.enumerateDevices()).filter(o=>o.kind==="audioinput")})}get state(){return this._stream&&this._stream.active?"started":"stopped"}get deviceId(){if(this._device)return this._device.deviceId}get groupId(){if(this._device)return this._device.groupId}get label(){if(this._device)return this._device.label}get mute(){return this._volume.mute}set mute(s){this._volume.mute=s}dispose(){return super.dispose(),this.close(),this._volume.dispose(),this.volume.dispose(),this}static get supported(){return isDefined(navigator.mediaDevices)&&isDefined(navigator.mediaDevices.getUserMedia)}}function generateWaveform(i,s){return __awaiter(this,void 0,void 0,function*(){const o=s/i.context.sampleRate,a=new OfflineContext(1,o,i.context.sampleRate);return new i.constructor(Object.assign(i.get(),{frequency:2/o,detune:0,context:a})).toDestination().start(0),(yield a.render()).getChannelData(0)})}class ToneOscillatorNode extends OneShotSource{constructor(){super(optionsFromArguments(ToneOscillatorNode.getDefaults(),arguments,["frequency","type"])),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator];const s=optionsFromArguments(ToneOscillatorNode.getDefaults(),arguments,["frequency","type"]);connect(this._oscillator,this._gainNode),this.type=s.type,this.frequency=new Param({context:this.context,param:this._oscillator.frequency,units:"frequency",value:s.frequency}),this.detune=new Param({context:this.context,param:this._oscillator.detune,units:"cents",value:s.detune}),readOnly(this,["frequency","detune"])}static getDefaults(){return Object.assign(OneShotSource.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(s){const o=this.toSeconds(s);return this.log("start",o),this._startGain(o),this._oscillator.start(o),this}_stopSource(s){this._oscillator.stop(s)}setPeriodicWave(s){return this._oscillator.setPeriodicWave(s),this}get type(){return this._oscillator.type}set type(s){this._oscillator.type=s}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class Oscillator extends Source{constructor(){super(optionsFromArguments(Oscillator.getDefaults(),arguments,["frequency","type"])),this.name="Oscillator",this._oscillator=null;const s=optionsFromArguments(Oscillator.getDefaults(),arguments,["frequency","type"]);this.frequency=new Signal({context:this.context,units:"frequency",value:s.frequency}),readOnly(this,"frequency"),this.detune=new Signal({context:this.context,units:"cents",value:s.detune}),readOnly(this,"detune"),this._partials=s.partials,this._partialCount=s.partialCount,this._type=s.type,s.partialCount&&s.type!=="custom"&&(this._type=this.baseType+s.partialCount.toString()),this.phase=s.phase}static getDefaults(){return Object.assign(Source.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(s){const o=this.toSeconds(s),a=new ToneOscillatorNode({context:this.context,onended:()=>this.onstop(this)});this._oscillator=a,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(o)}_stop(s){const o=this.toSeconds(s);this._oscillator&&this._oscillator.stop(o)}_restart(s){const o=this.toSeconds(s);return this.log("restart",o),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(o),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if(this._type==="custom")return Oscillator._periodicWaveCache.find(o=>o.phase===this._phase&&deepEquals(o.partials,this._partials));{const s=Oscillator._periodicWaveCache.find(o=>o.type===this._type&&o.phase===this._phase);return this._partialCount=s?s.partialCount:this._partialCount,s}}get type(){return this._type}set type(s){this._type=s;const o=["sine","square","sawtooth","triangle"].indexOf(s)!==-1;if(this._phase===0&&o)this._wave=void 0,this._partialCount=0,this._oscillator!==null&&(this._oscillator.type=s);else{const a=this._getCachedPeriodicWave();if(isDefined(a)){const{partials:c,wave:d}=a;this._wave=d,this._partials=c,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave)}else{const[c,d]=this._getRealImaginary(s,this._phase),g=this.context.createPeriodicWave(c,d);this._wave=g,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave),Oscillator._periodicWaveCache.push({imag:d,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:c,type:this._type,wave:this._wave}),Oscillator._periodicWaveCache.length>100&&Oscillator._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(s){this.partialCount&&this._type!=="custom"&&s!=="custom"?this.type=s+this.partialCount:this.type=s}get partialCount(){return this._partialCount}set partialCount(s){assertRange(s,0);let o=this._type;const a=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(a&&(o=a[1]),this._type!=="custom")s===0?this.type=o:this.type=o+s.toString();else{const c=new Float32Array(s);this._partials.forEach((d,g)=>c[g]=d),this._partials=Array.from(c),this.type=this._type}}_getRealImaginary(s,o){let c=2048;const d=new Float32Array(c),g=new Float32Array(c);let b=1;if(s==="custom"){if(b=this._partials.length+1,this._partialCount=this._partials.length,c=b,this._partials.length===0)return[d,g]}else{const $=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(s);$?(b=parseInt($[2],10)+1,this._partialCount=parseInt($[2],10),s=$[1],b=Math.max(b,2),c=b):this._partialCount=0,this._partials=[]}for(let $=1;$<c;++$){const _=2/($*Math.PI);let _e;switch(s){case"sine":_e=$<=b?1:0,this._partials[$-1]=_e;break;case"square":_e=$&1?2*_:0,this._partials[$-1]=_e;break;case"sawtooth":_e=_*($&1?1:-1),this._partials[$-1]=_e;break;case"triangle":$&1?_e=2*(_*_)*($-1>>1&1?-1:1):_e=0,this._partials[$-1]=_e;break;case"custom":_e=this._partials[$-1];break;default:throw new TypeError("Oscillator: invalid type: "+s)}_e!==0?(d[$]=-_e*Math.sin(o*$),g[$]=_e*Math.cos(o*$)):(d[$]=0,g[$]=0)}return[d,g]}_inverseFFT(s,o,a){let c=0;const d=s.length;for(let g=0;g<d;g++)c+=s[g]*Math.cos(g*a)+o[g]*Math.sin(g*a);return c}getInitialValue(){const[s,o]=this._getRealImaginary(this._type,0);let a=0;const c=Math.PI*2,d=32;for(let g=0;g<d;g++)a=Math.max(this._inverseFFT(s,o,g/d*c),a);return clamp(-this._inverseFFT(s,o,this._phase)/a,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(s){this._partials=s,this._partialCount=this._partials.length,s.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(s){this._phase=s*Math.PI/180,this.type=this._type}asArray(s=1024){return __awaiter(this,void 0,void 0,function*(){return generateWaveform(this,s)})}dispose(){return super.dispose(),this._oscillator!==null&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}Oscillator._periodicWaveCache=[];class SignalOperator extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(SignalOperator.getDefaults(),arguments,["context"])))}connect(s,o=0,a=0){return connectSignal(this,s,o,a),this}}class WaveShaper extends SignalOperator{constructor(){super(Object.assign(optionsFromArguments(WaveShaper.getDefaults(),arguments,["mapping","length"]))),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper;const s=optionsFromArguments(WaveShaper.getDefaults(),arguments,["mapping","length"]);isArray(s.mapping)||s.mapping instanceof Float32Array?this.curve=Float32Array.from(s.mapping):isFunction(s.mapping)&&this.setMap(s.mapping,s.length)}static getDefaults(){return Object.assign(Signal.getDefaults(),{length:1024})}setMap(s,o=1024){const a=new Float32Array(o);for(let c=0,d=o;c<d;c++){const g=c/(d-1)*2-1;a[c]=s(g,c)}return this.curve=a,this}get curve(){return this._shaper.curve}set curve(s){this._shaper.curve=s}get oversample(){return this._shaper.oversample}set oversample(s){const o=["none","2x","4x"].some(a=>a.includes(s));assert(o,"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=s}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class AudioToGain extends SignalOperator{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new WaveShaper({context:this.context,mapping:s=>(s+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class Multiply extends Signal{constructor(){super(Object.assign(optionsFromArguments(Multiply.getDefaults(),arguments,["value"]))),this.name="Multiply",this.override=!1;const s=optionsFromArguments(Multiply.getDefaults(),arguments,["value"]);this._mult=this.input=this.output=new Gain({context:this.context,minValue:s.minValue,maxValue:s.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(s.value,0)}static getDefaults(){return Object.assign(Signal.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class AMOscillator extends Source{constructor(){super(optionsFromArguments(AMOscillator.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="AMOscillator",this._modulationScale=new AudioToGain({context:this.context}),this._modulationNode=new Gain({context:this.context});const s=optionsFromArguments(AMOscillator.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new Oscillator({context:this.context,detune:s.detune,frequency:s.frequency,onstop:()=>this.onstop(this),phase:s.phase,type:s.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new Oscillator({context:this.context,phase:s.phase,type:s.modulationType}),this.harmonicity=new Multiply({context:this.context,units:"positive",value:s.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),readOnly(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(Oscillator.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(s){this._modulator.start(s),this._carrier.start(s)}_stop(s){this._modulator.stop(s),this._carrier.stop(s)}_restart(s){this._modulator.restart(s),this._carrier.restart(s)}get type(){return this._carrier.type}set type(s){this._carrier.type=s}get baseType(){return this._carrier.baseType}set baseType(s){this._carrier.baseType=s}get partialCount(){return this._carrier.partialCount}set partialCount(s){this._carrier.partialCount=s}get modulationType(){return this._modulator.type}set modulationType(s){this._modulator.type=s}get phase(){return this._carrier.phase}set phase(s){this._carrier.phase=s,this._modulator.phase=s}get partials(){return this._carrier.partials}set partials(s){this._carrier.partials=s}asArray(s=1024){return __awaiter(this,void 0,void 0,function*(){return generateWaveform(this,s)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class FMOscillator extends Source{constructor(){super(optionsFromArguments(FMOscillator.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="FMOscillator",this._modulationNode=new Gain({context:this.context,gain:0});const s=optionsFromArguments(FMOscillator.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new Oscillator({context:this.context,detune:s.detune,frequency:0,onstop:()=>this.onstop(this),phase:s.phase,type:s.type}),this.detune=this._carrier.detune,this.frequency=new Signal({context:this.context,units:"frequency",value:s.frequency}),this._modulator=new Oscillator({context:this.context,phase:s.phase,type:s.modulationType}),this.harmonicity=new Multiply({context:this.context,units:"positive",value:s.harmonicity}),this.modulationIndex=new Multiply({context:this.context,units:"positive",value:s.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),readOnly(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(Oscillator.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(s){this._modulator.start(s),this._carrier.start(s)}_stop(s){this._modulator.stop(s),this._carrier.stop(s)}_restart(s){return this._modulator.restart(s),this._carrier.restart(s),this}get type(){return this._carrier.type}set type(s){this._carrier.type=s}get baseType(){return this._carrier.baseType}set baseType(s){this._carrier.baseType=s}get partialCount(){return this._carrier.partialCount}set partialCount(s){this._carrier.partialCount=s}get modulationType(){return this._modulator.type}set modulationType(s){this._modulator.type=s}get phase(){return this._carrier.phase}set phase(s){this._carrier.phase=s,this._modulator.phase=s}get partials(){return this._carrier.partials}set partials(s){this._carrier.partials=s}asArray(s=1024){return __awaiter(this,void 0,void 0,function*(){return generateWaveform(this,s)})}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class PulseOscillator extends Source{constructor(){super(optionsFromArguments(PulseOscillator.getDefaults(),arguments,["frequency","width"])),this.name="PulseOscillator",this._widthGate=new Gain({context:this.context,gain:0}),this._thresh=new WaveShaper({context:this.context,mapping:o=>o<=0?-1:1});const s=optionsFromArguments(PulseOscillator.getDefaults(),arguments,["frequency","width"]);this.width=new Signal({context:this.context,units:"audioRange",value:s.width}),this._triangle=new Oscillator({context:this.context,detune:s.detune,frequency:s.frequency,onstop:()=>this.onstop(this),phase:s.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),readOnly(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(Source.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(s){s=this.toSeconds(s),this._triangle.start(s),this._widthGate.gain.setValueAtTime(1,s)}_stop(s){s=this.toSeconds(s),this._triangle.stop(s),this._widthGate.gain.cancelScheduledValues(s),this._widthGate.gain.setValueAtTime(0,s)}_restart(s){this._triangle.restart(s),this._widthGate.gain.cancelScheduledValues(s),this._widthGate.gain.setValueAtTime(1,s)}get phase(){return this._triangle.phase}set phase(s){this._triangle.phase=s}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(s){this._triangle.type=s}asArray(s=1024){return __awaiter(this,void 0,void 0,function*(){return generateWaveform(this,s)})}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class FatOscillator extends Source{constructor(){super(optionsFromArguments(FatOscillator.getDefaults(),arguments,["frequency","type","spread"])),this.name="FatOscillator",this._oscillators=[];const s=optionsFromArguments(FatOscillator.getDefaults(),arguments,["frequency","type","spread"]);this.frequency=new Signal({context:this.context,units:"frequency",value:s.frequency}),this.detune=new Signal({context:this.context,units:"cents",value:s.detune}),this._spread=s.spread,this._type=s.type,this._phase=s.phase,this._partials=s.partials,this._partialCount=s.partialCount,this.count=s.count,readOnly(this,["frequency","detune"])}static getDefaults(){return Object.assign(Oscillator.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(s){s=this.toSeconds(s),this._forEach(o=>o.start(s))}_stop(s){s=this.toSeconds(s),this._forEach(o=>o.stop(s))}_restart(s){this._forEach(o=>o.restart(s))}_forEach(s){for(let o=0;o<this._oscillators.length;o++)s(this._oscillators[o],o)}get type(){return this._type}set type(s){this._type=s,this._forEach(o=>o.type=s)}get spread(){return this._spread}set spread(s){if(this._spread=s,this._oscillators.length>1){const o=-s/2,a=s/(this._oscillators.length-1);this._forEach((c,d)=>c.detune.value=o+a*d)}}get count(){return this._oscillators.length}set count(s){if(assertRange(s,1),this._oscillators.length!==s){this._forEach(o=>o.dispose()),this._oscillators=[];for(let o=0;o<s;o++){const a=new Oscillator({context:this.context,volume:-6-s*1.1,type:this._type,phase:this._phase+o/s*360,partialCount:this._partialCount,onstop:o===0?()=>this.onstop(this):noOp});this.type==="custom"&&(a.partials=this._partials),this.frequency.connect(a.frequency),this.detune.connect(a.detune),a.detune.overridden=!1,a.connect(this.output),this._oscillators[o]=a}this.spread=this._spread,this.state==="started"&&this._forEach(o=>o.start())}}get phase(){return this._phase}set phase(s){this._phase=s,this._forEach((o,a)=>o.phase=this._phase+a/this.count*360)}get baseType(){return this._oscillators[0].baseType}set baseType(s){this._forEach(o=>o.baseType=s),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(s){this._partials=s,this._partialCount=this._partials.length,s.length&&(this._type="custom",this._forEach(o=>o.partials=s))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(s){this._partialCount=s,this._forEach(o=>o.partialCount=s),this._type=this._oscillators[0].type}asArray(s=1024){return __awaiter(this,void 0,void 0,function*(){return generateWaveform(this,s)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach(s=>s.dispose()),this}}class PWMOscillator extends Source{constructor(){super(optionsFromArguments(PWMOscillator.getDefaults(),arguments,["frequency","modulationFrequency"])),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new Multiply({context:this.context,value:2});const s=optionsFromArguments(PWMOscillator.getDefaults(),arguments,["frequency","modulationFrequency"]);this._pulse=new PulseOscillator({context:this.context,frequency:s.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new Oscillator({context:this.context,detune:s.detune,frequency:s.frequency,onstop:()=>this.onstop(this),phase:s.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),readOnly(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(Source.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(s){s=this.toSeconds(s),this._modulator.start(s),this._pulse.start(s)}_stop(s){s=this.toSeconds(s),this._modulator.stop(s),this._pulse.stop(s)}_restart(s){this._modulator.restart(s),this._pulse.restart(s)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(s){this._modulator.phase=s}asArray(s=1024){return __awaiter(this,void 0,void 0,function*(){return generateWaveform(this,s)})}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const OmniOscillatorSourceMap={am:AMOscillator,fat:FatOscillator,fm:FMOscillator,oscillator:Oscillator,pulse:PulseOscillator,pwm:PWMOscillator};class OmniOscillator extends Source{constructor(){super(optionsFromArguments(OmniOscillator.getDefaults(),arguments,["frequency","type"])),this.name="OmniOscillator";const s=optionsFromArguments(OmniOscillator.getDefaults(),arguments,["frequency","type"]);this.frequency=new Signal({context:this.context,units:"frequency",value:s.frequency}),this.detune=new Signal({context:this.context,units:"cents",value:s.detune}),readOnly(this,["frequency","detune"]),this.set(s)}static getDefaults(){return Object.assign(Oscillator.getDefaults(),FMOscillator.getDefaults(),AMOscillator.getDefaults(),FatOscillator.getDefaults(),PulseOscillator.getDefaults(),PWMOscillator.getDefaults())}_start(s){this._oscillator.start(s)}_stop(s){this._oscillator.stop(s)}_restart(s){return this._oscillator.restart(s),this}get type(){let s="";return["am","fm","fat"].some(o=>this._sourceType===o)&&(s=this._sourceType),s+this._oscillator.type}set type(s){s.substr(0,2)==="fm"?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=s.substr(2)):s.substr(0,2)==="am"?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=s.substr(2)):s.substr(0,3)==="fat"?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=s.substr(3)):s==="pwm"?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):s==="pulse"?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=s)}get partials(){return this._oscillator.partials}set partials(s){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partials=s)}get partialCount(){return this._oscillator.partialCount}set partialCount(s){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partialCount=s)}set(s){return Reflect.has(s,"type")&&s.type&&(this.type=s.type),super.set(s),this}_createNewOscillator(s){if(s!==this._sourceType){this._sourceType=s;const o=OmniOscillatorSourceMap[s],a=this.now();if(this._oscillator){const c=this._oscillator;c.stop(a),this.context.setTimeout(()=>c.dispose(),this.blockTime)}this._oscillator=new o({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),this.state==="started"&&this._oscillator.start(a)}}get phase(){return this._oscillator.phase}set phase(s){this._oscillator.phase=s}get sourceType(){return this._sourceType}set sourceType(s){let o="sine";this._oscillator.type!=="pwm"&&this._oscillator.type!=="pulse"&&(o=this._oscillator.type),s==="fm"?this.type="fm"+o:s==="am"?this.type="am"+o:s==="fat"?this.type="fat"+o:s==="oscillator"?this.type=o:s==="pulse"?this.type="pulse":s==="pwm"&&(this.type="pwm")}_getOscType(s,o){return s instanceof OmniOscillatorSourceMap[o]}get baseType(){return this._oscillator.baseType}set baseType(s){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&s!=="pulse"&&s!=="pwm"&&(this._oscillator.baseType=s)}get width(){if(this._getOscType(this._oscillator,"pulse"))return this._oscillator.width}get count(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.count}set count(s){this._getOscType(this._oscillator,"fat")&&isNumber(s)&&(this._oscillator.count=s)}get spread(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.spread}set spread(s){this._getOscType(this._oscillator,"fat")&&isNumber(s)&&(this._oscillator.spread=s)}get modulationType(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.modulationType}set modulationType(s){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&isString(s)&&(this._oscillator.modulationType=s)}get modulationIndex(){if(this._getOscType(this._oscillator,"fm"))return this._oscillator.modulationIndex}get harmonicity(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.harmonicity}get modulationFrequency(){if(this._getOscType(this._oscillator,"pwm"))return this._oscillator.modulationFrequency}asArray(s=1024){return __awaiter(this,void 0,void 0,function*(){return generateWaveform(this,s)})}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}class Add extends Signal{constructor(){super(Object.assign(optionsFromArguments(Add.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Add",this._sum=new Gain({context:this.context}),this.input=this._sum,this.output=this._sum,this.addend=this._param,connectSeries(this._constantSource,this._sum)}static getDefaults(){return Object.assign(Signal.getDefaults(),{value:0})}dispose(){return super.dispose(),this._sum.dispose(),this}}class Scale extends SignalOperator{constructor(){super(Object.assign(optionsFromArguments(Scale.getDefaults(),arguments,["min","max"]))),this.name="Scale";const s=optionsFromArguments(Scale.getDefaults(),arguments,["min","max"]);this._mult=this.input=new Multiply({context:this.context,value:s.max-s.min}),this._add=this.output=new Add({context:this.context,value:s.min}),this._min=s.min,this._max=s.max,this.input.connect(this.output)}static getDefaults(){return Object.assign(SignalOperator.getDefaults(),{max:1,min:0})}get min(){return this._min}set min(s){this._min=s,this._setRange()}get max(){return this._max}set max(s){this._max=s,this._setRange()}_setRange(){this._add.value=this._min,this._mult.value=this._max-this._min}dispose(){return super.dispose(),this._add.dispose(),this._mult.dispose(),this}}class Zero extends SignalOperator{constructor(){super(Object.assign(optionsFromArguments(Zero.getDefaults(),arguments))),this.name="Zero",this._gain=new Gain({context:this.context}),this.output=this._gain,this.input=void 0,connect(this.context.getConstant(0),this._gain)}dispose(){return super.dispose(),disconnect(this.context.getConstant(0),this._gain),this}}class LFO extends ToneAudioNode{constructor(){super(optionsFromArguments(LFO.getDefaults(),arguments,["frequency","min","max"])),this.name="LFO",this._stoppedValue=0,this._units="number",this.convert=!0,this._fromType=Param.prototype._fromType,this._toType=Param.prototype._toType,this._is=Param.prototype._is,this._clampValue=Param.prototype._clampValue;const s=optionsFromArguments(LFO.getDefaults(),arguments,["frequency","min","max"]);this._oscillator=new Oscillator(s),this.frequency=this._oscillator.frequency,this._amplitudeGain=new Gain({context:this.context,gain:s.amplitude,units:"normalRange"}),this.amplitude=this._amplitudeGain.gain,this._stoppedSignal=new Signal({context:this.context,units:"audioRange",value:0}),this._zeros=new Zero({context:this.context}),this._a2g=new AudioToGain({context:this.context}),this._scaler=this.output=new Scale({context:this.context,max:s.max,min:s.min}),this.units=s.units,this.min=s.min,this.max=s.max,this._oscillator.chain(this._amplitudeGain,this._a2g,this._scaler),this._zeros.connect(this._a2g),this._stoppedSignal.connect(this._a2g),readOnly(this,["amplitude","frequency"]),this.phase=s.phase}static getDefaults(){return Object.assign(Oscillator.getDefaults(),{amplitude:1,frequency:"4n",max:1,min:0,type:"sine",units:"number"})}start(s){return s=this.toSeconds(s),this._stoppedSignal.setValueAtTime(0,s),this._oscillator.start(s),this}stop(s){return s=this.toSeconds(s),this._stoppedSignal.setValueAtTime(this._stoppedValue,s),this._oscillator.stop(s),this}sync(){return this._oscillator.sync(),this._oscillator.syncFrequency(),this}unsync(){return this._oscillator.unsync(),this._oscillator.unsyncFrequency(),this}_setStoppedValue(){this._stoppedValue=this._oscillator.getInitialValue(),this._stoppedSignal.value=this._stoppedValue}get min(){return this._toType(this._scaler.min)}set min(s){s=this._fromType(s),this._scaler.min=s}get max(){return this._toType(this._scaler.max)}set max(s){s=this._fromType(s),this._scaler.max=s}get type(){return this._oscillator.type}set type(s){this._oscillator.type=s,this._setStoppedValue()}get partials(){return this._oscillator.partials}set partials(s){this._oscillator.partials=s,this._setStoppedValue()}get phase(){return this._oscillator.phase}set phase(s){this._oscillator.phase=s,this._setStoppedValue()}get units(){return this._units}set units(s){const o=this.min,a=this.max;this._units=s,this.min=o,this.max=a}get state(){return this._oscillator.state}connect(s,o,a){return(s instanceof Param||s instanceof Signal)&&(this.convert=s.convert,this.units=s.units),connectSignal(this,s,o,a),this}dispose(){return super.dispose(),this._oscillator.dispose(),this._stoppedSignal.dispose(),this._zeros.dispose(),this._scaler.dispose(),this._a2g.dispose(),this._amplitudeGain.dispose(),this.amplitude.dispose(),this}}function range(i,s=1/0){const o=new WeakMap;return function(a,c){Reflect.defineProperty(a,c,{configurable:!0,enumerable:!0,get:function(){return o.get(this)},set:function(d){assertRange(d,i,s),o.set(this,d)}})}}function timeRange(i,s=1/0){const o=new WeakMap;return function(a,c){Reflect.defineProperty(a,c,{configurable:!0,enumerable:!0,get:function(){return o.get(this)},set:function(d){assertRange(this.toSeconds(d),i,s),o.set(this,d)}})}}class Player extends Source{constructor(){super(optionsFromArguments(Player.getDefaults(),arguments,["url","onload"])),this.name="Player",this._activeSources=new Set;const s=optionsFromArguments(Player.getDefaults(),arguments,["url","onload"]);this._buffer=new ToneAudioBuffer({onload:this._onload.bind(this,s.onload),onerror:s.onerror,reverse:s.reverse,url:s.url}),this.autostart=s.autostart,this._loop=s.loop,this._loopStart=s.loopStart,this._loopEnd=s.loopEnd,this._playbackRate=s.playbackRate,this.fadeIn=s.fadeIn,this.fadeOut=s.fadeOut}static getDefaults(){return Object.assign(Source.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:noOp,onerror:noOp,playbackRate:1,reverse:!1})}load(s){return __awaiter(this,void 0,void 0,function*(){return yield this._buffer.load(s),this._onload(),this})}_onload(s=noOp){s(),this.autostart&&this.start()}_onSourceEnd(s){this.onstop(this),this._activeSources.delete(s),this._activeSources.size===0&&!this._synced&&this._state.getValueAtTime(this.now())==="started"&&(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(s,o,a){return super.start(s,o,a),this}_start(s,o,a){this._loop?o=defaultArg(o,this._loopStart):o=defaultArg(o,0);const c=this.toSeconds(o),d=a;a=defaultArg(a,Math.max(this._buffer.duration-c,0));let g=this.toSeconds(a);g=g/this._playbackRate,s=this.toSeconds(s);const b=new ToneBufferSource({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);!this._loop&&!this._synced&&(this._state.cancel(s+g),this._state.setStateAtTime("stopped",s+g,{implicitEnd:!0})),this._activeSources.add(b),this._loop&&isUndef(d)?b.start(s,c):b.start(s,c,g-this.toSeconds(this.fadeOut))}_stop(s){const o=this.toSeconds(s);this._activeSources.forEach(a=>a.stop(o))}restart(s,o,a){return super.restart(s,o,a),this}_restart(s,o,a){this._stop(s),this._start(s,o,a)}seek(s,o){const a=this.toSeconds(o);if(this._state.getValueAtTime(a)==="started"){const c=this.toSeconds(s);this._stop(a),this._start(a,c)}return this}setLoopPoints(s,o){return this.loopStart=s,this.loopEnd=o,this}get loopStart(){return this._loopStart}set loopStart(s){this._loopStart=s,this.buffer.loaded&&assertRange(this.toSeconds(s),0,this.buffer.duration),this._activeSources.forEach(o=>{o.loopStart=s})}get loopEnd(){return this._loopEnd}set loopEnd(s){this._loopEnd=s,this.buffer.loaded&&assertRange(this.toSeconds(s),0,this.buffer.duration),this._activeSources.forEach(o=>{o.loopEnd=s})}get buffer(){return this._buffer}set buffer(s){this._buffer.set(s)}get loop(){return this._loop}set loop(s){if(this._loop!==s&&(this._loop=s,this._activeSources.forEach(o=>{o.loop=s}),s)){const o=this._state.getNextState("stopped",this.now());o&&this._state.cancel(o.time)}}get playbackRate(){return this._playbackRate}set playbackRate(s){this._playbackRate=s;const o=this.now(),a=this._state.getNextState("stopped",o);a&&a.implicitEnd&&(this._state.cancel(a.time),this._activeSources.forEach(c=>c.cancelStop())),this._activeSources.forEach(c=>{c.playbackRate.setValueAtTime(s,o)})}get reverse(){return this._buffer.reverse}set reverse(s){this._buffer.reverse=s}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach(s=>s.dispose()),this._activeSources.clear(),this._buffer.dispose(),this}}__decorate([timeRange(0)],Player.prototype,"fadeIn",void 0);__decorate([timeRange(0)],Player.prototype,"fadeOut",void 0);class Players extends ToneAudioNode{constructor(){super(optionsFromArguments(Players.getDefaults(),arguments,["urls","onload"],"urls")),this.name="Players",this.input=void 0,this._players=new Map;const s=optionsFromArguments(Players.getDefaults(),arguments,["urls","onload"],"urls");this._volume=this.output=new Volume({context:this.context,volume:s.volume}),this.volume=this._volume.volume,readOnly(this,"volume"),this._buffers=new ToneAudioBuffers({urls:s.urls,onload:s.onload,baseUrl:s.baseUrl,onerror:s.onerror}),this.mute=s.mute,this._fadeIn=s.fadeIn,this._fadeOut=s.fadeOut}static getDefaults(){return Object.assign(Source.getDefaults(),{baseUrl:"",fadeIn:0,fadeOut:0,mute:!1,onload:noOp,onerror:noOp,urls:{},volume:0})}get mute(){return this._volume.mute}set mute(s){this._volume.mute=s}get fadeIn(){return this._fadeIn}set fadeIn(s){this._fadeIn=s,this._players.forEach(o=>{o.fadeIn=s})}get fadeOut(){return this._fadeOut}set fadeOut(s){this._fadeOut=s,this._players.forEach(o=>{o.fadeOut=s})}get state(){return Array.from(this._players).some(([o,a])=>a.state==="started")?"started":"stopped"}has(s){return this._buffers.has(s)}player(s){if(assert(this.has(s),`No Player with the name ${s} exists on this object`),!this._players.has(s)){const o=new Player({context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,url:this._buffers.get(s)}).connect(this.output);this._players.set(s,o)}return this._players.get(s)}get loaded(){return this._buffers.loaded}add(s,o,a){return assert(!this._buffers.has(s),"A buffer with that name already exists on this object"),this._buffers.add(s,o,a),this}stopAll(s){return this._players.forEach(o=>o.stop(s)),this}dispose(){return super.dispose(),this._volume.dispose(),this.volume.dispose(),this._players.forEach(s=>s.dispose()),this._buffers.dispose(),this}}class GrainPlayer extends Source{constructor(){super(optionsFromArguments(GrainPlayer.getDefaults(),arguments,["url","onload"])),this.name="GrainPlayer",this._loopStart=0,this._loopEnd=0,this._activeSources=[];const s=optionsFromArguments(GrainPlayer.getDefaults(),arguments,["url","onload"]);this.buffer=new ToneAudioBuffer({onload:s.onload,onerror:s.onerror,reverse:s.reverse,url:s.url}),this._clock=new Clock({context:this.context,callback:this._tick.bind(this),frequency:1/s.grainSize}),this._playbackRate=s.playbackRate,this._grainSize=s.grainSize,this._overlap=s.overlap,this.detune=s.detune,this.overlap=s.overlap,this.loop=s.loop,this.playbackRate=s.playbackRate,this.grainSize=s.grainSize,this.loopStart=s.loopStart,this.loopEnd=s.loopEnd,this.reverse=s.reverse,this._clock.on("stop",this._onstop.bind(this))}static getDefaults(){return Object.assign(Source.getDefaults(),{onload:noOp,onerror:noOp,overlap:.1,grainSize:.2,playbackRate:1,detune:0,loop:!1,loopStart:0,loopEnd:0,reverse:!1})}_start(s,o,a){o=defaultArg(o,0),o=this.toSeconds(o),s=this.toSeconds(s);const c=1/this._clock.frequency.getValueAtTime(s);this._clock.start(s,o/c),a&&this.stop(s+this.toSeconds(a))}restart(s,o,a){return super.restart(s,o,a),this}_restart(s,o,a){this._stop(s),this._start(s,o,a)}_stop(s){this._clock.stop(s)}_onstop(s){this._activeSources.forEach(o=>{o.fadeOut=0,o.stop(s)}),this.onstop(this)}_tick(s){const o=this._clock.getTicksAtTime(s),a=o*this._grainSize;if(this.log("offset",a),!this.loop&&a>this.buffer.duration){this.stop(s);return}const c=a<this._overlap?0:this._overlap,d=new ToneBufferSource({context:this.context,url:this.buffer,fadeIn:c,fadeOut:this._overlap,loop:this.loop,loopStart:this._loopStart,loopEnd:this._loopEnd,playbackRate:intervalToFrequencyRatio(this.detune/100)}).connect(this.output);d.start(s,this._grainSize*o),d.stop(s+this._grainSize/this.playbackRate),this._activeSources.push(d),d.onended=()=>{const g=this._activeSources.indexOf(d);g!==-1&&this._activeSources.splice(g,1)}}get playbackRate(){return this._playbackRate}set playbackRate(s){assertRange(s,.001),this._playbackRate=s,this.grainSize=this._grainSize}get loopStart(){return this._loopStart}set loopStart(s){this.buffer.loaded&&assertRange(this.toSeconds(s),0,this.buffer.duration),this._loopStart=this.toSeconds(s)}get loopEnd(){return this._loopEnd}set loopEnd(s){this.buffer.loaded&&assertRange(this.toSeconds(s),0,this.buffer.duration),this._loopEnd=this.toSeconds(s)}get reverse(){return this.buffer.reverse}set reverse(s){this.buffer.reverse=s}get grainSize(){return this._grainSize}set grainSize(s){this._grainSize=this.toSeconds(s),this._clock.frequency.setValueAtTime(this._playbackRate/this._grainSize,this.now())}get overlap(){return this._overlap}set overlap(s){const o=this.toSeconds(s);assertRange(o,0),this._overlap=o}get loaded(){return this.buffer.loaded}dispose(){return super.dispose(),this.buffer.dispose(),this._clock.dispose(),this._activeSources.forEach(s=>s.dispose()),this}}class Abs extends SignalOperator{constructor(){super(...arguments),this.name="Abs",this._abs=new WaveShaper({context:this.context,mapping:s=>Math.abs(s)<.001?0:Math.abs(s)}),this.input=this._abs,this.output=this._abs}dispose(){return super.dispose(),this._abs.dispose(),this}}class GainToAudio extends SignalOperator{constructor(){super(...arguments),this.name="GainToAudio",this._norm=new WaveShaper({context:this.context,mapping:s=>Math.abs(s)*2-1}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class Negate extends SignalOperator{constructor(){super(...arguments),this.name="Negate",this._multiply=new Multiply({context:this.context,value:-1}),this.input=this._multiply,this.output=this._multiply}dispose(){return super.dispose(),this._multiply.dispose(),this}}class Subtract extends Signal{constructor(){super(Object.assign(optionsFromArguments(Subtract.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Subtract",this._sum=new Gain({context:this.context}),this.input=this._sum,this.output=this._sum,this._neg=new Negate({context:this.context}),this.subtrahend=this._param,connectSeries(this._constantSource,this._neg,this._sum)}static getDefaults(){return Object.assign(Signal.getDefaults(),{value:0})}dispose(){return super.dispose(),this._neg.dispose(),this._sum.dispose(),this}}class GreaterThanZero extends SignalOperator{constructor(){super(Object.assign(optionsFromArguments(GreaterThanZero.getDefaults(),arguments))),this.name="GreaterThanZero",this._thresh=this.output=new WaveShaper({context:this.context,length:127,mapping:s=>s<=0?0:1}),this._scale=this.input=new Multiply({context:this.context,value:1e4}),this._scale.connect(this._thresh)}dispose(){return super.dispose(),this._scale.dispose(),this._thresh.dispose(),this}}class GreaterThan extends Signal{constructor(){super(Object.assign(optionsFromArguments(GreaterThan.getDefaults(),arguments,["value"]))),this.name="GreaterThan",this.override=!1;const s=optionsFromArguments(GreaterThan.getDefaults(),arguments,["value"]);this._subtract=this.input=new Subtract({context:this.context,value:s.value}),this._gtz=this.output=new GreaterThanZero({context:this.context}),this.comparator=this._param=this._subtract.subtrahend,readOnly(this,"comparator"),this._subtract.connect(this._gtz)}static getDefaults(){return Object.assign(Signal.getDefaults(),{value:0})}dispose(){return super.dispose(),this._gtz.dispose(),this._subtract.dispose(),this.comparator.dispose(),this}}class Pow extends SignalOperator{constructor(){super(Object.assign(optionsFromArguments(Pow.getDefaults(),arguments,["value"]))),this.name="Pow";const s=optionsFromArguments(Pow.getDefaults(),arguments,["value"]);this._exponentScaler=this.input=this.output=new WaveShaper({context:this.context,mapping:this._expFunc(s.value),length:8192}),this._exponent=s.value}static getDefaults(){return Object.assign(SignalOperator.getDefaults(),{value:1})}_expFunc(s){return o=>Math.pow(Math.abs(o),s)}get value(){return this._exponent}set value(s){this._exponent=s,this._exponentScaler.setMap(this._expFunc(this._exponent))}dispose(){return super.dispose(),this._exponentScaler.dispose(),this}}class ScaleExp extends Scale{constructor(){super(Object.assign(optionsFromArguments(ScaleExp.getDefaults(),arguments,["min","max","exponent"]))),this.name="ScaleExp";const s=optionsFromArguments(ScaleExp.getDefaults(),arguments,["min","max","exponent"]);this.input=this._exp=new Pow({context:this.context,value:s.exponent}),this._exp.connect(this._mult)}static getDefaults(){return Object.assign(Scale.getDefaults(),{exponent:1})}get exponent(){return this._exp.value}set exponent(s){this._exp.value=s}dispose(){return super.dispose(),this._exp.dispose(),this}}class SyncedSignal extends Signal{constructor(){super(optionsFromArguments(Signal.getDefaults(),arguments,["value","units"])),this.name="SyncedSignal",this.override=!1;const s=optionsFromArguments(Signal.getDefaults(),arguments,["value","units"]);this._lastVal=s.value,this._synced=this.context.transport.scheduleRepeat(this._onTick.bind(this),"1i"),this._syncedCallback=this._anchorValue.bind(this),this.context.transport.on("start",this._syncedCallback),this.context.transport.on("pause",this._syncedCallback),this.context.transport.on("stop",this._syncedCallback),this._constantSource.disconnect(),this._constantSource.stop(0),this._constantSource=this.output=new ToneConstantSource({context:this.context,offset:s.value,units:s.units}).start(0),this.setValueAtTime(s.value,0)}_onTick(s){const o=super.getValueAtTime(this.context.transport.seconds);this._lastVal!==o&&(this._lastVal=o,this._constantSource.offset.setValueAtTime(o,s))}_anchorValue(s){const o=super.getValueAtTime(this.context.transport.seconds);this._lastVal=o,this._constantSource.offset.cancelAndHoldAtTime(s),this._constantSource.offset.setValueAtTime(o,s)}getValueAtTime(s){const o=new TransportTimeClass(this.context,s).toSeconds();return super.getValueAtTime(o)}setValueAtTime(s,o){const a=new TransportTimeClass(this.context,o).toSeconds();return super.setValueAtTime(s,a),this}linearRampToValueAtTime(s,o){const a=new TransportTimeClass(this.context,o).toSeconds();return super.linearRampToValueAtTime(s,a),this}exponentialRampToValueAtTime(s,o){const a=new TransportTimeClass(this.context,o).toSeconds();return super.exponentialRampToValueAtTime(s,a),this}setTargetAtTime(s,o,a){const c=new TransportTimeClass(this.context,o).toSeconds();return super.setTargetAtTime(s,c,a),this}cancelScheduledValues(s){const o=new TransportTimeClass(this.context,s).toSeconds();return super.cancelScheduledValues(o),this}setValueCurveAtTime(s,o,a,c){const d=new TransportTimeClass(this.context,o).toSeconds();return a=this.toSeconds(a),super.setValueCurveAtTime(s,d,a,c),this}cancelAndHoldAtTime(s){const o=new TransportTimeClass(this.context,s).toSeconds();return super.cancelAndHoldAtTime(o),this}setRampPoint(s){const o=new TransportTimeClass(this.context,s).toSeconds();return super.setRampPoint(o),this}exponentialRampTo(s,o,a){const c=new TransportTimeClass(this.context,a).toSeconds();return super.exponentialRampTo(s,o,c),this}linearRampTo(s,o,a){const c=new TransportTimeClass(this.context,a).toSeconds();return super.linearRampTo(s,o,c),this}targetRampTo(s,o,a){const c=new TransportTimeClass(this.context,a).toSeconds();return super.targetRampTo(s,o,c),this}dispose(){return super.dispose(),this.context.transport.clear(this._synced),this.context.transport.off("start",this._syncedCallback),this.context.transport.off("pause",this._syncedCallback),this.context.transport.off("stop",this._syncedCallback),this._constantSource.dispose(),this}}class Envelope extends ToneAudioNode{constructor(){super(optionsFromArguments(Envelope.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="Envelope",this._sig=new Signal({context:this.context,value:0}),this.output=this._sig,this.input=void 0;const s=optionsFromArguments(Envelope.getDefaults(),arguments,["attack","decay","sustain","release"]);this.attack=s.attack,this.decay=s.decay,this.sustain=s.sustain,this.release=s.release,this.attackCurve=s.attackCurve,this.releaseCurve=s.releaseCurve,this.decayCurve=s.decayCurve}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(s,o){if(isString(s))return s;{let a;for(a in EnvelopeCurves)if(EnvelopeCurves[a][o]===s)return a;return s}}_setCurve(s,o,a){if(isString(a)&&Reflect.has(EnvelopeCurves,a)){const c=EnvelopeCurves[a];isObject(c)?s!=="_decayCurve"&&(this[s]=c[o]):this[s]=c}else if(isArray(a)&&s!=="_decayCurve")this[s]=a;else throw new Error("Envelope: invalid curve: "+a)}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(s){this._setCurve("_attackCurve","In",s)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(s){this._setCurve("_releaseCurve","Out",s)}get decayCurve(){return this._decayCurve}set decayCurve(s){assert(["linear","exponential"].some(o=>o===s),`Invalid envelope curve: ${s}`),this._decayCurve=s}triggerAttack(s,o=1){this.log("triggerAttack",s,o),s=this.toSeconds(s);let c=this.toSeconds(this.attack);const d=this.toSeconds(this.decay),g=this.getValueAtTime(s);if(g>0){const b=1/c;c=(1-g)/b}if(c<this.sampleTime)this._sig.cancelScheduledValues(s),this._sig.setValueAtTime(o,s);else if(this._attackCurve==="linear")this._sig.linearRampTo(o,c,s);else if(this._attackCurve==="exponential")this._sig.targetRampTo(o,c,s);else{this._sig.cancelAndHoldAtTime(s);let b=this._attackCurve;for(let $=1;$<b.length;$++)if(b[$-1]<=g&&g<=b[$]){b=this._attackCurve.slice($),b[0]=g;break}this._sig.setValueCurveAtTime(b,s,c,o)}if(d&&this.sustain<1){const b=o*this.sustain,$=s+c;this.log("decay",$),this._decayCurve==="linear"?this._sig.linearRampToValueAtTime(b,d+$):this._sig.exponentialApproachValueAtTime(b,$,d)}return this}triggerRelease(s){this.log("triggerRelease",s),s=this.toSeconds(s);const o=this.getValueAtTime(s);if(o>0){const a=this.toSeconds(this.release);a<this.sampleTime?this._sig.setValueAtTime(0,s):this._releaseCurve==="linear"?this._sig.linearRampTo(0,a,s):this._releaseCurve==="exponential"?this._sig.targetRampTo(0,a,s):(assert(isArray(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(s),this._sig.setValueCurveAtTime(this._releaseCurve,s,a,o))}return this}getValueAtTime(s){return this._sig.getValueAtTime(s)}triggerAttackRelease(s,o,a=1){return o=this.toSeconds(o),this.triggerAttack(o,a),this.triggerRelease(o+this.toSeconds(s)),this}cancel(s){return this._sig.cancelScheduledValues(this.toSeconds(s)),this}connect(s,o=0,a=0){return connectSignal(this,s,o,a),this}asArray(s=1024){return __awaiter(this,void 0,void 0,function*(){const o=s/this.context.sampleRate,a=new OfflineContext(1,o,this.context.sampleRate),c=this.toSeconds(this.attack)+this.toSeconds(this.decay),d=c+this.toSeconds(this.release),g=d*.1,b=d+g,$=new this.constructor(Object.assign(this.get(),{attack:o*this.toSeconds(this.attack)/b,decay:o*this.toSeconds(this.decay)/b,release:o*this.toSeconds(this.release)/b,context:a}));return $._sig.toDestination(),$.triggerAttackRelease(o*(c+g)/b,0),(yield a.render()).getChannelData(0)})}dispose(){return super.dispose(),this._sig.dispose(),this}}__decorate([timeRange(0)],Envelope.prototype,"attack",void 0);__decorate([timeRange(0)],Envelope.prototype,"decay",void 0);__decorate([range(0,1)],Envelope.prototype,"sustain",void 0);__decorate([timeRange(0)],Envelope.prototype,"release",void 0);const EnvelopeCurves=(()=>{let s,o;const a=[];for(s=0;s<128;s++)a[s]=Math.sin(s/(128-1)*(Math.PI/2));const c=[],d=6.4;for(s=0;s<128-1;s++){o=s/(128-1);const rt=Math.sin(o*(Math.PI*2)*d-Math.PI/2)+1;c[s]=rt/10+o*.83}c[128-1]=1;const g=[],b=5;for(s=0;s<128;s++)g[s]=Math.ceil(s/(128-1)*b)/b;const $=[];for(s=0;s<128;s++)o=s/(128-1),$[s]=.5*(1-Math.cos(Math.PI*o));const _=[];for(s=0;s<128;s++){o=s/(128-1);const rt=Math.pow(o,3)*4+.2,tt=Math.cos(rt*Math.PI*2*o);_[s]=Math.abs(tt*(1-o))}function _e(rt){const tt=new Array(rt.length);for(let j=0;j<rt.length;j++)tt[j]=1-rt[j];return tt}function et(rt){return rt.slice(0).reverse()}return{bounce:{In:_e(_),Out:_},cosine:{In:a,Out:et(a)},exponential:"exponential",linear:"linear",ripple:{In:c,Out:_e(c)},sine:{In:$,Out:_e($)},step:{In:g,Out:_e(g)}}})();class Instrument extends ToneAudioNode{constructor(){super(optionsFromArguments(Instrument.getDefaults(),arguments)),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease;const s=optionsFromArguments(Instrument.getDefaults(),arguments);this._volume=this.output=new Volume({context:this.context,volume:s.volume}),this.volume=this._volume.volume,readOnly(this,"volume")}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0)),this}_syncState(){let s=!1;return this._synced||(this._synced=!0,s=!0),s}_syncMethod(s,o){const a=this["_original_"+s]=this[s];this[s]=(...c)=>{const d=c[o],g=this.context.transport.schedule(b=>{c[o]=b,a.apply(this,c)},d);this._scheduledEvents.push(g)}}unsync(){return this._scheduledEvents.forEach(s=>this.context.transport.clear(s)),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease),this}triggerAttackRelease(s,o,a,c){const d=this.toSeconds(a),g=this.toSeconds(o);return this.triggerAttack(s,d,c),this.triggerRelease(d+g),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class Monophonic extends Instrument{constructor(){super(optionsFromArguments(Monophonic.getDefaults(),arguments));const s=optionsFromArguments(Monophonic.getDefaults(),arguments);this.portamento=s.portamento,this.onsilence=s.onsilence}static getDefaults(){return Object.assign(Instrument.getDefaults(),{detune:0,onsilence:noOp,portamento:0})}triggerAttack(s,o,a=1){this.log("triggerAttack",s,o,a);const c=this.toSeconds(o);return this._triggerEnvelopeAttack(c,a),this.setNote(s,c),this}triggerRelease(s){this.log("triggerRelease",s);const o=this.toSeconds(s);return this._triggerEnvelopeRelease(o),this}setNote(s,o){const a=this.toSeconds(o),c=s instanceof FrequencyClass?s.toFrequency():s;if(this.portamento>0&&this.getLevelAtTime(a)>.05){const d=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(c,d,a)}else this.frequency.setValueAtTime(c,a);return this}}__decorate([timeRange(0)],Monophonic.prototype,"portamento",void 0);class AmplitudeEnvelope extends Envelope{constructor(){super(optionsFromArguments(AmplitudeEnvelope.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new Gain({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class Synth extends Monophonic{constructor(){super(optionsFromArguments(Synth.getDefaults(),arguments)),this.name="Synth";const s=optionsFromArguments(Synth.getDefaults(),arguments);this.oscillator=new OmniOscillator(Object.assign({context:this.context,detune:s.detune,onstop:()=>this.onsilence(this)},s.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new AmplitudeEnvelope(Object.assign({context:this.context},s.envelope)),this.oscillator.chain(this.envelope,this.output),readOnly(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(Monophonic.getDefaults(),{envelope:Object.assign(omitFromObject(Envelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(omitFromObject(OmniOscillator.getDefaults(),[...Object.keys(Source.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(s,o){if(this.envelope.triggerAttack(s,o),this.oscillator.start(s),this.envelope.sustain===0){const a=this.toSeconds(this.envelope.attack),c=this.toSeconds(this.envelope.decay);this.oscillator.stop(s+a+c)}}_triggerEnvelopeRelease(s){this.envelope.triggerRelease(s),this.oscillator.stop(s+this.toSeconds(this.envelope.release))}getLevelAtTime(s){return s=this.toSeconds(s),this.envelope.getValueAtTime(s)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class ModulationSynth extends Monophonic{constructor(){super(optionsFromArguments(ModulationSynth.getDefaults(),arguments)),this.name="ModulationSynth";const s=optionsFromArguments(ModulationSynth.getDefaults(),arguments);this._carrier=new Synth({context:this.context,oscillator:s.oscillator,envelope:s.envelope,onsilence:()=>this.onsilence(this),volume:-10}),this._modulator=new Synth({context:this.context,oscillator:s.modulation,envelope:s.modulationEnvelope,volume:-10}),this.oscillator=this._carrier.oscillator,this.envelope=this._carrier.envelope,this.modulation=this._modulator.oscillator,this.modulationEnvelope=this._modulator.envelope,this.frequency=new Signal({context:this.context,units:"frequency"}),this.detune=new Signal({context:this.context,value:s.detune,units:"cents"}),this.harmonicity=new Multiply({context:this.context,value:s.harmonicity,minValue:0}),this._modulationNode=new Gain({context:this.context,gain:0}),readOnly(this,["frequency","harmonicity","oscillator","envelope","modulation","modulationEnvelope","detune"])}static getDefaults(){return Object.assign(Monophonic.getDefaults(),{harmonicity:3,oscillator:Object.assign(omitFromObject(OmniOscillator.getDefaults(),[...Object.keys(Source.getDefaults()),"frequency","detune"]),{type:"sine"}),envelope:Object.assign(omitFromObject(Envelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{attack:.01,decay:.01,sustain:1,release:.5}),modulation:Object.assign(omitFromObject(OmniOscillator.getDefaults(),[...Object.keys(Source.getDefaults()),"frequency","detune"]),{type:"square"}),modulationEnvelope:Object.assign(omitFromObject(Envelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{attack:.5,decay:0,sustain:1,release:.5})})}_triggerEnvelopeAttack(s,o){this._carrier._triggerEnvelopeAttack(s,o),this._modulator._triggerEnvelopeAttack(s,o)}_triggerEnvelopeRelease(s){return this._carrier._triggerEnvelopeRelease(s),this._modulator._triggerEnvelopeRelease(s),this}getLevelAtTime(s){return s=this.toSeconds(s),this.envelope.getValueAtTime(s)}dispose(){return super.dispose(),this._carrier.dispose(),this._modulator.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._modulationNode.dispose(),this}}class AMSynth extends ModulationSynth{constructor(){super(optionsFromArguments(AMSynth.getDefaults(),arguments)),this.name="AMSynth",this._modulationScale=new AudioToGain({context:this.context}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output)}dispose(){return super.dispose(),this._modulationScale.dispose(),this}}class BiquadFilter extends ToneAudioNode{constructor(){super(optionsFromArguments(BiquadFilter.getDefaults(),arguments,["frequency","type"])),this.name="BiquadFilter";const s=optionsFromArguments(BiquadFilter.getDefaults(),arguments,["frequency","type"]);this._filter=this.context.createBiquadFilter(),this.input=this.output=this._filter,this.Q=new Param({context:this.context,units:"number",value:s.Q,param:this._filter.Q}),this.frequency=new Param({context:this.context,units:"frequency",value:s.frequency,param:this._filter.frequency}),this.detune=new Param({context:this.context,units:"cents",value:s.detune,param:this._filter.detune}),this.gain=new Param({context:this.context,units:"decibels",convert:!1,value:s.gain,param:this._filter.gain}),this.type=s.type}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{Q:1,type:"lowpass",frequency:350,detune:0,gain:0})}get type(){return this._filter.type}set type(s){assert(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(s)!==-1,`Invalid filter type: ${s}`),this._filter.type=s}getFrequencyResponse(s=128){const o=new Float32Array(s);for(let g=0;g<s;g++){const $=Math.pow(g/s,2)*(2e4-20)+20;o[g]=$}const a=new Float32Array(s),c=new Float32Array(s),d=this.context.createBiquadFilter();return d.type=this.type,d.Q.value=this.Q.value,d.frequency.value=this.frequency.value,d.gain.value=this.gain.value,d.getFrequencyResponse(o,a,c),a}dispose(){return super.dispose(),this._filter.disconnect(),this.Q.dispose(),this.frequency.dispose(),this.gain.dispose(),this.detune.dispose(),this}}class Filter extends ToneAudioNode{constructor(){super(optionsFromArguments(Filter.getDefaults(),arguments,["frequency","type","rolloff"])),this.name="Filter",this.input=new Gain({context:this.context}),this.output=new Gain({context:this.context}),this._filters=[];const s=optionsFromArguments(Filter.getDefaults(),arguments,["frequency","type","rolloff"]);this._filters=[],this.Q=new Signal({context:this.context,units:"positive",value:s.Q}),this.frequency=new Signal({context:this.context,units:"frequency",value:s.frequency}),this.detune=new Signal({context:this.context,units:"cents",value:s.detune}),this.gain=new Signal({context:this.context,units:"decibels",convert:!1,value:s.gain}),this._type=s.type,this.rolloff=s.rolloff,readOnly(this,["detune","frequency","gain","Q"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{Q:1,detune:0,frequency:350,gain:0,rolloff:-12,type:"lowpass"})}get type(){return this._type}set type(s){assert(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(s)!==-1,`Invalid filter type: ${s}`),this._type=s,this._filters.forEach(a=>a.type=s)}get rolloff(){return this._rolloff}set rolloff(s){const o=isNumber(s)?s:parseInt(s,10),a=[-12,-24,-48,-96];let c=a.indexOf(o);assert(c!==-1,`rolloff can only be ${a.join(", ")}`),c+=1,this._rolloff=o,this.input.disconnect(),this._filters.forEach(d=>d.disconnect()),this._filters=new Array(c);for(let d=0;d<c;d++){const g=new BiquadFilter({context:this.context});g.type=this._type,this.frequency.connect(g.frequency),this.detune.connect(g.detune),this.Q.connect(g.Q),this.gain.connect(g.gain),this._filters[d]=g}this._internalChannels=this._filters,connectSeries(this.input,...this._internalChannels,this.output)}getFrequencyResponse(s=128){const o=new BiquadFilter({frequency:this.frequency.value,gain:this.gain.value,Q:this.Q.value,type:this._type,detune:this.detune.value}),a=new Float32Array(s).map(()=>1);return this._filters.forEach(()=>{o.getFrequencyResponse(s).forEach((d,g)=>a[g]*=d)}),o.dispose(),a}dispose(){return super.dispose(),this._filters.forEach(s=>{s.dispose()}),writable(this,["detune","frequency","gain","Q"]),this.frequency.dispose(),this.Q.dispose(),this.detune.dispose(),this.gain.dispose(),this}}class FrequencyEnvelope extends Envelope{constructor(){super(optionsFromArguments(FrequencyEnvelope.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="FrequencyEnvelope";const s=optionsFromArguments(FrequencyEnvelope.getDefaults(),arguments,["attack","decay","sustain","release"]);this._octaves=s.octaves,this._baseFrequency=this.toFrequency(s.baseFrequency),this._exponent=this.input=new Pow({context:this.context,value:s.exponent}),this._scale=this.output=new Scale({context:this.context,min:this._baseFrequency,max:this._baseFrequency*Math.pow(2,this._octaves)}),this._sig.chain(this._exponent,this._scale)}static getDefaults(){return Object.assign(Envelope.getDefaults(),{baseFrequency:200,exponent:1,octaves:4})}get baseFrequency(){return this._baseFrequency}set baseFrequency(s){const o=this.toFrequency(s);assertRange(o,0),this._baseFrequency=o,this._scale.min=this._baseFrequency,this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(s){this._octaves=s,this._scale.max=this._baseFrequency*Math.pow(2,s)}get exponent(){return this._exponent.value}set exponent(s){this._exponent.value=s}dispose(){return super.dispose(),this._exponent.dispose(),this._scale.dispose(),this}}class MonoSynth extends Monophonic{constructor(){super(optionsFromArguments(MonoSynth.getDefaults(),arguments)),this.name="MonoSynth";const s=optionsFromArguments(MonoSynth.getDefaults(),arguments);this.oscillator=new OmniOscillator(Object.assign(s.oscillator,{context:this.context,detune:s.detune,onstop:()=>this.onsilence(this)})),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.filter=new Filter(Object.assign(s.filter,{context:this.context})),this.filterEnvelope=new FrequencyEnvelope(Object.assign(s.filterEnvelope,{context:this.context})),this.envelope=new AmplitudeEnvelope(Object.assign(s.envelope,{context:this.context})),this.oscillator.chain(this.filter,this.envelope,this.output),this.filterEnvelope.connect(this.filter.frequency),readOnly(this,["oscillator","frequency","detune","filter","filterEnvelope","envelope"])}static getDefaults(){return Object.assign(Monophonic.getDefaults(),{envelope:Object.assign(omitFromObject(Envelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.9}),filter:Object.assign(omitFromObject(Filter.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{Q:1,rolloff:-12,type:"lowpass"}),filterEnvelope:Object.assign(omitFromObject(FrequencyEnvelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{attack:.6,baseFrequency:200,decay:.2,exponent:2,octaves:3,release:2,sustain:.5}),oscillator:Object.assign(omitFromObject(OmniOscillator.getDefaults(),Object.keys(Source.getDefaults())),{type:"sawtooth"})})}_triggerEnvelopeAttack(s,o=1){if(this.envelope.triggerAttack(s,o),this.filterEnvelope.triggerAttack(s),this.oscillator.start(s),this.envelope.sustain===0){const a=this.toSeconds(this.envelope.attack),c=this.toSeconds(this.envelope.decay);this.oscillator.stop(s+a+c)}}_triggerEnvelopeRelease(s){this.envelope.triggerRelease(s),this.filterEnvelope.triggerRelease(s),this.oscillator.stop(s+this.toSeconds(this.envelope.release))}getLevelAtTime(s){return s=this.toSeconds(s),this.envelope.getValueAtTime(s)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this.filterEnvelope.dispose(),this.filter.dispose(),this}}class DuoSynth extends Monophonic{constructor(){super(optionsFromArguments(DuoSynth.getDefaults(),arguments)),this.name="DuoSynth";const s=optionsFromArguments(DuoSynth.getDefaults(),arguments);this.voice0=new MonoSynth(Object.assign(s.voice0,{context:this.context,onsilence:()=>this.onsilence(this)})),this.voice1=new MonoSynth(Object.assign(s.voice1,{context:this.context})),this.harmonicity=new Multiply({context:this.context,units:"positive",value:s.harmonicity}),this._vibrato=new LFO({frequency:s.vibratoRate,context:this.context,min:-50,max:50}),this._vibrato.start(),this.vibratoRate=this._vibrato.frequency,this._vibratoGain=new Gain({context:this.context,units:"normalRange",gain:s.vibratoAmount}),this.vibratoAmount=this._vibratoGain.gain,this.frequency=new Signal({context:this.context,units:"frequency",value:440}),this.detune=new Signal({context:this.context,units:"cents",value:s.detune}),this.frequency.connect(this.voice0.frequency),this.frequency.chain(this.harmonicity,this.voice1.frequency),this._vibrato.connect(this._vibratoGain),this._vibratoGain.fan(this.voice0.detune,this.voice1.detune),this.detune.fan(this.voice0.detune,this.voice1.detune),this.voice0.connect(this.output),this.voice1.connect(this.output),readOnly(this,["voice0","voice1","frequency","vibratoAmount","vibratoRate"])}getLevelAtTime(s){return s=this.toSeconds(s),this.voice0.envelope.getValueAtTime(s)+this.voice1.envelope.getValueAtTime(s)}static getDefaults(){return deepMerge(Monophonic.getDefaults(),{vibratoAmount:.5,vibratoRate:5,harmonicity:1.5,voice0:deepMerge(omitFromObject(MonoSynth.getDefaults(),Object.keys(Monophonic.getDefaults())),{filterEnvelope:{attack:.01,decay:0,sustain:1,release:.5},envelope:{attack:.01,decay:0,sustain:1,release:.5}}),voice1:deepMerge(omitFromObject(MonoSynth.getDefaults(),Object.keys(Monophonic.getDefaults())),{filterEnvelope:{attack:.01,decay:0,sustain:1,release:.5},envelope:{attack:.01,decay:0,sustain:1,release:.5}})})}_triggerEnvelopeAttack(s,o){this.voice0._triggerEnvelopeAttack(s,o),this.voice1._triggerEnvelopeAttack(s,o)}_triggerEnvelopeRelease(s){return this.voice0._triggerEnvelopeRelease(s),this.voice1._triggerEnvelopeRelease(s),this}dispose(){return super.dispose(),this.voice0.dispose(),this.voice1.dispose(),this.frequency.dispose(),this.detune.dispose(),this._vibrato.dispose(),this.vibratoRate.dispose(),this._vibratoGain.dispose(),this.harmonicity.dispose(),this}}class FMSynth extends ModulationSynth{constructor(){super(optionsFromArguments(FMSynth.getDefaults(),arguments)),this.name="FMSynth";const s=optionsFromArguments(FMSynth.getDefaults(),arguments);this.modulationIndex=new Multiply({context:this.context,value:s.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output)}static getDefaults(){return Object.assign(ModulationSynth.getDefaults(),{modulationIndex:10})}dispose(){return super.dispose(),this.modulationIndex.dispose(),this}}const inharmRatios=[1,1.483,1.932,2.546,2.63,3.897];class MetalSynth extends Monophonic{constructor(){super(optionsFromArguments(MetalSynth.getDefaults(),arguments)),this.name="MetalSynth",this._oscillators=[],this._freqMultipliers=[];const s=optionsFromArguments(MetalSynth.getDefaults(),arguments);this.detune=new Signal({context:this.context,units:"cents",value:s.detune}),this.frequency=new Signal({context:this.context,units:"frequency"}),this._amplitude=new Gain({context:this.context,gain:0}).connect(this.output),this._highpass=new Filter({Q:0,context:this.context,type:"highpass"}).connect(this._amplitude);for(let o=0;o<inharmRatios.length;o++){const a=new FMOscillator({context:this.context,harmonicity:s.harmonicity,modulationIndex:s.modulationIndex,modulationType:"square",onstop:o===0?()=>this.onsilence(this):noOp,type:"square"});a.connect(this._highpass),this._oscillators[o]=a;const c=new Multiply({context:this.context,value:inharmRatios[o]});this._freqMultipliers[o]=c,this.frequency.chain(c,a.frequency),this.detune.connect(a.detune)}this._filterFreqScaler=new Scale({context:this.context,max:7e3,min:this.toFrequency(s.resonance)}),this.envelope=new Envelope({attack:s.envelope.attack,attackCurve:"linear",context:this.context,decay:s.envelope.decay,release:s.envelope.release,sustain:0}),this.envelope.chain(this._filterFreqScaler,this._highpass.frequency),this.envelope.connect(this._amplitude.gain),this._octaves=s.octaves,this.octaves=s.octaves}static getDefaults(){return deepMerge(Monophonic.getDefaults(),{envelope:Object.assign(omitFromObject(Envelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{attack:.001,decay:1.4,release:.2}),harmonicity:5.1,modulationIndex:32,octaves:1.5,resonance:4e3})}_triggerEnvelopeAttack(s,o=1){return this.envelope.triggerAttack(s,o),this._oscillators.forEach(a=>a.start(s)),this.envelope.sustain===0&&this._oscillators.forEach(a=>{a.stop(s+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay))}),this}_triggerEnvelopeRelease(s){return this.envelope.triggerRelease(s),this._oscillators.forEach(o=>o.stop(s+this.toSeconds(this.envelope.release))),this}getLevelAtTime(s){return s=this.toSeconds(s),this.envelope.getValueAtTime(s)}get modulationIndex(){return this._oscillators[0].modulationIndex.value}set modulationIndex(s){this._oscillators.forEach(o=>o.modulationIndex.value=s)}get harmonicity(){return this._oscillators[0].harmonicity.value}set harmonicity(s){this._oscillators.forEach(o=>o.harmonicity.value=s)}get resonance(){return this._filterFreqScaler.min}set resonance(s){this._filterFreqScaler.min=this.toFrequency(s),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(s){this._octaves=s,this._filterFreqScaler.max=this._filterFreqScaler.min*Math.pow(2,s)}dispose(){return super.dispose(),this._oscillators.forEach(s=>s.dispose()),this._freqMultipliers.forEach(s=>s.dispose()),this.frequency.dispose(),this.detune.dispose(),this._filterFreqScaler.dispose(),this._amplitude.dispose(),this.envelope.dispose(),this._highpass.dispose(),this}}class MembraneSynth extends Synth{constructor(){super(optionsFromArguments(MembraneSynth.getDefaults(),arguments)),this.name="MembraneSynth",this.portamento=0;const s=optionsFromArguments(MembraneSynth.getDefaults(),arguments);this.pitchDecay=s.pitchDecay,this.octaves=s.octaves,readOnly(this,["oscillator","envelope"])}static getDefaults(){return deepMerge(Monophonic.getDefaults(),Synth.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(s,o){const a=this.toSeconds(o),c=this.toFrequency(s instanceof FrequencyClass?s.toFrequency():s),d=c*this.octaves;return this.oscillator.frequency.setValueAtTime(d,a),this.oscillator.frequency.exponentialRampToValueAtTime(c,a+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}__decorate([range(0)],MembraneSynth.prototype,"octaves",void 0);__decorate([timeRange(0)],MembraneSynth.prototype,"pitchDecay",void 0);class NoiseSynth extends Instrument{constructor(){super(optionsFromArguments(NoiseSynth.getDefaults(),arguments)),this.name="NoiseSynth";const s=optionsFromArguments(NoiseSynth.getDefaults(),arguments);this.noise=new Noise(Object.assign({context:this.context},s.noise)),this.envelope=new AmplitudeEnvelope(Object.assign({context:this.context},s.envelope)),this.noise.chain(this.envelope,this.output)}static getDefaults(){return Object.assign(Instrument.getDefaults(),{envelope:Object.assign(omitFromObject(Envelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{decay:.1,sustain:0}),noise:Object.assign(omitFromObject(Noise.getDefaults(),Object.keys(Source.getDefaults())),{type:"white"})})}triggerAttack(s,o=1){return s=this.toSeconds(s),this.envelope.triggerAttack(s,o),this.noise.start(s),this.envelope.sustain===0&&this.noise.stop(s+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay)),this}triggerRelease(s){return s=this.toSeconds(s),this.envelope.triggerRelease(s),this.noise.stop(s+this.toSeconds(this.envelope.release)),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",0),this._syncMethod("triggerRelease",0)),this}triggerAttackRelease(s,o,a=1){return o=this.toSeconds(o),s=this.toSeconds(s),this.triggerAttack(o,a),this.triggerRelease(o+s),this}dispose(){return super.dispose(),this.noise.dispose(),this.envelope.dispose(),this}}const workletContext=new Set;function addToWorklet(i){workletContext.add(i)}function registerProcessor(i,s){const o=`registerProcessor("${i}", ${s})`;workletContext.add(o)}function getWorkletGlobalScope(){return Array.from(workletContext).join(`
`)}class ToneAudioWorklet extends ToneAudioNode{constructor(s){super(s),this.name="ToneAudioWorklet",this.workletOptions={},this.onprocessorerror=noOp;const o=URL.createObjectURL(new Blob([getWorkletGlobalScope()],{type:"text/javascript"})),a=this._audioWorkletName();this._dummyGain=this.context.createGain(),this._dummyParam=this._dummyGain.gain,this.context.addAudioWorkletModule(o,a).then(()=>{this.disposed||(this._worklet=this.context.createAudioWorkletNode(a,this.workletOptions),this._worklet.onprocessorerror=this.onprocessorerror.bind(this),this.onReady(this._worklet))})}dispose(){return super.dispose(),this._dummyGain.disconnect(),this._worklet&&(this._worklet.port.postMessage("dispose"),this._worklet.disconnect()),this}}const toneAudioWorkletProcessor=`
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;addToWorklet(toneAudioWorkletProcessor);const singleIOProcess=`
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;addToWorklet(singleIOProcess);const delayLine=`
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;addToWorklet(delayLine);const workletName$1="feedback-comb-filter",feedbackCombFilter=`
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;registerProcessor(workletName$1,feedbackCombFilter);class FeedbackCombFilter extends ToneAudioWorklet{constructor(){super(optionsFromArguments(FeedbackCombFilter.getDefaults(),arguments,["delayTime","resonance"])),this.name="FeedbackCombFilter";const s=optionsFromArguments(FeedbackCombFilter.getDefaults(),arguments,["delayTime","resonance"]);this.input=new Gain({context:this.context}),this.output=new Gain({context:this.context}),this.delayTime=new Param({context:this.context,value:s.delayTime,units:"time",minValue:0,maxValue:1,param:this._dummyParam,swappable:!0}),this.resonance=new Param({context:this.context,value:s.resonance,units:"normalRange",param:this._dummyParam,swappable:!0}),readOnly(this,["resonance","delayTime"])}_audioWorkletName(){return workletName$1}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{delayTime:.1,resonance:.5})}onReady(s){connectSeries(this.input,s,this.output);const o=s.parameters.get("delayTime");this.delayTime.setParam(o);const a=s.parameters.get("feedback");this.resonance.setParam(a)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.delayTime.dispose(),this.resonance.dispose(),this}}class OnePoleFilter extends ToneAudioNode{constructor(){super(optionsFromArguments(OnePoleFilter.getDefaults(),arguments,["frequency","type"])),this.name="OnePoleFilter";const s=optionsFromArguments(OnePoleFilter.getDefaults(),arguments,["frequency","type"]);this._frequency=s.frequency,this._type=s.type,this.input=new Gain({context:this.context}),this.output=new Gain({context:this.context}),this._createFilter()}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{frequency:880,type:"lowpass"})}_createFilter(){const s=this._filter,o=this.toFrequency(this._frequency),a=1/(2*Math.PI*o);if(this._type==="lowpass"){const c=1/(a*this.context.sampleRate),d=c-1;this._filter=this.context.createIIRFilter([c,0],[1,d])}else{const c=1/(a*this.context.sampleRate)-1;this._filter=this.context.createIIRFilter([1,-1],[1,c])}this.input.chain(this._filter,this.output),s&&this.context.setTimeout(()=>{this.disposed||(this.input.disconnect(s),s.disconnect())},this.blockTime)}get frequency(){return this._frequency}set frequency(s){this._frequency=s,this._createFilter()}get type(){return this._type}set type(s){this._type=s,this._createFilter()}getFrequencyResponse(s=128){const o=new Float32Array(s);for(let d=0;d<s;d++){const b=Math.pow(d/s,2)*(2e4-20)+20;o[d]=b}const a=new Float32Array(s),c=new Float32Array(s);return this._filter.getFrequencyResponse(o,a,c),a}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this._filter.disconnect(),this}}class LowpassCombFilter extends ToneAudioNode{constructor(){super(optionsFromArguments(LowpassCombFilter.getDefaults(),arguments,["delayTime","resonance","dampening"])),this.name="LowpassCombFilter";const s=optionsFromArguments(LowpassCombFilter.getDefaults(),arguments,["delayTime","resonance","dampening"]);this._combFilter=this.output=new FeedbackCombFilter({context:this.context,delayTime:s.delayTime,resonance:s.resonance}),this.delayTime=this._combFilter.delayTime,this.resonance=this._combFilter.resonance,this._lowpass=this.input=new OnePoleFilter({context:this.context,frequency:s.dampening,type:"lowpass"}),this._lowpass.connect(this._combFilter)}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{dampening:3e3,delayTime:.1,resonance:.5})}get dampening(){return this._lowpass.frequency}set dampening(s){this._lowpass.frequency=s}dispose(){return super.dispose(),this._combFilter.dispose(),this._lowpass.dispose(),this}}class PluckSynth extends Instrument{constructor(){super(optionsFromArguments(PluckSynth.getDefaults(),arguments)),this.name="PluckSynth";const s=optionsFromArguments(PluckSynth.getDefaults(),arguments);this._noise=new Noise({context:this.context,type:"pink"}),this.attackNoise=s.attackNoise,this._lfcf=new LowpassCombFilter({context:this.context,dampening:s.dampening,resonance:s.resonance}),this.resonance=s.resonance,this.release=s.release,this._noise.connect(this._lfcf),this._lfcf.connect(this.output)}static getDefaults(){return deepMerge(Instrument.getDefaults(),{attackNoise:1,dampening:4e3,resonance:.7,release:1})}get dampening(){return this._lfcf.dampening}set dampening(s){this._lfcf.dampening=s}triggerAttack(s,o){const a=this.toFrequency(s);o=this.toSeconds(o);const c=1/a;return this._lfcf.delayTime.setValueAtTime(c,o),this._noise.start(o),this._noise.stop(o+c*this.attackNoise),this._lfcf.resonance.cancelScheduledValues(o),this._lfcf.resonance.setValueAtTime(this.resonance,o),this}triggerRelease(s){return this._lfcf.resonance.linearRampTo(0,this.release,s),this}dispose(){return super.dispose(),this._noise.dispose(),this._lfcf.dispose(),this}}class PolySynth extends Instrument{constructor(){super(optionsFromArguments(PolySynth.getDefaults(),arguments,["voice","options"])),this.name="PolySynth",this._availableVoices=[],this._activeVoices=[],this._voices=[],this._gcTimeout=-1,this._averageActiveVoices=0;const s=optionsFromArguments(PolySynth.getDefaults(),arguments,["voice","options"]);assert(!isNumber(s.voice),"DEPRECATED: The polyphony count is no longer the first argument.");const o=s.voice.getDefaults();this.options=Object.assign(o,s.options),this.voice=s.voice,this.maxPolyphony=s.maxPolyphony,this._dummyVoice=this._getNextAvailableVoice();const a=this._voices.indexOf(this._dummyVoice);this._voices.splice(a,1),this._gcTimeout=this.context.setInterval(this._collectGarbage.bind(this),1)}static getDefaults(){return Object.assign(Instrument.getDefaults(),{maxPolyphony:32,options:{},voice:Synth})}get activeVoices(){return this._activeVoices.length}_makeVoiceAvailable(s){this._availableVoices.push(s);const o=this._activeVoices.findIndex(a=>a.voice===s);this._activeVoices.splice(o,1)}_getNextAvailableVoice(){if(this._availableVoices.length)return this._availableVoices.shift();if(this._voices.length<this.maxPolyphony){const s=new this.voice(Object.assign(this.options,{context:this.context,onsilence:this._makeVoiceAvailable.bind(this)}));return s.connect(this.output),this._voices.push(s),s}else warn("Max polyphony exceeded. Note dropped.")}_collectGarbage(){if(this._averageActiveVoices=Math.max(this._averageActiveVoices*.95,this.activeVoices),this._availableVoices.length&&this._voices.length>Math.ceil(this._averageActiveVoices+1)){const s=this._availableVoices.shift(),o=this._voices.indexOf(s);this._voices.splice(o,1),this.context.isOffline||s.dispose()}}_triggerAttack(s,o,a){s.forEach(c=>{const d=new MidiClass(this.context,c).toMidi(),g=this._getNextAvailableVoice();g&&(g.triggerAttack(c,o,a),this._activeVoices.push({midi:d,voice:g,released:!1}),this.log("triggerAttack",c,o))})}_triggerRelease(s,o){s.forEach(a=>{const c=new MidiClass(this.context,a).toMidi(),d=this._activeVoices.find(({midi:g,released:b})=>g===c&&!b);d&&(d.voice.triggerRelease(o),d.released=!0,this.log("triggerRelease",a,o))})}_scheduleEvent(s,o,a,c){assert(!this.disposed,"Synth was already disposed"),a<=this.now()?s==="attack"?this._triggerAttack(o,a,c):this._triggerRelease(o,a):this.context.setTimeout(()=>{this._scheduleEvent(s,o,a,c)},a-this.now())}triggerAttack(s,o,a){Array.isArray(s)||(s=[s]);const c=this.toSeconds(o);return this._scheduleEvent("attack",s,c,a),this}triggerRelease(s,o){Array.isArray(s)||(s=[s]);const a=this.toSeconds(o);return this._scheduleEvent("release",s,a),this}triggerAttackRelease(s,o,a,c){const d=this.toSeconds(a);if(this.triggerAttack(s,d,c),isArray(o)){assert(isArray(s),"If the duration is an array, the notes must also be an array"),s=s;for(let g=0;g<s.length;g++){const b=o[Math.min(g,o.length-1)],$=this.toSeconds(b);assert($>0,"The duration must be greater than 0"),this.triggerRelease(s[g],d+$)}}else{const g=this.toSeconds(o);assert(g>0,"The duration must be greater than 0"),this.triggerRelease(s,d+g)}return this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}set(s){const o=omitFromObject(s,["onsilence","context"]);return this.options=deepMerge(this.options,o),this._voices.forEach(a=>a.set(o)),this._dummyVoice.set(o),this}get(){return this._dummyVoice.get()}releaseAll(s){const o=this.toSeconds(s);return this._activeVoices.forEach(({voice:a})=>{a.triggerRelease(o)}),this}dispose(){return super.dispose(),this._dummyVoice.dispose(),this._voices.forEach(s=>s.dispose()),this._activeVoices=[],this._availableVoices=[],this.context.clearInterval(this._gcTimeout),this}}class Sampler extends Instrument{constructor(){super(optionsFromArguments(Sampler.getDefaults(),arguments,["urls","onload","baseUrl"],"urls")),this.name="Sampler",this._activeSources=new Map;const s=optionsFromArguments(Sampler.getDefaults(),arguments,["urls","onload","baseUrl"],"urls"),o={};Object.keys(s.urls).forEach(a=>{const c=parseInt(a,10);if(assert(isNote(a)||isNumber(c)&&isFinite(c),`url key is neither a note or midi pitch: ${a}`),isNote(a)){const d=new FrequencyClass(this.context,a).toMidi();o[d]=s.urls[a]}else isNumber(c)&&isFinite(c)&&(o[c]=s.urls[c])}),this._buffers=new ToneAudioBuffers({urls:o,onload:s.onload,baseUrl:s.baseUrl,onerror:s.onerror}),this.attack=s.attack,this.release=s.release,this.curve=s.curve,this._buffers.loaded&&Promise.resolve().then(s.onload)}static getDefaults(){return Object.assign(Instrument.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:noOp,onerror:noOp,release:.1,urls:{}})}_findClosest(s){let a=0;for(;a<96;){if(this._buffers.has(s+a))return-a;if(this._buffers.has(s-a))return a;a++}throw new Error(`No available buffers for note: ${s}`)}triggerAttack(s,o,a=1){return this.log("triggerAttack",s,o,a),Array.isArray(s)||(s=[s]),s.forEach(c=>{const d=ftomf(new FrequencyClass(this.context,c).toFrequency()),g=Math.round(d),b=d-g,$=this._findClosest(g),_=g-$,_e=this._buffers.get(_),et=intervalToFrequencyRatio($+b),rt=new ToneBufferSource({url:_e,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:et}).connect(this.output);rt.start(o,0,_e.duration/et,a),isArray(this._activeSources.get(g))||this._activeSources.set(g,[]),this._activeSources.get(g).push(rt),rt.onended=()=>{if(this._activeSources&&this._activeSources.has(g)){const tt=this._activeSources.get(g),j=tt.indexOf(rt);j!==-1&&tt.splice(j,1)}}}),this}triggerRelease(s,o){return this.log("triggerRelease",s,o),Array.isArray(s)||(s=[s]),s.forEach(a=>{const c=new FrequencyClass(this.context,a).toMidi();if(this._activeSources.has(c)&&this._activeSources.get(c).length){const d=this._activeSources.get(c);o=this.toSeconds(o),d.forEach(g=>{g.stop(o)}),this._activeSources.set(c,[])}}),this}releaseAll(s){const o=this.toSeconds(s);return this._activeSources.forEach(a=>{for(;a.length;)a.shift().stop(o)}),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(s,o,a,c=1){const d=this.toSeconds(a);return this.triggerAttack(s,d,c),isArray(o)?(assert(isArray(s),"notes must be an array when duration is array"),s.forEach((g,b)=>{const $=o[Math.min(b,o.length-1)];this.triggerRelease(g,d+this.toSeconds($))})):this.triggerRelease(s,d+this.toSeconds(o)),this}add(s,o,a){if(assert(isNote(s)||isFinite(s),`note must be a pitch or midi: ${s}`),isNote(s)){const c=new FrequencyClass(this.context,s).toMidi();this._buffers.add(c,o,a)}else this._buffers.add(s,o,a);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach(s=>{s.forEach(o=>o.dispose())}),this._activeSources.clear(),this}}__decorate([timeRange(0)],Sampler.prototype,"attack",void 0);__decorate([timeRange(0)],Sampler.prototype,"release",void 0);class ToneEvent extends ToneWithContext{constructor(){super(optionsFromArguments(ToneEvent.getDefaults(),arguments,["callback","value"])),this.name="ToneEvent",this._state=new StateTimeline("stopped"),this._startOffset=0;const s=optionsFromArguments(ToneEvent.getDefaults(),arguments,["callback","value"]);this._loop=s.loop,this.callback=s.callback,this.value=s.value,this._loopStart=this.toTicks(s.loopStart),this._loopEnd=this.toTicks(s.loopEnd),this._playbackRate=s.playbackRate,this._probability=s.probability,this._humanize=s.humanize,this.mute=s.mute,this._playbackRate=s.playbackRate,this._state.increasing=!0,this._rescheduleEvents()}static getDefaults(){return Object.assign(ToneWithContext.getDefaults(),{callback:noOp,humanize:!1,loop:!1,loopEnd:"1m",loopStart:0,mute:!1,playbackRate:1,probability:1,value:null})}_rescheduleEvents(s=-1){this._state.forEachFrom(s,o=>{let a;if(o.state==="started"){o.id!==-1&&this.context.transport.clear(o.id);const c=o.time+Math.round(this.startOffset/this._playbackRate);if(this._loop===!0||isNumber(this._loop)&&this._loop>1){a=1/0,isNumber(this._loop)&&(a=this._loop*this._getLoopDuration());const d=this._state.getAfter(c);d!==null&&(a=Math.min(a,d.time-c)),a!==1/0&&(this._state.setStateAtTime("stopped",c+a+1,{id:-1}),a=new TicksClass(this.context,a));const g=new TicksClass(this.context,this._getLoopDuration());o.id=this.context.transport.scheduleRepeat(this._tick.bind(this),g,new TicksClass(this.context,c),a)}else o.id=this.context.transport.schedule(this._tick.bind(this),new TicksClass(this.context,c))}})}get state(){return this._state.getValueAtTime(this.context.transport.ticks)}get startOffset(){return this._startOffset}set startOffset(s){this._startOffset=s}get probability(){return this._probability}set probability(s){this._probability=s}get humanize(){return this._humanize}set humanize(s){this._humanize=s}start(s){const o=this.toTicks(s);return this._state.getValueAtTime(o)==="stopped"&&(this._state.add({id:-1,state:"started",time:o}),this._rescheduleEvents(o)),this}stop(s){this.cancel(s);const o=this.toTicks(s);if(this._state.getValueAtTime(o)==="started"){this._state.setStateAtTime("stopped",o,{id:-1});const a=this._state.getBefore(o);let c=o;a!==null&&(c=a.time),this._rescheduleEvents(c)}return this}cancel(s){s=defaultArg(s,-1/0);const o=this.toTicks(s);return this._state.forEachFrom(o,a=>{this.context.transport.clear(a.id)}),this._state.cancel(o),this}_tick(s){const o=this.context.transport.getTicksAtTime(s);if(!this.mute&&this._state.getValueAtTime(o)==="started"){if(this.probability<1&&Math.random()>this.probability)return;if(this.humanize){let a=.02;isBoolean(this.humanize)||(a=this.toSeconds(this.humanize)),s+=(Math.random()*2-1)*a}this.callback(s,this.value)}}_getLoopDuration(){return Math.round((this._loopEnd-this._loopStart)/this._playbackRate)}get loop(){return this._loop}set loop(s){this._loop=s,this._rescheduleEvents()}get playbackRate(){return this._playbackRate}set playbackRate(s){this._playbackRate=s,this._rescheduleEvents()}get loopEnd(){return new TicksClass(this.context,this._loopEnd).toSeconds()}set loopEnd(s){this._loopEnd=this.toTicks(s),this._loop&&this._rescheduleEvents()}get loopStart(){return new TicksClass(this.context,this._loopStart).toSeconds()}set loopStart(s){this._loopStart=this.toTicks(s),this._loop&&this._rescheduleEvents()}get progress(){if(this._loop){const s=this.context.transport.ticks,o=this._state.get(s);if(o!==null&&o.state==="started"){const a=this._getLoopDuration();return(s-o.time)%a/a}else return 0}else return 0}dispose(){return super.dispose(),this.cancel(),this._state.dispose(),this}}class Loop extends ToneWithContext{constructor(){super(optionsFromArguments(Loop.getDefaults(),arguments,["callback","interval"])),this.name="Loop";const s=optionsFromArguments(Loop.getDefaults(),arguments,["callback","interval"]);this._event=new ToneEvent({context:this.context,callback:this._tick.bind(this),loop:!0,loopEnd:s.interval,playbackRate:s.playbackRate,probability:s.probability}),this.callback=s.callback,this.iterations=s.iterations}static getDefaults(){return Object.assign(ToneWithContext.getDefaults(),{interval:"4n",callback:noOp,playbackRate:1,iterations:1/0,probability:1,mute:!1,humanize:!1})}start(s){return this._event.start(s),this}stop(s){return this._event.stop(s),this}cancel(s){return this._event.cancel(s),this}_tick(s){this.callback(s)}get state(){return this._event.state}get progress(){return this._event.progress}get interval(){return this._event.loopEnd}set interval(s){this._event.loopEnd=s}get playbackRate(){return this._event.playbackRate}set playbackRate(s){this._event.playbackRate=s}get humanize(){return this._event.humanize}set humanize(s){this._event.humanize=s}get probability(){return this._event.probability}set probability(s){this._event.probability=s}get mute(){return this._event.mute}set mute(s){this._event.mute=s}get iterations(){return this._event.loop===!0?1/0:this._event.loop}set iterations(s){s===1/0?this._event.loop=!0:this._event.loop=s}dispose(){return super.dispose(),this._event.dispose(),this}}class Part extends ToneEvent{constructor(){super(optionsFromArguments(Part.getDefaults(),arguments,["callback","events"])),this.name="Part",this._state=new StateTimeline("stopped"),this._events=new Set;const s=optionsFromArguments(Part.getDefaults(),arguments,["callback","events"]);this._state.increasing=!0,s.events.forEach(o=>{isArray(o)?this.add(o[0],o[1]):this.add(o)})}static getDefaults(){return Object.assign(ToneEvent.getDefaults(),{events:[]})}start(s,o){const a=this.toTicks(s);if(this._state.getValueAtTime(a)!=="started"){o=defaultArg(o,this._loop?this._loopStart:0),this._loop?o=defaultArg(o,this._loopStart):o=defaultArg(o,0);const c=this.toTicks(o);this._state.add({id:-1,offset:c,state:"started",time:a}),this._forEach(d=>{this._startNote(d,a,c)})}return this}_startNote(s,o,a){o-=a,this._loop?s.startOffset>=this._loopStart&&s.startOffset<this._loopEnd?(s.startOffset<a&&(o+=this._getLoopDuration()),s.start(new TicksClass(this.context,o))):s.startOffset<this._loopStart&&s.startOffset>=a&&(s.loop=!1,s.start(new TicksClass(this.context,o))):s.startOffset>=a&&s.start(new TicksClass(this.context,o))}get startOffset(){return this._startOffset}set startOffset(s){this._startOffset=s,this._forEach(o=>{o.startOffset+=this._startOffset})}stop(s){const o=this.toTicks(s);return this._state.cancel(o),this._state.setStateAtTime("stopped",o),this._forEach(a=>{a.stop(s)}),this}at(s,o){const a=new TransportTimeClass(this.context,s).toTicks(),c=new TicksClass(this.context,1).toSeconds(),d=this._events.values();let g=d.next();for(;!g.done;){const b=g.value;if(Math.abs(a-b.startOffset)<c)return isDefined(o)&&(b.value=o),b;g=d.next()}return isDefined(o)?(this.add(s,o),this.at(s)):null}add(s,o){s instanceof Object&&Reflect.has(s,"time")&&(o=s,s=o.time);const a=this.toTicks(s);let c;return o instanceof ToneEvent?(c=o,c.callback=this._tick.bind(this)):c=new ToneEvent({callback:this._tick.bind(this),context:this.context,value:o}),c.startOffset=a,c.set({humanize:this.humanize,loop:this.loop,loopEnd:this.loopEnd,loopStart:this.loopStart,playbackRate:this.playbackRate,probability:this.probability}),this._events.add(c),this._restartEvent(c),this}_restartEvent(s){this._state.forEach(o=>{o.state==="started"?this._startNote(s,o.time,o.offset):s.stop(new TicksClass(this.context,o.time))})}remove(s,o){return isObject(s)&&s.hasOwnProperty("time")&&(o=s,s=o.time),s=this.toTicks(s),this._events.forEach(a=>{a.startOffset===s&&(isUndef(o)||isDefined(o)&&a.value===o)&&(this._events.delete(a),a.dispose())}),this}clear(){return this._forEach(s=>s.dispose()),this._events.clear(),this}cancel(s){return this._forEach(o=>o.cancel(s)),this._state.cancel(this.toTicks(s)),this}_forEach(s){return this._events&&this._events.forEach(o=>{o instanceof Part?o._forEach(s):s(o)}),this}_setAll(s,o){this._forEach(a=>{a[s]=o})}_tick(s,o){this.mute||this.callback(s,o)}_testLoopBoundries(s){this._loop&&(s.startOffset<this._loopStart||s.startOffset>=this._loopEnd)?s.cancel(0):s.state==="stopped"&&this._restartEvent(s)}get probability(){return this._probability}set probability(s){this._probability=s,this._setAll("probability",s)}get humanize(){return this._humanize}set humanize(s){this._humanize=s,this._setAll("humanize",s)}get loop(){return this._loop}set loop(s){this._loop=s,this._forEach(o=>{o.loopStart=this.loopStart,o.loopEnd=this.loopEnd,o.loop=s,this._testLoopBoundries(o)})}get loopEnd(){return new TicksClass(this.context,this._loopEnd).toSeconds()}set loopEnd(s){this._loopEnd=this.toTicks(s),this._loop&&this._forEach(o=>{o.loopEnd=s,this._testLoopBoundries(o)})}get loopStart(){return new TicksClass(this.context,this._loopStart).toSeconds()}set loopStart(s){this._loopStart=this.toTicks(s),this._loop&&this._forEach(o=>{o.loopStart=this.loopStart,this._testLoopBoundries(o)})}get playbackRate(){return this._playbackRate}set playbackRate(s){this._playbackRate=s,this._setAll("playbackRate",s)}get length(){return this._events.size}dispose(){return super.dispose(),this.clear(),this}}function*upPatternGen(i){let s=0;for(;s<i.length;)s=clampToArraySize(s,i),yield i[s],s++}function*downPatternGen(i){let s=i.length-1;for(;s>=0;)s=clampToArraySize(s,i),yield i[s],s--}function*infiniteGen(i,s){for(;;)yield*s(i)}function clampToArraySize(i,s){return clamp(i,0,s.length-1)}function*alternatingGenerator(i,s){let o=s?0:i.length-1;for(;;)o=clampToArraySize(o,i),yield i[o],s?(o++,o>=i.length-1&&(s=!1)):(o--,o<=0&&(s=!0))}function*jumpUp(i){let s=0,o=0;for(;s<i.length;)s=clampToArraySize(s,i),yield i[s],o++,s+=o%2?2:-1}function*jumpDown(i){let s=i.length-1,o=0;for(;s>=0;)s=clampToArraySize(s,i),yield i[s],o++,s+=o%2?-2:1}function*randomGen(i){for(;;){const s=Math.floor(Math.random()*i.length);yield i[s]}}function*randomOnce(i){const s=[];for(let o=0;o<i.length;o++)s.push(o);for(;s.length>0;){const o=s.splice(Math.floor(s.length*Math.random()),1),a=clampToArraySize(o[0],i);yield i[a]}}function*randomWalk(i){let s=Math.floor(Math.random()*i.length);for(;;)s===0?s++:s===i.length-1||Math.random()<.5?s--:s++,yield i[s]}function*PatternGenerator(i,s="up",o=0){switch(assert(i.length>0,"The array must have more than one value in it"),s){case"up":yield*infiniteGen(i,upPatternGen);case"down":yield*infiniteGen(i,downPatternGen);case"upDown":yield*alternatingGenerator(i,!0);case"downUp":yield*alternatingGenerator(i,!1);case"alternateUp":yield*infiniteGen(i,jumpUp);case"alternateDown":yield*infiniteGen(i,jumpDown);case"random":yield*randomGen(i);case"randomOnce":yield*infiniteGen(i,randomOnce);case"randomWalk":yield*randomWalk(i)}}class Pattern extends Loop{constructor(){super(optionsFromArguments(Pattern.getDefaults(),arguments,["callback","values","pattern"])),this.name="Pattern";const s=optionsFromArguments(Pattern.getDefaults(),arguments,["callback","values","pattern"]);this.callback=s.callback,this._values=s.values,this._pattern=PatternGenerator(s.values,s.pattern),this._type=s.pattern}static getDefaults(){return Object.assign(Loop.getDefaults(),{pattern:"up",values:[],callback:noOp})}_tick(s){const o=this._pattern.next();this._value=o.value,this.callback(s,this._value)}get values(){return this._values}set values(s){this._values=s,this.pattern=this._type}get value(){return this._value}get pattern(){return this._type}set pattern(s){this._type=s,this._pattern=PatternGenerator(this._values,this._type)}}class Sequence extends ToneEvent{constructor(){super(optionsFromArguments(Sequence.getDefaults(),arguments,["callback","events","subdivision"])),this.name="Sequence",this._part=new Part({callback:this._seqCallback.bind(this),context:this.context}),this._events=[],this._eventsArray=[];const s=optionsFromArguments(Sequence.getDefaults(),arguments,["callback","events","subdivision"]);this._subdivision=this.toTicks(s.subdivision),this.events=s.events,this.loop=s.loop,this.loopStart=s.loopStart,this.loopEnd=s.loopEnd,this.playbackRate=s.playbackRate,this.probability=s.probability,this.humanize=s.humanize,this.mute=s.mute,this.playbackRate=s.playbackRate}static getDefaults(){return Object.assign(omitFromObject(ToneEvent.getDefaults(),["value"]),{events:[],loop:!0,loopEnd:0,loopStart:0,subdivision:"8n"})}_seqCallback(s,o){o!==null&&this.callback(s,o)}get events(){return this._events}set events(s){this.clear(),this._eventsArray=s,this._events=this._createSequence(this._eventsArray),this._eventsUpdated()}start(s,o){return this._part.start(s,o&&this._indexTime(o)),this}stop(s){return this._part.stop(s),this}get subdivision(){return new TicksClass(this.context,this._subdivision).toSeconds()}_createSequence(s){return new Proxy(s,{get:(o,a)=>o[a],set:(o,a,c)=>(isString(a)&&isFinite(parseInt(a,10))&&isArray(c)?o[a]=this._createSequence(c):o[a]=c,this._eventsUpdated(),!0)})}_eventsUpdated(){this._part.clear(),this._rescheduleSequence(this._eventsArray,this._subdivision,this.startOffset),this.loopEnd=this.loopEnd}_rescheduleSequence(s,o,a){s.forEach((c,d)=>{const g=d*o+a;if(isArray(c))this._rescheduleSequence(c,o/c.length,g);else{const b=new TicksClass(this.context,g,"i").toSeconds();this._part.add(b,c)}})}_indexTime(s){return new TicksClass(this.context,s*this._subdivision+this.startOffset).toSeconds()}clear(){return this._part.clear(),this}dispose(){return super.dispose(),this._part.dispose(),this}get loop(){return this._part.loop}set loop(s){this._part.loop=s}get loopStart(){return this._loopStart}set loopStart(s){this._loopStart=s,this._part.loopStart=this._indexTime(s)}get loopEnd(){return this._loopEnd}set loopEnd(s){this._loopEnd=s,s===0?this._part.loopEnd=this._indexTime(this._eventsArray.length):this._part.loopEnd=this._indexTime(s)}get startOffset(){return this._part.startOffset}set startOffset(s){this._part.startOffset=s}get playbackRate(){return this._part.playbackRate}set playbackRate(s){this._part.playbackRate=s}get probability(){return this._part.probability}set probability(s){this._part.probability=s}get progress(){return this._part.progress}get humanize(){return this._part.humanize}set humanize(s){this._part.humanize=s}get length(){return this._part.length}}class CrossFade extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(CrossFade.getDefaults(),arguments,["fade"]))),this.name="CrossFade",this._panner=this.context.createStereoPanner(),this._split=this.context.createChannelSplitter(2),this._g2a=new GainToAudio({context:this.context}),this.a=new Gain({context:this.context,gain:0}),this.b=new Gain({context:this.context,gain:0}),this.output=new Gain({context:this.context}),this._internalChannels=[this.a,this.b];const s=optionsFromArguments(CrossFade.getDefaults(),arguments,["fade"]);this.fade=new Signal({context:this.context,units:"normalRange",value:s.fade}),readOnly(this,"fade"),this.context.getConstant(1).connect(this._panner),this._panner.connect(this._split),this._panner.channelCount=1,this._panner.channelCountMode="explicit",connect(this._split,this.a.gain,0),connect(this._split,this.b.gain,1),this.fade.chain(this._g2a,this._panner.pan),this.a.connect(this.output),this.b.connect(this.output)}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{fade:.5})}dispose(){return super.dispose(),this.a.dispose(),this.b.dispose(),this.output.dispose(),this.fade.dispose(),this._g2a.dispose(),this._panner.disconnect(),this._split.disconnect(),this}}class Effect extends ToneAudioNode{constructor(s){super(s),this.name="Effect",this._dryWet=new CrossFade({context:this.context}),this.wet=this._dryWet.fade,this.effectSend=new Gain({context:this.context}),this.effectReturn=new Gain({context:this.context}),this.input=new Gain({context:this.context}),this.output=this._dryWet,this.input.fan(this._dryWet.a,this.effectSend),this.effectReturn.connect(this._dryWet.b),this.wet.setValueAtTime(s.wet,0),this._internalChannels=[this.effectReturn,this.effectSend],readOnly(this,"wet")}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{wet:1})}connectEffect(s){return this._internalChannels.push(s),this.effectSend.chain(s,this.effectReturn),this}dispose(){return super.dispose(),this._dryWet.dispose(),this.effectSend.dispose(),this.effectReturn.dispose(),this.wet.dispose(),this}}class LFOEffect extends Effect{constructor(s){super(s),this.name="LFOEffect",this._lfo=new LFO({context:this.context,frequency:s.frequency,amplitude:s.depth}),this.depth=this._lfo.amplitude,this.frequency=this._lfo.frequency,this.type=s.type,readOnly(this,["frequency","depth"])}static getDefaults(){return Object.assign(Effect.getDefaults(),{frequency:1,type:"sine",depth:1})}start(s){return this._lfo.start(s),this}stop(s){return this._lfo.stop(s),this}sync(){return this._lfo.sync(),this}unsync(){return this._lfo.unsync(),this}get type(){return this._lfo.type}set type(s){this._lfo.type=s}dispose(){return super.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class AutoFilter extends LFOEffect{constructor(){super(optionsFromArguments(AutoFilter.getDefaults(),arguments,["frequency","baseFrequency","octaves"])),this.name="AutoFilter";const s=optionsFromArguments(AutoFilter.getDefaults(),arguments,["frequency","baseFrequency","octaves"]);this.filter=new Filter(Object.assign(s.filter,{context:this.context})),this.connectEffect(this.filter),this._lfo.connect(this.filter.frequency),this.octaves=s.octaves,this.baseFrequency=s.baseFrequency}static getDefaults(){return Object.assign(LFOEffect.getDefaults(),{baseFrequency:200,octaves:2.6,filter:{type:"lowpass",rolloff:-12,Q:1}})}get baseFrequency(){return this._lfo.min}set baseFrequency(s){this._lfo.min=this.toFrequency(s),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(s){this._octaves=s,this._lfo.max=this._lfo.min*Math.pow(2,s)}dispose(){return super.dispose(),this.filter.dispose(),this}}class Panner extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(Panner.getDefaults(),arguments,["pan"]))),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner;const s=optionsFromArguments(Panner.getDefaults(),arguments,["pan"]);this.pan=new Param({context:this.context,param:this._panner.pan,value:s.pan,minValue:-1,maxValue:1}),this._panner.channelCount=s.channelCount,this._panner.channelCountMode="explicit",readOnly(this,"pan")}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}class AutoPanner extends LFOEffect{constructor(){super(optionsFromArguments(AutoPanner.getDefaults(),arguments,["frequency"])),this.name="AutoPanner";const s=optionsFromArguments(AutoPanner.getDefaults(),arguments,["frequency"]);this._panner=new Panner({context:this.context,channelCount:s.channelCount}),this.connectEffect(this._panner),this._lfo.connect(this._panner.pan),this._lfo.min=-1,this._lfo.max=1}static getDefaults(){return Object.assign(LFOEffect.getDefaults(),{channelCount:1})}dispose(){return super.dispose(),this._panner.dispose(),this}}class Follower extends ToneAudioNode{constructor(){super(optionsFromArguments(Follower.getDefaults(),arguments,["smoothing"])),this.name="Follower";const s=optionsFromArguments(Follower.getDefaults(),arguments,["smoothing"]);this._abs=this.input=new Abs({context:this.context}),this._lowpass=this.output=new OnePoleFilter({context:this.context,frequency:1/this.toSeconds(s.smoothing),type:"lowpass"}),this._abs.connect(this._lowpass),this._smoothing=s.smoothing}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{smoothing:.05})}get smoothing(){return this._smoothing}set smoothing(s){this._smoothing=s,this._lowpass.frequency=1/this.toSeconds(this.smoothing)}dispose(){return super.dispose(),this._abs.dispose(),this._lowpass.dispose(),this}}class AutoWah extends Effect{constructor(){super(optionsFromArguments(AutoWah.getDefaults(),arguments,["baseFrequency","octaves","sensitivity"])),this.name="AutoWah";const s=optionsFromArguments(AutoWah.getDefaults(),arguments,["baseFrequency","octaves","sensitivity"]);this._follower=new Follower({context:this.context,smoothing:s.follower}),this._sweepRange=new ScaleExp({context:this.context,min:0,max:1,exponent:.5}),this._baseFrequency=this.toFrequency(s.baseFrequency),this._octaves=s.octaves,this._inputBoost=new Gain({context:this.context}),this._bandpass=new Filter({context:this.context,rolloff:-48,frequency:0,Q:s.Q}),this._peaking=new Filter({context:this.context,type:"peaking"}),this._peaking.gain.value=s.gain,this.gain=this._peaking.gain,this.Q=this._bandpass.Q,this.effectSend.chain(this._inputBoost,this._follower,this._sweepRange),this._sweepRange.connect(this._bandpass.frequency),this._sweepRange.connect(this._peaking.frequency),this.effectSend.chain(this._bandpass,this._peaking,this.effectReturn),this._setSweepRange(),this.sensitivity=s.sensitivity,readOnly(this,["gain","Q"])}static getDefaults(){return Object.assign(Effect.getDefaults(),{baseFrequency:100,octaves:6,sensitivity:0,Q:2,gain:2,follower:.2})}get octaves(){return this._octaves}set octaves(s){this._octaves=s,this._setSweepRange()}get follower(){return this._follower.smoothing}set follower(s){this._follower.smoothing=s}get baseFrequency(){return this._baseFrequency}set baseFrequency(s){this._baseFrequency=this.toFrequency(s),this._setSweepRange()}get sensitivity(){return gainToDb(1/this._inputBoost.gain.value)}set sensitivity(s){this._inputBoost.gain.value=1/dbToGain(s)}_setSweepRange(){this._sweepRange.min=this._baseFrequency,this._sweepRange.max=Math.min(this._baseFrequency*Math.pow(2,this._octaves),this.context.sampleRate/2)}dispose(){return super.dispose(),this._follower.dispose(),this._sweepRange.dispose(),this._bandpass.dispose(),this._peaking.dispose(),this._inputBoost.dispose(),this}}const workletName="bit-crusher",bitCrusherWorklet=`
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;registerProcessor(workletName,bitCrusherWorklet);class BitCrusher extends Effect{constructor(){super(optionsFromArguments(BitCrusher.getDefaults(),arguments,["bits"])),this.name="BitCrusher";const s=optionsFromArguments(BitCrusher.getDefaults(),arguments,["bits"]);this._bitCrusherWorklet=new BitCrusherWorklet({context:this.context,bits:s.bits}),this.connectEffect(this._bitCrusherWorklet),this.bits=this._bitCrusherWorklet.bits}static getDefaults(){return Object.assign(Effect.getDefaults(),{bits:4})}dispose(){return super.dispose(),this._bitCrusherWorklet.dispose(),this}}class BitCrusherWorklet extends ToneAudioWorklet{constructor(){super(optionsFromArguments(BitCrusherWorklet.getDefaults(),arguments)),this.name="BitCrusherWorklet";const s=optionsFromArguments(BitCrusherWorklet.getDefaults(),arguments);this.input=new Gain({context:this.context}),this.output=new Gain({context:this.context}),this.bits=new Param({context:this.context,value:s.bits,units:"positive",minValue:1,maxValue:16,param:this._dummyParam,swappable:!0})}static getDefaults(){return Object.assign(ToneAudioWorklet.getDefaults(),{bits:12})}_audioWorkletName(){return workletName}onReady(s){connectSeries(this.input,s,this.output);const o=s.parameters.get("bits");this.bits.setParam(o)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.bits.dispose(),this}}class Chebyshev extends Effect{constructor(){super(optionsFromArguments(Chebyshev.getDefaults(),arguments,["order"])),this.name="Chebyshev";const s=optionsFromArguments(Chebyshev.getDefaults(),arguments,["order"]);this._shaper=new WaveShaper({context:this.context,length:4096}),this._order=s.order,this.connectEffect(this._shaper),this.order=s.order,this.oversample=s.oversample}static getDefaults(){return Object.assign(Effect.getDefaults(),{order:1,oversample:"none"})}_getCoefficient(s,o,a){return a.has(o)||(o===0?a.set(o,0):o===1?a.set(o,s):a.set(o,2*s*this._getCoefficient(s,o-1,a)-this._getCoefficient(s,o-2,a))),a.get(o)}get order(){return this._order}set order(s){this._order=s,this._shaper.setMap(o=>this._getCoefficient(o,s,new Map))}get oversample(){return this._shaper.oversample}set oversample(s){this._shaper.oversample=s}dispose(){return super.dispose(),this._shaper.dispose(),this}}class Split extends ToneAudioNode{constructor(){super(optionsFromArguments(Split.getDefaults(),arguments,["channels"])),this.name="Split";const s=optionsFromArguments(Split.getDefaults(),arguments,["channels"]);this._splitter=this.input=this.output=this.context.createChannelSplitter(s.channels),this._internalChannels=[this._splitter]}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._splitter.disconnect(),this}}class Merge extends ToneAudioNode{constructor(){super(optionsFromArguments(Merge.getDefaults(),arguments,["channels"])),this.name="Merge";const s=optionsFromArguments(Merge.getDefaults(),arguments,["channels"]);this._merger=this.output=this.input=this.context.createChannelMerger(s.channels)}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._merger.disconnect(),this}}class StereoEffect extends ToneAudioNode{constructor(s){super(s),this.name="StereoEffect",this.input=new Gain({context:this.context}),this.input.channelCount=2,this.input.channelCountMode="explicit",this._dryWet=this.output=new CrossFade({context:this.context,fade:s.wet}),this.wet=this._dryWet.fade,this._split=new Split({context:this.context,channels:2}),this._merge=new Merge({context:this.context,channels:2}),this.input.connect(this._split),this.input.connect(this._dryWet.a),this._merge.connect(this._dryWet.b),readOnly(this,["wet"])}connectEffectLeft(...s){this._split.connect(s[0],0,0),connectSeries(...s),connect(s[s.length-1],this._merge,0,0)}connectEffectRight(...s){this._split.connect(s[0],1,0),connectSeries(...s),connect(s[s.length-1],this._merge,0,1)}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{wet:1})}dispose(){return super.dispose(),this._dryWet.dispose(),this._split.dispose(),this._merge.dispose(),this}}class StereoFeedbackEffect extends StereoEffect{constructor(s){super(s),this.feedback=new Signal({context:this.context,value:s.feedback,units:"normalRange"}),this._feedbackL=new Gain({context:this.context}),this._feedbackR=new Gain({context:this.context}),this._feedbackSplit=new Split({context:this.context,channels:2}),this._feedbackMerge=new Merge({context:this.context,channels:2}),this._merge.connect(this._feedbackSplit),this._feedbackMerge.connect(this._split),this._feedbackSplit.connect(this._feedbackL,0,0),this._feedbackL.connect(this._feedbackMerge,0,0),this._feedbackSplit.connect(this._feedbackR,1,0),this._feedbackR.connect(this._feedbackMerge,0,1),this.feedback.fan(this._feedbackL.gain,this._feedbackR.gain),readOnly(this,["feedback"])}static getDefaults(){return Object.assign(StereoEffect.getDefaults(),{feedback:.5})}dispose(){return super.dispose(),this.feedback.dispose(),this._feedbackL.dispose(),this._feedbackR.dispose(),this._feedbackSplit.dispose(),this._feedbackMerge.dispose(),this}}class Chorus extends StereoFeedbackEffect{constructor(){super(optionsFromArguments(Chorus.getDefaults(),arguments,["frequency","delayTime","depth"])),this.name="Chorus";const s=optionsFromArguments(Chorus.getDefaults(),arguments,["frequency","delayTime","depth"]);this._depth=s.depth,this._delayTime=s.delayTime/1e3,this._lfoL=new LFO({context:this.context,frequency:s.frequency,min:0,max:1}),this._lfoR=new LFO({context:this.context,frequency:s.frequency,min:0,max:1,phase:180}),this._delayNodeL=new Delay({context:this.context}),this._delayNodeR=new Delay({context:this.context}),this.frequency=this._lfoL.frequency,readOnly(this,["frequency"]),this._lfoL.frequency.connect(this._lfoR.frequency),this.connectEffectLeft(this._delayNodeL),this.connectEffectRight(this._delayNodeR),this._lfoL.connect(this._delayNodeL.delayTime),this._lfoR.connect(this._delayNodeR.delayTime),this.depth=this._depth,this.type=s.type,this.spread=s.spread}static getDefaults(){return Object.assign(StereoFeedbackEffect.getDefaults(),{frequency:1.5,delayTime:3.5,depth:.7,type:"sine",spread:180,feedback:0,wet:.5})}get depth(){return this._depth}set depth(s){this._depth=s;const o=this._delayTime*s;this._lfoL.min=Math.max(this._delayTime-o,0),this._lfoL.max=this._delayTime+o,this._lfoR.min=Math.max(this._delayTime-o,0),this._lfoR.max=this._delayTime+o}get delayTime(){return this._delayTime*1e3}set delayTime(s){this._delayTime=s/1e3,this.depth=this._depth}get type(){return this._lfoL.type}set type(s){this._lfoL.type=s,this._lfoR.type=s}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(s){this._lfoL.phase=90-s/2,this._lfoR.phase=s/2+90}start(s){return this._lfoL.start(s),this._lfoR.start(s),this}stop(s){return this._lfoL.stop(s),this._lfoR.stop(s),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._delayNodeL.dispose(),this._delayNodeR.dispose(),this.frequency.dispose(),this}}class Distortion extends Effect{constructor(){super(optionsFromArguments(Distortion.getDefaults(),arguments,["distortion"])),this.name="Distortion";const s=optionsFromArguments(Distortion.getDefaults(),arguments,["distortion"]);this._shaper=new WaveShaper({context:this.context,length:4096}),this._distortion=s.distortion,this.connectEffect(this._shaper),this.distortion=s.distortion,this.oversample=s.oversample}static getDefaults(){return Object.assign(Effect.getDefaults(),{distortion:.4,oversample:"none"})}get distortion(){return this._distortion}set distortion(s){this._distortion=s;const o=s*100,a=Math.PI/180;this._shaper.setMap(c=>Math.abs(c)<.001?0:(3+o)*c*20*a/(Math.PI+o*Math.abs(c)))}get oversample(){return this._shaper.oversample}set oversample(s){this._shaper.oversample=s}dispose(){return super.dispose(),this._shaper.dispose(),this}}class FeedbackEffect extends Effect{constructor(s){super(s),this.name="FeedbackEffect",this._feedbackGain=new Gain({context:this.context,gain:s.feedback,units:"normalRange"}),this.feedback=this._feedbackGain.gain,readOnly(this,"feedback"),this.effectReturn.chain(this._feedbackGain,this.effectSend)}static getDefaults(){return Object.assign(Effect.getDefaults(),{feedback:.125})}dispose(){return super.dispose(),this._feedbackGain.dispose(),this.feedback.dispose(),this}}class FeedbackDelay extends FeedbackEffect{constructor(){super(optionsFromArguments(FeedbackDelay.getDefaults(),arguments,["delayTime","feedback"])),this.name="FeedbackDelay";const s=optionsFromArguments(FeedbackDelay.getDefaults(),arguments,["delayTime","feedback"]);this._delayNode=new Delay({context:this.context,delayTime:s.delayTime,maxDelay:s.maxDelay}),this.delayTime=this._delayNode.delayTime,this.connectEffect(this._delayNode),readOnly(this,"delayTime")}static getDefaults(){return Object.assign(FeedbackEffect.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._delayNode.dispose(),this.delayTime.dispose(),this}}class PhaseShiftAllpass extends ToneAudioNode{constructor(s){super(s),this.name="PhaseShiftAllpass",this.input=new Gain({context:this.context}),this.output=new Gain({context:this.context}),this.offset90=new Gain({context:this.context});const o=[.6923878,.9360654322959,.988229522686,.9987488452737],a=[.4021921162426,.856171088242,.9722909545651,.9952884791278];this._bank0=this._createAllPassFilterBank(o),this._bank1=this._createAllPassFilterBank(a),this._oneSampleDelay=this.context.createIIRFilter([0,1],[1,0]),connectSeries(this.input,...this._bank0,this._oneSampleDelay,this.output),connectSeries(this.input,...this._bank1,this.offset90)}_createAllPassFilterBank(s){return s.map(a=>{const c=[[a*a,0,-1],[1,0,-(a*a)]];return this.context.createIIRFilter(c[0],c[1])})}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.offset90.dispose(),this._bank0.forEach(s=>s.disconnect()),this._bank1.forEach(s=>s.disconnect()),this._oneSampleDelay.disconnect(),this}}class FrequencyShifter extends Effect{constructor(){super(optionsFromArguments(FrequencyShifter.getDefaults(),arguments,["frequency"])),this.name="FrequencyShifter";const s=optionsFromArguments(FrequencyShifter.getDefaults(),arguments,["frequency"]);this.frequency=new Signal({context:this.context,units:"frequency",value:s.frequency,minValue:-this.context.sampleRate/2,maxValue:this.context.sampleRate/2}),this._sine=new ToneOscillatorNode({context:this.context,type:"sine"}),this._cosine=new Oscillator({context:this.context,phase:-90,type:"sine"}),this._sineMultiply=new Multiply({context:this.context}),this._cosineMultiply=new Multiply({context:this.context}),this._negate=new Negate({context:this.context}),this._add=new Add({context:this.context}),this._phaseShifter=new PhaseShiftAllpass({context:this.context}),this.effectSend.connect(this._phaseShifter),this.frequency.fan(this._sine.frequency,this._cosine.frequency),this._phaseShifter.offset90.connect(this._cosineMultiply),this._cosine.connect(this._cosineMultiply.factor),this._phaseShifter.connect(this._sineMultiply),this._sine.connect(this._sineMultiply.factor),this._sineMultiply.connect(this._negate),this._cosineMultiply.connect(this._add),this._negate.connect(this._add.addend),this._add.connect(this.effectReturn);const o=this.immediate();this._sine.start(o),this._cosine.start(o)}static getDefaults(){return Object.assign(Effect.getDefaults(),{frequency:0})}dispose(){return super.dispose(),this.frequency.dispose(),this._add.dispose(),this._cosine.dispose(),this._cosineMultiply.dispose(),this._negate.dispose(),this._phaseShifter.dispose(),this._sine.dispose(),this._sineMultiply.dispose(),this}}const combFilterTunings=[1557/44100,1617/44100,1491/44100,1422/44100,1277/44100,1356/44100,1188/44100,1116/44100],allpassFilterFrequencies=[225,556,441,341];class Freeverb extends StereoEffect{constructor(){super(optionsFromArguments(Freeverb.getDefaults(),arguments,["roomSize","dampening"])),this.name="Freeverb",this._combFilters=[],this._allpassFiltersL=[],this._allpassFiltersR=[];const s=optionsFromArguments(Freeverb.getDefaults(),arguments,["roomSize","dampening"]);this.roomSize=new Signal({context:this.context,value:s.roomSize,units:"normalRange"}),this._allpassFiltersL=allpassFilterFrequencies.map(o=>{const a=this.context.createBiquadFilter();return a.type="allpass",a.frequency.value=o,a}),this._allpassFiltersR=allpassFilterFrequencies.map(o=>{const a=this.context.createBiquadFilter();return a.type="allpass",a.frequency.value=o,a}),this._combFilters=combFilterTunings.map((o,a)=>{const c=new LowpassCombFilter({context:this.context,dampening:s.dampening,delayTime:o});return a<combFilterTunings.length/2?this.connectEffectLeft(c,...this._allpassFiltersL):this.connectEffectRight(c,...this._allpassFiltersR),this.roomSize.connect(c.resonance),c}),readOnly(this,["roomSize"])}static getDefaults(){return Object.assign(StereoEffect.getDefaults(),{roomSize:.7,dampening:3e3})}get dampening(){return this._combFilters[0].dampening}set dampening(s){this._combFilters.forEach(o=>o.dampening=s)}dispose(){return super.dispose(),this._allpassFiltersL.forEach(s=>s.disconnect()),this._allpassFiltersR.forEach(s=>s.disconnect()),this._combFilters.forEach(s=>s.dispose()),this.roomSize.dispose(),this}}const combFilterDelayTimes=[1687/25e3,1601/25e3,2053/25e3,2251/25e3],combFilterResonances=[.773,.802,.753,.733],allpassFilterFreqs=[347,113,37];class JCReverb extends StereoEffect{constructor(){super(optionsFromArguments(JCReverb.getDefaults(),arguments,["roomSize"])),this.name="JCReverb",this._allpassFilters=[],this._feedbackCombFilters=[];const s=optionsFromArguments(JCReverb.getDefaults(),arguments,["roomSize"]);this.roomSize=new Signal({context:this.context,value:s.roomSize,units:"normalRange"}),this._scaleRoomSize=new Scale({context:this.context,min:-.733,max:.197}),this._allpassFilters=allpassFilterFreqs.map(o=>{const a=this.context.createBiquadFilter();return a.type="allpass",a.frequency.value=o,a}),this._feedbackCombFilters=combFilterDelayTimes.map((o,a)=>{const c=new FeedbackCombFilter({context:this.context,delayTime:o});return this._scaleRoomSize.connect(c.resonance),c.resonance.value=combFilterResonances[a],a<combFilterDelayTimes.length/2?this.connectEffectLeft(...this._allpassFilters,c):this.connectEffectRight(...this._allpassFilters,c),c}),this.roomSize.connect(this._scaleRoomSize),readOnly(this,["roomSize"])}static getDefaults(){return Object.assign(StereoEffect.getDefaults(),{roomSize:.5})}dispose(){return super.dispose(),this._allpassFilters.forEach(s=>s.disconnect()),this._feedbackCombFilters.forEach(s=>s.dispose()),this.roomSize.dispose(),this._scaleRoomSize.dispose(),this}}class StereoXFeedbackEffect extends StereoFeedbackEffect{constructor(s){super(s),this._feedbackL.disconnect(),this._feedbackL.connect(this._feedbackMerge,0,1),this._feedbackR.disconnect(),this._feedbackR.connect(this._feedbackMerge,0,0),readOnly(this,["feedback"])}}class PingPongDelay extends StereoXFeedbackEffect{constructor(){super(optionsFromArguments(PingPongDelay.getDefaults(),arguments,["delayTime","feedback"])),this.name="PingPongDelay";const s=optionsFromArguments(PingPongDelay.getDefaults(),arguments,["delayTime","feedback"]);this._leftDelay=new Delay({context:this.context,maxDelay:s.maxDelay}),this._rightDelay=new Delay({context:this.context,maxDelay:s.maxDelay}),this._rightPreDelay=new Delay({context:this.context,maxDelay:s.maxDelay}),this.delayTime=new Signal({context:this.context,units:"time",value:s.delayTime}),this.connectEffectLeft(this._leftDelay),this.connectEffectRight(this._rightPreDelay,this._rightDelay),this.delayTime.fan(this._leftDelay.delayTime,this._rightDelay.delayTime,this._rightPreDelay.delayTime),this._feedbackL.disconnect(),this._feedbackL.connect(this._rightDelay),readOnly(this,["delayTime"])}static getDefaults(){return Object.assign(StereoXFeedbackEffect.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._leftDelay.dispose(),this._rightDelay.dispose(),this._rightPreDelay.dispose(),this.delayTime.dispose(),this}}class PitchShift extends FeedbackEffect{constructor(){super(optionsFromArguments(PitchShift.getDefaults(),arguments,["pitch"])),this.name="PitchShift";const s=optionsFromArguments(PitchShift.getDefaults(),arguments,["pitch"]);this._frequency=new Signal({context:this.context}),this._delayA=new Delay({maxDelay:1,context:this.context}),this._lfoA=new LFO({context:this.context,min:0,max:.1,type:"sawtooth"}).connect(this._delayA.delayTime),this._delayB=new Delay({maxDelay:1,context:this.context}),this._lfoB=new LFO({context:this.context,min:0,max:.1,type:"sawtooth",phase:180}).connect(this._delayB.delayTime),this._crossFade=new CrossFade({context:this.context}),this._crossFadeLFO=new LFO({context:this.context,min:0,max:1,type:"triangle",phase:90}).connect(this._crossFade.fade),this._feedbackDelay=new Delay({delayTime:s.delayTime,context:this.context}),this.delayTime=this._feedbackDelay.delayTime,readOnly(this,"delayTime"),this._pitch=s.pitch,this._windowSize=s.windowSize,this._delayA.connect(this._crossFade.a),this._delayB.connect(this._crossFade.b),this._frequency.fan(this._lfoA.frequency,this._lfoB.frequency,this._crossFadeLFO.frequency),this.effectSend.fan(this._delayA,this._delayB),this._crossFade.chain(this._feedbackDelay,this.effectReturn);const o=this.now();this._lfoA.start(o),this._lfoB.start(o),this._crossFadeLFO.start(o),this.windowSize=this._windowSize}static getDefaults(){return Object.assign(FeedbackEffect.getDefaults(),{pitch:0,windowSize:.1,delayTime:0,feedback:0})}get pitch(){return this._pitch}set pitch(s){this._pitch=s;let o=0;s<0?(this._lfoA.min=0,this._lfoA.max=this._windowSize,this._lfoB.min=0,this._lfoB.max=this._windowSize,o=intervalToFrequencyRatio(s-1)+1):(this._lfoA.min=this._windowSize,this._lfoA.max=0,this._lfoB.min=this._windowSize,this._lfoB.max=0,o=intervalToFrequencyRatio(s)-1),this._frequency.value=o*(1.2/this._windowSize)}get windowSize(){return this._windowSize}set windowSize(s){this._windowSize=this.toSeconds(s),this.pitch=this._pitch}dispose(){return super.dispose(),this._frequency.dispose(),this._delayA.dispose(),this._delayB.dispose(),this._lfoA.dispose(),this._lfoB.dispose(),this._crossFade.dispose(),this._crossFadeLFO.dispose(),this._feedbackDelay.dispose(),this}}class Phaser extends StereoEffect{constructor(){super(optionsFromArguments(Phaser.getDefaults(),arguments,["frequency","octaves","baseFrequency"])),this.name="Phaser";const s=optionsFromArguments(Phaser.getDefaults(),arguments,["frequency","octaves","baseFrequency"]);this._lfoL=new LFO({context:this.context,frequency:s.frequency,min:0,max:1}),this._lfoR=new LFO({context:this.context,frequency:s.frequency,min:0,max:1,phase:180}),this._baseFrequency=this.toFrequency(s.baseFrequency),this._octaves=s.octaves,this.Q=new Signal({context:this.context,value:s.Q,units:"positive"}),this._filtersL=this._makeFilters(s.stages,this._lfoL),this._filtersR=this._makeFilters(s.stages,this._lfoR),this.frequency=this._lfoL.frequency,this.frequency.value=s.frequency,this.connectEffectLeft(...this._filtersL),this.connectEffectRight(...this._filtersR),this._lfoL.frequency.connect(this._lfoR.frequency),this.baseFrequency=s.baseFrequency,this.octaves=s.octaves,this._lfoL.start(),this._lfoR.start(),readOnly(this,["frequency","Q"])}static getDefaults(){return Object.assign(StereoEffect.getDefaults(),{frequency:.5,octaves:3,stages:10,Q:10,baseFrequency:350})}_makeFilters(s,o){const a=[];for(let c=0;c<s;c++){const d=this.context.createBiquadFilter();d.type="allpass",this.Q.connect(d.Q),o.connect(d.frequency),a.push(d)}return a}get octaves(){return this._octaves}set octaves(s){this._octaves=s;const o=this._baseFrequency*Math.pow(2,s);this._lfoL.max=o,this._lfoR.max=o}get baseFrequency(){return this._baseFrequency}set baseFrequency(s){this._baseFrequency=this.toFrequency(s),this._lfoL.min=this._baseFrequency,this._lfoR.min=this._baseFrequency,this.octaves=this._octaves}dispose(){return super.dispose(),this.Q.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._filtersL.forEach(s=>s.disconnect()),this._filtersR.forEach(s=>s.disconnect()),this.frequency.dispose(),this}}class Reverb extends Effect{constructor(){super(optionsFromArguments(Reverb.getDefaults(),arguments,["decay"])),this.name="Reverb",this._convolver=this.context.createConvolver(),this.ready=Promise.resolve();const s=optionsFromArguments(Reverb.getDefaults(),arguments,["decay"]);this._decay=s.decay,this._preDelay=s.preDelay,this.generate(),this.connectEffect(this._convolver)}static getDefaults(){return Object.assign(Effect.getDefaults(),{decay:1.5,preDelay:.01})}get decay(){return this._decay}set decay(s){s=this.toSeconds(s),assertRange(s,.001),this._decay=s,this.generate()}get preDelay(){return this._preDelay}set preDelay(s){s=this.toSeconds(s),assertRange(s,0),this._preDelay=s,this.generate()}generate(){return __awaiter(this,void 0,void 0,function*(){const s=this.ready,o=new OfflineContext(2,this._decay+this._preDelay,this.context.sampleRate),a=new Noise({context:o}),c=new Noise({context:o}),d=new Merge({context:o});a.connect(d,0,0),c.connect(d,0,1);const g=new Gain({context:o}).toDestination();d.connect(g),a.start(0),c.start(0),g.gain.setValueAtTime(0,0),g.gain.setValueAtTime(1,this._preDelay),g.gain.exponentialApproachValueAtTime(0,this._preDelay,this.decay);const b=o.render();return this.ready=b.then(noOp),yield s,this._convolver.buffer=(yield b).get(),this})}dispose(){return super.dispose(),this._convolver.disconnect(),this}}class MidSideSplit extends ToneAudioNode{constructor(){super(optionsFromArguments(MidSideSplit.getDefaults(),arguments)),this.name="MidSideSplit",this._split=this.input=new Split({channels:2,context:this.context}),this._midAdd=new Add({context:this.context}),this.mid=new Multiply({context:this.context,value:Math.SQRT1_2}),this._sideSubtract=new Subtract({context:this.context}),this.side=new Multiply({context:this.context,value:Math.SQRT1_2}),this._split.connect(this._midAdd,0),this._split.connect(this._midAdd.addend,1),this._split.connect(this._sideSubtract,0),this._split.connect(this._sideSubtract.subtrahend,1),this._midAdd.connect(this.mid),this._sideSubtract.connect(this.side)}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._midAdd.dispose(),this._sideSubtract.dispose(),this._split.dispose(),this}}class MidSideMerge extends ToneAudioNode{constructor(){super(optionsFromArguments(MidSideMerge.getDefaults(),arguments)),this.name="MidSideMerge",this.mid=new Gain({context:this.context}),this.side=new Gain({context:this.context}),this._left=new Add({context:this.context}),this._leftMult=new Multiply({context:this.context,value:Math.SQRT1_2}),this._right=new Subtract({context:this.context}),this._rightMult=new Multiply({context:this.context,value:Math.SQRT1_2}),this._merge=this.output=new Merge({context:this.context}),this.mid.fan(this._left),this.side.connect(this._left.addend),this.mid.connect(this._right),this.side.connect(this._right.subtrahend),this._left.connect(this._leftMult),this._right.connect(this._rightMult),this._leftMult.connect(this._merge,0,0),this._rightMult.connect(this._merge,0,1)}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._leftMult.dispose(),this._rightMult.dispose(),this._left.dispose(),this._right.dispose(),this}}class MidSideEffect extends Effect{constructor(s){super(s),this.name="MidSideEffect",this._midSideMerge=new MidSideMerge({context:this.context}),this._midSideSplit=new MidSideSplit({context:this.context}),this._midSend=this._midSideSplit.mid,this._sideSend=this._midSideSplit.side,this._midReturn=this._midSideMerge.mid,this._sideReturn=this._midSideMerge.side,this.effectSend.connect(this._midSideSplit),this._midSideMerge.connect(this.effectReturn)}connectEffectMid(...s){this._midSend.chain(...s,this._midReturn)}connectEffectSide(...s){this._sideSend.chain(...s,this._sideReturn)}dispose(){return super.dispose(),this._midSideSplit.dispose(),this._midSideMerge.dispose(),this._midSend.dispose(),this._sideSend.dispose(),this._midReturn.dispose(),this._sideReturn.dispose(),this}}class StereoWidener extends MidSideEffect{constructor(){super(optionsFromArguments(StereoWidener.getDefaults(),arguments,["width"])),this.name="StereoWidener";const s=optionsFromArguments(StereoWidener.getDefaults(),arguments,["width"]);this.width=new Signal({context:this.context,value:s.width,units:"normalRange"}),readOnly(this,["width"]),this._twoTimesWidthMid=new Multiply({context:this.context,value:2}),this._twoTimesWidthSide=new Multiply({context:this.context,value:2}),this._midMult=new Multiply({context:this.context}),this._twoTimesWidthMid.connect(this._midMult.factor),this.connectEffectMid(this._midMult),this._oneMinusWidth=new Subtract({context:this.context}),this._oneMinusWidth.connect(this._twoTimesWidthMid),connect(this.context.getConstant(1),this._oneMinusWidth),this.width.connect(this._oneMinusWidth.subtrahend),this._sideMult=new Multiply({context:this.context}),this.width.connect(this._twoTimesWidthSide),this._twoTimesWidthSide.connect(this._sideMult.factor),this.connectEffectSide(this._sideMult)}static getDefaults(){return Object.assign(MidSideEffect.getDefaults(),{width:.5})}dispose(){return super.dispose(),this.width.dispose(),this._midMult.dispose(),this._sideMult.dispose(),this._twoTimesWidthMid.dispose(),this._twoTimesWidthSide.dispose(),this._oneMinusWidth.dispose(),this}}class Tremolo extends StereoEffect{constructor(){super(optionsFromArguments(Tremolo.getDefaults(),arguments,["frequency","depth"])),this.name="Tremolo";const s=optionsFromArguments(Tremolo.getDefaults(),arguments,["frequency","depth"]);this._lfoL=new LFO({context:this.context,type:s.type,min:1,max:0}),this._lfoR=new LFO({context:this.context,type:s.type,min:1,max:0}),this._amplitudeL=new Gain({context:this.context}),this._amplitudeR=new Gain({context:this.context}),this.frequency=new Signal({context:this.context,value:s.frequency,units:"frequency"}),this.depth=new Signal({context:this.context,value:s.depth,units:"normalRange"}),readOnly(this,["frequency","depth"]),this.connectEffectLeft(this._amplitudeL),this.connectEffectRight(this._amplitudeR),this._lfoL.connect(this._amplitudeL.gain),this._lfoR.connect(this._amplitudeR.gain),this.frequency.fan(this._lfoL.frequency,this._lfoR.frequency),this.depth.fan(this._lfoR.amplitude,this._lfoL.amplitude),this.spread=s.spread}static getDefaults(){return Object.assign(StereoEffect.getDefaults(),{frequency:10,type:"sine",depth:.5,spread:180})}start(s){return this._lfoL.start(s),this._lfoR.start(s),this}stop(s){return this._lfoL.stop(s),this._lfoR.stop(s),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this.context.transport.syncSignal(this.frequency),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this.context.transport.unsyncSignal(this.frequency),this}get type(){return this._lfoL.type}set type(s){this._lfoL.type=s,this._lfoR.type=s}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(s){this._lfoL.phase=90-s/2,this._lfoR.phase=s/2+90}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._amplitudeL.dispose(),this._amplitudeR.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class Vibrato extends Effect{constructor(){super(optionsFromArguments(Vibrato.getDefaults(),arguments,["frequency","depth"])),this.name="Vibrato";const s=optionsFromArguments(Vibrato.getDefaults(),arguments,["frequency","depth"]);this._delayNode=new Delay({context:this.context,delayTime:0,maxDelay:s.maxDelay}),this._lfo=new LFO({context:this.context,type:s.type,min:0,max:s.maxDelay,frequency:s.frequency,phase:-90}).start().connect(this._delayNode.delayTime),this.frequency=this._lfo.frequency,this.depth=this._lfo.amplitude,this.depth.value=s.depth,readOnly(this,["frequency","depth"]),this.effectSend.chain(this._delayNode,this.effectReturn)}static getDefaults(){return Object.assign(Effect.getDefaults(),{maxDelay:.005,frequency:5,depth:.1,type:"sine"})}get type(){return this._lfo.type}set type(s){this._lfo.type=s}dispose(){return super.dispose(),this._delayNode.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class Analyser extends ToneAudioNode{constructor(){super(optionsFromArguments(Analyser.getDefaults(),arguments,["type","size"])),this.name="Analyser",this._analysers=[],this._buffers=[];const s=optionsFromArguments(Analyser.getDefaults(),arguments,["type","size"]);this.input=this.output=this._gain=new Gain({context:this.context}),this._split=new Split({context:this.context,channels:s.channels}),this.input.connect(this._split),assertRange(s.channels,1);for(let o=0;o<s.channels;o++)this._analysers[o]=this.context.createAnalyser(),this._split.connect(this._analysers[o],o,0);this.size=s.size,this.type=s.type}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{size:1024,smoothing:.8,type:"fft",channels:1})}getValue(){return this._analysers.forEach((s,o)=>{const a=this._buffers[o];this._type==="fft"?s.getFloatFrequencyData(a):this._type==="waveform"&&s.getFloatTimeDomainData(a)}),this.channels===1?this._buffers[0]:this._buffers}get size(){return this._analysers[0].frequencyBinCount}set size(s){this._analysers.forEach((o,a)=>{o.fftSize=s*2,this._buffers[a]=new Float32Array(s)})}get channels(){return this._analysers.length}get type(){return this._type}set type(s){assert(s==="waveform"||s==="fft",`Analyser: invalid type: ${s}`),this._type=s}get smoothing(){return this._analysers[0].smoothingTimeConstant}set smoothing(s){this._analysers.forEach(o=>o.smoothingTimeConstant=s)}dispose(){return super.dispose(),this._analysers.forEach(s=>s.disconnect()),this._split.dispose(),this._gain.dispose(),this}}class MeterBase extends ToneAudioNode{constructor(){super(optionsFromArguments(MeterBase.getDefaults(),arguments)),this.name="MeterBase",this.input=this.output=this._analyser=new Analyser({context:this.context,size:256,type:"waveform"})}dispose(){return super.dispose(),this._analyser.dispose(),this}}class Meter extends MeterBase{constructor(){super(optionsFromArguments(Meter.getDefaults(),arguments,["smoothing"])),this.name="Meter",this._rms=0;const s=optionsFromArguments(Meter.getDefaults(),arguments,["smoothing"]);this.input=this.output=this._analyser=new Analyser({context:this.context,size:256,type:"waveform",channels:s.channels}),this.smoothing=s.smoothing,this.normalRange=s.normalRange}static getDefaults(){return Object.assign(MeterBase.getDefaults(),{smoothing:.8,normalRange:!1,channels:1})}getLevel(){return warn("'getLevel' has been changed to 'getValue'"),this.getValue()}getValue(){const s=this._analyser.getValue(),a=(this.channels===1?[s]:s).map(c=>{const d=c.reduce((b,$)=>b+$*$,0),g=Math.sqrt(d/c.length);return this._rms=Math.max(g,this._rms*this.smoothing),this.normalRange?this._rms:gainToDb(this._rms)});return this.channels===1?a[0]:a}get channels(){return this._analyser.channels}dispose(){return super.dispose(),this._analyser.dispose(),this}}class FFT extends MeterBase{constructor(){super(optionsFromArguments(FFT.getDefaults(),arguments,["size"])),this.name="FFT";const s=optionsFromArguments(FFT.getDefaults(),arguments,["size"]);this.normalRange=s.normalRange,this._analyser.type="fft",this.size=s.size}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{normalRange:!1,size:1024,smoothing:.8})}getValue(){return this._analyser.getValue().map(o=>this.normalRange?dbToGain(o):o)}get size(){return this._analyser.size}set size(s){this._analyser.size=s}get smoothing(){return this._analyser.smoothing}set smoothing(s){this._analyser.smoothing=s}getFrequencyOfIndex(s){return assert(0<=s&&s<this.size,`index must be greater than or equal to 0 and less than ${this.size}`),s*this.context.sampleRate/(this.size*2)}}class DCMeter extends MeterBase{constructor(){super(optionsFromArguments(DCMeter.getDefaults(),arguments)),this.name="DCMeter",this._analyser.type="waveform",this._analyser.size=256}getValue(){return this._analyser.getValue()[0]}}class Waveform extends MeterBase{constructor(){super(optionsFromArguments(Waveform.getDefaults(),arguments,["size"])),this.name="Waveform";const s=optionsFromArguments(Waveform.getDefaults(),arguments,["size"]);this._analyser.type="waveform",this.size=s.size}static getDefaults(){return Object.assign(MeterBase.getDefaults(),{size:1024})}getValue(){return this._analyser.getValue()}get size(){return this._analyser.size}set size(s){this._analyser.size=s}}class Solo extends ToneAudioNode{constructor(){super(optionsFromArguments(Solo.getDefaults(),arguments,["solo"])),this.name="Solo";const s=optionsFromArguments(Solo.getDefaults(),arguments,["solo"]);this.input=this.output=new Gain({context:this.context}),Solo._allSolos.has(this.context)||Solo._allSolos.set(this.context,new Set),Solo._allSolos.get(this.context).add(this),this.solo=s.solo}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(s){s?this._addSolo():this._removeSolo(),Solo._allSolos.get(this.context).forEach(o=>o._updateSolo())}get muted(){return this.input.gain.value===0}_addSolo(){Solo._soloed.has(this.context)||Solo._soloed.set(this.context,new Set),Solo._soloed.get(this.context).add(this)}_removeSolo(){Solo._soloed.has(this.context)&&Solo._soloed.get(this.context).delete(this)}_isSoloed(){return Solo._soloed.has(this.context)&&Solo._soloed.get(this.context).has(this)}_noSolos(){return!Solo._soloed.has(this.context)||Solo._soloed.has(this.context)&&Solo._soloed.get(this.context).size===0}_updateSolo(){this._isSoloed()?this.input.gain.value=1:this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),Solo._allSolos.get(this.context).delete(this),this._removeSolo(),this}}Solo._allSolos=new Map;Solo._soloed=new Map;class PanVol extends ToneAudioNode{constructor(){super(optionsFromArguments(PanVol.getDefaults(),arguments,["pan","volume"])),this.name="PanVol";const s=optionsFromArguments(PanVol.getDefaults(),arguments,["pan","volume"]);this._panner=this.input=new Panner({context:this.context,pan:s.pan,channelCount:s.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new Volume({context:this.context,volume:s.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=s.mute,readOnly(this,["pan","volume"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(s){this._volume.mute=s}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class Channel extends ToneAudioNode{constructor(){super(optionsFromArguments(Channel.getDefaults(),arguments,["volume","pan"])),this.name="Channel";const s=optionsFromArguments(Channel.getDefaults(),arguments,["volume","pan"]);this._solo=this.input=new Solo({solo:s.solo,context:this.context}),this._panVol=this.output=new PanVol({context:this.context,pan:s.pan,volume:s.volume,mute:s.mute,channelCount:s.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),readOnly(this,["pan","volume"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(s){this._solo.solo=s}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(s){this._panVol.mute=s}_getBus(s){return Channel.buses.has(s)||Channel.buses.set(s,new Gain({context:this.context})),Channel.buses.get(s)}send(s,o=0){const a=this._getBus(s),c=new Gain({context:this.context,units:"decibels",gain:o});return this.connect(c),c.connect(a),c}receive(s){return this._getBus(s).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}Channel.buses=new Map;class Mono extends ToneAudioNode{constructor(){super(optionsFromArguments(Mono.getDefaults(),arguments)),this.name="Mono",this.input=new Gain({context:this.context}),this._merge=this.output=new Merge({channels:2,context:this.context}),this.input.connect(this._merge,0,0),this.input.connect(this._merge,0,1)}dispose(){return super.dispose(),this._merge.dispose(),this.input.dispose(),this}}class MultibandSplit extends ToneAudioNode{constructor(){super(optionsFromArguments(MultibandSplit.getDefaults(),arguments,["lowFrequency","highFrequency"])),this.name="MultibandSplit",this.input=new Gain({context:this.context}),this.output=void 0,this.low=new Filter({context:this.context,frequency:0,type:"lowpass"}),this._lowMidFilter=new Filter({context:this.context,frequency:0,type:"highpass"}),this.mid=new Filter({context:this.context,frequency:0,type:"lowpass"}),this.high=new Filter({context:this.context,frequency:0,type:"highpass"}),this._internalChannels=[this.low,this.mid,this.high];const s=optionsFromArguments(MultibandSplit.getDefaults(),arguments,["lowFrequency","highFrequency"]);this.lowFrequency=new Signal({context:this.context,units:"frequency",value:s.lowFrequency}),this.highFrequency=new Signal({context:this.context,units:"frequency",value:s.highFrequency}),this.Q=new Signal({context:this.context,units:"positive",value:s.Q}),this.input.fan(this.low,this.high),this.input.chain(this._lowMidFilter,this.mid),this.lowFrequency.fan(this.low.frequency,this._lowMidFilter.frequency),this.highFrequency.fan(this.mid.frequency,this.high.frequency),this.Q.connect(this.low.Q),this.Q.connect(this._lowMidFilter.Q),this.Q.connect(this.mid.Q),this.Q.connect(this.high.Q),readOnly(this,["high","mid","low","highFrequency","lowFrequency"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{Q:1,highFrequency:2500,lowFrequency:400})}dispose(){return super.dispose(),writable(this,["high","mid","low","highFrequency","lowFrequency"]),this.low.dispose(),this._lowMidFilter.dispose(),this.mid.dispose(),this.high.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this.Q.dispose(),this}}let Listener$1=class extends ToneAudioNode{constructor(){super(...arguments),this.name="Listener",this.positionX=new Param({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new Param({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new Param({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new Param({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new Param({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new Param({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new Param({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new Param({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new Param({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}};onContextInit(i=>{i.listener=new Listener$1({context:i})});onContextClose(i=>{i.listener.dispose()});class Panner3D extends ToneAudioNode{constructor(){super(optionsFromArguments(Panner3D.getDefaults(),arguments,["positionX","positionY","positionZ"])),this.name="Panner3D";const s=optionsFromArguments(Panner3D.getDefaults(),arguments,["positionX","positionY","positionZ"]);this._panner=this.input=this.output=this.context.createPanner(),this.panningModel=s.panningModel,this.maxDistance=s.maxDistance,this.distanceModel=s.distanceModel,this.coneOuterGain=s.coneOuterGain,this.coneOuterAngle=s.coneOuterAngle,this.coneInnerAngle=s.coneInnerAngle,this.refDistance=s.refDistance,this.rolloffFactor=s.rolloffFactor,this.positionX=new Param({context:this.context,param:this._panner.positionX,value:s.positionX}),this.positionY=new Param({context:this.context,param:this._panner.positionY,value:s.positionY}),this.positionZ=new Param({context:this.context,param:this._panner.positionZ,value:s.positionZ}),this.orientationX=new Param({context:this.context,param:this._panner.orientationX,value:s.orientationX}),this.orientationY=new Param({context:this.context,param:this._panner.orientationY,value:s.orientationY}),this.orientationZ=new Param({context:this.context,param:this._panner.orientationZ,value:s.orientationZ})}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:0,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1})}setPosition(s,o,a){return this.positionX.value=s,this.positionY.value=o,this.positionZ.value=a,this}setOrientation(s,o,a){return this.orientationX.value=s,this.orientationY.value=o,this.orientationZ.value=a,this}get panningModel(){return this._panner.panningModel}set panningModel(s){this._panner.panningModel=s}get refDistance(){return this._panner.refDistance}set refDistance(s){this._panner.refDistance=s}get rolloffFactor(){return this._panner.rolloffFactor}set rolloffFactor(s){this._panner.rolloffFactor=s}get distanceModel(){return this._panner.distanceModel}set distanceModel(s){this._panner.distanceModel=s}get coneInnerAngle(){return this._panner.coneInnerAngle}set coneInnerAngle(s){this._panner.coneInnerAngle=s}get coneOuterAngle(){return this._panner.coneOuterAngle}set coneOuterAngle(s){this._panner.coneOuterAngle=s}get coneOuterGain(){return this._panner.coneOuterGain}set coneOuterGain(s){this._panner.coneOuterGain=s}get maxDistance(){return this._panner.maxDistance}set maxDistance(s){this._panner.maxDistance=s}dispose(){return super.dispose(),this._panner.disconnect(),this.orientationX.dispose(),this.orientationY.dispose(),this.orientationZ.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this}}class Recorder extends ToneAudioNode{constructor(){super(optionsFromArguments(Recorder.getDefaults(),arguments)),this.name="Recorder";const s=optionsFromArguments(Recorder.getDefaults(),arguments);this.input=new Gain({context:this.context}),assert(Recorder.supported,"Media Recorder API is not available"),this._stream=this.context.createMediaStreamDestination(),this.input.connect(this._stream),this._recorder=new MediaRecorder(this._stream.stream,{mimeType:s.mimeType})}static getDefaults(){return ToneAudioNode.getDefaults()}get mimeType(){return this._recorder.mimeType}static get supported(){return theWindow!==null&&Reflect.has(theWindow,"MediaRecorder")}get state(){return this._recorder.state==="inactive"?"stopped":this._recorder.state==="paused"?"paused":"started"}start(){return __awaiter(this,void 0,void 0,function*(){assert(this.state!=="started","Recorder is already started");const s=new Promise(o=>{const a=()=>{this._recorder.removeEventListener("start",a,!1),o()};this._recorder.addEventListener("start",a,!1)});return this._recorder.start(),yield s})}stop(){return __awaiter(this,void 0,void 0,function*(){assert(this.state!=="stopped","Recorder is not started");const s=new Promise(o=>{const a=c=>{this._recorder.removeEventListener("dataavailable",a,!1),o(c.data)};this._recorder.addEventListener("dataavailable",a,!1)});return this._recorder.stop(),yield s})}pause(){return assert(this.state==="started","Recorder must be started"),this._recorder.pause(),this}dispose(){return super.dispose(),this.input.dispose(),this._stream.disconnect(),this}}class Compressor extends ToneAudioNode{constructor(){super(optionsFromArguments(Compressor.getDefaults(),arguments,["threshold","ratio"])),this.name="Compressor",this._compressor=this.context.createDynamicsCompressor(),this.input=this._compressor,this.output=this._compressor;const s=optionsFromArguments(Compressor.getDefaults(),arguments,["threshold","ratio"]);this.threshold=new Param({minValue:this._compressor.threshold.minValue,maxValue:this._compressor.threshold.maxValue,context:this.context,convert:!1,param:this._compressor.threshold,units:"decibels",value:s.threshold}),this.attack=new Param({minValue:this._compressor.attack.minValue,maxValue:this._compressor.attack.maxValue,context:this.context,param:this._compressor.attack,units:"time",value:s.attack}),this.release=new Param({minValue:this._compressor.release.minValue,maxValue:this._compressor.release.maxValue,context:this.context,param:this._compressor.release,units:"time",value:s.release}),this.knee=new Param({minValue:this._compressor.knee.minValue,maxValue:this._compressor.knee.maxValue,context:this.context,convert:!1,param:this._compressor.knee,units:"decibels",value:s.knee}),this.ratio=new Param({minValue:this._compressor.ratio.minValue,maxValue:this._compressor.ratio.maxValue,context:this.context,convert:!1,param:this._compressor.ratio,units:"positive",value:s.ratio}),readOnly(this,["knee","release","attack","ratio","threshold"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{attack:.003,knee:30,ratio:12,release:.25,threshold:-24})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.disconnect(),this.attack.dispose(),this.release.dispose(),this.threshold.dispose(),this.ratio.dispose(),this.knee.dispose(),this}}class Gate extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(Gate.getDefaults(),arguments,["threshold","smoothing"]))),this.name="Gate";const s=optionsFromArguments(Gate.getDefaults(),arguments,["threshold","smoothing"]);this._follower=new Follower({context:this.context,smoothing:s.smoothing}),this._gt=new GreaterThan({context:this.context,value:dbToGain(s.threshold)}),this.input=new Gain({context:this.context}),this._gate=this.output=new Gain({context:this.context}),this.input.connect(this._gate),this.input.chain(this._follower,this._gt,this._gate.gain)}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{smoothing:.1,threshold:-40})}get threshold(){return gainToDb(this._gt.value)}set threshold(s){this._gt.value=dbToGain(s)}get smoothing(){return this._follower.smoothing}set smoothing(s){this._follower.smoothing=s}dispose(){return super.dispose(),this.input.dispose(),this._follower.dispose(),this._gt.dispose(),this._gate.dispose(),this}}class Limiter extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(Limiter.getDefaults(),arguments,["threshold"]))),this.name="Limiter";const s=optionsFromArguments(Limiter.getDefaults(),arguments,["threshold"]);this._compressor=this.input=this.output=new Compressor({context:this.context,ratio:20,attack:.003,release:.01,threshold:s.threshold}),this.threshold=this._compressor.threshold,readOnly(this,"threshold")}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{threshold:-12})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.dispose(),this.threshold.dispose(),this}}class MidSideCompressor extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(MidSideCompressor.getDefaults(),arguments))),this.name="MidSideCompressor";const s=optionsFromArguments(MidSideCompressor.getDefaults(),arguments);this._midSideSplit=this.input=new MidSideSplit({context:this.context}),this._midSideMerge=this.output=new MidSideMerge({context:this.context}),this.mid=new Compressor(Object.assign(s.mid,{context:this.context})),this.side=new Compressor(Object.assign(s.side,{context:this.context})),this._midSideSplit.mid.chain(this.mid,this._midSideMerge.mid),this._midSideSplit.side.chain(this.side,this._midSideMerge.side),readOnly(this,["mid","side"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{mid:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16},side:{ratio:6,threshold:-30,release:.25,attack:.03,knee:10}})}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._midSideSplit.dispose(),this._midSideMerge.dispose(),this}}class MultibandCompressor extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(MultibandCompressor.getDefaults(),arguments))),this.name="MultibandCompressor";const s=optionsFromArguments(MultibandCompressor.getDefaults(),arguments);this._splitter=this.input=new MultibandSplit({context:this.context,lowFrequency:s.lowFrequency,highFrequency:s.highFrequency}),this.lowFrequency=this._splitter.lowFrequency,this.highFrequency=this._splitter.highFrequency,this.output=new Gain({context:this.context}),this.low=new Compressor(Object.assign(s.low,{context:this.context})),this.mid=new Compressor(Object.assign(s.mid,{context:this.context})),this.high=new Compressor(Object.assign(s.high,{context:this.context})),this._splitter.low.chain(this.low,this.output),this._splitter.mid.chain(this.mid,this.output),this._splitter.high.chain(this.high,this.output),readOnly(this,["high","mid","low","highFrequency","lowFrequency"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{lowFrequency:250,highFrequency:2e3,low:{ratio:6,threshold:-30,release:.25,attack:.03,knee:10},mid:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16},high:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16}})}dispose(){return super.dispose(),this._splitter.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.output.dispose(),this}}class EQ3 extends ToneAudioNode{constructor(){super(optionsFromArguments(EQ3.getDefaults(),arguments,["low","mid","high"])),this.name="EQ3",this.output=new Gain({context:this.context}),this._internalChannels=[];const s=optionsFromArguments(EQ3.getDefaults(),arguments,["low","mid","high"]);this.input=this._multibandSplit=new MultibandSplit({context:this.context,highFrequency:s.highFrequency,lowFrequency:s.lowFrequency}),this._lowGain=new Gain({context:this.context,gain:s.low,units:"decibels"}),this._midGain=new Gain({context:this.context,gain:s.mid,units:"decibels"}),this._highGain=new Gain({context:this.context,gain:s.high,units:"decibels"}),this.low=this._lowGain.gain,this.mid=this._midGain.gain,this.high=this._highGain.gain,this.Q=this._multibandSplit.Q,this.lowFrequency=this._multibandSplit.lowFrequency,this.highFrequency=this._multibandSplit.highFrequency,this._multibandSplit.low.chain(this._lowGain,this.output),this._multibandSplit.mid.chain(this._midGain,this.output),this._multibandSplit.high.chain(this._highGain,this.output),readOnly(this,["low","mid","high","lowFrequency","highFrequency"]),this._internalChannels=[this._multibandSplit]}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{high:0,highFrequency:2500,low:0,lowFrequency:400,mid:0})}dispose(){return super.dispose(),writable(this,["low","mid","high","lowFrequency","highFrequency"]),this._multibandSplit.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this._lowGain.dispose(),this._midGain.dispose(),this._highGain.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.Q.dispose(),this}}class Convolver extends ToneAudioNode{constructor(){super(optionsFromArguments(Convolver.getDefaults(),arguments,["url","onload"])),this.name="Convolver",this._convolver=this.context.createConvolver();const s=optionsFromArguments(Convolver.getDefaults(),arguments,["url","onload"]);this._buffer=new ToneAudioBuffer(s.url,o=>{this.buffer=o,s.onload()}),this.input=new Gain({context:this.context}),this.output=new Gain({context:this.context}),this._buffer.loaded&&(this.buffer=this._buffer),this.normalize=s.normalize,this.input.chain(this._convolver,this.output)}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{normalize:!0,onload:noOp})}load(s){return __awaiter(this,void 0,void 0,function*(){this.buffer=yield this._buffer.load(s)})}get buffer(){return this._buffer.length?this._buffer:null}set buffer(s){s&&this._buffer.set(s),this._convolver.buffer&&(this.input.disconnect(),this._convolver.disconnect(),this._convolver=this.context.createConvolver(),this.input.chain(this._convolver,this.output));const o=this._buffer.get();this._convolver.buffer=o||null}get normalize(){return this._convolver.normalize}set normalize(s){this._convolver.normalize=s}dispose(){return super.dispose(),this._buffer.dispose(),this._convolver.disconnect(),this}}function now(){return getContext().now()}function immediate(){return getContext().immediate()}const Transport=getContext().transport;function getTransport(){return getContext().transport}const Destination=getContext().destination,Master=getContext().destination;function getDestination(){return getContext().destination}const Listener=getContext().listener;function getListener(){return getContext().listener}const Draw=getContext().draw;function getDraw(){return getContext().draw}const context=getContext();function loaded(){return ToneAudioBuffer.loaded()}const Buffer$1=ToneAudioBuffer,Buffers=ToneAudioBuffers,BufferSource=ToneBufferSource,esm=Object.freeze(Object.defineProperty({__proto__:null,AMOscillator,AMSynth,Abs,Add,AmplitudeEnvelope,Analyser,AudioToGain,AutoFilter,AutoPanner,AutoWah,BaseContext,BiquadFilter,BitCrusher,Buffer:Buffer$1,BufferSource,Buffers,Channel,Chebyshev,Chorus,Clock,Compressor,Context,Convolver,CrossFade,DCMeter,Delay,Destination,Distortion,Draw,DuoSynth,EQ3,Emitter,Envelope,FFT,FMOscillator,FMSynth,FatOscillator,FeedbackCombFilter,FeedbackDelay,Filter,Follower,Freeverb,Frequency,FrequencyClass,FrequencyEnvelope,FrequencyShifter,Gain,GainToAudio,Gate,GrainPlayer,GreaterThan,GreaterThanZero,IntervalTimeline,JCReverb,LFO,Limiter,Listener,Loop,LowpassCombFilter,Master,MembraneSynth,Merge,MetalSynth,Meter,MidSideCompressor,MidSideMerge,MidSideSplit,Midi,MidiClass,Mono,MonoSynth,MultibandCompressor,MultibandSplit,Multiply,Negate,Noise,NoiseSynth,Offline,OfflineContext,OmniOscillator,OnePoleFilter,Oscillator,PWMOscillator,PanVol,Panner,Panner3D,Param,Part,Pattern,Phaser,PingPongDelay,PitchShift,Player,Players,PluckSynth,PolySynth,Pow,PulseOscillator,Recorder,Reverb,Sampler,Scale,ScaleExp,Sequence,Signal,Solo,Split,StateTimeline,StereoWidener,Subtract,SyncedSignal,Synth,Ticks,TicksClass,Time,TimeClass,Timeline,ToneAudioBuffer,ToneAudioBuffers,ToneAudioNode,ToneBufferSource,ToneEvent,ToneOscillatorNode,Transport,TransportTime,TransportTimeClass,Tremolo,Unit:Units,UserMedia,Vibrato,Volume,WaveShaper,Waveform,Zero,connect,connectSeries,connectSignal,context,dbToGain,debug:Debug,defaultArg,disconnect,ftom,gainToDb,getContext,getDestination,getDraw,getListener,getTransport,immediate,intervalToFrequencyRatio,isArray,isBoolean,isDefined,isFunction,isNote,isNumber,isObject,isString,isUndef,loaded,mtof,now,optionsFromArguments,setContext,start,supported:isSupported,version},Symbol.toStringTag,{value:"Module"})),require$$1=getAugmentedNamespace(esm);(function(module,exports){(function(i,s){module.exports=s(require$$0,require$$1)})(self,function(__WEBPACK_EXTERNAL_MODULE__2__,__WEBPACK_EXTERNAL_MODULE__9__){return function(i){var s={};function o(a){if(s[a])return s[a].exports;var c=s[a]={i:a,l:!1,exports:{}};return i[a].call(c.exports,c,c.exports,o),c.l=!0,c.exports}return o.m=i,o.c=s,o.d=function(a,c,d){o.o(a,c)||Object.defineProperty(a,c,{enumerable:!0,get:d})},o.r=function(a){typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(a,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(a,"__esModule",{value:!0})},o.t=function(a,c){if(1&c&&(a=o(a)),8&c||4&c&&typeof a=="object"&&a&&a.__esModule)return a;var d=Object.create(null);if(o.r(d),Object.defineProperty(d,"default",{enumerable:!0,value:a}),2&c&&typeof a!="string")for(var g in a)o.d(d,g,function(b){return a[b]}.bind(null,g));return d},o.n=function(a){var c=a&&a.__esModule?function(){return a.default}:function(){return a};return o.d(c,"a",c),c},o.o=function(a,c){return Object.prototype.hasOwnProperty.call(a,c)},o.p="",o(o.s=190)}([function(i,s,o){o.d(s,"T",function(){return Yt.b}),o.d(s,"Fb",function(){return $n.a}),o.d(s,"Kb",function(){return $n.b}),o.d(s,"W",function(){return Dn}),o.d(s,"Y",function(){return Jn}),o.d(s,"Z",function(){return cn}),o.d(s,"ab",function(){return At}),o.d(s,"bb",function(){return Ar}),o.d(s,"cb",function(){return Fr}),o.d(s,"db",function(){return No}),o.d(s,"eb",function(){return ho}),o.d(s,"hb",function(){return yr}),o.d(s,"mb",function(){return Or}),o.d(s,"nb",function(){return zs}),o.d(s,"ob",function(){return $o}),o.d(s,"pb",function(){return zn}),o.d(s,"rb",function(){return Bo}),o.d(s,"sb",function(){return Vs}),o.d(s,"tb",function(){return Uo}),o.d(s,"ub",function(){return _o}),o.d(s,"xb",function(){return bn}),o.d(s,"yb",function(){return cr}),o.d(s,"zb",function(){return Go}),o.d(s,"Bb",function(){return qo}),o.d(s,"Cb",function(){return Ys}),o.d(s,"Db",function(){return Io}),o.d(s,"Eb",function(){return dr}),o.d(s,"Gb",function(){return Gr.a}),o.d(s,"Ib",function(){return Qs}),o.d(s,"Mb",function(){return Ss}),o.d(s,"Nb",function(){return _s}),o.d(s,"Ob",function(){return _r}),o.d(s,"Jb",function(){return Vr}),o.d(s,"ib",function(){return Cu}),o.d(s,"Hb",function(){return Tu}),o.d(s,"gb",function(){return Nu}),o.d(s,"vb",function(){return mr}),o.d(s,"wb",function(){return lu.e}),o.d(s,"jb",function(){return _.b}),o.d(s,"qb",function(){return Il.a}),o.d(s,"kb",function(){return a}),o.d(s,"Lb",function(){return xs}),o.d(s,"X",function(){return g}),o.d(s,"Ab",function(){return c}),o.d(s,"fb",function(){return _d}),o.d(s,"lb",function(){return b}),o.d(s,"w",function(){return du.b}),o.d(s,"k",function(){return du.a}),o.d(s,"a",function(){return Wt.a}),o.d(s,"b",function(){return Wt.d}),o.d(s,"c",function(){return Wt.m}),o.d(s,"d",function(){return Wt.o}),o.d(s,"e",function(){return Wt.r}),o.d(s,"f",function(){return Wt.v}),o.d(s,"g",function(){return Wt.w}),o.d(s,"h",function(){return Wt.y}),o.d(s,"i",function(){return Wt.z}),o.d(s,"j",function(){return Wt.G}),o.d(s,"l",function(){return Wt.R}),o.d(s,"m",function(){return Wt.W}),o.d(s,"n",function(){return Wt.X}),o.d(s,"o",function(){return Wt.Y}),o.d(s,"p",function(){return Wt.ab}),o.d(s,"q",function(){return Wt.bb}),o.d(s,"s",function(){return Wt.eb}),o.d(s,"u",function(){return Wt.jb}),o.d(s,"t",function(){return Wt.ib}),o.d(s,"v",function(){return Wt.kb}),o.d(s,"x",function(){return Wt.sb}),o.d(s,"y",function(){return Wt.yb}),o.d(s,"z",function(){return Wt.zb}),o.d(s,"A",function(){return Wt.Cb}),o.d(s,"B",function(){return Wt.Db}),o.d(s,"C",function(){return Wt.Fb}),o.d(s,"D",function(){return Wt.Ib}),o.d(s,"E",function(){return Wt.Kb}),o.d(s,"I",function(){return Wt.Pb}),o.d(s,"F",function(){return Wt.Mb}),o.d(s,"G",function(){return Wt.Nb}),o.d(s,"H",function(){return Wt.Ob}),o.d(s,"J",function(){return Wt.Xb}),o.d(s,"K",function(){return Wt.bc}),o.d(s,"M",function(){return Wt.jc}),o.d(s,"O",function(){return Wt.qc}),o.d(s,"N",function(){return Wt.oc}),o.d(s,"Q",function(){return Wt.xc}),o.d(s,"P",function(){return Wt.wc}),o.d(s,"R",function(){return Wt.Ac}),o.d(s,"S",function(){return Wt.Cc}),o.d(s,"U",function(){return Wt.Gc}),o.d(s,"V",function(){return Wt.Hc}),o.d(s,"r",function(){return Wt.db}),o.d(s,"L",function(){return Wt.hc});var a={};o.r(a),o.d(a,"copyModel",function(){return sn}),o.d(a,"listModels",function(){return Qt}),o.d(a,"moveModel",function(){return ln}),o.d(a,"removeModel",function(){return tn}),o.d(a,"browserFiles",function(){return wn}),o.d(a,"browserHTTPRequest",function(){return Cr}),o.d(a,"concatenateArrayBuffers",function(){return _e.d}),o.d(a,"decodeWeights",function(){return _e.e}),o.d(a,"encodeWeights",function(){return _e.f}),o.d(a,"fromMemory",function(){return zr}),o.d(a,"getLoadHandlers",function(){return nt}),o.d(a,"getModelArtifactsInfoForJSON",function(){return _e.g}),o.d(a,"getSaveHandlers",function(){return j}),o.d(a,"http",function(){return or}),o.d(a,"isHTTPScheme",function(){return tr}),o.d(a,"loadWeights",function(){return Bn}),o.d(a,"registerLoadRouter",function(){return tt}),o.d(a,"registerSaveRouter",function(){return rt}),o.d(a,"weightsLoaderFactory",function(){return Zn}),o.d(a,"withSaveHandler",function(){return bs});var c={};o.r(c),o.d(c,"assertParamsValid",function(){return ms}),o.d(c,"maskToAxes",function(){return gs}),o.d(c,"computeOutShape",function(){return ys}),o.d(c,"stridesWithElidedDims",function(){return $s}),o.d(c,"getNormalizedAxes",function(){return Ls}),o.d(c,"startIndicesWithElidedDims",function(){return Jr}),o.d(c,"stopIndicesWithElidedDims",function(){return vs}),o.d(c,"stridesForAxis",function(){return Os}),o.d(c,"startForAxis",function(){return Pr}),o.d(c,"stopForAxis",function(){return Nr}),o.d(c,"isSliceContinous",function(){return Ds}),o.d(c,"computeFlatOffset",function(){return ns}),o.d(c,"parseSliceParams",function(){return Rs});var d={};o.r(d),o.d(d,"segOpComputeOptimalWindowSize",function(){return Zl}),o.d(d,"computeOutShape",function(){return Mu}),o.d(d,"collectGatherOpShapeInfo",function(){return hu});var g={};o.r(g),o.d(g,"axesAreInnerMostDims",function(){return rs}),o.d(g,"combineLocations",function(){return Lo}),o.d(g,"computeOutAndReduceShapes",function(){return zo}),o.d(g,"expandShapeToKeepDim",function(){return ss}),o.d(g,"assertAxesAreInnerMostDims",function(){return Wr}),o.d(g,"getAxesPermutation",function(){return cs}),o.d(g,"getUndoAxesPermutation",function(){return hs}),o.d(g,"getInnerMostAxes",function(){return ws}),o.d(g,"getBroadcastDims",function(){return tu}),o.d(g,"getReductionAxes",function(){return Br}),o.d(g,"assertAndGetBroadcastShape",function(){return kr}),o.d(g,"assertParamsConsistent",function(){return rr}),o.d(g,"computeOutShape",function(){return hr}),o.d(g,"computeDilation2DInfo",function(){return Kt}),o.d(g,"computePool2DInfo",function(){return rn}),o.d(g,"computePool3DInfo",function(){return hn}),o.d(g,"computeConv2DInfo",function(){return xn}),o.d(g,"computeConv3DInfo",function(){return An}),o.d(g,"computeDefaultPad",function(){return Fn}),o.d(g,"tupleValuesAreOne",function(){return Yn}),o.d(g,"eitherStridesOrDilationsAreOne",function(){return Hn}),o.d(g,"convertConv2DDataFormat",function(){return $r}),o.d(g,"getFusedDyActivation",function(){return na}),o.d(g,"getFusedBiasGradient",function(){return Al}),o.d(g,"applyActivation",function(){return js}),o.d(g,"shouldFuse",function(){return El}),o.d(g,"PARALLELIZE_THRESHOLD",function(){return Js}),o.d(g,"computeOptimalWindowSize",function(){return Ol}),o.d(g,"slice_util",function(){return c}),o.d(g,"upcastType",function(){return $n.b}),o.d(g,"getImageCenter",function(){return ga}),o.d(g,"getReshaped",function(){return xo}),o.d(g,"getPermuted",function(){return Eu}),o.d(g,"getReshapedPermuted",function(){return Dl}),o.d(g,"getSliceBeginCoords",function(){return Rl}),o.d(g,"getSliceSize",function(){return Pl}),o.d(g,"prepareAndValidate",function(){return Fl}),o.d(g,"validateUpdateShape",function(){return Ou}),o.d(g,"validateInput",function(){return Ml}),o.d(g,"calculateShapes",function(){return Ll}),o.d(g,"SELU_SCALEALPHA",function(){return Du}),o.d(g,"SELU_SCALE",function(){return Ru}),o.d(g,"ERF_P",function(){return Pu}),o.d(g,"ERF_A1",function(){return zl}),o.d(g,"ERF_A2",function(){return cu}),o.d(g,"ERF_A3",function(){return Vl}),o.d(g,"ERF_A4",function(){return Bl}),o.d(g,"ERF_A5",function(){return Ul}),o.d(g,"warn",function(){return Gl}),o.d(g,"log",function(){return ba}),o.d(g,"mergeRealAndImagArrays",function(){return Fu}),o.d(g,"splitRealAndImagArrays",function(){return Wl}),o.d(g,"complexWithEvenIndex",function(){return Us}),o.d(g,"complexWithOddIndex",function(){return Hl}),o.d(g,"getComplexWithIndex",function(){return Kl}),o.d(g,"assignToTypedArray",function(){return Xl}),o.d(g,"exponents",function(){return Yl}),o.d(g,"exponent",function(){return Ql}),o.d(g,"prepareSplitSize",function(){return Wo}),o.d(g,"segment_util",function(){return d}),o.d(g,"castTensor",function(){return Jl}),o.d(g,"reshapeTensor",function(){return _c}),o.d(g,"linspaceImpl",function(){return _h});var b={};o.r(b),o.d(b,"nonMaxSuppressionV3Impl",function(){return Tl}),o.d(b,"nonMaxSuppressionV4Impl",function(){return Nl}),o.d(b,"nonMaxSuppressionV5Impl",function(){return Eo}),o.d(b,"split",function(){return ep}),o.d(b,"tile",function(){return tp}),o.d(b,"topkImpl",function(){return wo}),o.d(b,"whereImpl",function(){return np});var $=o(6),_=(o(38),o(11)),_e=o(17);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class et{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return et.instance==null&&(et.instance=new et),et.instance}static registerSaveRouter(ct){et.getInstance().saveRouters.push(ct)}static registerLoadRouter(ct){et.getInstance().loadRouters.push(ct)}static getSaveHandlers(ct){return et.getHandlers(ct,"save")}static getLoadHandlers(ct,dt){return et.getHandlers(ct,"load",dt)}static getHandlers(ct,dt,mt){const St=[];return(dt==="load"?et.getInstance().loadRouters:et.getInstance().saveRouters).forEach($t=>{const Dt=$t(ct,mt);Dt!==null&&St.push(Dt)}),St}}const rt=lt=>et.registerSaveRouter(lt),tt=lt=>et.registerLoadRouter(lt),j=lt=>et.getSaveHandlers(lt),nt=(lt,ct)=>et.getLoadHandlers(lt,ct);function st(){if(!Object(_.b)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const lt=typeof window>"u"?self:window,ct=lt.indexedDB||lt.mozIndexedDB||lt.webkitIndexedDB||lt.msIndexedDB||lt.shimIndexedDB;if(ct==null)throw new Error("The current browser does not appear to support IndexedDB.");return ct}function ot(lt){const ct=lt.result;ct.createObjectStore("models_store",{keyPath:"modelPath"}),ct.createObjectStore("model_info_store",{keyPath:"modelPath"})}class ut{constructor(ct){if(this.indexedDB=st(),ct==null||!ct)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=ct}async save(ct){if(ct.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,ct)}async load(){return this.databaseAction(this.modelPath)}databaseAction(ct,dt){return new Promise((mt,St)=>{const $t=this.indexedDB.open("tensorflowjs",1);$t.onupgradeneeded=()=>ot($t),$t.onsuccess=()=>{const Dt=$t.result;if(dt==null){const Mt=Dt.transaction("models_store","readonly"),Xt=Mt.objectStore("models_store").get(this.modelPath);Xt.onsuccess=()=>{if(Xt.result==null)return Dt.close(),St(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));mt(Xt.result.modelArtifacts)},Xt.onerror=en=>(Dt.close(),St(Xt.error)),Mt.oncomplete=()=>Dt.close()}else{const Mt=Object(_e.g)(dt),Xt=Dt.transaction("model_info_store","readwrite");let en=Xt.objectStore("model_info_store");const pn=en.put({modelPath:this.modelPath,modelArtifactsInfo:Mt});let vn;pn.onsuccess=()=>{vn=Dt.transaction("models_store","readwrite");const Cn=vn.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:dt,modelArtifactsInfo:Mt});Cn.onsuccess=()=>mt({modelArtifactsInfo:Mt}),Cn.onerror=Nn=>{en=Xt.objectStore("model_info_store");const Rn=en.delete(this.modelPath);Rn.onsuccess=()=>(Dt.close(),St(Cn.error)),Rn.onerror=Mn=>(Dt.close(),St(Cn.error))}},pn.onerror=Cn=>(Dt.close(),St(pn.error)),Xt.oncomplete=()=>{vn==null?Dt.close():vn.oncomplete=()=>Dt.close()}}},$t.onerror=Dt=>St($t.error)})}}ut.URL_SCHEME="indexeddb://";const ht=lt=>{return Object(_.b)().getBool("IS_BROWSER")&&!Array.isArray(lt)&&lt.startsWith(ut.URL_SCHEME)?(ct=lt.slice(ut.URL_SCHEME.length),new ut(ct)):null;var ct};et.registerSaveRouter(ht),et.registerLoadRouter(ht);class pt{constructor(){this.indexedDB=st()}async listModels(){return new Promise((ct,dt)=>{const mt=this.indexedDB.open("tensorflowjs",1);mt.onupgradeneeded=()=>ot(mt),mt.onsuccess=()=>{const St=mt.result,$t=St.transaction("model_info_store","readonly"),Dt=$t.objectStore("model_info_store").getAll();Dt.onsuccess=()=>{const Mt={};for(const Xt of Dt.result)Mt[Xt.modelPath]=Xt.modelArtifactsInfo;ct(Mt)},Dt.onerror=Mt=>(St.close(),dt(Dt.error)),$t.oncomplete=()=>St.close()},mt.onerror=St=>dt(mt.error)})}async removeModel(ct){var dt;return ct=(dt=ct).startsWith(ut.URL_SCHEME)?dt.slice(ut.URL_SCHEME.length):dt,new Promise((mt,St)=>{const $t=this.indexedDB.open("tensorflowjs",1);$t.onupgradeneeded=()=>ot($t),$t.onsuccess=()=>{const Dt=$t.result,Mt=Dt.transaction("model_info_store","readwrite"),Xt=Mt.objectStore("model_info_store"),en=Xt.get(ct);let pn;en.onsuccess=()=>{if(en.result==null)return Dt.close(),St(new Error(`Cannot find model with path '${ct}' in IndexedDB.`));{const vn=Xt.delete(ct),Cn=()=>{pn=Dt.transaction("models_store","readwrite");const Nn=pn.objectStore("models_store").delete(ct);Nn.onsuccess=()=>mt(en.result.modelArtifactsInfo),Nn.onerror=Rn=>St(en.error)};vn.onsuccess=Cn,vn.onerror=Nn=>(Cn(),Dt.close(),St(en.error))}},en.onerror=vn=>(Dt.close(),St(en.error)),Mt.oncomplete=()=>{pn==null?Dt.close():pn.oncomplete=()=>Dt.close()}},$t.onerror=Dt=>St($t.error)})}}var it=o(16);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yt="tensorflowjs_models",ft="info",bt="model_topology",Tt="weight_specs",Ct="weight_data",_t="model_metadata";function Ot(lt){return{info:[yt,lt,ft].join("/"),topology:[yt,lt,bt].join("/"),weightSpecs:[yt,lt,Tt].join("/"),weightData:[yt,lt,Ct].join("/"),modelMetadata:[yt,lt,_t].join("/")}}function kt(lt){const ct=lt.split("/");if(ct.length<3)throw new Error("Invalid key format: "+lt);return ct.slice(1,ct.length-1).join("/")}class Rt{constructor(ct){if(!Object(_.b)().getBool("IS_BROWSER")||typeof window>"u"||window.localStorage===void 0)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,ct==null||!ct)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=ct,this.keys=Ot(this.modelPath)}async save(ct){if(ct.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const dt=JSON.stringify(ct.modelTopology),mt=JSON.stringify(ct.weightSpecs),St=Object(_e.g)(ct);try{return this.LS.setItem(this.keys.info,JSON.stringify(St)),this.LS.setItem(this.keys.topology,dt),this.LS.setItem(this.keys.weightSpecs,mt),this.LS.setItem(this.keys.weightData,Object(_e.a)(ct.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:ct.format,generatedBy:ct.generatedBy,convertedBy:ct.convertedBy,userDefinedMetadata:ct.userDefinedMetadata})),{modelArtifactsInfo:St}}catch{throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${St.modelTopologyBytes}, weightSpecsBytes=${St.weightSpecsBytes}, weightDataBytes=${St.weightDataBytes}.`)}}}async load(){const ct=JSON.parse(this.LS.getItem(this.keys.info));if(ct==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(ct.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const dt={},mt=JSON.parse(this.LS.getItem(this.keys.topology));if(mt==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);dt.modelTopology=mt;const St=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(St==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);dt.weightSpecs=St;const $t=this.LS.getItem(this.keys.modelMetadata);if($t!=null){const Mt=JSON.parse($t);dt.format=Mt.format,dt.generatedBy=Mt.generatedBy,dt.convertedBy=Mt.convertedBy,dt.userDefinedMetadata=Mt.userDefinedMetadata}const Dt=this.LS.getItem(this.keys.weightData);if(Dt==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return dt.weightData=Object(_e.b)(Dt),dt}}Rt.URL_SCHEME="localstorage://";const jt=lt=>{return Object(_.b)().getBool("IS_BROWSER")&&!Array.isArray(lt)&&lt.startsWith(Rt.URL_SCHEME)?(ct=lt.slice(Rt.URL_SCHEME.length),new Rt(ct)):null;var ct};et.registerSaveRouter(jt),et.registerLoadRouter(jt);class Gt{constructor(){Object(it.b)(Object(_.b)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Object(it.b)(typeof window>"u"||window.localStorage!==void 0,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const ct={},dt=yt+"/",mt="/"+ft;for(let St=0;St<this.LS.length;++St){const $t=this.LS.key(St);$t.startsWith(dt)&&$t.endsWith(mt)&&(ct[kt($t)]=JSON.parse(this.LS.getItem($t)))}return ct}async removeModel(ct){var dt;const mt=Ot(ct=(dt=ct).startsWith(Rt.URL_SCHEME)?dt.slice(Rt.URL_SCHEME.length):dt);if(this.LS.getItem(mt.info)==null)throw new Error(`Cannot find model at path '${ct}'`);const St=JSON.parse(this.LS.getItem(mt.info));return this.LS.removeItem(mt.info),this.LS.removeItem(mt.topology),this.LS.removeItem(mt.weightSpecs),this.LS.removeItem(mt.weightData),St}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bt{constructor(){this.managers={}}static getInstance(){return Bt.instance==null&&(Bt.instance=new Bt),Bt.instance}static registerManager(ct,dt){Object(it.b)(ct!=null,()=>"scheme must not be undefined or null."),ct.endsWith("://")&&(ct=ct.slice(0,ct.indexOf("://"))),Object(it.b)(ct.length>0,()=>"scheme must not be an empty string.");const mt=Bt.getInstance();Object(it.b)(mt.managers[ct]==null,()=>`A model store manager is already registered for scheme '${ct}'.`),mt.managers[ct]=dt}static getManager(ct){const dt=this.getInstance().managers[ct];if(dt==null)throw new Error(`Cannot find model manager for scheme '${ct}'`);return dt}static getSchemes(){return Object.keys(this.getInstance().managers)}}function zt(lt){if(lt.indexOf("://")===-1)throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+Bt.getSchemes().join(","));return{scheme:lt.split("://")[0],path:lt.split("://")[1]}}async function Ut(lt,ct,dt=!1){Object(it.b)(lt!==ct,()=>`Old path and new path are the same: '${lt}'`);const mt=et.getLoadHandlers(lt);Object(it.b)(mt.length>0,()=>`Copying failed because no load handler is found for source URL ${lt}.`),Object(it.b)(mt.length<2,()=>`Copying failed because more than one (${mt.length}) load handlers for source URL ${lt}.`);const St=mt[0],$t=et.getSaveHandlers(ct);Object(it.b)($t.length>0,()=>`Copying failed because no save handler is found for destination URL ${ct}.`),Object(it.b)($t.length<2,()=>`Copying failed because more than one (${mt.length}) save handlers for destination URL ${ct}.`);const Dt=$t[0],Mt=zt(lt).scheme,Xt=zt(lt).path,en=Mt===zt(lt).scheme,pn=await St.load();dt&&en&&await Bt.getManager(Mt).removeModel(Xt);const vn=await Dt.save(pn);return dt&&!en&&await Bt.getManager(Mt).removeModel(Xt),vn.modelArtifactsInfo}async function Qt(){const lt=Bt.getSchemes(),ct={};for(const dt of lt){const mt=await Bt.getManager(dt).listModels();for(const St in mt)ct[dt+"://"+St]=mt[St]}return ct}async function tn(lt){const ct=zt(lt);return Bt.getManager(ct.scheme).removeModel(ct.path)}async function sn(lt,ct){return Ut(lt,ct,!1)}async function ln(lt,ct){return Ut(lt,ct,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class an{fetch(ct,dt){return fetch(ct,dt)}now(){return performance.now()}encode(ct,dt){if(dt!=="utf-8"&&dt!=="utf8")throw new Error("Browser's encoder only supports utf-8, but got "+dt);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(ct)}decode(ct,dt){return new TextDecoder(dt).decode(ct)}}if(Object(_.b)().get("IS_BROWSER")){Object(_.b)().setPlatform("browser",new an);try{Bt.registerManager(Rt.URL_SCHEME,new Gt)}catch{}try{Bt.registerManager(ut.URL_SCHEME,new pt)}catch{}}o(159);var Yt=o(5);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cn(lt,ct="float32",dt){return ct=ct||"float32",it.c(lt),new Yt.b(lt,ct,dt)}var Wt=o(1),wt=o(3),xt=o(4);const At=Object(xt.a)({cast_:function(lt,ct){const dt=Object(wt.a)(lt,"x","cast");if(!it.B(ct))throw new Error("Failed to cast to unknown dtype "+ct);if(ct==="string"&&dt.dtype!=="string"||ct!=="string"&&dt.dtype==="string")throw new Error("Only strings can be casted to strings");const mt={x:dt},St={dtype:ct};return $.a.runKernelFunc($t=>$t.cast(dt,ct),mt,null,Wt.v,St)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qt=Object(xt.a)({clone_:function(lt){const ct=Object(wt.a)(lt,"x","clone",null),dt={x:ct};return $.a.runKernelFunc(()=>$.a.makeTensorFromDataId(ct.dataId,ct.shape,ct.dtype),dt,null,Wt.jb)}});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object($.b)();const Pt={buffer:cn,cast:At,clone:qt,print:function(lt,ct=!1){console.log(lt.toString(ct))}};Object(Yt.e)(Pt);function Zt(lt){return new Promise(ct=>setTimeout(ct)).then(lt)}class nn{constructor(ct){if(!Object(_.b)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");ct.startsWith(nn.URL_SCHEME)&&(ct=ct.slice(nn.URL_SCHEME.length)),ct!=null&&ct.length!==0||(ct="model"),this.modelTopologyFileName=ct+".json",this.weightDataFileName=ct+".weights.bin"}async save(ct){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const dt=window.URL.createObjectURL(new Blob([ct.weightData],{type:"application/octet-stream"}));if(ct.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const mt=[{paths:["./"+this.weightDataFileName],weights:ct.weightSpecs}],St={modelTopology:ct.modelTopology,format:ct.format,generatedBy:ct.generatedBy,convertedBy:ct.convertedBy,weightsManifest:mt},$t=window.URL.createObjectURL(new Blob([JSON.stringify(St)],{type:"application/json"})),Dt=this.jsonAnchor==null?document.createElement("a"):this.jsonAnchor;if(Dt.download=this.modelTopologyFileName,Dt.href=$t,await Zt(()=>Dt.dispatchEvent(new MouseEvent("click"))),ct.weightData!=null){const Mt=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;Mt.download=this.weightDataFileName,Mt.href=dt,await Zt(()=>Mt.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Object(_e.g)(ct)}}}}nn.URL_SCHEME="downloads://";class dn{constructor(ct){if(ct==null||ct.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+ct);this.files=ct}async load(){const ct=this.files[0],dt=this.files.slice(1);return new Promise((mt,St)=>{const $t=new FileReader;$t.onload=Dt=>{const Mt=JSON.parse(Dt.target.result),Xt=Mt.modelTopology;if(Xt==null)return void St(new Error("modelTopology field is missing from file "+ct.name));dt.length===0&&mt({modelTopology:Xt});const en=Mt.weightsManifest;if(en==null)return void St(new Error("weightManifest field is missing from file "+ct.name));let pn;try{pn=this.checkManifestAndWeightFiles(en,dt)}catch(Rn){return void St(Rn)}const vn=[],Cn=[],Nn=[];en.forEach(Rn=>{Rn.paths.forEach(Mn=>{Cn.push(Mn),Nn.push(null)}),vn.push(...Rn.weights)}),en.forEach(Rn=>{Rn.paths.forEach(Mn=>{const qn=new FileReader;qn.onload=ir=>{const er=ir.target.result,ar=Cn.indexOf(Mn);Nn[ar]=er,Nn.indexOf(null)===-1&&mt({modelTopology:Xt,weightSpecs:vn,weightData:Object(_e.d)(Nn),format:Mt.format,generatedBy:Mt.generatedBy,convertedBy:Mt.convertedBy,userDefinedMetadata:Mt.userDefinedMetadata})},qn.onerror=ir=>St(`Failed to weights data from file of path '${Mn}'.`),qn.readAsArrayBuffer(pn[Mn])})})},$t.onerror=Dt=>St(`Failed to read model topology and weights manifest JSON from file '${ct.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),$t.readAsText(ct)})}checkManifestAndWeightFiles(ct,dt){const mt=[],St=dt.map(Dt=>Object(_e.c)(Dt.name)),$t={};for(const Dt of ct)Dt.paths.forEach(Mt=>{const Xt=Object(_e.c)(Mt);if(mt.indexOf(Xt)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${Xt}'`);if(mt.push(Xt),St.indexOf(Xt)===-1)throw new Error(`Weight file with basename '${Xt}' is not provided.`);$t[Mt]=dt[St.indexOf(Xt)]});if(mt.length!==dt.length)throw new Error(`Mismatch in the number of files in weights manifest (${mt.length}) and the number of weight files provided (${dt.length}).`);return $t}}function wn(lt){return new dn(lt)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kn(lt,ct,dt,mt){(function($t){Object(it.b)($t!=null&&Array.isArray($t)&&$t.length>0,()=>"promises must be a none empty array")})(lt),function($t,Dt){Object(it.b)($t>=0&&$t<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+$t),Object(it.b)(Dt>=0&&Dt<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+Dt),Object(it.b)(Dt>=$t,()=>`startFraction must be no more than endFraction, but got startFraction ${$t} and endFraction `+Dt)}(dt=dt??0,mt=mt??1);let St=0;return Promise.all(lt.map($t=>($t.then(Dt=>{const Mt=dt+ ++St/lt.length*(mt-dt);return ct(Mt),Dt}),$t)))}et.registerSaveRouter(lt=>Object(_.b)().getBool("IS_BROWSER")&&!Array.isArray(lt)&&lt.startsWith(nn.URL_SCHEME)?function(ct="model"){return new nn(ct)}(lt.slice(nn.URL_SCHEME.length)):null);var Pn=o(41);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function On(lt,ct){ct==null&&(ct={});const dt=ct.fetchFunc==null?Object(_.b)().platform.fetch:ct.fetchFunc,mt=lt.map($t=>dt($t,ct.requestInit,{isBinary:!0})),St=(ct.onProgress==null?await Promise.all(mt):await kn(mt,ct.onProgress,0,.5)).map($t=>$t.arrayBuffer());return ct.onProgress==null?await Promise.all(St):await kn(St,ct.onProgress,.5,1)}async function Bn(lt,ct="",dt,mt){return Zn(St=>On(St,{requestInit:mt}))(lt,ct,dt)}function Zn(lt){return async(ct,dt="",mt)=>{const St=ct.map(()=>!1),$t={},Dt=mt!=null?mt.map(()=>!1):[],Mt=[];if(ct.forEach((Nn,Rn)=>{let Mn=0;Nn.weights.forEach(qn=>{const ir="quantization"in qn?qn.quantization.dtype:qn.dtype,er=Pn.a[ir]*it.N(qn.shape),ar=()=>{St[Rn]=!0,$t[Rn]==null&&($t[Rn]=[]),$t[Rn].push({manifestEntry:qn,groupOffset:Mn,sizeBytes:er})};mt!=null?mt.forEach((gr,wr)=>{gr===qn.name&&(ar(),Dt[wr]=!0)}):ar(),Mt.push(qn.name),Mn+=er})}),!Dt.every(Nn=>Nn)){const Nn=mt.filter((Rn,Mn)=>!Dt[Mn]);throw new Error("Could not find weights in manifest with names: "+Nn.join(", ")+`. 
Manifest JSON has weights with names: `+Mt.join(", ")+".")}const Xt=St.reduce((Nn,Rn,Mn)=>(Rn&&Nn.push(Mn),Nn),[]),en=[];Xt.forEach(Nn=>{ct[Nn].paths.forEach(Rn=>{const Mn=dt+(dt.endsWith("/")?"":"/")+Rn;en.push(Mn)})});const pn=await lt(en),vn={};let Cn=0;return Xt.forEach(Nn=>{const Rn=ct[Nn].paths.length;let Mn=0;for(let ar=0;ar<Rn;ar++)Mn+=pn[Cn+ar].byteLength;const qn=new ArrayBuffer(Mn),ir=new Uint8Array(qn);let er=0;for(let ar=0;ar<Rn;ar++){const gr=new Uint8Array(pn[Cn+ar]);ir.set(gr,er),er+=gr.byteLength}$t[Nn].forEach(ar=>{const gr=qn.slice(ar.groupOffset,ar.groupOffset+ar.sizeBytes),wr=Object(_e.e)(gr,[ar.manifestEntry]);for(const Ir in wr)vn[Ir]=wr[Ir]}),Cn+=Rn}),vn}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jn{constructor(ct,dt){if(this.DEFAULT_METHOD="POST",dt==null&&(dt={}),this.weightPathPrefix=dt.weightPathPrefix,this.onProgress=dt.onProgress,this.weightUrlConverter=dt.weightUrlConverter,dt.fetchFunc!=null?(Object(it.b)(typeof dt.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=dt.fetchFunc):this.fetch=Object(_.b)().platform.fetch,Object(it.b)(ct!=null&&ct.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(ct)&&Object(it.b)(ct.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${ct.length}).`),this.path=ct,dt.requestInit!=null&&dt.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=dt.requestInit||{}}async save(ct){if(ct.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const dt=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);dt.body=new FormData;const mt=[{paths:["./model.weights.bin"],weights:ct.weightSpecs}],St={modelTopology:ct.modelTopology,format:ct.format,generatedBy:ct.generatedBy,convertedBy:ct.convertedBy,userDefinedMetadata:ct.userDefinedMetadata,weightsManifest:mt};dt.body.append("model.json",new Blob([JSON.stringify(St)],{type:"application/json"}),"model.json"),ct.weightData!=null&&dt.body.append("model.weights.bin",new Blob([ct.weightData],{type:"application/octet-stream"}),"model.weights.bin");const $t=await this.fetch(this.path,dt);if($t.ok)return{modelArtifactsInfo:Object(_e.g)(ct),responses:[$t]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+$t.status+".")}async load(){const ct=await this.fetch(this.path,this.requestInit);if(!ct.ok)throw new Error(`Request to ${this.path} failed with status code `+ct.status+". Please verify this URL points to the model JSON of the model to load.");let dt;try{dt=await ct.json()}catch{let Rn=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?Rn+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":Rn+=" Please make sure the server is serving valid JSON for this request.",new Error(Rn)}const mt=dt.modelTopology,St=dt.weightsManifest,$t=dt.generatedBy,Dt=dt.convertedBy,Mt=dt.format,Xt=dt.userDefinedMetadata;if(mt==null&&St==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let en,pn;St!=null&&([en,pn]=await this.loadWeights(St));const vn={modelTopology:mt,weightSpecs:en,weightData:pn,userDefinedMetadata:Xt,generatedBy:$t,convertedBy:Dt,format:Mt},Cn=dt.modelInitializer;return Cn&&(vn.modelInitializer=Cn),vn}async loadWeights(ct){const dt=Array.isArray(this.path)?this.path[1]:this.path,[mt,St]=function(pn){const vn=pn.lastIndexOf("/"),Cn=pn.lastIndexOf("?"),Nn=pn.substring(0,vn),Rn=Cn>vn?pn.substring(Cn):"";return[Nn+"/",Rn]}(dt),$t=this.weightPathPrefix||mt,Dt=[];for(const pn of ct)Dt.push(...pn.weights);const Mt=[],Xt=[];for(const pn of ct)for(const vn of pn.paths)this.weightUrlConverter!=null?Xt.push(this.weightUrlConverter(vn)):Mt.push($t+vn+St);this.weightUrlConverter&&Mt.push(...await Promise.all(Xt));const en=await On(Mt,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[Dt,Object(_e.d)(en)]}}function tr(lt){return lt.match(jn.URL_SCHEME_REGEX)!=null}jn.URL_SCHEME_REGEX=/^https?:\/\//;const Un=(lt,ct)=>{if(typeof fetch>"u"&&(ct==null||ct.fetchFunc==null))return null;{let dt=!0;if(dt=Array.isArray(lt)?lt.every(mt=>tr(mt)):tr(lt),dt)return or(lt,ct)}return null};function or(lt,ct){return new jn(lt,ct)}function Cr(lt,ct){return or(lt,ct)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */et.registerSaveRouter(Un),et.registerLoadRouter(Un);class Rr{constructor(ct){this.modelArtifacts=ct}async load(){return this.modelArtifacts}}class Er{constructor(ct){this.saveHandler=ct}async save(ct){return this.saveHandler(ct)}}function zr(lt,ct,dt,mt){return arguments.length===1?lt.modelTopology!=null||lt.weightSpecs!=null?new Rr(lt):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Rr({modelTopology:lt})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Rr({modelTopology:lt,weightSpecs:ct,weightData:dt,trainingConfig:mt}))}function bs(lt){return new Er(lt)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ms(lt,ct,dt){const mt=lt.shape.length;it.b(mt===ct.length,()=>`Error in slice${mt}D: Length of begin ${ct} must match the rank of the array (${mt}).`),it.b(mt===dt.length,()=>`Error in slice${mt}D: Length of size ${dt} must match the rank of the array (${mt}).`);for(let St=0;St<mt;++St)it.b(ct[St]+dt[St]<=lt.shape[St],()=>`Error in slice${mt}D: begin[${St}] + size[${St}] (${ct[St]+dt[St]}) would overflow input.shape[${St}] (${lt.shape[St]})`)}function gs(lt){const ct=[];let dt=0;for(;lt>0;)1&lt&&ct.push(dt),lt/=2,dt++;return ct}function ys(lt,ct,dt){const mt=[];for(let St=0;St<lt.length;St++)mt[St]=Math.ceil((ct[St]-lt[St])/dt[St]);return mt}function $s(lt,ct,dt,mt){const St=[...lt];for(let $t=St.length;$t<mt.length;$t++)St.push(1);for(let $t=0;$t<dt;$t++)$t===0?St[ct]=1:(St.splice(ct,0,1),St.pop());return St}function ls(lt,ct,dt){return dt<=lt?dt:dt-(ct-1)}function Yr(lt,ct){const dt=[];for(let mt=0;mt<lt;mt++)dt.push(ct+mt);return dt}function Ls(lt,ct,dt,mt,St,$t,Dt,Mt,Xt){const en=lt.length;let pn=new Array(en),vn=new Array(en),Cn=new Array(en);if(ct.length&&dt>0){const Nn=ct[0],Rn=dt+1;pn=Jr(Dt,Nn,Rn,mt,lt),vn=vs(Mt,Nn,Rn,St,lt),Cn=$s($t,Nn,Rn,lt)}else for(let Nn=0;Nn<en;Nn++)pn[Nn]=Pr(Dt,mt,$t,lt,Nn,Xt),vn[Nn]=Nr(Mt,St,$t,lt,Nn,Xt),Cn[Nn]=Os($t,Nn,Xt);return{begin:pn,end:vn,strides:Cn}}function Jr(lt,ct,dt,mt,St){const $t=[...St],Dt=Yr(dt,ct);for(let Mt=0;Mt<$t.length;Mt++)if(Dt.indexOf(Mt)>-1)$t[Mt]=0;else{const Xt=ls(ct,dt,Mt);let en=mt[Xt];lt&1<<Xt&&(en=0),$t[Mt]=en}return $t}function vs(lt,ct,dt,mt,St){const $t=[...St],Dt=Yr(dt,ct);for(let Mt=0;Mt<$t.length;Mt++)if(Dt.indexOf(Mt)>-1)$t[Mt]=Number.MAX_SAFE_INTEGER;else{const Xt=ls(ct,dt,Mt);let en=mt[Xt];lt&1<<Xt&&(en=Number.MAX_SAFE_INTEGER),$t[Mt]=en}for(let Mt=0;Mt<$t.length;Mt++){const Xt=St[Mt];$t[Mt]<0&&($t[Mt]+=Xt),$t[Mt]=it.i(0,$t[Mt],St[Mt])}return $t}function Os(lt,ct,dt){let mt=lt[ct];return(dt&1<<ct||mt==null)&&(mt=1),mt}function Pr(lt,ct,dt,mt,St,$t){let Dt=ct[St];const Mt=dt[St]||1;(lt&1<<St||$t&1<<St||Dt==null)&&(Dt=Mt>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const Xt=mt[St];return Dt<0&&(Dt+=Xt),Dt=it.i(0,Dt,Xt-1),Dt}function Nr(lt,ct,dt,mt,St,$t){let Dt=ct[St];const Mt=dt[St]||1;(lt&1<<St||$t&1<<St||Dt==null)&&(Dt=Mt>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const Xt=mt[St];return Dt<0&&(Dt+=Xt),Dt=Mt>0?it.i(0,Dt,Xt):it.i(-1,Dt,Xt-1),Dt}function Ds(lt,ct,dt){let mt=dt.length;for(let St=0;St<dt.length;St++)if(dt[St]>1){mt=St;break}for(let St=mt+1;St<dt.length;St++)if(ct[St]>0||dt[St]!==lt[St])return!1;return!0}function ns(lt,ct){let dt=lt.length>0?lt[lt.length-1]:1;for(let mt=0;mt<lt.length-1;mt++)dt+=lt[mt]*ct[mt];return dt}function Rs(lt,ct,dt){let mt;const St=lt.shape.length;let $t;return mt=typeof ct=="number"?[ct,...new Array(St-1).fill(0)]:ct.length<St?ct.concat(new Array(St-ct.length).fill(0)):ct.slice(),mt.forEach(Dt=>{it.b(Dt!==-1,()=>"slice() does not support negative begin indexing.")}),$t=dt==null?new Array(St).fill(-1):typeof dt=="number"?[dt,...new Array(St-1).fill(-1)]:dt.length<St?dt.concat(new Array(St-dt.length).fill(-1)):dt,$t=$t.map((Dt,Mt)=>Dt>=0?Dt:(it.b(Dt===-1,()=>`Negative size values should be exactly -1 but got ${Dt} for the slice() size at index ${Mt}.`),lt.shape[Mt]-mt[Mt])),[mt,$t]}var xs=o(7),$n=o(27),Tn=o(14);const Dn=Object(xt.a)({add_:function(lt,ct){let dt=Object(wt.a)(lt,"a","add"),mt=Object(wt.a)(ct,"b","add");[dt,mt]=Object(Tn.b)(dt,mt);const St={a:dt,b:mt};return $.a.runKernelFunc(($t,Dt)=>{const Mt=$t.add(dt,mt);return Dt([dt,mt]),Mt},St,null,Wt.d)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bn=Object(xt.a)({reshape_:function(lt,ct){const dt=Object(wt.a)(lt,"x","reshape",null),mt={x:dt},St={shape:ct};return $.a.runKernelFunc(($t,Dt)=>(ct=it.s(ct,dt.size),it.b(dt.size===it.N(ct),()=>"new shape and old shape must have the same number of elements."),Dt([dt]),$t.reshape(dt,ct)),mt,null,Wt.bc,St)}});function Gn(lt){return lt==null?null:lt.rank===0?bn(lt,[lt.size]):lt.rank===1?lt:lt.rank===2?bn(lt,[1,1,lt.shape[0],lt.shape[1]]):lt.rank===3?bn(lt,[1,lt.shape[0],lt.shape[1],lt.shape[2]]):lt}const Jn=Object(xt.a)({batchNorm_:function(lt,ct,dt,mt,St,$t){$t==null&&($t=.001);const Dt=Object(wt.a)(lt,"x","batchNorm"),Mt=Object(wt.a)(ct,"mean","batchNorm"),Xt=Object(wt.a)(dt,"variance","batchNorm");let en,pn;St!=null&&(en=Object(wt.a)(St,"scale","batchNorm")),mt!=null&&(pn=Object(wt.a)(mt,"offset","batchNorm")),it.b(Mt.rank===Xt.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),it.b(pn==null||Mt.rank===pn.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),it.b(en==null||Mt.rank===en.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const vn=function(Mn){let qn;return qn=Mn.rank===0||Mn.rank===1?bn(Mn,[1,1,1,Mn.size]):Mn.rank===2?bn(Mn,[1,1,Mn.shape[0],Mn.shape[1]]):Mn.rank===3?bn(Mn,[1,Mn.shape[0],Mn.shape[1],Mn.shape[2]]):Mn,qn}(Dt),Cn={x:vn,scale:en,offset:pn,mean:Mt,variance:Xt},Nn={varianceEpsilon:$t},Rn=$.a.runKernelFunc((Mn,qn)=>(qn([vn,Mt,Xt,en]),Mn.batchNorm(vn,Gn(Mt),Gn(Xt),Gn(pn),Gn(en),$t)),Cn,null,Wt.eb,Nn);return bn(Rn,Dt.shape)}});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rr(lt,ct){const dt=lt[0].length;lt.forEach((St,$t)=>{it.b(St.length===dt,()=>`Error in concat${dt}D: rank of tensors[${$t}] must be the same as the rank of the rest (${dt})`)}),it.b(ct>=0&&ct<dt,()=>`Error in concat${dt}D: axis must be between 0 and ${dt-1}.`);const mt=lt[0];lt.forEach((St,$t)=>{for(let Dt=0;Dt<dt;Dt++)it.b(Dt===ct||St[Dt]===mt[Dt],()=>`Error in concat${dt}D: Shape of tensors[${$t}] (${St}) does not match the shape of the rest (${mt}) along the non-concatenated axis ${$t}.`)})}function hr(lt,ct){const dt=lt[0].slice();for(let mt=1;mt<lt.length;mt++)dt[ct]+=lt[mt][ct];return dt}var Gr=o(24);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ar=Object(xt.a)({concat_:function(lt,ct=0){Object(it.b)(lt.length>=1,()=>"Pass at least one tensor to concat");let dt=Object(wt.b)(lt,"tensors","concat");dt[0].dtype==="complex64"&&dt.forEach($t=>{if($t.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${$t.dtype}. `)});const mt=dt,St={axis:ct};return $.a.runKernelFunc(($t,Dt)=>{const Mt=Object(it.I)(ct,dt[0].shape)[0],Xt=hr(dt.map(pn=>pn.shape),Mt);if(Object(it.N)(Xt)===0)return Object(Gr.a)([],Xt);if(dt=dt.filter(pn=>pn.size>0),dt.length===1)return dt[0];rr(dt.map(pn=>pn.shape),Mt);const en=$t.concat(dt,Mt);return Dt(dt),en},mt,null,Wt.z,St)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kt(lt,ct,dt,mt,St="NHWC",$t){return xn(lt,[...ct,lt[3]],dt,$t,mt,null,null,$r(St))}function rn(lt,ct,dt,mt,St,$t,Dt="channelsLast"){const[Mt,Xt]=Wn(ct);let en;if(Dt==="channelsLast")en=[Mt,Xt,lt[3],lt[3]];else{if(Dt!=="channelsFirst")throw new Error("Unknown dataFormat "+Dt);en=[Mt,Xt,lt[1],lt[1]]}return xn(lt,en,dt,mt,St,$t,!1,Dt)}function hn(lt,ct,dt,mt,St,$t,Dt="NDHWC"){const[Mt,Xt,en]=Qn(ct);let pn,vn;if(Dt==="NDHWC")vn="channelsLast",pn=[Mt,Xt,en,lt[4],lt[4]];else{if(Dt!=="NCDHW")throw new Error("Unknown dataFormat "+Dt);vn="channelsFirst",pn=[Mt,Xt,en,lt[1],lt[1]]}return An(lt,pn,dt,mt,St,!1,vn,$t)}function xn(lt,ct,dt,mt,St,$t,Dt=!1,Mt="channelsLast"){let[Xt,en,pn,vn]=[-1,-1,-1,-1];if(Mt==="channelsLast")[Xt,en,pn,vn]=lt;else{if(Mt!=="channelsFirst")throw new Error("Unknown dataFormat "+Mt);[Xt,vn,en,pn]=lt}const[Cn,Nn,,Rn]=ct,[Mn,qn]=Wn(dt),[ir,er]=Wn(mt),ar=pr(Cn,ir),gr=pr(Nn,er),{padInfo:wr,outHeight:Ir,outWidth:ps}=function(Lr,qs,Ws,Xr,us,So,fs,Co,uo){let eo,Hs,to;if(typeof Lr=="number"){eo={top:Lr,bottom:Lr,left:Lr,right:Lr,type:Lr===0?"VALID":"NUMBER"};const ks=function(Ns,Es,Ms,lo,Do){lo==null&&(lo=Fn(Ns,Es,Ms));const Ro=Ns[0],Po=Ns[1],co=nr((Ro-Es+2*lo)/Ms+1,Do);it.b(it.v(co),()=>`The output # of rows (${co}) must be an integer. Change the stride and/or zero pad parameters`);const no=nr((Po-Es+2*lo)/Ms+1,Do);return it.b(it.v(no),()=>`The output # of columns (${no}) must be an integer. Change the stride and/or zero pad parameters`),[co,no]}([qs,Ws],So,Xr,Lr,Co);Hs=ks[0],to=ks[1]}else if(Lr==="same"){Hs=Math.ceil(qs/Xr),to=Math.ceil(Ws/us);const ks=Math.max(0,(Hs-1)*Xr+So-qs),Ns=Math.max(0,(to-1)*us+fs-Ws),Es=Math.floor(ks/2),Ms=ks-Es,lo=Math.floor(Ns/2);eo={top:Es,bottom:Ms,left:lo,right:Ns-lo,type:"SAME"}}else if(Lr==="valid")eo={top:0,bottom:0,left:0,right:0,type:"VALID"},Hs=Math.ceil((qs-So+1)/Xr),to=Math.ceil((Ws-fs+1)/us);else{if(typeof Lr!="object")throw Error("Unknown padding parameter: "+Lr);{const ks=uo==="channelsLast"?Lr[1][0]:Lr[2][0],Ns=uo==="channelsLast"?Lr[1][1]:Lr[2][1],Es=uo==="channelsLast"?Lr[2][0]:Lr[3][0],Ms=uo==="channelsLast"?Lr[2][1]:Lr[3][1];eo={top:ks,bottom:Ns,left:Es,right:Ms,type:ks===0&&Ns===0&&Es===0&&Ms===0?"VALID":"EXPLICIT"},Hs=nr((qs-So+ks+Ns)/Xr+1,Co),to=nr((Ws-fs+Es+Ms)/us+1,Co)}}return{padInfo:eo,outHeight:Hs,outWidth:to}}(St,en,pn,Mn,qn,ar,gr,$t,Mt),Sr=Dt?Rn*vn:Rn;let Ur;return Mt==="channelsFirst"?Ur=[Xt,Sr,Ir,ps]:Mt==="channelsLast"&&(Ur=[Xt,Ir,ps,Sr]),{batchSize:Xt,dataFormat:Mt,inHeight:en,inWidth:pn,inChannels:vn,outHeight:Ir,outWidth:ps,outChannels:Sr,padInfo:wr,strideHeight:Mn,strideWidth:qn,filterHeight:Cn,filterWidth:Nn,effectiveFilterHeight:ar,effectiveFilterWidth:gr,dilationHeight:ir,dilationWidth:er,inShape:lt,outShape:Ur,filterShape:ct}}function An(lt,ct,dt,mt,St,$t=!1,Dt="channelsLast",Mt){let[Xt,en,pn,vn,Cn]=[-1,-1,-1,-1,-1];if(Dt==="channelsLast")[Xt,en,pn,vn,Cn]=lt;else{if(Dt!=="channelsFirst")throw new Error("Unknown dataFormat "+Dt);[Xt,Cn,en,pn,vn]=lt}const[Nn,Rn,Mn,,qn]=ct,[ir,er,ar]=Qn(dt),[gr,wr,Ir]=Qn(mt),ps=pr(Nn,gr),Sr=pr(Rn,wr),Ur=pr(Mn,Ir),{padInfo:Lr,outDepth:qs,outHeight:Ws,outWidth:Xr}=function(fs,Co,uo,eo,Hs,to,ks,Ns,Es,Ms,lo){let Do,Ro,Po,co;if(typeof fs=="number"){Do={top:fs,bottom:fs,left:fs,right:fs,front:fs,back:fs,type:fs===0?"VALID":"NUMBER"};const no=function(Fo,Mo,Qu,_a,To,gu){To==null&&(To=Fn(Fo,Mo,_a));const Zu=Fo[0],_1=Fo[1],I1=Fo[2],Fp=nr((Zu-Mo+2*To)/_a+1,gu);it.b(it.v(Fp),()=>`The output # of depths (${Fp}) must be an integer. Change the stride and/or zero pad parameters`);const Mp=nr((_1-Mo+2*To)/_a+1,gu);it.b(it.v(Mp),()=>`The output # of rows (${Mp}) must be an integer. Change the stride and/or zero pad parameters`);const Lp=nr((I1-Mo+2*To)/_a+1,gu);return it.b(it.v(Lp),()=>`The output # of columns (${Lp}) must be an integer. Change the stride and/or zero pad parameters`),[Fp,Mp,Lp,Qu]}([Co,uo,eo,1],Ns,1,Hs,fs,lo);Ro=no[0],Po=no[1],co=no[2]}else if(fs==="same"){Ro=Math.ceil(Co/Hs),Po=Math.ceil(uo/to),co=Math.ceil(eo/ks);const no=(Ro-1)*Hs+Ns-Co,Fo=(Po-1)*to+Es-uo,Mo=(co-1)*ks+Ms-eo,Qu=Math.floor(no/2),_a=no-Qu,To=Math.floor(Fo/2),gu=Fo-To,Zu=Math.floor(Mo/2);Do={top:To,bottom:gu,left:Zu,right:Mo-Zu,front:Qu,back:_a,type:"SAME"}}else{if(fs!=="valid")throw Error("Unknown padding parameter: "+fs);Do={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},Ro=Math.ceil((Co-Ns+1)/Hs),Po=Math.ceil((uo-Es+1)/to),co=Math.ceil((eo-Ms+1)/ks)}return{padInfo:Do,outDepth:Ro,outHeight:Po,outWidth:co}}(St,en,pn,vn,ir,er,ar,ps,Sr,Ur,Mt),us=$t?qn*Cn:qn;let So;return Dt==="channelsFirst"?So=[Xt,us,qs,Ws,Xr]:Dt==="channelsLast"&&(So=[Xt,qs,Ws,Xr,us]),{batchSize:Xt,dataFormat:Dt,inDepth:en,inHeight:pn,inWidth:vn,inChannels:Cn,outDepth:qs,outHeight:Ws,outWidth:Xr,outChannels:us,padInfo:Lr,strideDepth:ir,strideHeight:er,strideWidth:ar,filterDepth:Nn,filterHeight:Rn,filterWidth:Mn,effectiveFilterDepth:ps,effectiveFilterHeight:Sr,effectiveFilterWidth:Ur,dilationDepth:gr,dilationHeight:wr,dilationWidth:Ir,inShape:lt,outShape:So,filterShape:ct}}function Fn(lt,ct,dt,mt=1){const St=pr(ct,mt);return Math.floor((lt[0]*(dt-1)-dt+St)/2)}function Wn(lt){return typeof lt=="number"?[lt,lt,lt]:lt.length===2?[lt[0],lt[1],1]:lt}function Qn(lt){return typeof lt=="number"?[lt,lt,lt]:lt}function pr(lt,ct){return ct<=1?lt:lt+(lt-1)*(ct-1)}function nr(lt,ct){if(!ct)return lt;switch(ct){case"round":return Math.round(lt);case"ceil":return Math.ceil(lt);case"floor":return Math.floor(lt);default:throw new Error("Unknown roundingMode "+ct)}}function Yn(lt){const[ct,dt,mt]=Wn(lt);return ct===1&&dt===1&&mt===1}function Hn(lt,ct){return Yn(lt)||Yn(ct)}function $r(lt){if(lt==="NHWC")return"channelsLast";if(lt==="NCHW")return"channelsFirst";throw new Error("Unknown dataFormat "+lt)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fr=Object(xt.a)({conv2d_:function(lt,ct,dt,mt,St="NHWC",$t=[1,1],Dt){const Mt=Object(wt.a)(lt,"x","conv2d"),Xt=Object(wt.a)(ct,"filter","conv2d");let en=Mt,pn=!1;Mt.rank===3&&(pn=!0,en=bn(Mt,[1,Mt.shape[0],Mt.shape[1],Mt.shape[2]])),it.b(en.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${en.rank}.`),it.b(Xt.rank===4,()=>"Error in conv2d: filter must be rank 4, but got rank "+Xt.rank+"."),Dt!=null&&it.b(it.v(mt),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${Dt} but got pad ${mt}.`);const vn=St==="NHWC"?en.shape[3]:en.shape[1];it.b(vn===Xt.shape[2],()=>`Error in conv2d: depth of input (${vn}) must match input depth for filter ${Xt.shape[2]}.`),it.b(Hn(dt,$t),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${dt} and dilations '${$t}'`);const Cn={x:en,filter:Xt},Nn={strides:dt,pad:mt,dataFormat:St,dilations:$t,dimRoundingMode:Dt},Rn=$.a.runKernelFunc((Mn,qn)=>{const ir=$r(St),er=xn(en.shape,Xt.shape,dt,$t,mt,Dt,!1,ir),ar=Mn.conv2d(en,Xt,er);return qn([en,Xt]),ar},Cn,null,Wt.A,Nn);return pn?bn(Rn,[Rn.shape[1],Rn.shape[2],Rn.shape[3]]):Rn}});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rs(lt,ct){for(let dt=0;dt<lt.length;++dt)if(lt[lt.length-dt-1]!==ct-1-dt)return!1;return!0}function Lo(lt,ct,dt){const mt=lt.length+ct.length,St=[];let $t=0,Dt=0;for(let Mt=0;Mt<mt;Mt++)dt.indexOf(Mt)===-1?St.push(lt[$t++]):St.push(ct[Dt++]);return St}function zo(lt,ct){const dt=[],mt=lt.length;for(let St=0;St<mt;St++)ct.indexOf(St)===-1&&dt.push(lt[St]);return[dt,ct.map(St=>lt[St])]}function ss(lt,ct){return Lo(lt,ct.map(dt=>1),ct)}function Wr(lt,ct,dt){it.b(rs(ct,dt),()=>lt+` supports only inner-most axes for now. Got axes ${ct} and rank-${dt} input.`)}function cs(lt,ct){if(rs(lt,ct))return null;const dt=[];for(let mt=0;mt<ct;++mt)lt.indexOf(mt)===-1&&dt.push(mt);return lt.forEach(mt=>dt.push(mt)),dt}function hs(lt){return lt.map((ct,dt)=>[dt,ct]).sort((ct,dt)=>ct[1]-dt[1]).map(ct=>ct[0])}function ws(lt,ct){const dt=[];for(let mt=ct-lt;mt<ct;++mt)dt.push(mt);return dt}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vr=Object(xt.a)({transpose_:function(lt,ct){const dt=Object(wt.a)(lt,"x","transpose");if(ct==null&&(ct=dt.shape.map(($t,Dt)=>Dt).reverse()),it.b(dt.rank===ct.length,()=>`Error in transpose: rank of input ${dt.rank} must match length of perm ${ct}.`),ct.forEach($t=>{it.b($t>=0&&$t<dt.rank,()=>"All entries in 'perm' must be between 0 and "+(dt.rank-1)+" but got "+ct)}),dt.rank<=1)return dt.clone();const mt={x:dt},St={perm:ct};return $.a.runKernelFunc($t=>$t.transpose(dt,ct),mt,null,Wt.Gc,St)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const No=Object(xt.a)({cumsum_:function(lt,ct=0,dt=!1,mt=!1){const St=Object(wt.a)(lt,"x","cumsum"),$t={x:St},Dt={axis:ct,exclusive:dt,reverse:mt};return $.a.runKernelFunc((Mt,Xt)=>{const en=cs([ct],St.rank);let pn=St;en!=null&&(pn=Vr(St,en));const vn=ws(1,St.rank)[0];let Cn=Mt.cumsum(pn,vn,dt,mt);if(Xt([St]),en!=null){const Nn=hs(en);Cn=Vr(Cn,Nn)}return Cn},$t,null,Wt.J,Dt)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ho=Object(xt.a)({depthwiseConv2d_:function(lt,ct,dt,mt,St="NHWC",$t=[1,1],Dt){const Mt=Object(wt.a)(lt,"x","depthwiseConv2d"),Xt=Object(wt.a)(ct,"filter","depthwiseConv2d");let en=Mt,pn=!1;Mt.rank===3&&(pn=!0,en=bn(Mt,[1,Mt.shape[0],Mt.shape[1],Mt.shape[2]])),it.b(en.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${en.rank}.`),it.b(Xt.rank===4,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+Xt.rank+"."),it.b(en.shape[3]===Xt.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${en.shape[3]}) must match the inChannels dimension in filter ${Xt.shape[2]}.`),Dt!=null&&it.b(it.v(mt),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${Dt} but got pad ${mt}.`);const vn={x:en,filter:Xt},Cn={strides:dt,pad:mt,dataFormat:St,dilations:$t,dimRoundingMode:Dt},Nn=$.a.runKernelFunc((Rn,Mn)=>{$t==null&&($t=[1,1]),it.b(Hn(dt,$t),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${dt} and dilations '${$t}'`);const qn=xn(en.shape,Xt.shape,dt,$t,mt,Dt,!0),ir=Rn.depthwiseConv2D(en,Xt,qn);return Mn([en,Xt]),ir},vn,null,Wt.L,Cn);return pn?bn(Nn,[Nn.shape[1],Nn.shape[2],Nn.shape[3]]):Nn}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vo=Object(xt.a)({floorDiv_:function(lt,ct){let dt=Object(wt.a)(lt,"a","floorDiv"),mt=Object(wt.a)(ct,"b","floorDiv");[dt,mt]=Object(Tn.b)(dt,mt);const St={a:dt,b:mt};return $.a.runKernelFunc(($t,Dt)=>{const Mt=$t.floorDiv(dt,mt);return Dt([dt,mt]),Mt},St,null,Wt.cb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yr=Object(xt.a)({div_:function(lt,ct){let dt=Object(wt.a)(lt,"a","div"),mt=Object(wt.a)(ct,"b","div");if([dt,mt]=Object(Tn.b)(dt,mt),dt.dtype==="int32"&&mt.dtype==="int32")return Vo(dt,mt);const St={a:dt,b:mt};return $.a.runKernelFunc(($t,Dt)=>{const Mt=$t.realDivide(dt,mt);return Dt([dt,mt]),Mt},St,null,Wt.R,{})}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Or=Object(xt.a)({matMul_:function(lt,ct,dt=!1,mt=!1){let St=Object(wt.a)(lt,"a","matMul"),$t=Object(wt.a)(ct,"b","matMul");[St,$t]=Object(Tn.b)(St,$t);const Dt={a:St,b:$t},Mt={transposeA:dt,transposeB:mt};return $.a.runKernelFunc((Xt,en)=>{en([St,$t]);const pn=dt?St.shape[St.rank-2]:St.shape[St.rank-1],vn=mt?$t.shape[$t.rank-1]:$t.shape[$t.rank-2],Cn=dt?St.shape[St.rank-1]:St.shape[St.rank-2],Nn=mt?$t.shape[$t.rank-2]:$t.shape[$t.rank-1],Rn=St.shape.slice(0,-2),Mn=$t.shape.slice(0,-2),qn=it.N(Rn),ir=it.N(Mn),er=qn===ir||qn===1||ir===1;it.b(St.rank>=2&&$t.rank>=2&&er,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${Rn}) and (${Mn}).`),it.b(pn===vn,()=>`Error in matMul: inner shapes (${pn}) and (${vn}) of Tensors with shapes ${St.shape} and ${$t.shape} and transposeA=${dt} and transposeB=${mt} must match.`);const ar=(qn>ir?Rn:Mn).concat([Cn,Nn]),gr=bn(St,dt?[qn,pn,Cn]:[qn,Cn,pn]),wr=bn($t,mt?[ir,Nn,vn]:[ir,vn,Nn]),Ir=Xt.batchMatMul(gr,wr,dt,mt);return bn(Ir,ar)},Dt,null,Wt.s,Mt)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zs=Object(xt.a)({max_:function(lt,ct=null,dt=!1){const mt=Object(wt.a)(lt,"x","max"),St={x:mt},$t={reductionIndices:ct,keepDims:dt};return $.a.runKernelFunc((Dt,Mt)=>{let Xt=it.I(ct,mt.shape);const en=cs(Xt,mt.rank);let pn=mt;en!=null&&(pn=Vr(mt,en),Xt=ws(Xt.length,pn.rank));const vn=Dt.max(pn,Xt);en!=null&&pn.dispose();let Cn=vn;if(dt){const Nn=ss(Cn.shape,it.I(ct,mt.shape));Cn=bn(Cn,Nn),vn.dispose()}return Mt([mt,Cn]),Cn},St,null,Wt.yb,$t)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $o=Object(xt.a)({maxPool_:function(lt,ct,dt,mt,St){const $t=Object(wt.a)(lt,"x","maxPool");let Dt=$t,Mt=!1;$t.rank===3&&(Mt=!0,Dt=bn($t,[1,$t.shape[0],$t.shape[1],$t.shape[2]])),it.b(Dt.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${Dt.rank}.`),it.b(Hn(dt,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${dt} and dilations '1'`),St!=null&&it.b(it.v(mt),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${St} but got pad ${mt}.`);const Xt={x:Dt},en={filterSize:ct,strides:dt,pad:mt,dimRoundingMode:St},pn=$.a.runKernelFunc((vn,Cn)=>{const Nn=rn(Dt.shape,ct,dt,1,mt,St);let Rn;return Rn=Nn.filterWidth===1&&Nn.filterHeight===1&&it.a(Nn.inShape,Nn.outShape)?Dt.clone():vn.maxPool(Dt,Nn),Cn([Dt,Rn]),Rn},Xt,null,Wt.zb,en);return Mt?bn(pn,[pn.shape[1],pn.shape[2],pn.shape[3]]):pn}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zn=Object(xt.a)({mul_:function(lt,ct){let dt=Object(wt.a)(lt,"a","mul"),mt=Object(wt.a)(ct,"b","mul");[dt,mt]=Object(Tn.b)(dt,mt);const St={a:dt,b:mt};return $.a.runKernelFunc(($t,Dt)=>{const Mt=$t.multiply(dt,mt);return Dt([dt,mt]),Mt},St,null,Wt.Kb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bo=Object(xt.a)({oneHot_:function(lt,ct,dt=1,mt=0){if(ct<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+ct);const St=Object(wt.a)(lt,"indices","oneHot","int32"),$t=[...St.shape,ct],Dt={indices:St},Mt={depth:ct,onValue:dt,offValue:mt};return $.a.runKernelFunc((Xt,en)=>(en([St]),bn(Xt.oneHot(bn(St,[St.size]),ct,dt,mt),$t)),Dt,null,Wt.Qb,Mt)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vs=Object(xt.a)({pow_:function(lt,ct){let dt=Object(wt.a)(lt,"base","pow"),mt=Object(wt.a)(ct,"exp","pow");[dt,mt]=Object(Tn.b)(dt,mt);const St={a:dt,b:mt};return $.a.runKernelFunc(($t,Dt)=>{const Mt=$t.pow(dt,mt);return Dt([dt,mt,Mt]),Mt},St,null,Wt.Tb)}});var jo=o(47);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eu{constructor(ct=0,dt=1,mt,St){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=ct,this.range=dt-ct,this.dtype=mt,St==null&&(St=Math.random()),typeof St=="number"&&(St=St.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${ct} - ${dt} <= 1 and dtype is not float`);this.random=jo.alea(St)}convertValue(ct){return this.canReturnFloat()?ct:Math.round(ct)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Uo=Object(xt.a)({randomUniform_:function(lt,ct=0,dt=1,mt="float32",St){const $t=cn(lt,mt),Dt=new eu(ct,dt,null,St);for(let Mt=0;Mt<$t.values.length;Mt++)$t.values[Mt]=Dt.nextValue();return $t.toTensor()}});var po=o(28);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ks(lt,ct){Object(it.d)(lt);const dt=Object(wt.c)(lt,ct);if(dt.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(po.a)(lt,null,dt,ct)}var Xs=o(19);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _s(lt,ct="float32"){if(ct==="complex64"){const mt=_s(lt,"float32"),St=_s(lt,"float32");return Object(Xs.a)(mt,St)}const dt=Object(it.F)(Object(it.N)(lt),ct);return $.a.makeTensor(dt,lt,ct)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _o(lt,ct,dt=1,mt="float32"){if(dt===0)throw new Error("Cannot have a step of zero");const St={start:lt,stop:ct,step:dt,dtype:mt};return $.a.runKernelFunc(()=>{if(lt===ct||lt<ct&&dt<0||ct<lt&&dt>1)return _s([0],mt);const $t=Math.abs(Math.ceil((ct-lt)/dt)),Dt=Object(it.F)($t,mt);ct<lt&&dt===1&&(dt=-1),Dt[0]=lt;for(let Mt=1;Mt<Dt.length;Mt++)Dt[Mt]=Dt[Mt-1]+dt;return Ks(Dt,mt)},{},null,Wt.Wb,St)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cr(lt,ct){if((Object(it.A)(lt)&&ct!=="string"||Array.isArray(lt))&&ct!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(ct==="string"&&Object(it.A)(lt)&&!(lt instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(po.a)(lt,[],[],ct)}const Go=Object(xt.a)({separableConv2d_:function(lt,ct,dt,mt,St,$t=[1,1],Dt="NHWC"){const Mt=Object(wt.a)(lt,"x","separableConv2d"),Xt=Object(wt.a)(ct,"depthwiseFilter","separableConv2d"),en=Object(wt.a)(dt,"pointwiseFilter","separableConv2d");let pn=Mt,vn=!1;if(Mt.rank===3&&(vn=!0,pn=bn(Mt,[1,Mt.shape[0],Mt.shape[1],Mt.shape[2]])),Dt==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");it.b(pn.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${pn.rank}.`),it.b(Xt.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${Xt.rank}.`),it.b(en.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${Xt.rank}.`),it.b(en.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${en.shape[0]}.`),it.b(en.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${en.shape[1]}.`);const Cn=Xt.shape[2],Nn=Xt.shape[3];it.b(en.shape[2]===Cn*Nn,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${Cn*Nn}, but got ${en.shape[2]}.`);const Rn=ho(pn,Xt,mt,St,Dt,$t),Mn=Fr(Rn,en,1,"valid",Dt);return vn?bn(Mn,[Mn.shape[1],Mn.shape[2],Mn.shape[3]]):Mn}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qo=Object(xt.a)({softmax_:function(lt,ct=-1){const dt=Object(wt.a)(lt,"logits","softmax","float32");if(ct===-1&&(ct=dt.rank-1),ct!==dt.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${dt.rank} and dim was ${ct}`);const mt={logits:dt},St={dim:ct};return $.a.runKernelFunc(($t,Dt)=>{const Mt=$t.softmax(dt,ct);return Dt([Mt]),Mt},mt,null,Wt.rc,St)}});function Wo(lt,ct,dt=0){let mt=[];if(typeof ct=="number")Object(it.b)(lt.shape[dt]%ct==0,()=>"Number of splits must evenly divide the axis."),mt=new Array(ct).fill(lt.shape[dt]/ct);else{const St=ct.reduce((Dt,Mt)=>(Mt===-1&&(Dt+=1),Dt),0);Object(it.b)(St<=1,()=>"There should be only one negative value in split array.");const $t=ct.indexOf(-1);if($t!==-1){const Dt=ct.reduce((Mt,Xt)=>Xt>0?Mt+Xt:Mt);ct[$t]=lt.shape[dt]-Dt}Object(it.b)(lt.shape[dt]===ct.reduce((Dt,Mt)=>Dt+Mt),()=>"The sum of sizes must match the size of the axis dimension."),mt=ct}return mt}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ys=Object(xt.a)({split_:function(lt,ct,dt=0){const mt=Object(wt.a)(lt,"x","split"),St={x:mt},$t={numOrSizeSplits:ct,axis:dt};return $.a.runKernelFunc((Dt,Mt)=>{const Xt=Object(it.I)(dt,mt.shape)[0],en=Wo(mt,ct,Xt);return Dt.split(mt,en,Xt)},St,null,Wt.uc,$t)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Io=Object(xt.a)({squeeze_:function(lt,ct){const dt=Object(wt.a)(lt,"x","squeeze");return bn(dt,Object(it.P)(dt.shape,ct).newShape)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dr=Object(xt.a)({sub_:function(lt,ct){let dt=Object(wt.a)(lt,"a","sub"),mt=Object(wt.a)(ct,"b","sub");[dt,mt]=Object(Tn.b)(dt,mt);const St={a:dt,b:mt};return $.a.runKernelFunc(($t,Dt)=>{const Mt=$t.subtract(dt,mt);return Dt([dt,mt]),Mt},St,null,Wt.Ac)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qs=Object(xt.a)({tile_:function(lt,ct){const dt=Object(wt.a)(lt,"x","tile",null);it.b(dt.rank===ct.length,()=>`Error in transpose: rank of input ${dt.rank} must match length of reps ${ct}.`);const mt=[dt],St={x:dt},$t={reps:ct};return $.a.runKernelFunc((Dt,Mt)=>{const Xt=Dt.tile(dt,ct);return Mt([dt]),Xt},St,null,Wt.Ec,$t,mt)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ao=Object(xt.a)({broadcastTo_:function(lt,ct){let dt=Object(wt.a)(lt,"broadcastTo","x");const mt=dt.shape;if(ct.some(Xt=>!(Xt>0)||Xt%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${ct}].`);if(ct.length<dt.rank)throw new Error(`broadcastTo(): shape.length=${ct.length} < input.rank=${dt.rank}.`);if(ct.length>dt.rank){const Xt=dt.shape.slice();for(;Xt.length<ct.length;)Xt.unshift(1);dt=bn(dt,Xt)}const St=dt.shape,$t=Array.from(ct);for(let Xt=ct.length-1;Xt>=0;Xt--)if(St[Xt]===ct[Xt])$t[Xt]=1;else if(dt.shape[Xt]!==1)throw new Error(`broadcastTo(): [${mt}] cannot be broadcast to [${ct}].`);if($t.map((Xt,en)=>Xt>1?en:-1).filter(Xt=>Xt>=0).length===0)return qt(dt);const Dt={x:dt},Mt={shape:ct,inputShape:St};return $.a.runKernelFunc(Xt=>Xt.tile(dt,$t),Dt,null,Wt.u,Mt)}});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tu(lt,ct){const dt=lt.length,mt=[];for(let St=0;St<dt;St++){const $t=dt-1-St,Dt=lt[$t]||1;(ct[ct.length-1-St]||1)>1&&Dt===1&&mt.unshift($t)}return mt}function Br(lt,ct){const dt=[];for(let mt=0;mt<ct.length;mt++){const St=lt[lt.length-mt-1],$t=ct.length-mt-1,Dt=ct[$t];(St==null||St===1&&Dt>1)&&dt.unshift($t)}return dt}function kr(lt,ct){const dt=[],mt=Math.max(lt.length,ct.length);for(let St=0;St<mt;St++){let $t=lt[lt.length-St-1];$t==null&&($t=1);let Dt=ct[ct.length-St-1];if(Dt==null&&(Dt=1),$t===1)dt.unshift(Dt);else if(Dt===1)dt.unshift($t);else{if($t!==Dt)throw Error(`Operands could not be broadcast together with shapes ${lt} and ${ct}.`);dt.unshift($t)}}return dt}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ss=Object(xt.a)({where_:function(lt,ct,dt){const mt=Object(wt.a)(ct,"a","where"),St=Object(wt.a)(dt,"b","where"),$t=Object(wt.a)(lt,"condition","where","bool"),Dt=kr(mt.shape,St.shape),Mt=Ao(mt,Dt),Xt=Ao(St,Dt);$t.rank===1&&Object(it.b)($t.shape[0]===mt.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),$t.rank!==1&&Object(it.e)($t.shape,Xt.shape,"Error in where: ");const en={condition:$t,t:Mt,e:Xt};return $.a.runKernelFunc((pn,vn)=>{const Cn=pn.select($t,Mt,Xt);return vn([$t]),Cn},en,null,Wt.kc)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _r=Object(xt.a)({zerosLike_:function(lt){const ct=Object(wt.a)(lt,"x","zerosLike"),dt={x:ct};return $.a.runKernelFunc(mt=>mt.zerosLike(ct),dt,null,Wt.Kc)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ho=Object(xt.a)({imag_:function(lt){const ct=Object(wt.a)(lt,"input","imag"),dt={input:ct};return $.a.runKernelFunc(mt=>mt.imag(ct),dt,null,Wt.kb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ko=Object(xt.a)({real_:function(lt){const ct=Object(wt.a)(lt,"input","real"),dt={input:ct};return $.a.runKernelFunc(mt=>mt.real(ct),dt,null,Wt.Xb)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dr=Object(xt.a)({slice_:function(lt,ct,dt){const mt=Object(wt.a)(lt,"x","slice");if(mt.rank===0)throw new Error("Slicing scalar is not possible");const St={x:mt},$t={begin:ct,size:dt};return $.a.runKernelFunc((Dt,Mt)=>{const[Xt,en]=Rs(mt,ct,dt);return ms(mt,Xt,en),Mt([mt]),Dt.slice(mt,Xt,en)},St,null,Wt.qc,$t)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yu=Object(xt.a)({fft_:function(lt){Object(it.b)(lt.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${lt.dtype}.`);const ct={input:lt};return $.a.runKernelFunc(dt=>{const mt=lt.shape[lt.shape.length-1],St=lt.size/mt,$t=lt.as2D(St,mt);return dt.fft($t).reshape(lt.shape)},ct,null,Wt.Y)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bu=Object(xt.a)({rfft_:function(lt,ct){Object(it.b)(lt.dtype==="float32",()=>"The dtype for rfft() must be real value but got "+lt.dtype);let dt=lt.shape[lt.shape.length-1];const mt=lt.size/dt;let St;if(ct!=null&&ct<dt){const Rn=lt.shape.map(qn=>0),Mn=lt.shape.map(qn=>qn);Mn[lt.shape.length-1]=ct,St=Dr(lt,Rn,Mn),dt=ct}else if(ct!=null&&ct>dt){const Rn=lt.shape.map(Mn=>Mn);Rn[lt.shape.length-1]=ct-dt,St=Ar([lt,_s(Rn)],lt.shape.length-1),dt=ct}else St=lt;const $t=_r(St),Dt=bn(Object(Xs.a)(St,$t),[mt,dt]),Mt=yu(Dt),Xt=Math.floor(dt/2)+1,en=ko(Mt),pn=Ho(Mt),vn=Ys(en,[Xt,dt-Xt],en.shape.length-1),Cn=Ys(pn,[Xt,dt-Xt],pn.shape.length-1),Nn=St.shape.slice();return Nn[St.shape.length-1]=Xt,bn(Object(Xs.a)(vn[0],Cn[0]),Nn)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ko=Object(xt.a)({ifft_:function(lt){Object(it.b)(lt.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${lt.dtype}.`);const ct={input:lt};return $.a.runKernelFunc(dt=>{const mt=lt.shape[lt.shape.length-1],St=lt.size/mt,$t=bn(lt,[St,mt]),Dt=dt.ifft($t);return bn(Dt,lt.shape)},ct,null,Wt.ib)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xo=Object(xt.a)({reverse_:function(lt,ct){const dt=Object(wt.a)(lt,"x","reverse"),mt={x:dt},St={dims:ct};return $.a.runKernelFunc($t=>{const Dt=Object(it.I)(ct,dt.shape);if(dt.rank===0)return qt(dt);const Mt=$t.reverse(dt,Dt);return bn(Mt,dt.shape)},mt,null,Wt.gc,St)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ju=Object(xt.a)({irfft_:function(lt){const ct=lt.shape[lt.shape.length-1],dt=lt.size/ct;let mt;if(ct<=2){const St=bn(lt,[dt,ct]);mt=Ko(St)}else{const St=[dt,2*(ct-1)],$t=bn(ko(lt),[dt,ct]),Dt=bn(Ho(lt),[dt,ct]),Mt=Xo(Dr($t,[0,1],[dt,ct-2]),1),Xt=zn(Xo(Dr(Dt,[0,1],[dt,ct-2]),1),cr(-1)),en=Ar([$t,Mt],1),pn=Ar([Dt,Xt],1),vn=bn(Object(Xs.a)(en,pn),[St[0],St[1]]);mt=Ko(vn)}if(mt=ko(mt),lt.rank===3&&lt.shape[0]!==0){const St=mt,$t=lt.shape[0];mt=bn(mt,[$t,mt.shape[0]/$t,mt.shape[1]]),St.dispose()}return mt}});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vu(lt,ct,dt){const mt=1-lt%2,St=new Float32Array(lt);for(let $t=0;$t<lt;++$t){const Dt=2*Math.PI*$t/(lt+mt-1);St[$t]=ct-dt*Math.cos(Dt)}return Ks(St,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(xt.a)({hammingWindow_:function(lt){return vu(lt,.54,.46)}});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yl=Object(xt.a)({hannWindow_:function(lt){return vu(lt,.5,.5)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xl(lt,ct,dt){const mt={shape:lt,value:ct,dtype:dt};return $.a.runKernelFunc(St=>St.fill(lt,ct,dt),{},null,Wt.Z,mt)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yo(lt,ct,dt){if(Object(it.d)(lt),ct!=null&&ct.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const mt=Object(wt.c)(lt,dt);if(mt.length!==2&&mt.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(mt.length===1&&ct==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(po.a)(lt,ct,mt,dt)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nu=Object(xt.a)({frame_:function(lt,ct,dt,mt=!1,St=0){let $t=0;const Dt=[];for(;$t+ct<=lt.size;)Dt.push(Dr(lt,$t,ct)),$t+=dt;if(mt)for(;$t<lt.size;){const Mt=$t+ct-lt.size,Xt=Ar([Dr(lt,$t,ct-Mt),xl([Mt],St)]);Dt.push(Xt),$t+=dt}return Dt.length===0?Yo([],[0,ct]):bn(Ar(Dt),[Dt.length,ct])}});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(xt.a)({stft_:function(lt,ct,dt,mt,St=yl){var $t;mt==null&&($t=ct,mt=Math.floor(Math.pow(2,Math.ceil(Math.log($t)/Math.log(2)))));const Dt=nu(lt,ct,dt),Mt=zn(Dt,St(ct)),Xt=[];for(let en=0;en<Dt.shape[0];en++)Xt.push(bu(Dr(Mt,[en,0],[1,ct]),mt));return Ar(Xt)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(xt.a)({cropAndResize_:function(lt,ct,dt,mt,St,$t){const Dt=Object(wt.a)(lt,"image","cropAndResize"),Mt=Object(wt.a)(ct,"boxes","cropAndResize","float32"),Xt=Object(wt.a)(dt,"boxInd","cropAndResize","int32");St=St||"bilinear",$t=$t||0;const en=Mt.shape[0];it.b(Dt.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${Dt.rank}.`),it.b(Mt.rank===2&&Mt.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${en},4] but had shape ${Mt.shape}.`),it.b(Xt.rank===1&&Xt.shape[0]===en,()=>`Error in cropAndResize: boxInd must be have size [${en}] but had shape ${Mt.shape}.`),it.b(mt.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${mt.length}.`),it.b(mt[0]>=1&&mt[1]>=1,()=>"cropSize must be atleast [1,1], but was "+mt),it.b(St==="bilinear"||St==="nearest",()=>"method must be bilinear or nearest, but was "+St);const pn={image:Dt,boxes:Mt,boxInd:Xt},vn={method:St,extrapolationValue:$t,cropSize:mt};return $.a.runKernelFunc(Cn=>Cn.cropAndResize(Dt,Mt,Xt,mt,St,$t),pn,null,Wt.I,vn)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(xt.a)({flipLeftRight_:function(lt){const ct=Object(wt.a)(lt,"image","flipLeftRight","float32");it.b(ct.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${ct.rank}.`);const dt={image:ct};return $.a.runKernel(Wt.ab,dt,{})}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(xt.a)({rotateWithOffset_:function(lt,ct,dt=0,mt=.5){const St=Object(wt.a)(lt,"image","rotateWithOffset","float32");it.b(St.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${St.rank}.`);const $t={image:St},Dt={radians:ct,fillValue:dt,center:mt};return $.a.runKernel(Wt.hc,$t,Dt)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ru(lt,ct,dt,mt,St,$t){mt==null&&(mt=.5),St==null&&(St=Number.NEGATIVE_INFINITY),$t==null&&($t=0);const Dt=lt.shape[0];return dt=Math.min(dt,Dt),it.b(0<=mt&&mt<=1,()=>`iouThreshold must be in [0, 1], but was '${mt}'`),it.b(lt.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${lt.rank}'`),it.b(lt.shape[1]===4,()=>"boxes must have 4 columns, but 2nd dimension was "+lt.shape[1]),it.b(ct.rank===1,()=>"scores must be a 1D tensor"),it.b(ct.shape[0]===Dt,()=>`scores has incompatible shape with boxes. Expected ${Dt}, but was `+ct.shape[0]),it.b(0<=$t&&$t<=1,()=>`softNmsSigma must be in [0, 1], but was '${$t}'`),{maxOutputSize:dt,iouThreshold:mt,scoreThreshold:St,softNmsSigma:$t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(xt.a)({nonMaxSuppression_:function(lt,ct,dt,mt=.5,St=Number.NEGATIVE_INFINITY){const $t=Object(wt.a)(lt,"boxes","nonMaxSuppression"),Dt=Object(wt.a)(ct,"scores","nonMaxSuppression"),Mt=ru($t,Dt,dt,mt,St);dt=Mt.maxOutputSize,mt=Mt.iouThreshold,St=Mt.scoreThreshold;const Xt={maxOutputSize:dt,iouThreshold:mt,scoreThreshold:St};return $.a.runKernelFunc(en=>en.nonMaxSuppression($t,Dt,dt,mt,St),{boxes:$t,scores:Dt},null,Wt.Mb,Xt)}});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sl(lt,ct,dt){const mt=function($t,Dt,Mt){return function(Xt,en,pn){let vn=0,Cn=Xt.length,Nn=0,Rn=!1;for(;vn<Cn;){Nn=vn+(Cn-vn>>>1);const Mn=pn(en,Xt[Nn]);Mn>0?vn=Nn+1:(Cn=Nn,Rn=!Mn)}return Rn?vn:-vn-1}($t,Dt,Mt||Cl)}(lt,ct,dt),St=mt<0?-(mt+1):mt;lt.splice(St,0,ct)}function Cl(lt,ct){return lt>ct?1:lt<ct?-1:0}function Tl(lt,ct,dt,mt,St){return Oo(lt,ct,dt,mt,St,0).selectedIndices}function Nl(lt,ct,dt,mt,St,$t){return Oo(lt,ct,dt,mt,St,0,!1,$t,!0)}function Eo(lt,ct,dt,mt,St,$t){return Oo(lt,ct,dt,mt,St,$t,!0)}function Oo(lt,ct,dt,mt,St,$t,Dt=!1,Mt=!1,Xt=!1){const en=[];for(let qn=0;qn<ct.length;qn++)ct[qn]>St&&en.push({score:ct[qn],boxIndex:qn,suppressBeginIndex:0});en.sort(Su);const pn=$t>0?-.5/$t:0,vn=[],Cn=[];for(;vn.length<dt&&en.length>0;){const qn=en.pop(),{score:ir,boxIndex:er,suppressBeginIndex:ar}=qn;if(ir<St)break;let gr=!1;for(let wr=vn.length-1;wr>=ar;--wr){const Ir=xu(lt,er,vn[wr]);if(Ir>=mt){gr=!0;break}if(qn.score=qn.score*wu(mt,pn,Ir),qn.score<=St)break}qn.suppressBeginIndex=vn.length,gr||(qn.score===ir?(vn.push(er),Cn.push(qn.score)):qn.score>St&&Sl(en,qn,Su))}const Nn=vn.length,Rn=dt-Nn;Mt&&Rn>0&&(vn.push(...new Array(Rn).fill(0)),Cn.push(...new Array(Rn).fill(0)));const Mn={selectedIndices:Ks(vn,"int32")};return Dt&&(Mn.selectedScores=Ks(Cn,"float32")),Xt&&(Mn.validOutputs=cr(Nn,"int32")),Mn}function xu(lt,ct,dt){const mt=lt.subarray(4*ct,4*ct+4),St=lt.subarray(4*dt,4*dt+4),$t=Math.min(mt[0],mt[2]),Dt=Math.min(mt[1],mt[3]),Mt=Math.max(mt[0],mt[2]),Xt=Math.max(mt[1],mt[3]),en=Math.min(St[0],St[2]),pn=Math.min(St[1],St[3]),vn=Math.max(St[0],St[2]),Cn=Math.max(St[1],St[3]),Nn=(Mt-$t)*(Xt-Dt),Rn=(vn-en)*(Cn-pn);if(Nn<=0||Rn<=0)return 0;const Mn=Math.max($t,en),qn=Math.max(Dt,pn),ir=Math.min(Mt,vn),er=Math.min(Xt,Cn),ar=Math.max(ir-Mn,0)*Math.max(er-qn,0);return ar/(Nn+Rn-ar)}function wu(lt,ct,dt){const mt=Math.exp(ct*dt*dt);return dt<=lt?mt:0}function Su(lt,ct){return lt.score-ct.score||lt.score===ct.score&&ct.boxIndex-lt.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(xt.a)({nonMaxSuppressionWithScore_:function(lt,ct,dt,mt=.5,St=Number.NEGATIVE_INFINITY,$t=0){const Dt=Object(wt.a)(lt,"boxes","nonMaxSuppression"),Mt=Object(wt.a)(ct,"scores","nonMaxSuppression"),Xt=ru(Dt,Mt,dt,mt,St,$t),en={boxes:Dt,scores:Mt},pn={maxOutputSize:dt=Xt.maxOutputSize,iouThreshold:mt=Xt.iouThreshold,scoreThreshold:St=Xt.scoreThreshold,softNmsSigma:$t=Xt.softNmsSigma},vn=$.a.runKernel(Wt.Ob,en,pn);return{selectedIndices:vn[0],selectedScores:vn[1]}}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(xt.a)({nonMaxSuppressionPadded_:function(lt,ct,dt,mt=.5,St=Number.NEGATIVE_INFINITY,$t=!1){const Dt=Object(wt.a)(lt,"boxes","nonMaxSuppression"),Mt=Object(wt.a)(ct,"scores","nonMaxSuppression"),Xt=ru(Dt,Mt,dt,mt,St,null),en={boxes:Dt,scores:Mt},pn={maxOutputSize:Xt.maxOutputSize,iouThreshold:Xt.iouThreshold,scoreThreshold:Xt.scoreThreshold,padToMaxOutputSize:$t},vn=$.a.runKernel(Wt.Nb,en,pn);return{selectedIndices:vn[0],validOutputs:vn[1]}}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $l=Object(xt.a)({resizeBilinear_:function(lt,ct,dt=!1){const mt=Object(wt.a)(lt,"images","resizeBilinear");it.b(mt.rank===3||mt.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${mt.rank}.`),it.b(ct.length===2,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+ct+".");let St=mt,$t=!1;mt.rank===3&&($t=!0,St=bn(mt,[1,mt.shape[0],mt.shape[1],mt.shape[2]]));const[Dt,Mt]=ct,Xt={images:St},en={alignCorners:dt,size:ct},pn=$.a.runKernelFunc((vn,Cn)=>(Cn([St]),vn.resizeBilinear(St,Dt,Mt,dt)),Xt,null,Wt.cc,en);return $t?bn(pn,[pn.shape[1],pn.shape[2],pn.shape[3]]):pn}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _l=Object(xt.a)({resizeNearestNeighbor_:function(lt,ct,dt=!1){const mt=Object(wt.a)(lt,"images","resizeNearestNeighbor");it.b(mt.rank===3||mt.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${mt.rank}.`),it.b(ct.length===2,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+ct+"."),it.b(mt.dtype==="float32"||mt.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype");let St=mt,$t=!1;mt.rank===3&&($t=!0,St=bn(mt,[1,mt.shape[0],mt.shape[1],mt.shape[2]]));const[Dt,Mt]=ct,Xt={images:St},en={alignCorners:dt,size:ct},pn=$.a.runKernelFunc((vn,Cn)=>(Cn([St]),vn.resizeNearestNeighbor(St,Dt,Mt,dt)),Xt,null,Wt.ec,en);return $t?bn(pn,[pn.shape[1],pn.shape[2],pn.shape[3]]):pn}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fo=Object(xt.a)({greaterEqual_:function(lt,ct){let dt=Object(wt.a)(lt,"a","greaterEqual"),mt=Object(wt.a)(ct,"b","greaterEqual");[dt,mt]=Object(Tn.b)(dt,mt),kr(dt.shape,mt.shape);const St={a:dt,b:mt};return $.a.runKernelFunc(($t,Dt)=>{const Mt=$t.greaterEqual(dt,mt);return Dt([dt,mt]),Mt},St,null,Wt.hb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mo=Object(xt.a)({lessEqual_:function(lt,ct){let dt=Object(wt.a)(lt,"a","lessEqual"),mt=Object(wt.a)(ct,"b","lessEqual");[dt,mt]=Object(Tn.b)(dt,mt),kr(dt.shape,mt.shape);const St={a:dt,b:mt};return $.a.runKernelFunc(($t,Dt)=>{const Mt=$t.lessEqual(dt,mt);return Dt([dt,mt]),Mt},St,null,Wt.rb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const go=Object(xt.a)({logicalAnd_:function(lt,ct){const dt=Object(wt.a)(lt,"a","logicalAnd","bool"),mt=Object(wt.a)(ct,"b","logicalAnd","bool");kr(dt.shape,mt.shape);const St={a:dt,b:mt};return $.a.runKernelFunc($t=>$t.logicalAnd(dt,mt),St,null,Wt.vb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ps=Object(xt.a)({expandDims_:function(lt,ct=0){const dt=Object(wt.a)(lt,"x","expandDims",null);it.b(ct<=dt.rank,()=>"Axis must be <= rank of the tensor");const mt=dt.shape.slice();return ct<0&&(it.b(-(dt.rank+1)<=ct,()=>`Axis must be in the interval [${-(dt.rank+1)}, ${dt.rank}]`),ct=dt.rank+ct+1),mt.splice(ct,0,1),bn(dt,mt)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ro=Object(xt.a)({stack_:function(lt,ct=0){const dt=Object(wt.b)(lt,"tensors","stack");if(it.b(dt.length>=1,()=>"Pass at least one tensor to tf.stack"),dt.length===1)return Ps(dt[0],ct);const mt=dt[0].rank,St=dt[0].shape,$t=dt[0].dtype;it.b(ct<=mt,()=>"Axis must be <= rank of the tensor"),dt.forEach(Mt=>{it.e(St,Mt.shape,"All tensors passed to stack must have matching shapes"),it.b($t===Mt.dtype,()=>"All tensors passed to stack must have matching dtypes")});const Dt=dt.map(Mt=>Ps(Mt,ct));return Ar(Dt,ct)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const su=Object(xt.a)({unstack_:function(lt,ct=0){const dt=Object(wt.a)(lt,"x","unstack");it.b(ct>=-dt.shape.length&&ct<dt.shape.length,()=>`Axis = ${ct} is not in [-${dt.shape.length}, ${dt.shape.length})`),ct<0&&(ct+=dt.shape.length);const mt={value:dt},St={axis:ct};return $.a.runKernelFunc($t=>$t.unstack(dt,ct),mt,null,Wt.Ic,St)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(xt.a)({bandPart_:function(lt,ct,dt){Object(it.b)(ct%1==0,()=>`bandPart(): numLower must be an integer, got ${ct}.`),Object(it.b)(dt%1==0,()=>`bandPart(): numUpper must be an integer, got ${dt}.`);const mt=Object(wt.a)(lt,"a","bandPart");Object(it.b)(mt.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${mt.rank}.`);const St=mt.shape,[$t,Dt]=mt.shape.slice(-2);if(!(ct<=$t))throw new Error(`bandPart(): numLower (${ct}) must not be greater than the number of rows (${$t}).`);if(!(dt<=Dt))throw new Error(`bandPart(): numUpper (${dt}) must not be greater than the number of columns (${Dt}).`);ct<0&&(ct=$t),dt<0&&(dt=Dt);const Mt=bn(_o(0,$t,1,"int32"),[-1,1]),Xt=_o(0,Dt,1,"int32"),en=dr(Mt,Xt),pn=go(mo(en,cr(+ct,"int32")),fo(en,cr(-dt,"int32"))),vn=_s([$t,Dt],mt.dtype);return bn(ro(su(bn(mt,[-1,$t,Dt])).map(Cn=>Ss(pn,Cn,vn))),St)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cs=Object(xt.a)({abs_:function(lt){const ct=Object(wt.a)(lt,"x","abs"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>(St([ct]),ct.dtype==="complex64"?mt.complexAbs(ct):mt.abs(ct)),dt,null,Wt.a)}}),ou=Object(xt.a)({min_:function(lt,ct=null,dt=!1){const mt=Object(wt.a)(lt,"x","min"),St={x:mt},$t={axis:ct,keepDims:dt};return $.a.runKernelFunc((Dt,Mt)=>{const Xt=Object(it.I)(ct,mt.shape);let en=Xt;const pn=cs(en,mt.rank);let vn=mt;pn!=null&&(vn=Vr(mt,pn),en=ws(en.length,mt.rank));const Cn=Dt.min(vn,en);pn!=null&&vn.dispose();let Nn=Cn;if(dt){const Rn=ss(Nn.shape,Xt);Nn=bn(Cn,Rn),Cn.dispose()}return Mt([mt,Nn]),Nn},St,null,Wt.Gb,$t)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fs=Object(xt.a)({sqrt_:function(lt){const ct=Object(wt.a)(lt,"x","sqrt"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>{const $t=mt.sqrt(ct);return St([ct]),$t},dt,null,Wt.vc)}});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hr=Object(xt.a)({square_:function(lt){const ct=Object(wt.a)(lt,"x","square"),dt=[ct];return $.a.runKernelFunc((mt,St)=>(St([ct]),mt.square(ct)),{x:ct},null,"Square",{},dt,[])}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lr=Object(xt.a)({sum_:function(lt,ct=null,dt=!1){let mt=Object(wt.a)(lt,"x","sum");mt.dtype==="bool"&&(mt=At(mt,"int32"));const St={x:mt},$t={axis:ct,keepDims:dt};return $.a.runKernelFunc((Dt,Mt)=>{Mt([mt]);const Xt=Object(it.I)(ct,mt.shape),en=cs(Xt,mt.rank);let pn=Xt,vn=mt;en!=null&&(vn=Vr(mt,en),pn=ws(pn.length,mt.rank));let Cn=Dt.sum(vn,pn);if(dt){const Nn=ss(Cn.shape,Xt);Cn=bn(Cn,Nn)}return Cn},St,null,Wt.Bc,$t)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iu=Object(xt.a)({norm_:function(lt,ct="euclidean",dt=null,mt=!1){const St=function Dt(Mt,Xt,en=null){if(Mt.rank===0)return Cs(Mt);if(Mt.rank!==1&&en===null)return Dt(bn(Mt,[-1]),Xt,en);if(Mt.rank===1||typeof en=="number"||Array.isArray(en)&&en.length===1){if(Xt===1)return lr(Cs(Mt),en);if(Xt===1/0)return zs(Cs(Mt),en);if(Xt===-1/0)return ou(Cs(Mt),en);if(Xt==="euclidean"||Xt===2)return Fs(lr(Vs(Cs(Mt),cr(2,"int32")),en));throw new Error("Error in norm: invalid ord value: "+Xt)}if(Array.isArray(en)&&en.length===2){if(Xt===1)return zs(lr(Cs(Mt),en[0]),en[1]-1);if(Xt===1/0)return zs(lr(Cs(Mt),en[1]),en[0]);if(Xt===-1/0)return ou(lr(Cs(Mt),en[1]),en[0]);if(Xt==="fro"||Xt==="euclidean")return Fs(lr(Hr(Mt),en));throw new Error("Error in norm: invalid ord value: "+Xt)}throw new Error("Error in norm: invalid axis: "+en)}(lt=Object(wt.a)(lt,"x","norm"),ct,dt);let $t=St.shape;if(mt){const Dt=Object(it.I)(dt,lt.shape);$t=ss(St.shape,Dt)}return bn(St,$t)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(xt.a)({gramSchmidt_:function(lt){let ct;if(Array.isArray(lt)){ct=!1,Object(it.b)(lt!=null&&lt.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const St=lt[0].shape[0];for(let $t=1;$t<lt.length;++$t)Object(it.b)(lt[$t].shape[0]===St,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${lt[$t].shape[0]} vs. ${St})`)}else ct=!0,lt=Ys(lt,lt.shape[0],0).map(St=>Io(St,[0]));Object(it.b)(lt.length<=lt[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${lt.length}) exceeds number of dimensions (${lt[0].shape[0]}).`);const dt=[],mt=lt;for(let St=0;St<lt.length;++St)dt.push($.a.tidy(()=>{let $t=mt[St];if(St>0)for(let Dt=0;Dt<St;++Dt){const Mt=zn(lr(zn(dt[Dt],$t)),dt[Dt]);$t=dr($t,Mt)}return yr($t,iu($t,"euclidean"))}));return ct?ro(dt,0):dt}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qr(lt){Object(_.b)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(lt+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Cu(){return $.a}function Tu(lt,ct){return $.a.tidy(lt,ct)}function Nu(lt){Object(Tn.a)(lt).forEach(ct=>ct.dispose())}function mr(lt,ct,dt=1){return $.a.registerBackend(lt,ct,dt)}Object(Yt.d)(Qr);const $u=Object(xt.a)({eye_:function(lt,ct,dt,mt="float32"){ct==null&&(ct=lt);const St=cn([lt,ct],mt),$t=lt<=ct?lt:ct;for(let Mt=0;Mt<$t;++Mt)St.set(1,Mt,Mt);const Dt=bn(St.toTensor(),[lt,ct]);if(dt==null)return Dt;if(dt.length===1)return Qs(Ps(Dt,0),[dt[0],1,1]);if(dt.length===2)return Qs(Ps(Ps(Dt,0),0),[dt[0],dt[1],1,1]);if(dt.length===3)return Qs(Ps(Ps(Ps(Dt,0),0),0),[dt[0],dt[1],dt[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${dt.length}D.`)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zs=Object(xt.a)({greater_:function(lt,ct){let dt=Object(wt.a)(lt,"a","greater"),mt=Object(wt.a)(ct,"b","greater");[dt,mt]=Object(Tn.b)(dt,mt),kr(dt.shape,mt.shape);const St={a:dt,b:mt};return $.a.runKernelFunc($t=>$t.greater(dt,mt),St,null,Wt.gb)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jr=Object(xt.a)({neg_:function(lt){const ct=Object(wt.a)(lt,"x","neg"),dt={x:ct};return $.a.runKernelFunc(mt=>mt.neg(ct),dt,null,Wt.Lb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function au(lt,ct=!1){return $.a.tidy(()=>{Object(it.b)(lt.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${lt.shape.length}D Tensor.`);const dt=lt.shape[0],mt=lt.shape[1];let St=$u(dt),$t=qt(lt);const Dt=Yo([[1]],[1,1]);let Mt=qt(Dt);const Xt=dt>=mt?mt:dt;for(let en=0;en<Xt;++en){const pn=$t,vn=Mt,Cn=St;[Mt,$t,St]=$.a.tidy(()=>{const Nn=Dr($t,[en,en],[dt-en,1]),Rn=iu(Nn),Mn=Dr($t,[en,en],[1,1]),qn=Ss(Zs(Mn,0),Yo([[-1]]),Yo([[1]])),ir=dr(Mn,zn(qn,Rn)),er=yr(Nn,ir);Mt=er.shape[0]===1?qt(Dt):Ar([Dt,Dr(er,[1,0],[er.shape[0]-1,er.shape[1]])],0);const ar=jr(yr(Or(qn,ir),Rn)),gr=Dr($t,[en,0],[dt-en,mt]),wr=zn(ar,Mt),Ir=Vr(Mt);if(en===0)$t=dr(gr,Or(wr,Or(Ir,gr)));else{const Ur=dr(gr,Or(wr,Or(Ir,gr)));$t=Ar([Dr($t,[0,0],[en,mt]),Ur],0)}const ps=Vr(wr),Sr=Dr(St,[0,en],[dt,St.shape[1]-en]);if(en===0)St=dr(Sr,Or(Or(Sr,Mt),ps));else{const Ur=dr(Sr,Or(Or(Sr,Mt),ps));St=Ar([Dr(St,[0,0],[dt,en]),Ur],1)}return[Mt,$t,St]}),Nu([pn,vn,Cn])}return!ct&&dt>mt&&(St=Dr(St,[0,0],[dt,mt]),$t=Dr($t,[0,0],[mt,mt])),[St,$t]})}Object(xt.a)({qr_:function(lt,ct=!1){if(Object(it.b)(lt.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+lt.rank),lt.rank===2)return au(lt,ct);{const dt=lt.shape.slice(0,lt.shape.length-2).reduce((Dt,Mt)=>Dt*Mt),mt=su(bn(lt,[dt,lt.shape[lt.shape.length-2],lt.shape[lt.shape.length-1]]),0),St=[],$t=[];return mt.forEach(Dt=>{const[Mt,Xt]=au(Dt,ct);St.push(Mt),$t.push(Xt)}),[bn(ro(St,0),lt.shape),bn(ro($t,0),lt.shape)]}}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var os;function Qo(lt){return $.a.customGrad(lt)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yo(lt,ct="float32"){if(ct==="complex64"){const mt=yo(lt,"float32"),St=_s(lt,"float32");return Object(Xs.a)(mt,St)}const dt=Object(it.D)(Object(it.N)(lt),ct);return $.a.makeTensor(dt,lt,ct)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(function(lt){lt[lt.NONE=0]="NONE",lt[lt.MEAN=1]="MEAN",lt[lt.SUM=2]="SUM",lt[lt.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(os||(os={}));const uu=Object(xt.a)({mean_:function(lt,ct=null,dt=!1){const mt=Object(wt.a)(lt,"x","mean"),St=Object(it.I)(ct,mt.shape),$t=zo(mt.shape,St)[1],Dt=Object(it.N)($t),Mt={x:mt},Xt={axis:ct,keepDims:dt},en=()=>{const pn=cr(Dt),vn=pn.dtype===mt.dtype?mt:At(mt,pn.dtype),Cn=yr(vn,pn);return lr(Cn,ct,dt)};return Qo(pn=>({value:$.a.runKernelFunc(en,Mt,null,Wt.Fb,Xt),gradFunc:vn=>{const Cn=pn.shape.slice();St.forEach(Rn=>{Cn[Rn]=1});const Nn=bn(vn,Cn);return yr(zn(Nn,yo(pn.shape,"float32")),Dt)}}))(mt)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zo=Object(xt.a)({notEqual_:function(lt,ct){let dt=Object(wt.a)(lt,"a","notEqual"),mt=Object(wt.a)(ct,"b","notEqual");[dt,mt]=Object(Tn.b)(dt,mt),kr(dt.shape,mt.shape);const St={a:dt,b:mt};return $.a.runKernelFunc($t=>$t.notEqual(dt,mt),St,null,Wt.Pb)}}),Bs=Object(xt.a)({computeWeightedLoss_:function(lt,ct,dt=os.SUM_BY_NONZERO_WEIGHTS){const mt=Object(wt.a)(lt,"losses","computeWeightedLoss");let St=null;ct!=null&&(St=Object(wt.a)(ct,"weights","computeWeightedLoss"));const $t=St==null?mt:zn(mt,St);if(dt===os.NONE)return $t;if(dt===os.SUM)return lr($t);if(dt===os.MEAN){if(St==null)return uu($t);{const Dt=mt.size/St.size,Mt=yr(lr($t),lr(St));return Dt>1?yr(Mt,cr(Dt)):Mt}}if(dt===os.SUM_BY_NONZERO_WEIGHTS){if(St==null)return yr(lr($t),cr(mt.size));{const Dt=zn(St,yo(mt.shape)),Mt=At(lr(Zo(Dt,cr(0))),"float32");return yr(lr($t),Mt)}}throw Error("Unknown reduction: "+dt)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(xt.a)({absoluteDifference_:function(lt,ct,dt,mt=os.SUM_BY_NONZERO_WEIGHTS){const St=Object(wt.a)(lt,"labels","absoluteDifference"),$t=Object(wt.a)(ct,"predictions","absoluteDifference");let Dt=null;dt!=null&&(Dt=Object(wt.a)(dt,"weights","absoluteDifference")),Object(it.e)(St.shape,$t.shape,"Error in absoluteDifference: ");const Mt=Cs(dr(St,$t));return Bs(Mt,Dt,mt)}}),Object(xt.a)({cosineDistance_:function(lt,ct,dt,mt,St=os.SUM_BY_NONZERO_WEIGHTS){const $t=Object(wt.a)(lt,"labels","cosineDistance"),Dt=Object(wt.a)(ct,"predictions","cosineDistance");let Mt=null;mt!=null&&(Mt=Object(wt.a)(mt,"weights","cosineDistance")),Object(it.e)($t.shape,Dt.shape,"Error in cosineDistance: ");const Xt=cr(1),en=dr(Xt,lr(zn($t,Dt),dt,!0));return Bs(en,Mt,St)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jo=Object(xt.a)({relu_:function(lt){const ct=Object(wt.a)(lt,"x","relu"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>(St([ct]),ct.dtype==="bool"?At(ct,"int32"):mt.relu(ct)),dt,null,Wt.Zb)}});Object(xt.a)({hingeLoss_:function(lt,ct,dt,mt=os.SUM_BY_NONZERO_WEIGHTS){let St=Object(wt.a)(lt,"labels","hingeLoss");const $t=Object(wt.a)(ct,"predictions","hingeLoss");let Dt=null;dt!=null&&(Dt=Object(wt.a)(dt,"weights","hingeLoss")),Object(it.e)(St.shape,$t.shape,"Error in hingeLoss: ");const Mt=cr(1);St=dr(zn(cr(2),St),Mt);const Xt=Jo(dr(Mt,zn(St,$t)));return Bs(Xt,Dt,mt)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bo=Object(xt.a)({minimum_:function(lt,ct){let dt=Object(wt.a)(lt,"a","minimum"),mt=Object(wt.a)(ct,"b","minimum");[dt,mt]=Object(Tn.b)(dt,mt),dt.dtype==="bool"&&(dt=At(dt,"int32"),mt=At(mt,"int32")),kr(dt.shape,mt.shape);const St={a:dt,b:mt};return $.a.runKernelFunc(($t,Dt)=>{const Mt=$t.minimum(dt,mt);return Dt([dt,mt]),Mt},St,null,Wt.Hb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(xt.a)({huberLoss_:function(lt,ct,dt,mt=1,St=os.SUM_BY_NONZERO_WEIGHTS){const $t=Object(wt.a)(lt,"labels","huberLoss"),Dt=Object(wt.a)(ct,"predictions","huberLoss");let Mt=null;dt!=null&&(Mt=Object(wt.a)(dt,"weights","huberLoss")),Object(it.e)($t.shape,Dt.shape,"Error in huberLoss: ");const Xt=cr(mt),en=Cs(dr(Dt,$t)),pn=bo(en,Xt),vn=dr(en,pn),Cn=Dn(zn(cr(.5),Hr(pn)),zn(Xt,vn));return Bs(Cn,Mt,St)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const so=Object(xt.a)({log_:function(lt){const ct=Object(wt.a)(lt,"x","log"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>{const $t=mt.log(ct);return St([ct]),$t},dt,null,Wt.sb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(xt.a)({logLoss_:function(lt,ct,dt,mt=1e-7,St=os.SUM_BY_NONZERO_WEIGHTS){const $t=Object(wt.a)(lt,"labels","logLoss"),Dt=Object(wt.a)(ct,"predictions","logLoss");let Mt=null;dt!=null&&(Mt=Object(wt.a)(dt,"weights","logLoss")),Object(it.e)($t.shape,Dt.shape,"Error in logLoss: ");const Xt=cr(1),en=cr(mt),pn=jr(zn($t,so(Dn(Dt,en)))),vn=zn(dr(Xt,$t),so(Dn(dr(Xt,Dt),en))),Cn=dr(pn,vn);return Bs(Cn,Mt,St)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _i=Object(xt.a)({squaredDifference_:function(lt,ct){let dt=Object(wt.a)(lt,"a","squaredDifference"),mt=Object(wt.a)(ct,"b","squaredDifference");[dt,mt]=Object(Tn.b)(dt,mt),kr(dt.shape,mt.shape);const St={a:dt,b:mt};return $.a.runKernelFunc(($t,Dt)=>{const Mt=$t.squaredDifference(dt,mt);return Dt([dt,mt]),Mt},St,null,Wt.xc,{})}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(xt.a)({meanSquaredError_:function(lt,ct,dt,mt=os.SUM_BY_NONZERO_WEIGHTS){const St=Object(wt.a)(lt,"labels","meanSquaredError"),$t=Object(wt.a)(ct,"predictions","meanSquaredError");let Dt=null;dt!=null&&(Dt=Object(wt.a)(dt,"weights","meanSquaredError")),Object(it.e)(St.shape,$t.shape,"Error in meanSquaredError: ");const Mt=_i(St,$t);return Bs(Mt,Dt,mt)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Is=Object(xt.a)({exp_:function(lt){const ct=Object(wt.a)(lt,"x","exp"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>{const $t=mt.exp(ct);return St([$t]),$t},dt,null,Wt.W)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vo=Object(xt.a)({log1p_:function(lt){const ct=Object(wt.a)(lt,"x","log1p"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>{const $t=mt.log1p(ct);return St([ct]),$t},dt,null,Wt.tb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(xt.a)({sigmoidCrossEntropy_:function(lt,ct,dt,mt=0,St=os.SUM_BY_NONZERO_WEIGHTS){let $t=Object(wt.a)(lt,"multiClassLabels","sigmoidCrossEntropy");const Dt=Object(wt.a)(ct,"logits","sigmoidCrossEntropy");let Mt=null;if(dt!=null&&(Mt=Object(wt.a)(dt,"weights","sigmoidCrossEntropy")),Object(it.e)($t.shape,Dt.shape,"Error in sigmoidCrossEntropy: "),mt>0){const en=cr(mt),pn=cr(1),vn=cr(.5);$t=Dn(zn($t,dr(pn,en)),zn(vn,en))}const Xt=function(en,pn){const vn=Object(wt.a)(en,"labels","sigmoidCrossEntropyWithLogits"),Cn=Object(wt.a)(pn,"logits","sigmoidCrossEntropyWithLogits");Object(it.e)(vn.shape,Cn.shape,"Error in sigmoidCrossEntropyWithLogits: ");const Nn=Jo(Cn),Rn=zn(Cn,vn),Mn=vo(Is(jr(Cs(Cn))));return Dn(dr(Nn,Rn),Mn)}($t,Dt);return Bs(Xt,Mt,St)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _u=Object(xt.a)({logSumExp_:function(lt,ct=null,dt=!1){const mt=Object(wt.a)(lt,"x","logSumExp"),St=Object(it.I)(ct,mt.shape),$t=zs(mt,St,!0),Dt=dr(mt,$t),Mt=Is(Dt),Xt=lr(Mt,St),en=so(Xt),pn=Dn(bn($t,en.shape),en);if(dt){const vn=ss(pn.shape,St);return bn(pn,vn)}return pn}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(xt.a)({softmaxCrossEntropy_:function(lt,ct,dt,mt=0,St=os.SUM_BY_NONZERO_WEIGHTS){let $t=Object(wt.a)(lt,"onehotLabels","softmaxCrossEntropy");const Dt=Object(wt.a)(ct,"logits","softmaxCrossEntropy");let Mt=null;if(dt!=null&&(Mt=Object(wt.a)(dt,"weights","softmaxCrossEntropy")),Object(it.e)($t.shape,Dt.shape,"Error in softmaxCrossEntropy: "),mt>0){const en=cr(mt),pn=cr(1),vn=cr($t.shape[1]);$t=Dn(zn($t,dr(pn,en)),yr(en,vn))}const Xt=function(en,pn,vn=-1){if(vn===-1&&(vn=pn.rank-1),vn!==pn.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${pn.rank} and dim was `+vn);return Qo((Cn,Nn,Rn)=>{const Mn=_u(Nn,[vn],!0),qn=dr(At(Nn,"float32"),Mn);Rn([Cn,qn]);const ir=jr(zn(qn,Cn));return{value:lr(ir,[vn]),gradFunc:(er,ar)=>{const[gr,wr]=ar,Ir=ss(er.shape,[vn]);return[zn(bn(er,Ir),dr(At(gr,"float32"),Is(wr))),zn(bn(er,Ir),dr(Is(wr),At(gr,"float32")))]}}})(en,pn)}($t,Dt);return Bs(Xt,Mt,St)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var lu=o(26),Il=o(78);const Iu=Object(xt.a)({elu_:function(lt){const ct=Object(wt.a)(lt,"x","elu"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>{const $t=mt.elu(ct);return St([$t]),$t},dt,null,Wt.S)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Au=Object(xt.a)({prelu_:function(lt,ct){const dt=Object(wt.a)(lt,"x","prelu"),mt=Object(wt.a)(ct,"alpha","prelu"),St={x:dt,alpha:mt};return $.a.runKernelFunc(($t,Dt)=>{const Mt=$t.prelu(dt,mt);return Dt([dt,mt]),Mt},St,null,Wt.Ub)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ku=Object(xt.a)({relu6_:function(lt){const ct=Object(wt.a)(lt,"x","relu6"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>(St([ct]),ct.dtype==="bool"?At(ct,"int32"):mt.relu6(ct)),dt,null,Wt.ac)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oo=Object(xt.a)({step_:function(lt,ct=0){const dt=Object(wt.a)(lt,"x","step"),mt={x:dt},St={alpha:ct};return $.a.runKernelFunc($t=>$t.step(dt,ct),mt,null,Wt.yc,St)}});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function na(lt,ct,dt){if(dt==null||dt==="linear")return lt;if(dt==="relu")return zn(lt,oo(ct));throw new Error(`Cannot compute gradient for fused activation ${dt}.`)}function Al(lt,ct){let dt=ct;const mt=Br(lt.shape,ct.shape);return mt.length>0&&(dt=lr(dt,mt)),bn(dt,lt.shape)}function js(lt,ct,dt){if(ct==="linear")return lt;if(ct==="relu")return Jo(lt);if(ct==="elu")return Iu(lt);if(ct==="relu6")return ku(lt);if(ct==="prelu")return Au(lt,dt);throw new Error(`Unknown fused activation ${ct}.`)}const El=(lt,ct)=>!(lt>0)||ct==="linear",Js=30;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ol(lt){return lt<=Js?lt:Object(it.G)(lt,Math.floor(Math.sqrt(lt)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ga(lt,ct,dt){return[dt*(typeof lt=="number"?lt:lt[0]),ct*(typeof lt=="number"?lt:lt[1])]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xo(lt,ct,dt,mt=!0){let St=[];if(mt)St=St.concat(ct.slice(0)),St.push(lt[0]/dt),St=St.concat(lt.slice(1));else{St=St.concat(lt[0]);const $t=ct.length;for(let Dt=0;Dt<$t;++Dt)St=St.concat([lt[Dt+1]/ct[Dt],ct[Dt]]);St=St.concat(lt.slice($t+1))}return St}function Eu(lt,ct,dt=!0){const mt=[];if(dt){mt.push(ct);for(let St=ct+1;St<lt;++St)St<=2*ct?(mt.push(St),mt.push(St-(ct+1))):mt.push(St)}else{const St=[],$t=[];for(let Dt=1;Dt<lt;++Dt)Dt>=2*ct+1||Dt%2==1?$t.push(Dt):St.push(Dt);mt.push(...St),mt.push(0),mt.push(...$t)}return mt}function Dl(lt,ct,dt,mt=!0){const St=[];mt?St.push(lt[0]/dt):St.push(lt[0]*dt);for(let $t=1;$t<lt.length;++$t)$t<=ct.length?mt?St.push(ct[$t-1]*lt[$t]):St.push(lt[$t]/ct[$t-1]):St.push(lt[$t]);return St}function Rl(lt,ct){const dt=[0];for(let mt=0;mt<ct;++mt)dt.push(lt[mt][0]);return dt}function Pl(lt,ct,dt){const mt=lt.slice(0,1);for(let St=0;St<dt;++St)mt.push(lt[St+1]-ct[St][0]-ct[St][1]);return mt}function Fl(lt,ct){if(lt.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${lt.rank}.`);if(ct.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${ct.rank}.`);if(ct.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${ct.dtype}.`);if(ct.shape[ct.rank-1]>lt.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${ct.shape[ct.rank-1]} vs. ${lt.rank}`);if(lt.size===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${lt.shape}.`);const dt=ct.shape,mt=dt[dt.length-1];let St=1;for(let en=0;en<dt.length-1;++en)St*=dt[en];const $t=lt.shape,Dt=dt.slice();Dt.pop();let Mt=1;for(let en=mt;en<lt.rank;++en)Mt*=$t[en],Dt.push($t[en]);const Xt=[...Object(it.j)(lt.shape).map(en=>en/Mt),1].slice(0,mt);return[Dt,St,Mt,Xt]}function Ou(lt,ct,dt){const mt=ct.rank>1?ct.shape[ct.rank-1]:1,St=ct.rank>1?ct.rank-1:1,$t="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+dt.shape+`, indices.shape: ${ct.shape}, shape: ${lt}, sliceDim: ${mt}, and batchDim: ${St}.`;if(dt.rank<St)throw new Error($t+` update.rank < ${St}. `);if(lt.length<mt+(dt.rank-St))throw new Error($t+" Output shape length < "+(mt+(dt.rank-St)));if(dt.rank!==St+lt.length-mt)throw new Error($t+" update.rank != "+(St+lt.length-mt));for(let Dt=0;Dt<St;++Dt)if(dt.shape[Dt]!==ct.shape[Dt])throw new Error($t+` updates.shape[${Dt}] (${dt.shape[Dt]}) != indices.shape[${Dt}] (${ct.shape[Dt]}).`);for(let Dt=0;Dt<dt.rank-St;++Dt)if(dt.shape[Dt+St]!==lt[Dt+mt])throw new Error($t+` updates.shape[${Dt+St}] (${dt.shape[Dt+St]}) != shape[${Dt+St}] (${lt[Dt+St]})`)}function Ml(lt,ct,dt){if(ct.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${ct.rank}.`);if(lt.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${lt.rank}.`);if(ct.dtype!=="int32")throw new Error("The dtype of 'indices' should be int32, but got dtype: "+ct.dtype);if(dt.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+dt);if(dt.length===0){if(ct.size===0)throw new Error("Indices specified for empty output. indices shape: "+ct.shape);if(lt.size===0)throw new Error("Updates specified for empty output. updates shape: "+lt.shape)}Ou(dt,ct,lt)}function Ll(lt,ct,dt){const mt=ct.shape.length,St=mt>1?ct.shape[mt-1]:1,$t=dt.length;let Dt=1;for(let Xt=St;Xt<$t;++Xt)Dt*=dt[Xt];const Mt=St<1?1:St;return{sliceRank:St,numUpdates:Object(it.N)(ct.shape)/Mt,sliceSize:Dt,strides:[...Object(it.j)(dt.slice(0,St)),1],outputSize:Object(it.N)(dt)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Du=1.7580993408473768,Ru=1.0507009873554805,Pu=.3275911,zl=.254829592,cu=-.284496736,Vl=1.421413741,Bl=-1.453152027,Ul=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gl(...lt){Object(_.b)().getBool("IS_TEST")||console.warn(...lt)}function ba(...lt){Object(_.b)().getBool("IS_TEST")||console.log(...lt)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fu(lt,ct){if(lt.length!==ct.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${lt.length}, imag: ${ct.length}.`);const dt=new Float32Array(2*lt.length);for(let mt=0;mt<dt.length;mt+=2)dt[mt]=lt[mt/2],dt[mt+1]=ct[mt/2];return dt}function Wl(lt){const ct=new Float32Array(lt.length/2),dt=new Float32Array(lt.length/2);for(let mt=0;mt<lt.length;mt+=2)ct[mt/2]=lt[mt],dt[mt/2]=lt[mt+1];return{real:ct,imag:dt}}function Us(lt){const ct=Math.ceil(lt.length/4),dt=new Float32Array(ct),mt=new Float32Array(ct);for(let St=0;St<lt.length;St+=4)dt[Math.floor(St/4)]=lt[St],mt[Math.floor(St/4)]=lt[St+1];return{real:dt,imag:mt}}function Hl(lt){const ct=Math.floor(lt.length/4),dt=new Float32Array(ct),mt=new Float32Array(ct);for(let St=2;St<lt.length;St+=4)dt[Math.floor(St/4)]=lt[St],mt[Math.floor(St/4)]=lt[St+1];return{real:dt,imag:mt}}function Kl(lt,ct){return{real:lt[2*ct],imag:lt[2*ct+1]}}function Xl(lt,ct,dt,mt){lt[2*mt]=ct,lt[2*mt+1]=dt}function Yl(lt,ct){const dt=new Float32Array(lt/2),mt=new Float32Array(lt/2);for(let St=0;St<Math.ceil(lt/2);St++){const $t=(ct?2:-2)*Math.PI*(St/lt);dt[St]=Math.cos($t),mt[St]=Math.sin($t)}return{real:dt,imag:mt}}function Ql(lt,ct,dt){const mt=(dt?2:-2)*Math.PI*(lt/ct);return{real:Math.cos(mt),imag:Math.sin(mt)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zl(lt,ct){let dt,mt=!1;for(lt<=Js?(dt=lt,mt=!0):dt=Object(it.G)(lt,Math.floor(Math.sqrt(lt)));!mt;)dt>ct||dt===lt?mt=!0:dt=Object(it.G)(lt,dt+1);return dt}function Mu(lt,ct,dt){const mt=[],St=lt.length;for(let $t=0;$t<St;$t++)$t!==ct?mt.push(lt[$t]):mt.push(dt);return mt}function hu(lt,ct,dt){const mt=lt.shape[dt],St=[];let $t=1,Dt=1;for(let Mt=0;Mt<dt;Mt++)St.push(lt.shape[Mt]),$t*=lt.shape[Mt];for(let Mt=0;Mt<ct.rank;Mt++)St.push(ct.shape[Mt]);for(let Mt=dt+1;Mt<lt.rank;Mt++)St.push(lt.shape[Mt]),Dt*=lt.shape[Mt];return{batchSize:$t,sliceSize:Dt,dimSize:mt,outputShape:St}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jl(lt,ct,dt){if(ct==="complex64"){if(lt.dtype==="complex64")return lt.clone();const mt=_s(lt.shape),St=At(lt,"float32"),$t=dt.complex(St,mt);return mt.dispose(),St.dispose(),$t}if(!Object(it.p)(lt.dtype,ct))return $.a.makeTensorFromDataId(lt.dataId,lt.shape,ct);if(lt.dtype==="complex64"){const mt=dt.real(lt),St=At(mt,ct);return mt.dispose(),St}if(ct==="int32")return dt.int(lt);if(ct==="bool"){const mt=cr(0,lt.dtype),St=dt.notEqual(lt,mt);return mt.dispose(),St}throw new Error(`Error in Cast: failed to cast ${lt.dtype} to ${ct}`)}function _c(lt,ct){return $.a.makeTensorFromDataId(lt.dataId,ct,lt.dtype)}function _h(lt,ct,dt){const mt=(ct-lt)/(dt-1),St=Object(it.F)(dt,"float32");St[0]=lt;for(let $t=1;$t<St.length;$t++)St[$t]=St[$t-1]+mt;return Ks(St,"float32")}var _d=o(46);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ep(lt,ct,dt){const mt=new Array(lt.rank).fill(0),St=lt.shape.slice();return ct.map($t=>{const Dt=[...St];Dt[dt]=$t;const Mt=Dr(lt,mt,Dt);return mt[dt]+=$t,Mt})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tp(lt,ct){const dt=new Array(lt.rank);for(let St=0;St<dt.length;St++)dt[St]=lt.shape[St]*ct[St];const mt=cn(dt,lt.dtype);for(let St=0;St<mt.values.length;++St){const $t=mt.indexToLoc(St),Dt=new Array(lt.rank);for(let Xt=0;Xt<Dt.length;Xt++)Dt[Xt]=$t[Xt]%lt.shape[Xt];const Mt=lt.locToIndex(Dt);mt.values[St]=lt.values[Mt]}return mt.toTensor()}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wo(lt,ct,dt,mt,St){const $t=ct[ct.length-1],[Dt,Mt]=[lt.length/$t,$t],Xt=Object(it.o)(dt,Dt*mt),en=Object(it.o)("int32",Dt*mt);for(let vn=0;vn<Dt;vn++){const Cn=vn*Mt,Nn=lt.subarray(Cn,Cn+Mt),Rn=[];for(let er=0;er<Nn.length;er++)Rn.push({value:Nn[er],index:er});Rn.sort((er,ar)=>ar.value-er.value);const Mn=vn*mt,qn=Xt.subarray(Mn,Mn+mt),ir=en.subarray(Mn,Mn+mt);for(let er=0;er<mt;er++)qn[er]=Rn[er].value,ir[er]=Rn[er].index}const pn=ct.slice();return pn[pn.length-1]=mt,[Object(Gr.a)(Xt,pn,dt),Object(Gr.a)(en,pn,"int32")]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function np(lt,ct){const dt=[];for(let $t=0;$t<ct.length;$t++)ct[$t]&&dt.push($t);const mt=cn(lt,"int32"),St=cn([dt.length,lt.length],"int32");for(let $t=0;$t<dt.length;$t++){const Dt=mt.indexToLoc(dt[$t]),Mt=$t*lt.length;St.values.set(Dt,Mt)}return St.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var du=o(39);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lu={kernelName:Wt.a,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>zn(lt,oo(At(dt,"float32"),-1))}}},rp={kernelName:Wt.b,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>{const mt=Hr(At(dt,"float32")),St=Fs(dr(cr(1),mt));return jr(yr(lt,St))}}}},sp={kernelName:Wt.c,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>{const mt=Fs(dr(Hr(At(dt,"float32")),1));return yr(lt,mt)}}}},pu={kernelName:Wt.d,inputsToSave:["a","b"],gradFunc:(lt,ct)=>{const[dt,mt]=ct,St=kr(dt.shape,mt.shape);return{a:()=>{let $t=lt;const Dt=Br(dt.shape,St);return Dt.length>0&&($t=lr($t,Dt)),bn($t,dt.shape)},b:()=>{let $t=lt;const Dt=Br(mt.shape,St);return Dt.length>0&&($t=lr($t,Dt)),bn($t,mt.shape)}}}},ip={kernelName:Wt.e,saveAllInputs:!0,gradFunc:(lt,ct)=>{const dt={};return ct.forEach((mt,St)=>{dt[St]=()=>lt.clone()}),dt}},ap={kernelName:Wt.h,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>_r(dt)}}},up={kernelName:Wt.i,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>_r(dt)}}},lp={kernelName:Wt.j,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>yr(lt,Fs(dr(cr(1),Hr(At(dt,"float32")))))}}},cp={kernelName:Wt.k,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>{const mt=Fs(Dn(cr(1),Hr(At(dt,"float32"))));return yr(lt,mt)}}}},hp={kernelName:Wt.m,inputsToSave:["a","b"],gradFunc:(lt,ct)=>{const[dt,mt]=ct,St=kr(dt.shape,mt.shape);return{a:()=>{const $t=Dn(Hr(dt),Hr(mt));let Dt=zn(lt,yr(mt,$t));const Mt=Br(dt.shape,St);return Mt.length>0&&(Dt=lr(Dt,Mt)),bn(Dt,dt.shape)},b:()=>{const $t=Dn(Hr(dt),Hr(mt));let Dt=jr(zn(lt,yr(dt,$t)));const Mt=Br(mt.shape,St);return Mt.length>0&&(Dt=lr(Dt,Mt)),bn(Dt,mt.shape)}}}},dp={kernelName:Wt.l,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>yr(lt,Dn(Hr(At(dt,"float32")),1))}}},pp={kernelName:Wt.n,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>yr(lt,dr(cr(1),Hr(At(dt,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fp=Object(xt.a)({avgPool3dBackprop_:function(lt,ct,dt,mt,St=[1,1,1],$t,Dt){const Mt=Object(wt.a)(lt,"dy","avgPool3dBackprop"),Xt=Object(wt.a)(ct,"input","avgPool3dBackprop");let en=Mt,pn=Xt,vn=!1;Xt.rank===4&&(vn=!0,en=bn(Mt,[1,Mt.shape[0],Mt.shape[1],Mt.shape[2],Mt.shape[3]]),pn=bn(Xt,[1,Xt.shape[0],Xt.shape[1],Xt.shape[2],Xt.shape[3]])),it.b(en.rank===5,()=>"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+en.rank+"."),it.b(pn.rank===5,()=>"Error in avgPool3dBackprop: input must be rank 5 but got rank "+pn.rank+"."),it.b(Hn(mt,St),()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${mt} and dilations '${St}'`),Dt!=null&&it.b(it.v($t),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${Dt} but got pad ${$t}.`);const Cn={dy:en,input:pn},Nn={filterSize:dt,strides:mt,dilations:St,pad:$t,dimRoundingMode:Dt},Rn=$.a.runKernelFunc(Mn=>{const qn=hn(pn.shape,dt,mt,St,$t,Dt);return Mn.avgPool3dBackprop(en,pn,qn)},Cn,null,Wt.q,Nn);return vn?bn(Rn,[Rn.shape[1],Rn.shape[2],Rn.shape[3],Rn.shape[4]]):Rn}}),mp={kernelName:Wt.p,inputsToSave:["x"],gradFunc:(lt,ct,dt)=>{const[mt]=ct,{filterSize:St,strides:$t,dilations:Dt,pad:Mt,dimRoundingMode:Xt}=dt,en=Dt??[1,1,1];return{x:()=>fp(lt,mt,St,$t,en,Mt,Xt)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zu=Object(xt.a)({avgPoolBackprop_:function(lt,ct,dt,mt,St){const $t=Object(wt.a)(lt,"dy","avgPoolBackprop"),Dt=Object(wt.a)(ct,"input","avgPoolBackprop");it.b(Dt.rank===$t.rank,()=>`Rank of input (${Dt.rank}) does not match rank of dy (${$t.rank})`);let Mt=Dt,Xt=$t,en=!1;Dt.rank===3&&(en=!0,Mt=bn(Dt,[1,Dt.shape[0],Dt.shape[1],Dt.shape[2]]),Xt=bn($t,[1,$t.shape[0],$t.shape[1],$t.shape[2]])),it.b(Xt.rank===4,()=>"Error in avgPoolBackprop: dy must be rank 4 but got rank "+Xt.rank+"."),it.b(Mt.rank===4,()=>"Error in avgPoolBackprop: input must be rank 4 but got rank "+Mt.rank+".");const pn={dy:Xt,input:Mt},vn={filterSize:dt,strides:mt,pad:St},Cn=$.a.runKernelFunc(Nn=>{const Rn=rn(Mt.shape,dt,mt,1,St);return Nn.avgPoolBackprop(Xt,Mt,Rn)},pn,null,Wt.r,vn);return en?bn(Cn,[Cn.shape[1],Cn.shape[2],Cn.shape[3]]):Cn}}),Vu={kernelName:Wt.o,inputsToSave:["x"],gradFunc:(lt,ct,dt)=>{const[mt]=ct,{filterSize:St,strides:$t,pad:Dt}=dt;return{x:()=>zu(lt,mt,St,$t,Dt)}}},gp={kernelName:Wt.s,inputsToSave:["a","b"],gradFunc:(lt,ct,dt)=>{const[mt,St]=ct,{transposeA:$t,transposeB:Dt}=dt;return $t||Dt?!$t&&Dt?{a:()=>Or(lt,St,!1,!1),b:()=>Or(lt,mt,!0,!1)}:$t&&!Dt?{a:()=>Or(St,lt,!1,!0),b:()=>Or(mt,lt,!1,!1)}:{a:()=>Or(St,lt,!0,!0),b:()=>Or(lt,mt,!0,!0)}:{a:()=>Or(lt,St,!1,!0),b:()=>Or(mt,lt,!0,!1)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fu=Object(xt.a)({spaceToBatchND_:function(lt,ct,dt){const mt=Object(wt.a)(lt,"x","spaceToBatchND");it.b(mt.rank>=1+ct.length,()=>`input rank ${mt.rank} should be > than [blockShape] ${ct.length}`),it.b(dt.length===ct.length,()=>`paddings.shape[0] ${dt.length} must be equal to [blockShape] ${ct.length}`),it.b(mt.shape.reduce((Dt,Mt,Xt)=>Xt>0&&Xt<=ct.length?Dt&&(Mt+dt[Xt-1][0]+dt[Xt-1][1])%ct[Xt-1]==0:Dt,!0),()=>`input spatial dimensions ${mt.shape.slice(1)} with paddings ${dt.toString()} must be divisible by blockShapes ${ct.toString()}`);const St={x:mt},$t={blockShape:ct,paddings:dt};return $.a.runKernelFunc(Dt=>Dt.spaceToBatchND(mt,ct,dt),St,null,Wt.tc,$t)}}),yp={kernelName:Wt.t,gradFunc:(lt,ct,dt)=>{const{blockShape:mt,crops:St}=dt;return{x:()=>fu(lt,mt,St)}}},bp={kernelName:Wt.u,gradFunc:(lt,ct,dt)=>{const mt=dt,St=mt.inputShape,$t=mt.shape,Dt=Array.from($t);for(let Xt=St.length-1;Xt>=0;Xt--)if(St[Xt]===$t[Xt])Dt[Xt]=1;else if(St[Xt]!==1)throw new Error(`broadcastTo(): [${St}] cannot be broadcast to [${$t}].`);const Mt=[];for(let Xt=0;Xt<Dt.length;Xt++)Dt[Xt]>1&&Mt.push(Xt);return{x:()=>lr(lt,Mt,!0)}}},vp={kernelName:Wt.v,gradFunc:lt=>({x:()=>lt.clone()})},xp={kernelName:Wt.w,gradFunc:lt=>({x:()=>_r(lt)})},wp={kernelName:Wt.x,inputsToSave:["x"],gradFunc:(lt,ct,dt)=>{const[mt]=ct,{clipValueMin:St,clipValueMax:$t}=dt;return{x:()=>Ss(go(fo(mt,St),mo(mt,$t)),lt,_r(lt))}}},Sp={kernelName:Wt.z,saveAllInputs:!0,gradFunc:(lt,ct,dt)=>{const mt=ct.map(Mt=>Mt.shape),{axis:St}=dt,$t=Object(it.I)(St,ct[0].shape)[0],Dt=mt.map(Mt=>Mt[$t]);return Ys(lt,Dt,$t).map(Mt=>()=>Mt)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bu=Object(xt.a)({conv2DBackpropFilter_:function(lt,ct,dt,mt,St,$t="NHWC",Dt){let Mt=lt;lt.rank===3&&(Mt=bn(lt,[1,lt.shape[0],lt.shape[1],lt.shape[2]]));let Xt=ct;Xt.rank===3&&(Xt=bn(ct,[1,ct.shape[0],ct.shape[1],ct.shape[2]])),it.b(Mt.rank===4,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+Mt.shape+"."),it.b(Xt.rank===4,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+Xt.shape+"."),it.b(dt.length===4,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+dt+".");const en=$t==="NHWC"?Mt.shape[3]:Mt.shape[1],pn=$t==="NHWC"?Xt.shape[3]:Xt.shape[1];it.b(en===dt[2],()=>`Error in conv2dDerFilter: depth of input ${en}) must match input depth in filter (${dt[2]}.`),it.b(pn===dt[3],()=>`Error in conv2dDerFilter: depth of dy (${pn}) must match output depth for filter (${dt[3]}).`),Dt!=null&&it.b(it.v(St),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${Dt} but got pad ${St}.`);const vn={x:Mt,dy:Xt},Cn={strides:mt,pad:St,dataFormat:$t,dimRoundingMode:Dt,filterShape:dt};return $.a.runKernelFunc(Nn=>{const Rn=$r($t),Mn=xn(Mt.shape,dt,mt,1,St,Dt,!1,Rn);return Nn.conv2dDerFilter(Mt,Xt,Mn)},vn,null,Wt.B,Cn)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ju=Object(xt.a)({conv2DBackpropInput_:function(lt,ct,dt,mt,St,$t="NHWC",Dt){it.b(lt.length===ct.rank,()=>`Length of inShape (${lt.length}) and rank of dy (${ct.rank}) must match`);let Mt=lt,Xt=ct,en=!1;ct.rank===3&&(en=!0,Xt=bn(ct,[1,ct.shape[0],ct.shape[1],ct.shape[2]]),Mt=[1,lt[0],lt[1],lt[2]]),it.b(Mt.length===4,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+Mt.length+"."),it.b(Xt.rank===4,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+Xt.rank),it.b(dt.rank===4,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+dt.rank);const pn=$t==="NHWC"?Mt[3]:Mt[1],vn=$t==="NHWC"?Xt.shape[3]:Xt.shape[1];it.b(pn===dt.shape[2],()=>`Error in conv2dDerInput: depth of input (${pn}) must match input depth for filter ${dt.shape[2]}.`),it.b(vn===dt.shape[3],()=>`Error in conv2dDerInput: depth of output (${vn}) must match output depth for filter ${dt.shape[3]}.`),Dt!=null&&it.b(it.v(St),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${Dt} but got pad ${St}.`);const Cn={dy:Xt,filter:dt},Nn={strides:mt,pad:St,dataFormat:$t,dimRoundingMode:Dt,inputShape:Mt},Rn=$.a.runKernelFunc((Mn,qn)=>{const ir=$r($t),er=xn(Mt,dt.shape,mt,1,St,Dt,!1,ir),ar=Mn.conv2dDerInput(Xt,dt,er);return qn([Xt,dt]),ar},Cn,null,Wt.C,Nn);return en?bn(Rn,[Rn.shape[1],Rn.shape[2],Rn.shape[3]]):Rn}}),Cp={kernelName:Wt.A,inputsToSave:["x","filter"],gradFunc:(lt,ct,dt)=>{const[mt,St]=ct,{dilations:$t,strides:Dt,pad:Mt,dataFormat:Xt}=dt;return it.b(Yn($t),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${$t}'`),{x:()=>ju(mt.shape,lt,St,Dt,Mt,Xt),filter:()=>Bu(mt,lt,St.shape,Dt,Mt,Xt)}}},Tp={kernelName:Wt.C,inputsToSave:["dy","filter"],gradFunc:(lt,ct,dt)=>{const[mt,St]=ct,{strides:$t,pad:Dt,dataFormat:Mt,dimRoundingMode:Xt}=dt;return{dy:()=>Fr(lt,St,$t,Dt,Mt,1,Xt),filter:()=>Bu(lt,mt,St.shape,$t,Dt,Mt,Xt)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Np=Object(xt.a)({conv3DBackpropFilter_:function(lt,ct,dt,mt,St){let $t=lt;lt.rank===4&&($t=bn(lt,[1,lt.shape[0],lt.shape[1],lt.shape[2],lt.shape[3]]));let Dt=ct;Dt.rank===4&&(Dt=bn(ct,[1,ct.shape[0],ct.shape[1],ct.shape[2],ct.shape[3]])),it.b($t.rank===5,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+$t.shape+"."),it.b(Dt.rank===5,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+Dt.shape+"."),it.b(dt.length===5,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+dt+"."),it.b($t.shape[4]===dt[3],()=>`Error in conv3dDerFilter: depth of input ${$t.shape[4]}) must match input depth in filter (${dt[3]}.`),it.b(Dt.shape[4]===dt[4],()=>`Error in conv3dDerFilter: depth of dy (${Dt.shape[4]}) must match output depth for filter (${dt[4]}).`);const Mt={x:$t,dy:Dt},Xt={strides:mt,pad:St,filterShape:dt};return $.a.runKernelFunc(en=>{const pn=An($t.shape,dt,mt,1,St);return en.conv3dDerFilter($t,Dt,pn)},Mt,null,Wt.E,Xt)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $p=Object(xt.a)({conv3DBackpropInput_:function(lt,ct,dt,mt,St){it.b(lt.length===ct.rank,()=>`Length of inShape (${lt.length}) and rank of dy (${ct.rank}) must match`);let $t=lt,Dt=ct,Mt=!1;ct.rank===4&&(Mt=!0,Dt=bn(ct,[1,ct.shape[0],ct.shape[1],ct.shape[2],ct.shape[3]]),$t=[1,lt[0],lt[1],lt[2],lt[3]]);const Xt=$t[4],en=Dt.shape[4];it.b($t.length===5,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+$t.length+"."),it.b(Dt.rank===5,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+Dt.rank),it.b(dt.rank===5,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+dt.rank),it.b(Xt===dt.shape[3],()=>`Error in conv3dDerInput: depth of input (${Xt}) must match input depth for filter ${dt.shape[3]}.`),it.b(en===dt.shape[4],()=>`Error in conv3dDerInput: depth of output (${en}) must match output depth for filter ${dt.shape[4]}.`);const pn={dy:Dt,filter:dt},vn={pad:St,strides:mt,inputShape:$t},Cn=$.a.runKernelFunc(Nn=>{const Rn=An($t,dt.shape,mt,1,St);return Nn.conv3dDerInput(Dt,dt,Rn)},pn,null,Wt.F,vn);return Mt?bn(Cn,[Cn.shape[1],Cn.shape[2],Cn.shape[3],Cn.shape[4]]):Cn}}),Uu={kernelName:Wt.D,inputsToSave:["x","filter"],gradFunc:(lt,ct,dt)=>{const{dilations:mt,strides:St,pad:$t}=dt;it.b(Yn(mt),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${mt}'`);const[Dt,Mt]=ct;return{x:()=>$p(Dt.shape,lt,Mt,St,$t),filter:()=>Np(Dt,lt,Mt.shape,St,$t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gu=Object(xt.a)({sin_:function(lt){const ct=Object(wt.a)(lt,"x","sin"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>{const $t=mt.sin(ct);return St([ct]),$t},dt,null,Wt.oc)}}),_p={kernelName:Wt.G,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>zn(jr(Gu(At(dt,"float32"))),lt)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qu=Object(xt.a)({sinh_:function(lt){const ct=Object(wt.a)(lt,"x","sinh"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>{const $t=mt.sinh(ct);return St([ct]),$t},dt,null,Wt.pc)}}),Ip={kernelName:Wt.H,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>zn(qu(At(dt,"float32")),lt)}}},Tr={kernelName:Wt.J,inputsToSave:["x"],gradFunc:(lt,ct,dt)=>{const[mt]=ct,{axis:St,exclusive:$t,reverse:Dt}=dt;return{x:()=>{const Mt=cs([St],mt.rank);let Xt=No(lt,St,$t,!Dt);return Mt!=null&&(Xt=Vr(Xt,Mt)),Xt}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ao=Object(xt.a)({depthwiseConv2dNativeBackpropFilter_:function(lt,ct,dt,mt,St,$t=[1,1],Dt){let Mt=lt;lt.rank===3&&(Mt=bn(lt,[1,lt.shape[0],lt.shape[1],lt.shape[2]]));let Xt=ct;Xt.rank===3&&(Xt=bn(ct,[1,ct.shape[0],ct.shape[1],ct.shape[2]]));const en={x:Mt,dy:Xt},pn={strides:mt,pad:St,dimRoundingMode:Dt,dilations:$t,filterShape:dt};return $.a.runKernelFunc(vn=>{const Cn=xn(lt.shape,dt,mt,$t,St,Dt,!0);return vn.depthwiseConv2DDerFilter(Mt,Xt,Cn)},en,null,Wt.M,pn)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wu=Object(xt.a)({depthwiseConv2dNativeBackpropInput_:function(lt,ct,dt,mt,St,$t=[1,1],Dt){let Mt=ct,Xt=!1;ct.rank===3&&(Xt=!0,Mt=bn(ct,[1,ct.shape[0],ct.shape[1],ct.shape[2]]));const en={dy:Mt,filter:dt},pn={strides:mt,pad:St,dimRoundingMode:Dt,dilations:$t,inputShape:lt},vn=$.a.runKernelFunc(Cn=>{const Nn=xn(lt,dt.shape,mt,$t,St,Dt,!0);return Cn.depthwiseConv2DDerInput(Mt,dt,Nn)},en,null,Wt.N,pn);return Xt?bn(vn,[vn.shape[1],vn.shape[2],vn.shape[3]]):vn}}),mu={kernelName:Wt.L,inputsToSave:["x","filter"],gradFunc:(lt,ct,dt)=>{const{dilations:mt,strides:St,pad:$t,dimRoundingMode:Dt}=dt,Mt=mt??[1,1];it.b(Yn(Mt),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${Mt}'`);const[Xt,en]=ct;return it.b(Xt.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${Xt.rank}.`),it.b(en.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${en.rank}.`),it.b(Xt.shape[3]===en.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${Xt.shape[3]}) must match the inChannels dimension in filter ${en.shape[2]}.`),it.b(Hn(St,Mt),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${St} and dilations '${Mt}'.`),Dt!=null&&it.b(it.v($t),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${Dt} but got pad ${$t}.`),{x:()=>Wu(Xt.shape,lt,en,St,$t,mt,Dt),filter:()=>ao(Xt,lt,en.shape,St,$t,mt,Dt)}}},xa={kernelName:Wt.O,inputsToSave:["x","filter"],gradFunc:(lt,ct,dt)=>{const[mt,St]=ct,$t={x:mt,filter:St,dy:lt},Dt={x:mt,filter:St,dy:lt};return{x:()=>$.a.runKernel(Wt.Q,$t,dt),filter:()=>$.a.runKernel(Wt.P,Dt,dt)}}},Hu={kernelName:Wt.R,inputsToSave:["a","b"],gradFunc:(lt,ct)=>{const[dt,mt]=ct,St=kr(dt.shape,mt.shape);return{a:()=>{const $t=yr(lt,At(mt,"float32")),Dt=Br(dt.shape,St);return Dt.length>0?bn(lr($t,Dt),dt.shape):$t},b:()=>{let $t=zn(lt,At(dt,"float32"));const Dt=Br(mt.shape,St);Dt.length>0&&($t=bn(lr($t,Dt),mt.shape));const Mt=Hr(mt);return jr(yr($t,At(Mt,"float32")))}}}},Ap={kernelName:Wt.S,outputsToSave:[!0],gradFunc:(lt,ct)=>{const[dt]=ct,mt=$t=>$t.eluDer(lt,dt),St={dy:lt,y:dt};return{x:()=>$.a.runKernelFunc(mt,St,null,Wt.T)}}},Ku={kernelName:Wt.V,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct,mt=zn(Is(jr(Hr(dt))),2/Math.sqrt(Math.PI));return{x:()=>zn(lt,mt)}}},Xu={kernelName:Wt.W,outputsToSave:[!0],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>zn(lt,dt)}}},kp={kernelName:Wt.X,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>zn(lt,Is(dt))}}},Ft={kernelName:Wt.bb,gradFunc:lt=>({x:()=>_r(lt)})},at={kernelName:Wt.cb,inputsToSave:["a","b"],gradFunc:(lt,ct)=>{const[dt,mt]=ct,St=kr(dt.shape,mt.shape);return{a:()=>{const $t=yr(lt,At(mt,"float32")),Dt=Br(dt.shape,St);return Dt.length>0?bn(lr($t,Dt),dt.shape):$t},b:()=>{let $t=zn(lt,At(dt,"float32"));const Dt=Br(mt.shape,St);Dt.length>0&&($t=bn(lr($t,Dt),mt.shape));const Mt=Hr(mt);return jr(yr($t,At(Mt,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gt=Object(xt.a)({rsqrt_:function(lt){const ct=Object(wt.a)(lt,"x","rsqrt"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>{const $t=mt.rsqrt(ct);return St([ct]),$t},dt,null,Wt.jc)}}),vt={kernelName:Wt.eb,inputsToSave:["x","mean","variance","scale"],gradFunc:(lt,ct,dt)=>{const{varianceEpsilon:mt}=dt,[St,$t,Dt,Mt]=ct,Xt=Mt??cr(1),en=Br($t.shape,St.shape),pn=[];if($t.rank===1){for(let Mn=0;Mn<St.shape.length-1;++Mn)pn.push(St.shape[Mn]);pn.push(1)}const vn=dr(St,$t),Cn=zn(lt,Xt),Nn=gt(Dn(Dt,cr(mt))),Rn=zn(zn(zn(Nn,Nn),Nn),cr(-.5));return{x:()=>$t.rank===1?bn(zn(zn(lt,Qs(bn(Nn,[1,1,1,$t.shape[0]]),pn)),Xt),St.shape):bn(zn(zn(lt,Nn),Xt),St.shape),mean:()=>{let Mn=zn(zn(Nn,cr(-1)),Cn);return $t.rank===1&&(Mn=lr(Mn,en)),bn(Mn,$t.shape)},variance:()=>{let Mn=zn(zn(Rn,vn),Cn);return $t.rank===1&&(Mn=lr(Mn,en)),bn(Mn,$t.shape)},scale:()=>{const Mn=zn(vn,Nn);let qn=zn(lt,Mn);return $t.rank===1&&(qn=lr(qn,en)),bn(qn,$t.shape)},offset:()=>{let Mn=lt;return $t.rank===1&&(Mn=lr(Mn,en)),bn(Mn,$t.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nt=Object(xt.a)({unsortedSegmentSum_:function(lt,ct,dt){const mt=Object(wt.a)(lt,"x","unsortedSegmentSum"),St=Object(wt.a)(ct,"segmentIds","unsortedSegmentSum","int32");Object(it.b)(Object(it.v)(dt),()=>"numSegments must be of dtype int");const $t={x:mt,segmentIds:St},Dt={numSegments:dt};return $.a.runKernelFunc((Mt,Xt)=>{const en=Mt.unsortedSegmentSum(mt,St,dt);return Xt([St]),en},$t,null,Wt.Jc,Dt)}}),It={kernelName:Wt.fb,inputsToSave:["x","indices"],gradFunc:(lt,ct,dt)=>{const[mt,St]=ct,{axis:$t}=dt,Dt=Object(it.I)($t,mt.shape)[0];return{x:()=>{const Mt=mt.shape,Xt=St.size,en=Mt.slice(0,Dt),pn=en.length,vn=Mt.slice($t,Mt.length).slice(1),Cn=vn.length,Nn=Et(0,pn),Rn=Et(pn+1,pn+1+Cn),Mn=Lt([en,[Xt],vn]),qn=bn(lt,Mn),ir=bn(St,[Xt]),er=Lt([[pn],Nn,Rn]),ar=Vr(qn,er);let gr=Nt(ar,ir,mt.shape[Dt]);const wr=hs(er);return gr=Vr(gr,wr),gr},indices:()=>St}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Et(lt,ct){const dt=[];for(let mt=lt;mt<ct;++mt)dt.push(mt);return dt}function Lt(lt){const ct=[];for(let dt=0;dt<lt.length;++dt)for(let mt=0;mt<lt[dt].length;++mt)ct.push(lt[dt][mt]);return ct}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vt={kernelName:Wt.hb,inputsToSave:["a","b"],gradFunc:(lt,ct)=>{const[dt,mt]=ct;return{a:()=>_r(dt),b:()=>_r(mt)}}},Ht={kernelName:Wt.jb,gradFunc:lt=>({x:()=>At(lt,"float32")})},Jt={kernelName:Wt.lb,gradFunc:lt=>({x:()=>_r(lt)})},un={kernelName:Wt.mb,gradFunc:lt=>({x:()=>_r(lt)})},on={kernelName:Wt.nb,gradFunc:lt=>({x:()=>_r(lt)})},mn={kernelName:Wt.tb,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>yr(lt,Dn(dt,1))}}},gn={kernelName:Wt.sb,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>yr(lt,At(dt,"float32"))}}},fn={kernelName:Wt.ub,inputsToSave:[],outputsToSave:[!0],gradFunc:(lt,ct,dt)=>{const[mt]=ct,{axis:St}=dt;return{logits:()=>{const $t=Is(mt);return dr(lt,zn(lr(lt,St,!0),$t))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yn=Object(xt.a)({localResponseNormalizationBackprop_:function(lt,ct,dt,mt=5,St=1,$t=1,Dt=.5){const Mt={x:lt,y:ct,dy:dt},Xt={depthRadius:mt,bias:St,alpha:$t,beta:Dt};return $.a.runKernelFunc(en=>en.LRNGrad(dt,lt,ct,mt,St,$t,Dt),Mt,null,Wt.pb,Xt)}}),In={kernelName:Wt.ob,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(lt,ct,dt)=>{const[mt,St]=ct,{depthRadius:$t,bias:Dt,alpha:Mt,beta:Xt}=dt;return{x:()=>yn(mt,St,lt,$t,Dt,Mt,Xt)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ln=Object(xt.a)({equal_:function(lt,ct){let dt=Object(wt.a)(lt,"a","equal"),mt=Object(wt.a)(ct,"b","equal");[dt,mt]=Object(Tn.b)(dt,mt),kr(dt.shape,mt.shape);const St={a:dt,b:mt};return $.a.runKernelFunc($t=>$t.equal(dt,mt),St,null,Wt.U)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vn(lt,ct,dt,mt){return ct.rank<dt.rank&&(ct=bn(ct,ss(ct.shape,mt))),lt.rank<dt.rank&&(lt=bn(lt,ss(lt.shape,mt))),{x:()=>zn(lt,At(Ln(dt,ct),lt.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sn={kernelName:Wt.yb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(lt,ct,dt)=>{const mt=dt,{reductionIndices:St}=mt,$t=ct[0],Dt=Vn(lt,ct[1],$t,it.I(St,$t.shape));return{x:()=>Dt.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const En=Object(xt.a)({less_:function(lt,ct){let dt=Object(wt.a)(lt,"a","less"),mt=Object(wt.a)(ct,"b","less");[dt,mt]=Object(Tn.b)(dt,mt),kr(dt.shape,mt.shape);const St={a:dt,b:mt};return $.a.runKernelFunc($t=>$t.less(dt,mt),St,null,Wt.qb)}}),_n={kernelName:Wt.Eb,inputsToSave:["a","b"],gradFunc:(lt,ct)=>{const[dt,mt]=ct;return{a:()=>zn(lt,At(fo(dt,mt),"float32")),b:()=>zn(lt,At(En(dt,mt),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kn=Object(xt.a)({maxPool3dBackprop_:function(lt,ct,dt,mt,St,$t=[1,1,1],Dt,Mt){const Xt=Object(wt.a)(lt,"dy","maxPool3dBackprop"),en=Object(wt.a)(ct,"input","maxPool3dBackprop"),pn=Object(wt.a)(dt,"output","maxPool3dBackprop");let vn=Xt,Cn=en,Nn=pn,Rn=!1;en.rank===4&&(Rn=!0,vn=bn(Xt,[1,Xt.shape[0],Xt.shape[1],Xt.shape[2],Xt.shape[3]]),Cn=bn(en,[1,en.shape[0],en.shape[1],en.shape[2],en.shape[3]]),Nn=bn(pn,[1,pn.shape[0],pn.shape[1],pn.shape[2],pn.shape[3]])),it.b(vn.rank===5,()=>"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+vn.rank+"."),it.b(Cn.rank===5,()=>"Error in maxPool3dBackprop: input must be rank 5 but got rank "+Cn.rank+"."),it.b(Nn.rank===5,()=>"Error in maxPool3dBackprop: output must be rank 5 but got rank "+Nn.rank+"."),it.b(Hn(St,$t),()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${St} and dilations '${$t}'`),Mt!=null&&it.b(it.v(Dt),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${Mt} but got pad ${Dt}.`);const Mn={dy:vn,input:Cn,output:Nn},qn={filterSize:mt,strides:St,dilations:$t,pad:Dt,dimRoundingMode:Mt},ir=$.a.runKernelFunc(er=>{const ar=hn(Cn.shape,mt,St,$t,Dt,Mt);return er.maxPool3dBackprop(vn,Cn,Nn,ar)},Mn,null,Wt.Bb,qn);return Rn?bn(ir,[ir.shape[1],ir.shape[2],ir.shape[3],ir.shape[4]]):ir}}),Xn={kernelName:Wt.Ab,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(lt,ct,dt)=>{const[mt,St]=ct,{filterSize:$t,strides:Dt,dilations:Mt,pad:Xt,dimRoundingMode:en}=dt,pn=Mt??[1,1,1];return{x:()=>Kn(lt,mt,St,$t,Dt,pn,Xt,en)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ur=Object(xt.a)({maxPoolBackprop_:function(lt,ct,dt,mt,St,$t,Dt){const Mt=Object(wt.a)(lt,"dy","maxPoolBackprop"),Xt=Object(wt.a)(ct,"input","maxPoolBackprop"),en=Object(wt.a)(dt,"output","maxPoolBackprop");it.b(Xt.rank===Mt.rank,()=>`Rank of input (${Xt.rank}) does not match rank of dy (${Mt.rank})`),it.b(Mt.rank===4,()=>"Error in maxPoolBackprop: dy must be rank 4 but got rank "+Mt.rank+"."),it.b(Xt.rank===4,()=>"Error in maxPoolBackprop: input must be rank 4 but got rank "+Xt.rank+"."),Dt!=null&&it.b(it.v($t),()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${Dt} but got pad ${$t}.`);const pn={dy:Mt,input:Xt,output:en},vn={filterSize:mt,strides:St,pad:$t,dimRoundingMode:Dt};return $.a.runKernelFunc(Cn=>{const Nn=rn(Xt.shape,mt,St,1,$t,Dt);return Cn.maxPoolBackprop(Mt,Xt,en,Nn)},pn,null,Wt.Cb,vn)}}),br={kernelName:Wt.zb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(lt,ct,dt)=>{const[mt,St]=ct,{filterSize:$t,strides:Dt,pad:Mt}=dt;return{x:()=>ur(lt,mt,St,$t,Dt,Mt)}}},vr={kernelName:Wt.Gb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(lt,ct,dt)=>{const mt=dt,{axis:St}=mt,[$t,Dt]=ct,Mt=Vn(lt,Dt,$t,it.I(St,$t.shape));return{x:()=>Mt.x()}}},fr={kernelName:Wt.Hb,inputsToSave:["a","b"],gradFunc:(lt,ct)=>{const[dt,mt]=ct;return{a:()=>zn(lt,At(mo(dt,mt),"float32")),b:()=>zn(lt,At(Zs(dt,mt),"float32"))}}},xr={kernelName:Wt.Ib,inputsToSave:["x"],gradFunc:(lt,ct,dt)=>{const mt=ct[0],{paddings:St}=dt,$t=St.map(Dt=>Dt[0]);return{x:()=>Dr(lt,$t,mt.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mr=Object(xt.a)({floor_:function(lt){const ct=Object(wt.a)(lt,"x","floor"),dt={x:ct};return $.a.runKernelFunc(mt=>mt.floor(ct),dt,null,Wt.bb)}}),ds={kernelName:Wt.Jb,inputsToSave:["a","b"],gradFunc:(lt,ct)=>{const[dt,mt]=ct,St=kr(dt.shape,mt.shape);return{a:()=>{const $t=Br(dt.shape,St);return $t.length>0?bn(lr(lt,$t),dt.shape):lt},b:()=>{const $t=zn(lt,jr(Mr(yr(dt,mt)))),Dt=Br(mt.shape,St);return Dt.length>0?bn(lr($t,Dt),mt.shape):$t}}}},is={kernelName:Wt.Kb,inputsToSave:["a","b"],gradFunc:(lt,ct)=>{const[dt,mt]=ct,St=kr(dt.shape,mt.shape);return{a:()=>{const $t=zn(lt,At(mt,"float32")),Dt=Br(dt.shape,St);return Dt.length>0?bn(lr($t,Dt),dt.shape):$t},b:()=>{const $t=zn(lt,At(dt,"float32")),Dt=Br(mt.shape,St);return Dt.length>0?bn(lr($t,Dt),mt.shape):$t}}}},Kr={kernelName:Wt.Lb,gradFunc:lt=>({x:()=>jr(lt)})},es={kernelName:Wt.Qb,inputsToSave:["indices"],gradFunc:(lt,ct)=>{const dt=ct[0];return{indices:()=>_s(dt.shape,"float32")}}},as={kernelName:Wt.Rb,gradFunc:lt=>({x:()=>_r(lt)})},Zr={kernelName:Wt.Sb,inputsToSave:["x"],gradFunc:(lt,ct,dt)=>{const mt=ct[0],{paddings:St}=dt,$t=St.map(Dt=>Dt[0]);return{x:()=>Dr(lt,$t,mt.shape)}}},As={kernelName:Wt.Tb,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(lt,ct)=>{const[dt,mt,St]=ct,$t=dt,Dt=mt,Mt=kr($t.shape,Dt.shape);return{a:()=>{const Xt=At(Dt,"float32");let en=zn(lt,zn(Xt,Vs($t,dr(Xt,cr(1)))));const pn=Br($t.shape,Mt);return pn.length>0&&(en=lr(en,pn)),bn(en,$t.shape)},b:()=>{const Xt=Zs($t,0),en=Ss(Xt,so($t),_r($t));let pn=zn(lt,zn(St,en));const vn=Br(Dt.shape,Mt);return vn.length>0&&(pn=lr(pn,vn)),bn(pn,Dt.shape)}}}},Ts={kernelName:Wt.Ub,inputsToSave:["x","alpha"],gradFunc:(lt,ct)=>{const[dt,mt]=ct,St=Zs(dt,0);return{x:()=>Ss(St,lt,zn(lt,mt)),alpha:()=>{let $t=Ss(St,_r(lt),zn(lt,dt));const Dt=Br(mt.shape,lt.shape);return Dt.length>0&&($t=lr($t,Dt)),bn($t,mt.shape)}}}},ts={kernelName:Wt.Yb,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>yr(lt,jr(Hr(dt)))}}},Gs={kernelName:Wt.ac,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct,mt=zn(mo(dt,6),oo(dt));return{x:()=>zn(lt,At(mt,"float32"))}}},$a={kernelName:Wt.Zb,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>zn(lt,At(oo(dt),"float32"))}}},Ep={kernelName:Wt.bc,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>bn(lt,dt.shape)}}},Jp={kernelName:Wt.cc,inputsToSave:["images"],gradFunc:(lt,ct,dt)=>{const[mt]=ct,St=Dt=>{const{alignCorners:Mt}=dt;return Dt.resizeBilinearBackprop(lt,mt,Mt)},$t={images:mt};return{images:()=>$.a.runKernelFunc(St,$t,null,Wt.dc,dt)}}},_f={kernelName:Wt.ec,inputsToSave:["images"],gradFunc:(lt,ct,dt)=>{const[mt]=ct,St=Dt=>{const{alignCorners:Mt}=dt;return Dt.resizeNearestNeighborBackprop(lt,mt,Mt)},$t={images:mt};return{images:()=>$.a.runKernelFunc(St,$t,null,Wt.fc,dt)}}},em={kernelName:Wt.gc,gradFunc:(lt,ct,dt)=>{const{dims:mt}=dt,St=Object(it.I)(mt,lt.shape);return{x:()=>Xo(lt,St)}}},tm={kernelName:Wt.ic,gradFunc:lt=>({x:()=>_r(lt)})},nm={kernelName:Wt.jc,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>jr(yr(lt,zn(Vs(dt,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Op=Object(xt.a)({logicalNot_:function(lt){const ct=Object(wt.a)(lt,"x","logicalNot","bool"),dt={x:ct};return $.a.runKernelFunc(mt=>mt.logicalNot(ct),dt,null,Wt.wb)}}),rm={kernelName:Wt.kc,inputsToSave:["condition"],gradFunc:(lt,ct)=>{const[dt]=ct;return{condition:()=>At(_r(dt),"float32"),t:()=>zn(lt,At(dt,lt.dtype)),e:()=>zn(lt,At(Op(dt),lt.dtype))}}},sm={kernelName:Wt.lc,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>{const mt=Zs(dt,cr(0)),St=cr(Du),$t=cr(Ru),Dt=zn(lt,$t),Mt=zn(zn(lt,St),Is(At(dt,"float32")));return Ss(mt,Dt,Mt)}}}},om={kernelName:Wt.mc,outputsToSave:[!0],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>zn(lt,zn(dt,dr(cr(1),dt)))}}},im={kernelName:Wt.nc,gradFunc:lt=>({x:()=>_r(lt)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dp=Object(xt.a)({cos_:function(lt){const ct=Object(wt.a)(lt,"x","cos"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>{const $t=mt.cos(ct);return St([ct]),$t},dt,null,Wt.G)}}),am={kernelName:Wt.oc,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>zn(Dp(At(dt,"float32")),lt)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bp=Object(xt.a)({cosh_:function(lt){const ct=Object(wt.a)(lt,"x","cosh"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>{const $t=mt.cosh(ct);return St([ct]),$t},dt,null,Wt.H)}}),um={kernelName:Wt.pc,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>zn(Bp(At(dt,"float32")),lt)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jp=Object(xt.a)({pad_:function(lt,ct,dt=0){const mt=Object(wt.a)(lt,"x","pad");if(mt.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const St={paddings:ct,constantValue:dt},$t={x:mt};return $.a.runKernelFunc((Dt,Mt)=>(Mt([mt]),Dt.pad(mt,ct,dt)),$t,null,Wt.Sb,St)}}),lm={kernelName:Wt.qc,inputsToSave:["x"],gradFunc:(lt,ct,dt)=>{const[mt]=ct,{begin:St,size:$t}=dt,Dt=mt.shape,[Mt,Xt]=Rs(mt,St,$t),en=[];for(let pn=0;pn<lt.rank;pn++)en.push([Mt[pn],Dt[pn]-Mt[pn]-Xt[pn]]);return{x:()=>jp(lt,en)}}},cm={kernelName:Wt.rc,outputsToSave:[!0],gradFunc:(lt,ct,dt)=>{const[mt]=ct,{dim:St}=dt,$t=zn(lt,mt);return{logits:()=>dr($t,zn(lr($t,[St],!0),mt))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rp=Object(xt.a)({sigmoid_:function(lt){const ct=Object(wt.a)(lt,"x","sigmoid"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>{const $t=mt.sigmoid(ct);return St([$t]),$t},dt,null,Wt.mc)}}),hm={kernelName:Wt.sc,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>zn(lt,Rp(dt))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pp=Object(xt.a)({batchToSpaceND_:function(lt,ct,dt){const mt=Object(wt.a)(lt,"x","batchToSpaceND"),St=ct.reduce((Mt,Xt)=>Mt*Xt);it.b(mt.rank>=1+ct.length,()=>`input rank is ${mt.rank} but should be > than blockShape.length ${ct.length}`),it.b(dt.length===ct.length,()=>`crops.length is ${dt.length} but should be equal to blockShape.length  ${ct.length}`),it.b(mt.shape[0]%St==0,()=>`input tensor batch is ${mt.shape[0]} but is not divisible by the product of the elements of blockShape ${ct.join(" * ")} === ${St}`);const $t={x:mt},Dt={blockShape:ct,crops:dt};return $.a.runKernelFunc(Mt=>Mt.batchToSpaceND(mt,ct,dt),$t,null,Wt.t,Dt)}}),Up={kernelName:Wt.tc,gradFunc:(lt,ct,dt)=>{const{blockShape:mt,paddings:St}=dt;return{x:()=>Pp(lt,mt,St)}}},Gp={kernelName:Wt.uc,gradFunc:(lt,ct,dt)=>{const{axis:mt}=dt;return{x:()=>Ar(lt,mt)}}},dm={kernelName:Wt.vc,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>yr(lt,zn(Fs(At(dt,"float32")),2))}}},pm={kernelName:Wt.wc,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>zn(lt,zn(At(dt,"float32"),2))}}},fm={kernelName:Wt.xc,inputsToSave:["a","b"],gradFunc:(lt,ct)=>{const[dt,mt]=ct,St=cr(2);return{a:()=>zn(lt,zn(St,dr(dt,mt))),b:()=>zn(lt,zn(St,dr(mt,dt)))}}},mm={kernelName:Wt.yc,gradFunc:lt=>({x:()=>_r(lt)})},gm={kernelName:Wt.Ac,inputsToSave:["a","b"],gradFunc:(lt,ct)=>{const[dt,mt]=ct,St=kr(dt.shape,mt.shape);return{a:()=>{let $t=lt;const Dt=Br(dt.shape,St);return Dt.length>0&&($t=lr($t,Dt)),bn($t,dt.shape)},b:()=>{let $t=lt;const Dt=Br(mt.shape,St);return Dt.length>0&&($t=lr($t,Dt)),bn(jr($t),mt.shape)}}}},ym={kernelName:Wt.Bc,inputsToSave:["x"],gradFunc:(lt,ct,dt)=>{const[mt]=ct,St=mt.shape.slice(),{axis:$t}=dt;Object(it.I)($t,mt.shape).forEach(Xt=>{St[Xt]=1});const Dt=bn(lt,St),Mt=zn(Dt,yo(mt.shape,"float32"));return{x:()=>Mt}}},bm={kernelName:Wt.Cc,inputsToSave:["x"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>yr(lt,Hr(Dp(dt)))}}},vm={kernelName:Wt.Dc,outputsToSave:[!0],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>zn(dr(cr(1),Hr(dt)),lt)}}},xm={kernelName:Wt.Ec,inputsToSave:["x"],gradFunc:(lt,ct,dt)=>{const[mt]=ct,{reps:St}=dt;return{x:()=>{let $t=_r(mt);if(mt.rank===1)for(let Dt=0;Dt<St[0];++Dt)$t=Dn($t,Dr(lt,[Dt*mt.shape[0]],[mt.shape[0]]));else if(mt.rank===2)for(let Dt=0;Dt<St[0];++Dt)for(let Mt=0;Mt<St[1];++Mt)$t=Dn($t,Dr(lt,[Dt*mt.shape[0],Mt*mt.shape[1]],[mt.shape[0],mt.shape[1]]));else if(mt.rank===3)for(let Dt=0;Dt<St[0];++Dt)for(let Mt=0;Mt<St[1];++Mt)for(let Xt=0;Xt<St[2];++Xt)$t=Dn($t,Dr(lt,[Dt*mt.shape[0],Mt*mt.shape[1],Xt*mt.shape[2]],[mt.shape[0],mt.shape[1],mt.shape[2]]));else{if(mt.rank!==4)throw new Error("Gradient for tile operation is not implemented for rank-"+mt.rank+" tensors yet.");for(let Dt=0;Dt<St[0];++Dt)for(let Mt=0;Mt<St[1];++Mt)for(let Xt=0;Xt<St[2];++Xt)for(let en=0;en<St[3];++en)$t=Dn($t,Dr(lt,[Dt*mt.shape[0],Mt*mt.shape[1],Xt*mt.shape[2],en*mt.shape[3]],[mt.shape[0],mt.shape[1],mt.shape[2],mt.shape[3]]))}return $t}}}},wm={kernelName:Wt.Gc,gradFunc:(lt,ct,dt)=>{const mt=dt,{perm:St}=mt,$t=hs(St);return{x:()=>Vr(lt,$t)}}},Sm={kernelName:Wt.Ic,gradFunc:(lt,ct,dt)=>{const mt=dt,{axis:St}=mt;return{value:()=>ro(lt,St)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qp=Object(xt.a)({gather_:function(lt,ct,dt=0){const mt=Object(wt.a)(lt,"x","gather"),St=Object(wt.a)(ct,"indices","gather","int32"),$t={x:mt,indices:St},Dt={axis:dt};return $.a.runKernelFunc((Mt,Xt)=>{const en=Object(it.I)(dt,mt.shape)[0],pn=hu(mt,St,en),vn=Mt.gather(mt,bn(St,[St.size]),en);return Xt([mt,St]),bn(vn,pn.outputShape)},$t,null,Wt.fb,Dt)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yu=Object(xt.a)({maximum_:function(lt,ct){let dt=Object(wt.a)(lt,"a","maximum"),mt=Object(wt.a)(ct,"b","maximum");[dt,mt]=Object(Tn.b)(dt,mt),dt.dtype==="bool"&&(dt=At(dt,"int32"),mt=At(mt,"int32")),kr(dt.shape,mt.shape);const St={a:dt,b:mt};return $.a.runKernelFunc(($t,Dt)=>{const Mt=$t.maximum(dt,mt);return Dt([dt,mt]),Mt},St,null,Wt.Eb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cm=[Lu,rp,sp,pu,ip,ap,up,lp,cp,hp,dp,pp,mp,Vu,gp,yp,bp,vp,xp,wp,Sp,Tp,Cp,Uu,_p,Ip,Tr,mu,xa,Hu,Ap,Ku,Xu,kp,at,Ft,vt,It,Vt,Ht,Jt,un,on,mn,gn,fn,In,Sn,Sn,_n,Xn,br,vr,fr,xr,ds,is,Kr,es,as,Zr,Zr,As,Ts,ts,Gs,$a,Ep,Jp,_f,em,tm,nm,rm,sm,om,im,am,um,lm,cm,hm,Up,Up,Gp,Gp,dm,fm,pm,mm,gm,ym,bm,vm,xm,wm,Sm,{kernelName:Wt.Jc,inputsToSave:["segmentIds"],gradFunc:(lt,ct)=>{const[dt]=ct;return{x:()=>function(mt,St){const $t=Yu(St,_r(St)),Dt=qp(mt,$t);let Mt=fo(St,cr(0,"int32"));const Xt=Dt.rank-Mt.rank;for(let pn=0;pn<Xt;++pn)Mt=Ps(Mt,pn+1);Mt=go(Mt,yo(Dt.shape,"bool"));const en=_r(Dt);return Ss(Mt,Dt,en)}(lt,dt)}}},{kernelName:Wt.Kc,gradFunc:lt=>({x:()=>_r(lt)})}];/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const lt of Cm)Object(lu.d)(lt);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.abs=function(){return this.throwIfDisposed(),Cs(this)};const Tm=Object(xt.a)({acos_:function(lt){const ct=Object(wt.a)(lt,"x","acos"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>{const $t=mt.acos(ct);return St([ct]),$t},dt,null,Wt.b)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.acos=function(){return this.throwIfDisposed(),Tm(this)};const Nm=Object(xt.a)({acosh_:function(lt){const ct=Object(wt.a)(lt,"x","acosh"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>{const $t=mt.acosh(ct);return St([ct]),$t},dt,null,Wt.c)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.acosh=function(){return this.throwIfDisposed(),Nm(this)};const Wp=Object(xt.a)({mod_:function(lt,ct){let dt=Object(wt.a)(lt,"a","mod"),mt=Object(wt.a)(ct,"b","mod");[dt,mt]=Object(Tn.b)(dt,mt);const St={a:dt,b:mt};return $.a.runKernelFunc(($t,Dt)=>{const Mt=$t.mod(dt,mt);return Dt([dt,mt]),Mt},St,null,Wt.Jb)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $m=Object(xt.a)({addStrict_:function(lt,ct){Qr("strict variants of ops have been deprecated and will be removed in future");const dt=Object(wt.a)(lt,"a","addStrict"),mt=Object(wt.a)(ct,"b","addStrict");return it.e(dt.shape,mt.shape,"Error in addStrict: "),Dn(dt,mt)}}),_m=Object(xt.a)({divStrict_:function(lt,ct){Qr("strict variants of ops have been deprecated and will be removed in future");const dt=Object(wt.a)(lt,"a","div"),mt=Object(wt.a)(ct,"b","div");return it.e(dt.shape,mt.shape,"Error in divideStrict: "),yr(dt,mt)}}),Im=Object(xt.a)({maximumStrict_:function(lt,ct){Qr("strict variants of ops have been deprecated and will be removed in future");const dt=Object(wt.a)(lt,"a","maximumStrict"),mt=Object(wt.a)(ct,"b","maximumStrict");return it.e(dt.shape,mt.shape,"Error in maximumStrict: "),Yu(dt,mt)}}),Am=Object(xt.a)({minimumStrict_:function(lt,ct){Qr("strict variants of ops have been deprecated and will be removed in future");const dt=Object(wt.a)(lt,"a","minimumStrict"),mt=Object(wt.a)(ct,"b","minimumStrict");return it.e(dt.shape,mt.shape,"Error in minimumStrict: "),bo(dt,mt)}}),km=Object(xt.a)({modStrict_:function(lt,ct){Qr("strict variants of ops have been deprecated and will be removed in future");const dt=Object(wt.a)(lt,"a","modStrict"),mt=Object(wt.a)(ct,"b","modStrict");return it.e(dt.shape,mt.shape,"Error in modStrict: "),Wp(dt,mt)}}),Em=Object(xt.a)({mulStrict_:function(lt,ct){Qr("strict variants of ops have been deprecated and will be removed in future");const dt=Object(wt.a)(lt,"a","mul"),mt=Object(wt.a)(ct,"b","mul");return it.e(dt.shape,mt.shape,"Error in multiplyStrict: "),zn(dt,mt)}}),Om=Object(xt.a)({powStrict_:function(lt,ct){return Qr("strict variants of ops have been deprecated and will be removed in future"),it.e(lt.shape,ct.shape,"Error in powStrict: "),Vs(lt,ct)}}),Dm=Object(xt.a)({squaredDifferenceStrict_:function(lt,ct){Qr("strict variants of ops have been deprecated and will be removed in future");const dt=Object(wt.a)(lt,"a","squaredDifferenceStrict"),mt=Object(wt.a)(ct,"b","squaredDifferenceStrict");return it.e(dt.shape,mt.shape,"Error in squaredDifferenceStrict: "),_i(dt,mt)}}),Rm=Object(xt.a)({subStrict_:function(lt,ct){Qr("strict variants of ops have been deprecated and will be removed in future");const dt=Object(wt.a)(lt,"a","subStrict"),mt=Object(wt.a)(ct,"b","subStrict");return it.e(dt.shape,mt.shape,"Error in subStrict: "),dr(dt,mt)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.addStrict=function(lt){return this.throwIfDisposed(),$m(this,lt)},Yt.a.prototype.add=function(lt){return this.throwIfDisposed(),Dn(this,lt)};const Pm=Object(xt.a)({all_:function(lt,ct=null,dt=!1){let mt=Object(wt.a)(lt,"x","all","bool");const St={x:mt},$t={axis:ct,keepDims:dt};return $.a.runKernelFunc(Dt=>{const Mt=Object(it.I)(ct,mt.shape);let Xt=Mt;const en=cs(Xt,mt.rank);en!=null&&(mt=Vr(mt,en),Xt=ws(Xt.length,mt.rank));const pn=Dt.all(mt,Xt);if(dt){const vn=ss(pn.shape,Mt);return bn(pn,vn)}return pn},St,null,Wt.f,$t)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.all=function(lt,ct){return this.throwIfDisposed(),Pm(this,lt,ct)};const Fm=Object(xt.a)({any_:function(lt,ct=null,dt=!1){let mt=Object(wt.a)(lt,"x","any","bool");const St={x:mt},$t={axis:ct,keepDims:dt};return $.a.runKernelFunc(Dt=>{const Mt=Object(it.I)(ct,mt.shape);let Xt=Mt;const en=cs(Xt,mt.rank);en!=null&&(mt=Vr(mt,en),Xt=ws(Xt.length,mt.rank));const pn=Dt.any(mt,Xt);if(dt){const vn=ss(pn.shape,Mt);return bn(pn,vn)}return pn},St,null,Wt.g,$t)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.any=function(lt,ct){return this.throwIfDisposed(),Fm(this,lt,ct)};const Mm=Object(xt.a)({argMax_:function(lt,ct=0){let dt=Object(wt.a)(lt,"x","argMax");const mt={x:dt},St={axis:ct};return $.a.runKernelFunc(($t,Dt)=>{Dt([dt]);let Mt=it.I(ct,dt.shape);const Xt=cs(Mt,dt.rank);return Xt!=null&&(dt=Vr(dt,Xt),Mt=ws(Mt.length,dt.rank)),$t.argMax(dt,Mt[0])},mt,null,Wt.h,St)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.argMax=function(lt){return this.throwIfDisposed(),Mm(this,lt)};const Lm=Object(xt.a)({argMin_:function(lt,ct=0){let dt=Object(wt.a)(lt,"x","argMin");const mt={x:dt},St={axis:ct};return $.a.runKernelFunc(($t,Dt)=>{Dt([dt]),ct==null&&(ct=0);let Mt=it.I(ct,dt.shape);const Xt=cs(Mt,dt.rank);return Xt!=null&&(dt=Vr(dt,Xt),Mt=ws(Mt.length,dt.rank)),$t.argMin(dt,Mt[0])},mt,null,Wt.i,St)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.argMin=function(lt){return this.throwIfDisposed(),Lm(this,lt)},Yt.a.prototype.asScalar=function(){return this.throwIfDisposed(),Object(it.b)(this.size===1,()=>"The array must have only 1 element."),bn(this,[])},Yt.a.prototype.asType=function(lt){return this.throwIfDisposed(),At(this,lt)},Yt.a.prototype.as1D=function(){return this.throwIfDisposed(),bn(this,[this.size])},Yt.a.prototype.as2D=function(lt,ct){return this.throwIfDisposed(),bn(this,[lt,ct])},Yt.a.prototype.as3D=function(lt,ct,dt){return this.throwIfDisposed(),bn(this,[lt,ct,dt])},Yt.a.prototype.as4D=function(lt,ct,dt,mt){return this.throwIfDisposed(),bn(this,[lt,ct,dt,mt])},Yt.a.prototype.as5D=function(lt,ct,dt,mt,St){return this.throwIfDisposed(),bn(this,[lt,ct,dt,mt,St])};const zm=Object(xt.a)({asin_:function(lt){const ct=Object(wt.a)(lt,"x","asin"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>{const $t=mt.asin(ct);return St([ct]),$t},dt,null,Wt.j)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.asin=function(){return this.throwIfDisposed(),zm(this)};const Vm=Object(xt.a)({asinh_:function(lt){const ct=Object(wt.a)(lt,"x","asinh"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>{const $t=mt.asinh(ct);return St([ct]),$t},dt,null,Wt.k)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.asinh=function(){return this.throwIfDisposed(),Vm(this)};const Bm=Object(xt.a)({atan_:function(lt){const ct=Object(wt.a)(lt,"x","atan"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>{const $t=mt.atan(ct);return St([ct]),$t},dt,null,Wt.l)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.atan=function(){return this.throwIfDisposed(),Bm(this)};const jm=Object(xt.a)({atan2_:function(lt,ct){let dt=Object(wt.a)(lt,"a","atan2"),mt=Object(wt.a)(ct,"b","atan2");[dt,mt]=Object(Tn.b)(dt,mt);const St={a:dt,b:mt};return $.a.runKernelFunc(($t,Dt)=>{const Mt=$t.atan2(dt,mt);return Dt([dt,mt]),Mt},St,null,Wt.m)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.atan2=function(lt){return this.throwIfDisposed(),jm(this,lt)};const Um=Object(xt.a)({atanh_:function(lt){const ct=Object(wt.a)(lt,"x","atanh"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>{const $t=mt.atanh(ct);return St([ct]),$t},dt,null,Wt.n)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.atanh=function(){return this.throwIfDisposed(),Um(this)};const Hp=Object(xt.a)({avgPool_:function(lt,ct,dt,mt,St){const $t=Object(wt.a)(lt,"x","avgPool","float32");it.b(Hn(dt,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${dt} and dilations '1'`);let Dt=$t,Mt=!1;$t.rank===3&&(Mt=!0,Dt=bn($t,[1,$t.shape[0],$t.shape[1],$t.shape[2]])),it.b(Dt.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${Dt.rank}.`),St!=null&&it.b(it.v(mt),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${St} but got pad ${mt}.`);const Xt={x:Dt},en={filterSize:ct,strides:dt,pad:mt,dimRoundingMode:St};let pn=$.a.runKernelFunc((vn,Cn)=>{const Nn=rn(Dt.shape,ct,dt,1,mt,St);return Cn([Dt]),Nn.filterWidth===1&&Nn.filterHeight===1&&it.a(Nn.inShape,Nn.outShape)?Dt.clone():vn.avgPool(Dt,Nn)},Xt,null,Wt.o,en);return pn=At(pn,$t.dtype),Mt?bn(pn,[pn.shape[1],pn.shape[2],pn.shape[3]]):pn}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.avgPool=function(lt,ct,dt,mt){return this.throwIfDisposed(),Hp(this,lt,ct,dt,mt)},Yt.a.prototype.batchToSpaceND=function(lt,ct){return this.throwIfDisposed(),Pp(this,lt,ct)},Yt.a.prototype.batchNorm=function(lt,ct,dt,mt,St){return this.throwIfDisposed(),Jn(this,lt,ct,dt,mt,St)},Yt.a.prototype.broadcastTo=function(lt){return this.throwIfDisposed(),Ao(this,lt)},Yt.a.prototype.cast=function(lt){return this.throwIfDisposed(),At(this,lt)};const Gm=Object(xt.a)({ceil_:function(lt){const ct=Object(wt.a)(lt,"x","ceil"),dt={x:ct};return $.a.runKernelFunc(mt=>mt.ceil(ct),dt,null,Wt.w)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.ceil=function(){return this.throwIfDisposed(),Gm(this)};const qm=Object(xt.a)({clipByValue_:function(lt,ct,dt){const mt=Object(wt.a)(lt,"x","clipByValue");it.b(ct<=dt,()=>`Error in clip: min (${ct}) must be less than or equal to max (${dt}).`);const St={x:mt},$t={clipValueMin:ct,clipValueMax:dt};return $.a.runKernelFunc((Dt,Mt)=>{const Xt=Dt.clip(mt,ct,dt);return Mt([mt]),Xt},St,null,Wt.x,$t)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.clipByValue=function(lt,ct){return this.throwIfDisposed(),qm(this,lt,ct)},Yt.a.prototype.concat=function(lt,ct){return this.throwIfDisposed(),lt instanceof Yt.a&&(lt=[lt]),Ar([this,...lt],ct)};const Wm=Object(xt.a)({conv1d_:function(lt,ct,dt,mt,St="NWC",$t=1,Dt){const Mt=Object(wt.a)(lt,"x","conv1d"),Xt=Object(wt.a)(ct,"filter","conv1d");let en=Mt,pn=!1;Mt.rank===2&&(pn=!0,en=bn(Mt,[1,Mt.shape[0],Mt.shape[1]])),it.b(en.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${en.rank}.`),it.b(Xt.rank===3,()=>"Error in conv1d: filter must be rank 3, but got rank "+Xt.rank+"."),Dt!=null&&it.b(it.v(mt),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${Dt} but got pad ${mt}.`),it.b(en.shape[2]===Xt.shape[1],()=>`Error in conv1d: depth of input (${en.shape[2]}) must match input depth for filter ${Xt.shape[1]}.`),it.b(Hn(dt,$t),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${dt} and dilation '${$t}'`),it.b(St==="NWC",()=>`Error in conv1d: got dataFormat of ${St} but only NWC is currently supported.`);const vn=bn(Xt,[1,Xt.shape[0],Xt.shape[1],Xt.shape[2]]),Cn=bn(en,[en.shape[0],1,en.shape[1],en.shape[2]]),Nn=Fr(Cn,vn,[1,dt],mt,"NHWC",[1,$t],Dt);return bn(Nn,pn?[Nn.shape[2],Nn.shape[3]]:[Nn.shape[0],Nn.shape[2],Nn.shape[3]])}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.conv1d=function(lt,ct,dt,mt,St,$t){return this.throwIfDisposed(),Wm(this,lt,ct,dt,mt,St,$t)};const Hm=Object(xt.a)({conv2dTranspose_:function(lt,ct,dt,mt,St,$t){const Dt=Object(wt.a)(lt,"x","conv2dTranspose"),Mt=Object(wt.a)(ct,"filter","conv2dTranspose");return ju(dt,Dt,Mt,mt,St,"NHWC",$t)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.conv2dTranspose=function(lt,ct,dt,mt,St){return this.throwIfDisposed(),Hm(this,lt,ct,dt,mt,St)},Yt.a.prototype.conv2d=function(lt,ct,dt,mt,St,$t){return this.throwIfDisposed(),Fr(this,lt,ct,dt,mt,St,$t)},Yt.a.prototype.cos=function(){return this.throwIfDisposed(),Dp(this)},Yt.a.prototype.cosh=function(){return this.throwIfDisposed(),Bp(this)},Yt.a.prototype.cumsum=function(lt,ct,dt){return this.throwIfDisposed(),No(this,lt,ct,dt)};const Km=Object(xt.a)({depthToSpace_:function(lt,ct,dt="NHWC"){const mt=Object(wt.a)(lt,"x","depthToSpace"),St=dt==="NHWC"?mt.shape[1]:mt.shape[2],$t=dt==="NHWC"?mt.shape[2]:mt.shape[3],Dt=dt==="NHWC"?mt.shape[3]:mt.shape[1];it.b(St*ct>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${St} and ${ct}  for depthToSpace with input shape
    ${mt.shape}`),it.b($t*ct>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${$t} and ${ct} for depthToSpace with input shape
        ${mt.shape}`),it.b(Dt%(ct*ct)==0,()=>`Dimension size must be evenly divisible by ${ct*ct} but is ${Dt} for depthToSpace with input shape ${mt.shape}`);const Mt={x:mt},Xt={blockSize:ct,dataFormat:dt};return $.a.runKernelFunc(en=>en.depthToSpace(mt,ct,dt),Mt,null,Wt.K,Xt)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.depthToSpace=function(lt,ct){return this.throwIfDisposed(),Km(this,lt,ct)},Yt.a.prototype.depthwiseConv2D=function(lt,ct,dt,mt,St,$t){return Qr("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),ho(this,lt,ct,dt,mt,St,$t)},Yt.a.prototype.depthwiseConv2d=function(lt,ct,dt,mt,St,$t){return this.throwIfDisposed(),ho(this,lt,ct,dt,mt,St,$t)};const Xm=Object(xt.a)({dilation2d_:function(lt,ct,dt,mt,St=[1,1],$t="NHWC"){const Dt=Object(wt.a)(lt,"x","dilation2d"),Mt=Object(wt.a)(ct,"filter","dilation2d");it.b(Dt.rank===3||Dt.rank===4,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+Dt.rank+"."),it.b(Mt.rank===3,()=>"Error in dilation2d: filter must be rank 3, but got rank "+Mt.rank+"."),it.b($t==="NHWC",()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+$t);let Xt=Dt,en=!1;Dt.rank===3&&(Xt=bn(Dt,[1,Dt.shape[0],Dt.shape[1],Dt.shape[2]]),en=!0);const pn={x:Xt,filter:Mt},vn={strides:dt,pad:mt,dilations:St},Cn=$.a.runKernel(Wt.O,pn,vn);return en?bn(Cn,[Cn.shape[1],Cn.shape[2],Cn.shape[3]]):Cn}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.dilation2d=function(lt,ct,dt,mt,St){return this.throwIfDisposed(),Xm(this,lt,ct,dt,mt,St)};const Ym=Object(xt.a)({divNoNan_:function(lt,ct){let dt=Object(wt.a)(lt,"a","div"),mt=Object(wt.a)(ct,"b","div");[dt,mt]=Object(Tn.b)(dt,mt);const St=yr(dt,mt),$t=_r(St),Dt=Ln(mt,$t);return Ss(Dt,$t,St)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.divNoNan=function(lt){return this.throwIfDisposed(),Ym(this,lt)},Yt.a.prototype.divStrict=function(lt){return this.throwIfDisposed(),_m(this,lt)},Yt.a.prototype.div=function(lt){return this.throwIfDisposed(),yr(this,lt)};const Qm=Object(xt.a)({dot_:function(lt,ct){const dt=Object(wt.a)(lt,"t1","dot"),mt=Object(wt.a)(ct,"t2","dot");it.b(!(dt.rank!==1&&dt.rank!==2||mt.rank!==1&&mt.rank!==2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${dt.rank} and ${mt.rank}.`);const St=dt.rank===1?dt.size:dt.shape[1],$t=mt.rank===1?mt.size:mt.shape[0];if(it.b(St===$t,()=>`Error in dot: inner dimensions of inputs must match, but got ${St} and ${$t}.`),dt.rank===1&&mt.rank===1){const Dt=bn(dt,[1,-1]),Mt=bn(mt,[-1,1]),Xt=Or(Dt,Mt);return bn(Xt,[])}if(dt.rank===1&&mt.rank===2){const Dt=bn(dt,[1,-1]),Mt=bn(mt,[mt.shape[0],mt.shape[1]]),Xt=Or(Dt,Mt);return bn(Xt,[Xt.size])}if(dt.rank===2&&mt.rank===1){const Dt=bn(mt,[-1,1]),Mt=Or(dt,Dt);return bn(Mt,[Mt.size])}{const Dt=bn(mt,[mt.shape[0],mt.shape[1]]);return Or(dt,Dt)}}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.dot=function(lt){return this.throwIfDisposed(),Qm(this,lt)},Yt.a.prototype.elu=function(){return this.throwIfDisposed(),Iu(this)};const Zm=Object(xt.a)({equalStrict_:function(lt,ct){Qr("strict variants of ops have been deprecated and will be removed in future");const dt=Object(wt.a)(lt,"a","equalStrict"),mt=Object(wt.a)(ct,"b","equalStrict");return Object(it.e)(dt.shape,mt.shape,"Error in equalStrict: "),Ln(dt,mt)}}),Jm=Object(xt.a)({greaterEqualStrict_:function(lt,ct){Qr("strict variants of ops have been deprecated and will be removed in future");const dt=Object(wt.a)(lt,"a","greaterEqualStrict"),mt=Object(wt.a)(ct,"b","greaterEqualStrict");return Object(it.e)(dt.shape,mt.shape,"Error in greaterEqualStrict: "),fo(dt,mt)}}),_g=Object(xt.a)({greaterStrict_:function(lt,ct){Qr("strict variants of ops have been deprecated and will be removed in future");const dt=Object(wt.a)(lt,"a","greaterStrict"),mt=Object(wt.a)(ct,"b","greaterStrict");return Object(it.e)(dt.shape,mt.shape,"Error in greaterStrict: "),Zs(dt,mt)}}),e1=Object(xt.a)({lessEqualStrict_:function(lt,ct){Qr("strict variants of ops have been deprecated and will be removed in future");const dt=Object(wt.a)(lt,"a","lessEqualStrict"),mt=Object(wt.a)(ct,"b","lessEqualStrict");return Object(it.e)(dt.shape,mt.shape,"Error in lessEqualStrict: "),mo(dt,mt)}}),t1=Object(xt.a)({lessStrict_:function(lt,ct){Qr("strict variants of ops have been deprecated and will be removed in future");const dt=Object(wt.a)(lt,"a","lessStrict"),mt=Object(wt.a)(ct,"b","lessStrict");return Object(it.e)(dt.shape,mt.shape,"Error in lessStrict: "),En(dt,mt)}}),n1=Object(xt.a)({notEqualStrict_:function(lt,ct){Qr("strict variants of ops have been deprecated and will be removed in future");const dt=Object(wt.a)(lt,"a","notEqualStrict"),mt=Object(wt.a)(ct,"b","notEqualStrict");return Object(it.e)(dt.shape,mt.shape,"Error in notEqualStrict: "),Zo(dt,mt)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.equalStrict=function(lt){return this.throwIfDisposed(),Zm(this,lt)},Yt.a.prototype.equal=function(lt){return this.throwIfDisposed(),Ln(this,lt)};const r1=Object(xt.a)({erf_:function(lt){let ct=Object(wt.a)(lt,"x","erf");it.b(ct.dtype==="int32"||ct.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),ct.dtype==="int32"&&(ct=At(ct,"float32"));const dt={x:ct};return $.a.runKernelFunc((mt,St)=>{const $t=mt.erf(ct);return St([ct]),$t},dt,null,Wt.V)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.erf=function(){return this.throwIfDisposed(),r1(this)},Yt.a.prototype.exp=function(){return this.throwIfDisposed(),Is(this)},Yt.a.prototype.expandDims=function(lt){return this.throwIfDisposed(),Ps(this,lt)};const s1=Object(xt.a)({expm1_:function(lt){const ct=Object(wt.a)(lt,"x","expm1"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>{const $t=mt.expm1(ct);return St([ct]),$t},dt,null,Wt.X)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.expm1=function(){return this.throwIfDisposed(),s1(this)},Yt.a.prototype.fft=function(){return this.throwIfDisposed(),yu(this)},Yt.a.prototype.flatten=function(){return this.throwIfDisposed(),bn(this,[this.size])},Yt.a.prototype.floor=function(){return this.throwIfDisposed(),Mr(this)},Yt.a.prototype.floorDiv=function(lt){return this.throwIfDisposed(),Vo(this,lt)},Yt.a.prototype.gather=function(lt,ct){return this.throwIfDisposed(),qp(this,lt,ct)},Yt.a.prototype.greaterEqualStrict=function(lt){return this.throwIfDisposed(),Jm(this,lt)},Yt.a.prototype.greaterEqual=function(lt){return this.throwIfDisposed(),fo(this,lt)},Yt.a.prototype.greaterStrict=function(lt){return this.throwIfDisposed(),_g(this,lt)},Yt.a.prototype.greater=function(lt){return this.throwIfDisposed(),Zs(this,lt)},Yt.a.prototype.ifft=function(){return this.throwIfDisposed(),Ko(this)},Yt.a.prototype.irfft=function(){return this.throwIfDisposed(),Ju(this)};const o1=Object(xt.a)({isFinite_:function(lt){const ct=Object(wt.a)(lt,"x","isFinite"),dt={x:ct};return $.a.runKernelFunc(mt=>mt.isFinite(ct),dt,null,Wt.lb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.isFinite=function(){return this.throwIfDisposed(),o1(this)};const i1=Object(xt.a)({isInf_:function(lt){const ct=Object(wt.a)(lt,"x","isInf"),dt={x:ct};return $.a.runKernelFunc(mt=>mt.isInf(ct),dt,null,Wt.mb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.isInf=function(){return this.throwIfDisposed(),i1(this)};const u1=Object(xt.a)({isNaN_:function(lt){const ct=Object(wt.a)(lt,"x","isNaN"),dt={x:ct};return $.a.runKernelFunc(mt=>mt.isNaN(ct),dt,null,Wt.nb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.isNaN=function(){return this.throwIfDisposed(),u1(this)};const c1=Object(xt.a)({leakyRelu_:function(lt,ct=.2){const dt=Object(wt.a)(lt,"x","leakyRelu");return Yu(zn(cr(ct),dt),dt)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.leakyRelu=function(lt){return this.throwIfDisposed(),c1(this,lt)},Yt.a.prototype.lessEqualStrict=function(lt){return this.throwIfDisposed(),e1(this,lt)},Yt.a.prototype.lessEqual=function(lt){return this.throwIfDisposed(),mo(this,lt)},Yt.a.prototype.lessStrict=function(lt){return this.throwIfDisposed(),t1(this,lt)},Yt.a.prototype.less=function(lt){return this.throwIfDisposed(),En(this,lt)};const h1=Object(xt.a)({localResponseNormalization_:function(lt,ct=5,dt=1,mt=1,St=.5){const $t=Object(wt.a)(lt,"x","localResponseNormalization");it.b($t.rank===4||$t.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${$t.rank}.`),it.b(it.v(ct),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${ct}.`);let Dt=$t,Mt=!1;$t.rank===3&&(Mt=!0,Dt=bn($t,[1,$t.shape[0],$t.shape[1],$t.shape[2]]));const Xt={x:Dt},en={depthRadius:ct,bias:dt,alpha:mt,beta:St},pn=$.a.runKernelFunc((vn,Cn)=>{const Nn=vn.localResponseNormalization4D(Dt,ct,dt,mt,St);return Cn([Dt,Nn]),Nn},Xt,null,Wt.ob,en);return Mt?bn(pn,[pn.shape[1],pn.shape[2],pn.shape[3]]):pn}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.localResponseNormalization=function(lt,ct,dt,mt){return this.throwIfDisposed(),h1(this,lt,ct,dt,mt)};const Kp=Object(xt.a)({softplus_:function(lt){const ct=Object(wt.a)(lt,"x","softplus"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>{const $t=mt.softplus(ct);return St([ct]),$t},dt,null,Wt.sc)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d1=Object(xt.a)({logSigmoid_:function(lt){const ct=Object(wt.a)(lt,"x","logSigmoid");return Qo(dt=>({value:jr(Kp(jr(dt))),gradFunc:mt=>zn(mt,Rp(jr(dt)))}))(ct)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.logSigmoid=function(){return this.throwIfDisposed(),d1(this)};const p1=Object(xt.a)({logSoftmax_:function(lt,ct=-1){const dt=Object(wt.a)(lt,"logits","logSoftmax");if(ct===-1&&(ct=dt.rank-1),ct!==dt.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${dt.rank} and axis was ${ct}`);const mt={logits:dt},St={axis:ct};return $.a.runKernelFunc(($t,Dt)=>{const Mt=zs(lt,ct,!0),Xt=dr(lt,Mt),en=dr(At(Xt,"float32"),so(lr(Is(Xt),ct,!0)));return Dt([en]),en},mt,null,Wt.ub,St)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.logSoftmax=function(lt){return this.throwIfDisposed(),p1(this,lt)},Yt.a.prototype.logSumExp=function(lt,ct){return this.throwIfDisposed(),_u(this,lt,ct)},Yt.a.prototype.log=function(){return this.throwIfDisposed(),so(this)},Yt.a.prototype.log1p=function(){return this.throwIfDisposed(),vo(this)},Yt.a.prototype.logicalAnd=function(lt){return this.throwIfDisposed(),go(this,lt)},Yt.a.prototype.logicalNot=function(){return this.throwIfDisposed(),Op(this)};const Xp=Object(xt.a)({logicalOr_:function(lt,ct){const dt=Object(wt.a)(lt,"a","logicalOr","bool"),mt=Object(wt.a)(ct,"b","logicalOr","bool");kr(dt.shape,mt.shape);const St={a:dt,b:mt};return $.a.runKernelFunc($t=>$t.logicalOr(dt,mt),St,null,Wt.xb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.logicalOr=function(lt){return this.throwIfDisposed(),Xp(this,lt)};const f1=Object(xt.a)({logicalXor_:function(lt,ct){const dt=Object(wt.a)(lt,"a","logicalXor","bool"),mt=Object(wt.a)(ct,"b","logicalXor","bool");return kr(dt.shape,mt.shape),go(Xp(lt,ct),Op(go(lt,ct)))}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.logicalXor=function(lt){return this.throwIfDisposed(),f1(this,lt)},Yt.a.prototype.matMul=function(lt,ct,dt){return this.throwIfDisposed(),Or(this,lt,ct,dt)},Yt.a.prototype.maxPool=function(lt,ct,dt,mt){return this.throwIfDisposed(),$o(this,lt,ct,dt,mt)},Yt.a.prototype.max=function(lt,ct){return this.throwIfDisposed(),zs(this,lt,ct)},Yt.a.prototype.maximumStrict=function(lt){return this.throwIfDisposed(),Im(this,lt)},Yt.a.prototype.maximum=function(lt){return this.throwIfDisposed(),Yu(this,lt)},Yt.a.prototype.mean=function(lt,ct){return this.throwIfDisposed(),uu(this,lt,ct)},Yt.a.prototype.min=function(lt,ct){return this.throwIfDisposed(),ou(this,lt,ct)},Yt.a.prototype.minimumStrict=function(lt){return this.throwIfDisposed(),Am(this,lt)},Yt.a.prototype.minimum=function(lt){return this.throwIfDisposed(),bo(this,lt)};const m1=Object(xt.a)({mirrorPad_:function(lt,ct,dt){it.b(dt==="reflect"||dt==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${dt}.`);const mt=Object(wt.a)(lt,"x","mirrorPad");if(mt.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");it.b(ct.length===mt.rank,()=>`Padding doesn't match input. Must be ${mt.rank}. Got ${ct.length}.`);const St=dt==="reflect"?1:0;for(let Mt=0;Mt<mt.rank;Mt++)it.b(ct[Mt].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),it.b(ct[Mt][0]>=0&&ct[Mt][0]<=mt.shape[Mt]-St&&ct[Mt][1]>=0&&ct[Mt][1]<=mt.shape[Mt]-St,()=>`Padding in dimension ${Mt} cannot be greater than or equal to ${mt.shape[Mt]-St} or less than 0 for input of shape `+mt.shape);const $t={paddings:ct,mode:dt},Dt={x:mt};return $.a.runKernel(Wt.Ib,Dt,$t)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.mirrorPad=function(lt,ct){return this.throwIfDisposed(),m1(this,lt,ct)},Yt.a.prototype.modStrict=function(lt){return this.throwIfDisposed(),km(this,lt)},Yt.a.prototype.mod=function(lt){return this.throwIfDisposed(),Wp(this,lt)},Yt.a.prototype.mulStrict=function(lt){return this.throwIfDisposed(),Em(this,lt)},Yt.a.prototype.mul=function(lt){return this.throwIfDisposed(),zn(this,lt)},Yt.a.prototype.neg=function(){return this.throwIfDisposed(),jr(this)},Yt.a.prototype.norm=function(lt,ct,dt){return this.throwIfDisposed(),iu(this,lt,ct,dt)},Yt.a.prototype.notEqualStrict=function(lt){return this.throwIfDisposed(),n1(this,lt)},Yt.a.prototype.notEqual=function(lt){return this.throwIfDisposed(),Zo(this,lt)},Yt.a.prototype.oneHot=function(lt,ct=1,dt=0){return this.throwIfDisposed(),Bo(this,lt,ct,dt)};const Yp=Object(xt.a)({onesLike_:function(lt){const ct=Object(wt.a)(lt,"x","onesLike"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>{if(ct.dtype==="complex64"){const $t=Yp(ko(ct)),Dt=_r(Ho(ct));return Object(Xs.a)($t,Dt)}return mt.onesLike(ct)},dt,null,Wt.Rb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.onesLike=function(){return this.throwIfDisposed(),Yp(this)},Yt.a.prototype.pad=function(lt,ct){return this.throwIfDisposed(),jp(this,lt,ct)};const g1=Object(xt.a)({pool_:function(lt,ct,dt,mt,St,$t){St==null&&(St=[1,1]),$t==null&&($t=1),mt===0&&(mt="valid");const Dt=Object(wt.a)(lt,"x","maxPool");let Mt=Dt,Xt=!1;Dt.rank===3&&(Xt=!0,Mt=bn(Dt,[1,Dt.shape[0],Dt.shape[1],Dt.shape[2]])),it.b(Hn($t,St),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${$t} and dilations '${St}'`);const en=rn(Mt.shape,ct,$t,St,mt),pn=[en.dilationHeight,en.dilationWidth];let vn;vn=mt==="same"?function(ar,gr){const wr=ar.map((Sr,Ur)=>Sr+(Sr-1)*(gr[Ur]-1)).map(Sr=>Sr-1),Ir=wr.map(Sr=>Math.floor(Sr/2)),ps=wr.map((Sr,Ur)=>Sr-Ir[Ur]);return wr.map((Sr,Ur)=>[Ir[Ur],ps[Ur]])}([en.filterHeight,en.filterWidth],pn):[[0,0],[0,0]];const Cn=pn[0]===1&&pn[1]===1,[Nn,Rn]=function(ar,gr,wr){const Ir=wr.map(Xr=>Xr[0]),ps=wr.map(Xr=>Xr[1]),Sr=ar.concat(Ir,ps),Ur=gr.map((Xr,us)=>(Xr-Sr[us]%Xr)%Xr),Lr=ps.map((Xr,us)=>Xr+Ur[us]),qs=gr.map((Xr,us)=>[Ir[us],Lr[us]]),Ws=gr.map((Xr,us)=>[0,Ur[us]]);return[qs,Ws]}([en.inHeight,en.inWidth],pn,vn),Mn=Cn?mt:"valid",qn=Cn?Mt:fu(Mt,pn,Nn),ir=(dt==="avg"?()=>Hp(qn,ct,$t,Mn):()=>$o(qn,ct,$t,Mn))(),er=Cn?ir:Pp(ir,pn,Rn);return Xt?bn(er,[er.shape[1],er.shape[2],er.shape[3]]):er}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.pool=function(lt,ct,dt,mt,St){return this.throwIfDisposed(),g1(this,lt,ct,dt,mt,St)},Yt.a.prototype.powStrict=function(lt){return this.throwIfDisposed(),Om(this,lt)},Yt.a.prototype.pow=function(lt){return this.throwIfDisposed(),Vs(this,lt)},Yt.a.prototype.prelu=function(lt){return this.throwIfDisposed(),Au(this,lt)};const y1=Object(xt.a)({prod_:function(lt,ct=null,dt=!1){let mt=Object(wt.a)(lt,"x","prod");mt.dtype==="bool"&&(mt=At(mt,"int32"));const St={x:mt},$t={axis:ct,keepDims:dt};return $.a.runKernelFunc(Dt=>{const Mt=Object(it.I)(ct,mt.shape),Xt=cs(Mt,mt.rank);let en=Mt,pn=mt;Xt!=null&&(pn=Vr(mt,Xt),en=ws(en.length,mt.rank));let vn=Dt.prod(pn,en);if(dt){const Cn=ss(vn.shape,Mt);vn=bn(vn,Cn)}return vn},St,null,Wt.Vb,$t)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.prod=function(lt,ct){return this.throwIfDisposed(),y1(this,lt,ct)};const b1=Object(xt.a)({reciprocal_:function(lt){const ct=Object(wt.a)(lt,"x","reciprocal"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>{const $t=mt.reciprocal(ct);return St([ct]),$t},dt,null,Wt.Yb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.reciprocal=function(){return this.throwIfDisposed(),b1(this)},Yt.a.prototype.relu=function(){return this.throwIfDisposed(),Jo(this)},Yt.a.prototype.relu6=function(){return this.throwIfDisposed(),ku(this)},Yt.a.prototype.reshapeAs=function(lt){return this.throwIfDisposed(),bn(this,lt.shape)},Yt.a.prototype.reshape=function(lt){return this.throwIfDisposed(),bn(this,lt)},Yt.a.prototype.resizeBilinear=function(lt,ct){return this.throwIfDisposed(),$l(this,lt,ct)},Yt.a.prototype.resizeNearestNeighbor=function(lt,ct){return this.throwIfDisposed(),_l(this,lt,ct)},Yt.a.prototype.reverse=function(lt){return this.throwIfDisposed(),Xo(this,lt)},Yt.a.prototype.rfft=function(){return this.throwIfDisposed(),bu(this)};const v1=Object(xt.a)({round_:function(lt){const ct=Object(wt.a)(lt,"x","round"),dt={x:ct};return $.a.runKernelFunc(mt=>mt.round(ct),dt,null,Wt.ic)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.round=function(){return this.throwIfDisposed(),v1(this)},Yt.a.prototype.rsqrt=function(){return this.throwIfDisposed(),gt(this)};const x1=Object(xt.a)({selu_:function(lt){const ct=Object(wt.a)(lt,"x","selu"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>{const $t=mt.selu(ct);return St([ct]),$t},dt,null,Wt.lc)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.selu=function(){return this.throwIfDisposed(),x1(this)},Yt.a.prototype.separableConv2d=function(lt,ct,dt,mt,St,$t){return this.throwIfDisposed(),Go(this,lt,ct,dt,mt,St,$t)},Yt.a.prototype.sigmoid=function(){return this.throwIfDisposed(),Rp(this)};const w1=Object(xt.a)({sign_:function(lt){const ct=Object(wt.a)(lt,"x","sign"),dt={x:ct};return $.a.runKernelFunc(mt=>mt.sign(ct),dt,null,Wt.nc)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.sign=function(){return this.throwIfDisposed(),w1(this)},Yt.a.prototype.sin=function(){return this.throwIfDisposed(),Gu(this)},Yt.a.prototype.sinh=function(){return this.throwIfDisposed(),qu(this)},Yt.a.prototype.slice=function(lt,ct){return this.throwIfDisposed(),Dr(this,lt,ct)},Yt.a.prototype.softmax=function(lt){return this.throwIfDisposed(),qo(this,lt)},Yt.a.prototype.softplus=function(){return this.throwIfDisposed(),Kp(this)},Yt.a.prototype.spaceToBatchND=function(lt,ct){return this.throwIfDisposed(),fu(this,lt,ct)},Yt.a.prototype.split=function(lt,ct){return this.throwIfDisposed(),Ys(this,lt,ct)},Yt.a.prototype.sqrt=function(){return this.throwIfDisposed(),Fs(this)},Yt.a.prototype.square=function(){return this.throwIfDisposed(),Hr(this)},Yt.a.prototype.squaredDifference=function(lt){return this.throwIfDisposed(),_i(this,lt)},Yt.a.prototype.squaredDifferenceStrict=function(lt){return this.throwIfDisposed(),Dm(this,lt)},Yt.a.prototype.squeeze=function(lt){return this.throwIfDisposed(),Io(this,lt)},Yt.a.prototype.stack=function(lt,ct){this.throwIfDisposed();const dt=lt instanceof Yt.a?[this,lt]:[this,...lt];return ro(dt,ct)},Yt.a.prototype.step=function(lt){return this.throwIfDisposed(),oo(this,lt)};const S1=Object(xt.a)({stridedSlice_:function(lt,ct,dt,mt,St=0,$t=0,Dt=0,Mt=0,Xt=0){let en=Object(wt.a)(lt,"x","stridedSlice");const pn={x:en},vn={begin:ct,end:dt,strides:mt,beginMask:St,endMask:$t,ellipsisMask:Dt,newAxisMask:Mt,shrinkAxisMask:Xt};return $.a.runKernelFunc(Cn=>{mt==null&&(mt=new Array(ct.length));const Nn=gs(Dt);if(Nn.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(Dt!==0&&Mt!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(Dt!==0&&Xt!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const Rn=en.rank-ct.length,Mn=gs(Mt),qn=en.shape.slice();Mn.forEach(Sr=>{ct[Sr]=0,dt[Sr]=1,qn.splice(Sr,0,1)}),en=bn(en,qn);const{begin:ir,end:er,strides:ar}=Ls(en.shape,Nn,Rn,ct,dt,mt,St,$t,Dt);ct=ir,dt=er,mt=ar;const gr=gs(Xt);gr.forEach(Sr=>{dt[Sr]=ct[Sr]+1,mt[Sr]=1});const wr=ys(ct,dt,mt),Ir=wr.filter((Sr,Ur)=>gr.indexOf(Ur)===-1);if(mt.every(Sr=>Sr===1))return bn(Dr(en,ct,wr),Ir);const ps=Cn.stridedSlice(en,ct,dt,mt);return bn(ps,Ir)},pn,null,Wt.zc,vn)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.stridedSlice=function(lt,ct,dt,mt,St,$t,Dt,Mt){return this.throwIfDisposed(),S1(this,lt,ct,dt,mt,St,$t,Dt,Mt)},Yt.a.prototype.subStrict=function(lt){return this.throwIfDisposed(),Rm(this,lt)},Yt.a.prototype.sub=function(lt){return this.throwIfDisposed(),dr(this,lt)},Yt.a.prototype.sum=function(lt,ct){return this.throwIfDisposed(),lr(this,lt,ct)};const C1=Object(xt.a)({tan_:function(lt){const ct=Object(wt.a)(lt,"x","tan"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>{const $t=mt.tan(ct);return St([ct]),$t},dt,null,Wt.Cc)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.tan=function(){return this.throwIfDisposed(),C1(this)};const T1=Object(xt.a)({tanh_:function(lt){const ct=Object(wt.a)(lt,"x","tanh"),dt={x:ct};return $.a.runKernelFunc((mt,St)=>{const $t=mt.tanh(ct);return St([$t]),$t},dt,null,Wt.Dc)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.tanh=function(){return this.throwIfDisposed(),T1(this)},Yt.a.prototype.tile=function(lt){return this.throwIfDisposed(),Qs(this,lt)},Yt.a.prototype.toBool=function(){return this.throwIfDisposed(),At(this,"bool")},Yt.a.prototype.toFloat=function(){return this.throwIfDisposed(),At(this,"float32")},Yt.a.prototype.toInt=function(){return this.throwIfDisposed(),At(this,"int32")};const N1=Object(xt.a)({topk_:function(lt,ct=1,dt=!0){const mt=Object(wt.a)(lt,"x","topk");if(mt.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const St=mt.shape[mt.shape.length-1];if(ct>St)throw new Error(`'k' passed to topk() must be <= the last dimension (${St}) but got `+ct);const $t={x:mt},Dt={k:ct,sorted:dt},[Mt,Xt]=$.a.runKernelFunc(en=>en.topk(mt,ct,dt),$t,null,Wt.Fc,Dt);return{values:Mt,indices:Xt}}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.topk=function(lt,ct){return this.throwIfDisposed(),N1(this,lt,ct)},Yt.a.prototype.transpose=function(lt){return this.throwIfDisposed(),Vr(this,lt)};const $1=Object(xt.a)({unique_:function(lt,ct=0){const dt=Object(wt.a)(lt,"x","unique",null);Object(it.b)(dt.rank>0,()=>"The input tensor must be at least 1D");const mt={x:dt},St={axis:ct},[$t,Dt]=$.a.runKernel(Wt.Hc,mt,St);return{values:$t,indices:Dt}}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yt.a.prototype.unique=function(lt){return this.throwIfDisposed(),$1(this,lt)},Yt.a.prototype.unsortedSegmentSum=function(lt,ct){return this.throwIfDisposed(),Nt(this,lt,ct)},Yt.a.prototype.unstack=function(lt){return this.throwIfDisposed(),su(this,lt)},Yt.a.prototype.where=function(lt,ct){return this.throwIfDisposed(),Ss(lt,this,ct)},Yt.a.prototype.zerosLike=function(){return this.throwIfDisposed(),_r(this)}},function(i,s,o){o.d(s,"a",function(){return a}),o.d(s,"b",function(){return c}),o.d(s,"c",function(){return d}),o.d(s,"d",function(){return g}),o.d(s,"e",function(){return b}),o.d(s,"f",function(){return $}),o.d(s,"g",function(){return _}),o.d(s,"h",function(){return _e}),o.d(s,"i",function(){return et}),o.d(s,"j",function(){return rt}),o.d(s,"k",function(){return tt}),o.d(s,"l",function(){return j}),o.d(s,"n",function(){return nt}),o.d(s,"m",function(){return st}),o.d(s,"o",function(){return ot}),o.d(s,"r",function(){return ut}),o.d(s,"p",function(){return ht}),o.d(s,"q",function(){return pt}),o.d(s,"s",function(){return it}),o.d(s,"t",function(){return yt}),o.d(s,"u",function(){return ft}),o.d(s,"v",function(){return bt}),o.d(s,"w",function(){return Tt}),o.d(s,"x",function(){return Ct}),o.d(s,"y",function(){return _t}),o.d(s,"z",function(){return Ot}),o.d(s,"A",function(){return kt}),o.d(s,"B",function(){return Rt}),o.d(s,"C",function(){return jt}),o.d(s,"D",function(){return Gt}),o.d(s,"E",function(){return Bt}),o.d(s,"F",function(){return zt}),o.d(s,"G",function(){return Ut}),o.d(s,"H",function(){return Qt}),o.d(s,"J",function(){return tn}),o.d(s,"I",function(){return sn}),o.d(s,"K",function(){return ln}),o.d(s,"L",function(){return an}),o.d(s,"M",function(){return Yt}),o.d(s,"N",function(){return cn}),o.d(s,"O",function(){return Wt}),o.d(s,"Q",function(){return wt}),o.d(s,"P",function(){return xt}),o.d(s,"R",function(){return At}),o.d(s,"S",function(){return qt}),o.d(s,"T",function(){return Pt}),o.d(s,"V",function(){return Zt}),o.d(s,"U",function(){return nn}),o.d(s,"W",function(){return dn}),o.d(s,"X",function(){return wn}),o.d(s,"Y",function(){return kn}),o.d(s,"Z",function(){return Pn}),o.d(s,"ab",function(){return On}),o.d(s,"bb",function(){return Bn}),o.d(s,"cb",function(){return Zn}),o.d(s,"eb",function(){return jn}),o.d(s,"fb",function(){return tr}),o.d(s,"gb",function(){return Un}),o.d(s,"hb",function(){return or}),o.d(s,"jb",function(){return Cr}),o.d(s,"ib",function(){return Rr}),o.d(s,"kb",function(){return Er}),o.d(s,"lb",function(){return zr}),o.d(s,"mb",function(){return bs}),o.d(s,"nb",function(){return ms}),o.d(s,"qb",function(){return gs}),o.d(s,"rb",function(){return ys}),o.d(s,"sb",function(){return $s}),o.d(s,"tb",function(){return ls}),o.d(s,"vb",function(){return Yr}),o.d(s,"wb",function(){return Ls}),o.d(s,"xb",function(){return Jr}),o.d(s,"ub",function(){return vs}),o.d(s,"ob",function(){return Os}),o.d(s,"pb",function(){return Pr}),o.d(s,"yb",function(){return Nr}),o.d(s,"Eb",function(){return Ds}),o.d(s,"zb",function(){return ns}),o.d(s,"Cb",function(){return Rs}),o.d(s,"Ab",function(){return xs}),o.d(s,"Bb",function(){return $n}),o.d(s,"Db",function(){return Tn}),o.d(s,"Fb",function(){return Dn}),o.d(s,"Gb",function(){return bn}),o.d(s,"Hb",function(){return Gn}),o.d(s,"Ib",function(){return Jn}),o.d(s,"Jb",function(){return rr}),o.d(s,"Kb",function(){return hr}),o.d(s,"Lb",function(){return Gr}),o.d(s,"Pb",function(){return Ar}),o.d(s,"Mb",function(){return Kt}),o.d(s,"Nb",function(){return rn}),o.d(s,"Ob",function(){return hn}),o.d(s,"Rb",function(){return xn}),o.d(s,"Qb",function(){return An}),o.d(s,"Sb",function(){return Fn}),o.d(s,"Tb",function(){return Wn}),o.d(s,"Ub",function(){return Qn}),o.d(s,"Vb",function(){return pr}),o.d(s,"Wb",function(){return nr}),o.d(s,"Xb",function(){return Yn}),o.d(s,"Yb",function(){return Hn}),o.d(s,"Zb",function(){return $r}),o.d(s,"bc",function(){return Fr}),o.d(s,"ec",function(){return rs}),o.d(s,"fc",function(){return Lo}),o.d(s,"cc",function(){return zo}),o.d(s,"dc",function(){return ss}),o.d(s,"ac",function(){return Wr}),o.d(s,"gc",function(){return cs}),o.d(s,"ic",function(){return hs}),o.d(s,"jc",function(){return ws}),o.d(s,"kc",function(){return Vr}),o.d(s,"lc",function(){return No}),o.d(s,"qc",function(){return ho}),o.d(s,"oc",function(){return Vo}),o.d(s,"pc",function(){return yr}),o.d(s,"nc",function(){return Or}),o.d(s,"mc",function(){return zs}),o.d(s,"sc",function(){return $o}),o.d(s,"vc",function(){return zn}),o.d(s,"Bc",function(){return Bo}),o.d(s,"tc",function(){return Vs}),o.d(s,"uc",function(){return jo}),o.d(s,"rc",function(){return eu}),o.d(s,"xc",function(){return Uo}),o.d(s,"wc",function(){return po}),o.d(s,"Ac",function(){return Ks}),o.d(s,"zc",function(){return Xs}),o.d(s,"Cc",function(){return _s}),o.d(s,"Dc",function(){return _o}),o.d(s,"Ec",function(){return cr}),o.d(s,"Fc",function(){return Go}),o.d(s,"Gc",function(){return qo}),o.d(s,"Hc",function(){return Wo}),o.d(s,"Ic",function(){return Ys}),o.d(s,"Jc",function(){return Io}),o.d(s,"Kc",function(){return dr}),o.d(s,"yc",function(){return Qs}),o.d(s,"db",function(){return Ao}),o.d(s,"hc",function(){return tu});const a="Abs",c="Acos",d="Acosh",g="Add",b="AddN",$="All",_="Any",_e="ArgMax",et="ArgMin",rt="Asin",tt="Asinh",j="Atan",nt="Atanh",st="Atan2",ot="AvgPool",ut="AvgPoolBackprop",ht="AvgPool3D",pt="AvgPool3DBackprop",it="BatchMatMul",yt="BatchToSpaceND",ft="BroadcastTo",bt="Cast",Tt="Ceil",Ct="ClipByValue",_t="Complex",Ot="Concat",kt="Conv2D",Rt="Conv2DBackpropFilter",jt="Conv2DBackpropInput",Gt="Conv3D",Bt="Conv3DBackpropFilterV2",zt="Conv3DBackpropInputV2",Ut="Cos",Qt="Cosh",tn="Cumsum",sn="CropAndResize",ln="DepthToSpace",an="DepthwiseConv2dNative",Yt="DepthwiseConv2dNativeBackpropFilter",cn="DepthwiseConv2dNativeBackpropInput",Wt="Dilation2D",wt="Dilation2DBackpropInput",xt="Dilation2DBackpropFilter",At="Div",qt="Elu",Pt="EluGrad",Zt="Erf",nn="Equal",dn="Exp",wn="Expm1",kn="FFT",Pn="Fill",On="FlipLeftRight",Bn="Floor",Zn="FloorDiv",jn="FusedBatchNorm",tr="GatherV2",Un="Greater",or="GreaterEqual",Cr="Identity",Rr="IFFT",Er="Imag",zr="IsFinite",bs="IsInf",ms="IsNan",gs="Less",ys="LessEqual",$s="Log",ls="Log1p",Yr="LogicalAnd",Ls="LogicalNot",Jr="LogicalOr",vs="LogSoftmax",Os="LRN",Pr="LRNBackprop",Nr="Max",Ds="Maximum",ns="MaxPool",Rs="MaxPoolBackprop",xs="MaxPool3D",$n="MaxPool3DBackprop",Tn="MaxPoolWithArgmax",Dn="Mean",bn="Min",Gn="Minimum",Jn="MirrorPad",rr="Mod",hr="Multiply",Gr="Negate",Ar="NotEqual",Kt="NonMaxSuppressionV3",rn="NonMaxSuppressionV4",hn="NonMaxSuppressionV5",xn="OnesLike",An="OneHot",Fn="PadV2",Wn="Pow",Qn="Prelu",pr="Prod",nr="Range",Yn="Real",Hn="Reciprocal",$r="Relu",Fr="Reshape",rs="ResizeNearestNeighbor",Lo="ResizeNearestNeighborGrad",zo="ResizeBilinear",ss="ResizeBilinearGrad",Wr="Relu6",cs="Reverse",hs="Round",ws="Rsqrt",Vr="SelectV2",No="Selu",ho="Slice",Vo="Sin",yr="Sinh",Or="Sign",zs="Sigmoid",$o="Softplus",zn="Sqrt",Bo="Sum",Vs="SpaceToBatchND",jo="SplitV",eu="Softmax",Uo="SquaredDifference",po="Square",Ks="Sub",Xs="StridedSlice",_s="Tan",_o="Tanh",cr="Tile",Go="TopK",qo="Transpose",Wo="Unique",Ys="Unpack",Io="UnsortedSegmentSum",dr="ZerosLike",Qs="Step",Ao="FromPixels",tu="RotateWithOffset"},function(i,s){i.exports=__WEBPACK_EXTERNAL_MODULE__2__},function(i,s,o){o.d(s,"c",function(){return $}),o.d(s,"a",function(){return _e}),o.d(s,"b",function(){return et});var a=o(6),c=o(11),d=o(5),g=o(16),b=o(7);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $(rt,tt){let j=rt;if(Object(g.A)(rt))return tt==="string"?[]:[rt.length];if(!Array.isArray(rt))return[];const nt=[];for(;Array.isArray(j)||Object(g.A)(j)&&tt!=="string";)nt.push(j.length),j=j[0];return Array.isArray(rt)&&Object(c.b)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function st(ot,ut,ht){if(ht=ht||[],!Array.isArray(ot)&&!Object(g.A)(ot))return void Object(g.b)(ut.length===0,()=>`Element arr[${ht.join("][")}] is a primitive, but should be an array/TypedArray of ${ut[0]} elements`);Object(g.b)(ut.length>0,()=>`Element arr[${ht.join("][")}] should be a primitive, but is an array of ${ot.length} elements`),Object(g.b)(ot.length===ut[0],()=>`Element arr[${ht.join("][")}] should have ${ut[0]} elements, but has ${ot.length} elements`);const pt=ut.slice(1);for(let it=0;it<ot.length;++it)st(ot[it],pt,ht.concat(it))}(rt,nt,[]),nt}function _(rt,tt,j,nt){if(rt!=null&&(rt!=="numeric"&&rt!==tt||rt==="numeric"&&tt==="string"))throw new Error(`Argument '${j}' passed to '${nt}' must be ${rt} tensor, but got ${tt} tensor`)}function _e(rt,tt,j,nt="numeric"){if(rt instanceof d.a)return _(nt,rt.dtype,tt,j),rt;let st=Object(g.r)(rt);if(st!=="string"&&["bool","int32","float32"].indexOf(nt)>=0&&(st=nt),_(nt,st,tt,j),rt==null||!Object(g.A)(rt)&&!Array.isArray(rt)&&typeof rt!="number"&&typeof rt!="boolean"&&typeof rt!="string"){const ht=rt==null?"null":rt.constructor.name;throw new Error(`Argument '${tt}' passed to '${j}' must be a Tensor or TensorLike, but got '${ht}'`)}const ot=$(rt,st);Object(g.A)(rt)||Array.isArray(rt)||(rt=[rt]);const ut=st!=="string"?Object(b.toTypedArray)(rt,st):Object(g.m)(rt,[],!0);return a.a.makeTensor(ut,ot,st)}function et(rt,tt,j,nt="numeric"){if(!Array.isArray(rt))throw new Error(`Argument ${tt} passed to ${j} must be a \`Tensor[]\` or \`TensorLike[]\``);return rt.map((st,ot)=>_e(st,`${tt}[${ot}]`,j),nt)}},function(i,s,o){o.d(s,"a",function(){return d});var a=o(6),c=o(16);function d(g){const b=Object.keys(g);if(b.length!==1)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+b.length+" keys.");let $=b[0];const _=g[$];$.endsWith("_")&&($=$.substring(0,$.length-1)),$+="__op";const _e=(...et)=>{a.a.startScope($);try{const rt=_(...et);return Object(c.x)(rt)&&console.error("Cannot return a Promise inside of tidy."),a.a.endScope(rt),rt}catch(rt){throw a.a.endScope(null),rt}};return Object.defineProperty(_e,"name",{value:$,configurable:!0}),_e}},function(i,s,o){o.d(s,"b",function(){return _}),o.d(s,"f",function(){return rt}),o.d(s,"e",function(){return tt}),o.d(s,"d",function(){return j}),o.d(s,"a",function(){return nt}),o.d(s,"c",function(){return st});var a=o(16);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c(ot,ut,ht,pt){const it=Object(a.j)(ut),yt=function(Ct,_t,Ot,kt){const Rt=Object(a.N)(_t),jt=kt[kt.length-1],Gt=new Array(jt).fill(0),Bt=_t.length,zt=Ot==="complex64"?b(Ct):Ct;if(Bt>1)for(let Ut=0;Ut<Rt/jt;Ut++){const Qt=Ut*jt;for(let tn=0;tn<jt;tn++)Gt[tn]=Math.max(Gt[tn],d(zt[Qt+tn],0,Ot).length)}return Gt}(ot,ut,ht,it),ft=ut.length,bt=function Ct(_t,Ot,kt,Rt,jt,Gt=!0){const Bt=kt==="complex64"?2:1,zt=Ot[0],Ut=Ot.length;if(Ut===0)return kt==="complex64"?[d(b(_t)[0],0,kt)]:kt==="bool"?[g(_t[0])]:[_t[0].toString()];if(Ut===1){if(zt>20){const cn=3*Bt;let Wt=Array.from(_t.slice(0,cn)),wt=Array.from(_t.slice((zt-3)*Bt,zt*Bt));return kt==="complex64"&&(Wt=b(Wt),wt=b(wt)),["["+Wt.map((xt,At)=>d(xt,jt[At],kt)).join(", ")+", ..., "+wt.map((xt,At)=>d(xt,jt[zt-3+At],kt)).join(", ")+"]"]}return["["+(kt==="complex64"?b(_t):Array.from(_t)).map((cn,Wt)=>d(cn,jt[Wt],kt)).join(", ")+"]"]}const Qt=Ot.slice(1),tn=Rt.slice(1),sn=Rt[0]*Bt,ln=[];if(zt>20){for(let cn=0;cn<3;cn++){const Wt=cn*sn,wt=Wt+sn;ln.push(...Ct(_t.slice(Wt,wt),Qt,kt,tn,jt,!1))}ln.push("...");for(let cn=zt-3;cn<zt;cn++){const Wt=cn*sn,wt=Wt+sn;ln.push(...Ct(_t.slice(Wt,wt),Qt,kt,tn,jt,cn===zt-1))}}else for(let cn=0;cn<zt;cn++){const Wt=cn*sn,wt=Wt+sn;ln.push(...Ct(_t.slice(Wt,wt),Qt,kt,tn,jt,cn===zt-1))}const an=Ut===2?",":"";ln[0]="["+ln[0]+an;for(let cn=1;cn<ln.length-1;cn++)ln[cn]=" "+ln[cn]+an;let Yt=`,
`;for(let cn=2;cn<Ut;cn++)Yt+=`
`;return ln[ln.length-1]=" "+ln[ln.length-1]+"]"+(Gt?"":Yt),ln}(ot,ut,ht,it,yt),Tt=["Tensor"];return pt&&(Tt.push("  dtype: "+ht),Tt.push("  rank: "+ft),Tt.push(`  shape: [${ut}]`),Tt.push("  values:")),Tt.push(bt.map(Ct=>"    "+Ct).join(`
`)),Tt.join(`
`)}function d(ot,ut,ht){let pt;return pt=Array.isArray(ot)?parseFloat(ot[0].toFixed(7))+" + "+parseFloat(ot[1].toFixed(7))+"j":Object(a.z)(ot)?`'${ot}'`:ht==="bool"?g(ot):parseFloat(ot.toFixed(7)).toString(),Object(a.L)(pt,ut)}function g(ot){return ot===0?"false":"true"}function b(ot){const ut=[];for(let ht=0;ht<ot.length;ht+=2)ut.push([ot[ht],ot[ht+1]]);return ut}var $=o(7);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _{constructor(ut,ht,pt){if(this.dtype=ht,this.shape=ut.slice(),this.size=a.N(ut),pt!=null){const it=pt.length;a.b(it===this.size,()=>`Length of values '${it}' does not match the size inferred by the shape '${this.size}'.`)}if(ht==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=pt||a.n(ht,this.size),this.strides=Object(a.j)(ut)}set(ut,...ht){ht.length===0&&(ht=[0]),a.b(ht.length===this.rank,()=>`The number of provided coordinates (${ht.length}) must match the rank (${this.rank})`);const pt=this.locToIndex(ht);this.values[pt]=ut}get(...ut){ut.length===0&&(ut=[0]);let ht=0;for(const it of ut){if(it<0||it>=this.shape[ht]){const yt=`Requested out of range element at ${ut}.   Buffer shape=`+this.shape;throw new Error(yt)}ht++}let pt=ut[ut.length-1];for(let it=0;it<ut.length-1;++it)pt+=this.strides[it]*ut[it];return this.values[pt]}locToIndex(ut){if(this.rank===0)return 0;if(this.rank===1)return ut[0];let ht=ut[ut.length-1];for(let pt=0;pt<ut.length-1;++pt)ht+=this.strides[pt]*ut[pt];return ht}indexToLoc(ut){if(this.rank===0)return[];if(this.rank===1)return[ut];const ht=new Array(this.shape.length);for(let pt=0;pt<ht.length-1;++pt)ht[pt]=Math.floor(ut/this.strides[pt]),ut-=ht[pt]*this.strides[pt];return ht[ht.length-1]=ut,ht}get rank(){return this.shape.length}toTensor(){return _e().makeTensor(this.values,this.shape,this.dtype)}}let _e=null,et=null;function rt(ot){_e=ot}function tt(ot){et=ot}function j(ot){}class nt{constructor(ut,ht,pt,it){this.kept=!1,this.isDisposedInternal=!1,this.shape=ut.slice(),this.dtype=ht||"float32",this.size=a.N(ut),this.strides=Object(a.j)(ut),this.dataId=pt,this.id=it,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const ut=await this.data();return et.buffer(this.shape,this.dtype,ut)}bufferSync(){return et.buffer(this.shape,this.dtype,this.dataSync())}async array(){const ut=await this.data();return Object(a.S)(this.shape,ut)}arraySync(){return Object(a.S)(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const ut=_e().read(this.dataId);if(this.dtype==="string"){const ht=await ut;try{return ht.map(pt=>$.decodeString(pt))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return ut}dataSync(){this.throwIfDisposed();const ut=_e().readSync(this.dataId);if(this.dtype==="string")try{return ut.map(ht=>$.decodeString(ht))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return ut}async bytes(){this.throwIfDisposed();const ut=await _e().read(this.dataId);return this.dtype==="string"?ut:new Uint8Array(ut.buffer)}dispose(){this.isDisposed||(_e().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(ut=!1){return et.print(this,ut)}clone(){return this.throwIfDisposed(),et.clone(this)}toString(ut=!1){return c(this.dataSync(),this.shape,this.dtype,ut)}cast(ut){return this.throwIfDisposed(),et.cast(this,ut)}variable(ut=!0,ht,pt){return this.throwIfDisposed(),_e().makeVariable(this,ut,ht,pt)}}Object.defineProperty(nt,Symbol.hasInstance,{value:ot=>!!ot&&ot.data!=null&&ot.dataSync!=null&&ot.throwIfDisposed!=null});class st extends nt{constructor(ut,ht,pt,it){super(ut.shape,ut.dtype,ut.dataId,it),this.trainable=ht,this.name=pt}assign(ut){if(ut.dtype!==this.dtype)throw new Error(`dtype of the new value (${ut.dtype}) and previous value (${this.dtype}) must match`);if(!a.a(ut.shape,this.shape))throw new Error(`shape of the new value (${ut.shape}) and previous value (${this.shape}) must match`);_e().disposeTensor(this),this.dataId=ut.dataId,_e().incRef(this,null)}dispose(){_e().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(st,Symbol.hasInstance,{value:ot=>ot instanceof nt&&ot.assign!=null&&ot.assign instanceof Function})},function(i,s,o){o.d(s,"b",function(){return ot}),o.d(s,"a",function(){return ut});var a=o(39),c=o(11),d=o(40),g=o(1),b=o(26),$=o(16);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _{constructor(it,yt){this.backendTimer=it,this.logger=yt,yt==null&&(this.logger=new et)}profileKernel(it,yt,ft){let bt;const Tt=this.backendTimer.time(()=>{bt=ft()});for(let Ct=0;Ct<bt.length;Ct++){const _t=bt[Ct];_t.data().then(Ot=>{_e(Ot,_t.dtype,it)})}return{kernelName:it,outputs:bt,inputs:yt,timeMs:Tt.then(Ct=>Ct.kernelMs),extraInfo:Tt.then(Ct=>Ct.getExtraProfileInfo!=null?Ct.getExtraProfileInfo():"")}}logKernelProfile(it){const{kernelName:yt,outputs:ft,timeMs:bt,inputs:Tt,extraInfo:Ct}=it;ft.forEach(_t=>{Promise.all([_t.data(),bt,Ct]).then(Ot=>{this.logger.logKernelProfile(yt,_t,Ot[0],Ot[1],Tt,Ot[2])})})}}function _e(pt,it,yt){if(it!=="float32")return!1;for(let ft=0;ft<pt.length;ft++){const bt=pt[ft];if(isNaN(bt)||!isFinite(bt))return console.warn(`Found ${bt} in the result of '${yt}'`),!0}return!1}class et{logKernelProfile(it,yt,ft,bt,Tt,Ct){const _t=typeof bt=="number"?$.L(bt+"ms",9):bt.error,Ot=$.L(it,25),kt=yt.rank,Rt=yt.size,jt=$.L(yt.shape.toString(),14);let Gt="";for(const Bt in Tt){const zt=Tt[Bt];if(zt!=null){const Ut=zt.shape||yt.shape,Qt=Ut.length;Gt+=`${Bt}: ${Qt}D ${Qt>0?Ut:""} `}}console.log(`%c${Ot}	%c${_t}	%c${kt}D ${jt}	%c${Rt}	%c${Gt}	%c${Ct}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var rt=o(5),tt=o(14),j=o(7);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nt{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const it in this.registeredVariables)this.registeredVariables[it].dispose()}}class st{constructor(it){this.ENV=it,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new nt}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const it=this.getSortedBackends();for(let yt=0;yt<it.length;yt++){const ft=it[yt];if(await this.initializeBackend(ft).success)return void await this.setBackend(ft)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:it,asyncInit:yt}=this.initializeBackendsAndReturnBest();if(yt)throw new Error(`The highest priority backend '${it}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(it)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(it){if(!(it in this.registry)){if(!(it in this.registryFactory))return null;{const{asyncInit:yt}=this.initializeBackend(it);if(yt)return null}}return this.registry[it]}findBackendFactory(it){return it in this.registryFactory?this.registryFactory[it].factory:null}registerBackend(it,yt,ft=1){return it in this.registryFactory?(console.warn(it+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[it]={factory:yt,priority:ft},!0)}async setBackend(it){if(this.registryFactory[it]==null)throw new Error(`Backend name '${it}' not found in registry`);if(this.backendName=it,this.registry[it]==null){this.backendInstance=null;const{success:yt,asyncInit:ft}=this.initializeBackend(it);if(!(ft?await yt:yt))return!1}return this.backendInstance=this.registry[it],this.setupRegisteredKernels(),this.profiler=new _(this.backendInstance),!0}setupRegisteredKernels(){Object(b.c)(this.backendName).forEach(it=>{it.setupFunc!=null&&it.setupFunc(this.backendInstance)})}disposeRegisteredKernels(it){Object(b.c)(it).forEach(yt=>{yt.disposeFunc!=null&&yt.disposeFunc(this.registry[it])})}initializeBackend(it){const yt=this.registryFactory[it];if(yt==null)throw new Error(`Cannot initialize backend ${it}, no registration found.`);try{const ft=yt.factory();if(!ft||ft instanceof a.b||typeof ft.then!="function")return this.registry[it]=ft,{success:!0,asyncInit:!1};{const bt=++this.pendingBackendInitId,Tt=ft.then(Ct=>!(bt<this.pendingBackendInitId)&&(this.registry[it]=Ct,this.pendingBackendInit=null,!0)).catch(Ct=>(bt<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${it} failed`),console.warn(Ct.stack||Ct.message)),!1));return this.pendingBackendInit=Tt,{success:Tt,asyncInit:!0}}}catch(ft){return console.warn(`Initialization of backend ${it} failed`),console.warn(ft.stack||ft.message),{success:!1,asyncInit:!1}}}removeBackend(it){if(!(it in this.registryFactory))throw new Error(it+" backend not found in registry");this.backendName===it&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,it in this.registry&&(this.disposeRegisteredKernels(it),this.registry[it].dispose(),delete this.registry[it]),delete this.registryFactory[it],this.backendName===it&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((it,yt)=>this.registryFactory[yt].priority-this.registryFactory[it].priority)}initializeBackendsAndReturnBest(){const it=this.getSortedBackends();for(let yt=0;yt<it.length;yt++){const ft=it[yt],{success:bt,asyncInit:Tt}=this.initializeBackend(ft);if(Tt||bt)return{name:ft,asyncInit:Tt}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(it,yt){const ft=this.state.tensorInfo.get(yt),bt=ft.backend,Tt=this.readSync(yt);bt.disposeData(yt),ft.backend=it,it.move(yt,Tt,ft.shape,ft.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(it,yt){let ft,bt=null;if(yt==null){if(typeof it!="function")throw new Error("Please provide a function to tidy()");yt=it}else{if(typeof it!="string"&&!(it instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof yt!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");bt=it}return this.scopedRun(()=>this.startScope(bt),()=>this.endScope(ft),()=>(ft=yt(),ft instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),ft))}scopedRun(it,yt,ft){it();try{const bt=ft();return yt(),bt}catch(bt){throw yt(),bt}}nextTensorId(){return st.nextTensorId++}nextVariableId(){return st.nextVariableId++}clone(it){const yt=this.makeTensorFromDataId(it.dataId,it.shape,it.dtype),ft={x:it};return this.addTapeNode(this.state.activeScope.name,ft,[yt],bt=>({x:()=>{const Tt={x:bt},Ct={dtype:"float32"};return ut.runKernelFunc(_t=>_t.cast(bt,"float32"),Tt,null,g.v,Ct)}}),[],{}),yt}runKernel(it,yt,ft,bt,Tt){return this.runKernelFunc(null,yt,null,it,ft,bt,Tt)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(it,yt,ft){const bt=this.backend.numDataIds();let Tt=0;ft.forEach(Ot=>{Tt+=Ot.dtype==="complex64"?3:1});const Ct=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],_t=bt-yt-Tt-Ct;if(_t>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${_t} data ids) after running '${it}'`)}runKernelFunc(it,yt,ft,bt,Tt,Ct,_t){let Ot,kt=[];const Rt=this.isTapeOn();bt==null&&(bt=this.state.activeScope!=null?this.state.activeScope.name:"");const jt=this.state.numBytes,Gt=this.state.numTensors;let Bt;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const zt=Object(b.b)(bt,this.backendName);let Ut,Qt;if(zt!=null)Bt=()=>{const tn=this.backend.numDataIds();Ut=zt.kernelFunc({inputs:yt,attrs:Tt,backend:this.backend});const sn=Array.isArray(Ut)?Ut:[Ut];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(bt,tn,sn);const ln=sn.map(({dataId:an,shape:Yt,dtype:cn})=>this.makeTensorFromDataId(an,Yt,cn));if(Rt){let an=this.getTensorsForGradient(bt,yt,ln);if(an==null){_t==null&&(_t=[]);const Yt=ln.filter((cn,Wt)=>_t[Wt]);an=(Ct||[]).slice().concat(Yt)}kt=this.saveTensorsForBackwardMode(an)}return ln};else{const tn=sn=>{Rt&&(kt=sn.map(ln=>this.keep(this.clone(ln))))};Bt=()=>{const sn=this.backend.numDataIds();Ut=this.tidy(()=>it(this.backend,tn));const ln=Array.isArray(Ut)?Ut:[Ut];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(bt,sn,ln),ln}}return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(Qt=this.profiler.profileKernel(bt,yt,()=>Bt()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(Qt),Ot=Qt.outputs):Ot=Bt()}),Rt&&this.addTapeNode(bt,yt,Ot,ft,kt,Tt),this.state.profiling&&this.state.activeProfile.kernels.push({name:bt,bytesAdded:this.state.numBytes-jt,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-Gt,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(yt).map(tn=>yt[tn]!=null?yt[tn].shape:null),outputShapes:Ot.map(tn=>tn.shape),kernelTimeMs:Qt.timeMs,extraInfo:Qt.extraInfo}),Array.isArray(Ut)?Ot:Ot[0]}saveTensorsForBackwardMode(it){return it.map(yt=>this.keep(this.clone(yt)))}getTensorsForGradient(it,yt,ft){const bt=Object(b.a)(it);if(bt!=null){const Tt=bt.inputsToSave||[],Ct=bt.outputsToSave||[];let _t;bt.saveAllInputs?($.b(Array.isArray(yt),()=>"saveAllInputs is true, expected inputs to be an array."),_t=Object.keys(yt).map(kt=>yt[kt])):_t=Tt.map(kt=>yt[kt]);const Ot=ft.filter((kt,Rt)=>Ct[Rt]);return _t.concat(Ot)}return null}makeTensor(it,yt,ft,bt){if(it==null)throw new Error("Values passed to engine.makeTensor() are null");ft=ft||"float32",bt=bt||this.backend;let Tt=it;ft==="string"&&$.z(it[0])&&(Tt=it.map(Ot=>j.encodeString(Ot)));const Ct=bt.write(Tt,yt,ft),_t=new rt.a(yt,ft,Ct,this.nextTensorId());if(this.incRef(_t,bt),ft==="string"){const Ot=this.state.tensorInfo.get(Ct),kt=Object($.f)(Tt);this.state.numBytes+=kt-Ot.bytes,Ot.bytes=kt}return _t}makeTensorFromDataId(it,yt,ft,bt){ft=ft||"float32";const Tt=new rt.a(yt,ft,it,this.nextTensorId());return this.incRef(Tt,bt),Tt}makeVariable(it,yt=!0,ft,bt){ft=ft||this.nextVariableId().toString(),bt!=null&&bt!==it.dtype&&(it=it.cast(bt));const Tt=new rt.c(it,yt,ft,this.nextTensorId());if(this.state.registeredVariables[Tt.name]!=null)throw new Error(`Variable with name ${Tt.name} was already registered`);return this.state.registeredVariables[Tt.name]=Tt,this.incRef(Tt,this.backend),Tt}incRef(it,yt){const ft=this.state.tensorInfo.has(it.dataId)?this.state.tensorInfo.get(it.dataId).refCount:0;if(this.state.numTensors++,it.dtype==="string"&&this.state.numStringTensors++,ft===0){this.state.numDataBuffers++;let bt=0;it.dtype!=="complex64"&&it.dtype!=="string"&&(bt=it.size*$.g(it.dtype)),this.state.tensorInfo.set(it.dataId,{backend:yt||this.backend,dtype:it.dtype,shape:it.shape,bytes:bt,refCount:0}),this.state.numBytes+=bt}this.state.tensorInfo.get(it.dataId).refCount++,it instanceof rt.c||this.track(it)}disposeTensor(it){if(!this.state.tensorInfo.has(it.dataId))return;this.state.numTensors--,it.dtype==="string"&&this.state.numStringTensors--;const yt=this.state.tensorInfo.get(it.dataId);yt.refCount<=1?(it.dtype!=="complex64"&&(this.state.numBytes-=yt.bytes),this.state.numDataBuffers--,yt.backend.disposeData(it.dataId),this.state.tensorInfo.delete(it.dataId)):this.state.tensorInfo.get(it.dataId).refCount--}disposeVariables(){for(const it in this.state.registeredVariables){const yt=this.state.registeredVariables[it];this.disposeVariable(yt)}}disposeVariable(it){this.disposeTensor(it),this.state.registeredVariables[it.name]!=null&&delete this.state.registeredVariables[it.name]}memory(){const it=this.backend.memory();return it.numTensors=this.state.numTensors,it.numDataBuffers=this.state.numDataBuffers,it.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(it.unreliable=!0,it.reasons==null&&(it.reasons=[]),it.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),it}async profile(it){this.state.profiling=!0;const yt=this.state.numBytes,ft=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await it(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(bt=>bt.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-yt,this.state.activeProfile.newTensors=this.state.numTensors-ft;for(const bt of this.state.activeProfile.kernels)bt.kernelTimeMs=await bt.kernelTimeMs,bt.extraInfo=await bt.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(it,yt,ft,bt,Tt,Ct){const _t={id:this.state.nextTapeNodeId++,kernelName:it,inputs:yt,outputs:ft,saved:Tt},Ot=Object(b.a)(it);Ot!=null&&(bt=Ot.gradFunc),bt!=null&&(_t.gradient=kt=>(kt=kt.map((Rt,jt)=>{if(Rt==null){const Gt=ft[jt],Bt=$.F(Gt.size,Gt.dtype);return this.makeTensor(Bt,Gt.shape,Gt.dtype)}return Rt}),bt(kt.length>1?kt:kt[0],Tt,Ct))),this.state.activeTape.push(_t)}keep(it){return it.kept=!0,it}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(it){const yt={track:[],name:"unnamed scope",id:this.state.nextScopeId++};it&&(yt.name=it),this.state.scopeStack.push(yt),this.state.activeScope=yt}endScope(it){const yt=Object(tt.a)(it),ft=new Set(yt.map(Tt=>Tt.id));for(let Tt=0;Tt<this.state.activeScope.track.length;Tt++){const Ct=this.state.activeScope.track[Tt];Ct.kept||ft.has(Ct.id)||Ct.dispose()}const bt=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],yt.forEach(Tt=>{Tt.kept||Tt.scopeId!==bt.id||this.track(Tt)})}gradients(it,yt,ft,bt=!1){if($.b(yt.length>0,()=>"gradients() received an empty list of xs."),ft!=null&&ft.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${ft.dtype}'`);const Tt=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",it));$.b(Tt instanceof rt.a,()=>"The result y returned by f() must be a tensor.");const Ct=function(_t,Ot,kt){const Rt={},jt={};for(let Ut=0;Ut<Ot.length;Ut++)Rt[Ot[Ut].id]=!0;for(let Ut=0;Ut<_t.length;Ut++){const Qt=_t[Ut],tn=Qt.inputs;for(const sn in tn){const ln=tn[sn];let an=!1;for(let Yt=0;Yt<Ot.length;Yt++)if(Rt[ln.id]){Qt.outputs.forEach(cn=>Rt[cn.id]=!0),an=!0,jt[Qt.id]=!0;break}if(an)break}}const Gt={};Gt[kt.id]=!0;const Bt={};for(let Ut=_t.length-1;Ut>=0;Ut--){const Qt=_t[Ut],tn=Qt.inputs;for(let sn=0;sn<Qt.outputs.length;sn++)if(Gt[Qt.outputs[sn].id]){for(const ln in tn)Gt[tn[ln].id]=!0,Bt[Qt.id]=!0;break}}const zt=[];for(let Ut=0;Ut<_t.length;Ut++){const Qt=_t[Ut];if(jt[Qt.id]&&Bt[Qt.id]){const tn={};for(const ln in Qt.inputs){const an=Qt.inputs[ln];Rt[an.id]&&(tn[ln]=an)}const sn=Object.assign({},Qt);sn.inputs=tn,sn.outputs=Qt.outputs,zt.push(sn)}}return zt}(this.state.activeTape,yt,Tt);if(!bt&&Ct.length===0&&yt.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const _t={};_t[Tt.id]=ft??function(kt){const Rt=Object($.D)(Object($.N)(kt),"float32");return ut.makeTensor(Rt,kt,"float32")}(Tt.shape),function(kt,Rt,jt,Gt){for(let Bt=Rt.length-1;Bt>=0;Bt--){const zt=Rt[Bt],Ut=[];if(zt.outputs.forEach(tn=>{const sn=kt[tn.id];sn!=null?Ut.push(sn):Ut.push(null)}),zt.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${zt.kernelName}.`);const Qt=zt.gradient(Ut);for(const tn in zt.inputs){if(!(tn in Qt))throw new Error(`Cannot backprop through input ${tn}. Available gradients found: ${Object.keys(Qt)}.`);const sn=jt(()=>Qt[tn]());if(sn.dtype!=="float32")throw new Error(`Error in gradient for op ${zt.kernelName}. The gradient of input ${tn} must have 'float32' dtype, but has '${sn.dtype}'`);const ln=zt.inputs[tn];if(!$.a(sn.shape,ln.shape))throw new Error(`Error in gradient for op ${zt.kernelName}. The gradient of input '${tn}' has shape '${sn.shape}', which does not match the shape of the input '${ln.shape}'`);if(kt[ln.id]==null)kt[ln.id]=sn;else{const an=kt[ln.id];kt[ln.id]=Gt(an,sn),an.dispose()}}}}(_t,Ct,kt=>this.tidy(kt),ht);const Ot=yt.map(kt=>_t[kt.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(kt=>{for(const Rt of kt.saved)Rt.dispose()}),this.state.activeTape=null),{value:Tt,grads:Ot}})}customGrad(it){return $.b($.u(it),()=>"The f passed in customGrad(f) must be a function."),(...yt)=>{let ft;$.b(yt.every(Tt=>Tt instanceof rt.a),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const bt={};return yt.forEach((Tt,Ct)=>{bt[Ct]=Tt}),this.runKernelFunc((Tt,Ct)=>(ft=it(...yt,Ct),$.b(ft.value instanceof rt.a,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),$.b($.u(ft.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),ft.value),bt,(Tt,Ct)=>{const _t=ft.gradFunc(Tt,Ct),Ot=Array.isArray(_t)?_t:[_t];$.b(Ot.length===yt.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),$.b(Ot.every(Rt=>Rt instanceof rt.a),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const kt={};return Ot.forEach((Rt,jt)=>{kt[jt]=()=>Rt}),kt})}}readSync(it){return this.state.tensorInfo.get(it).backend.readSync(it)}read(it){return this.state.tensorInfo.get(it).backend.read(it)}async time(it){const yt=Object(j.now)(),ft=await this.backend.time(it);return ft.wallMs=Object(j.now)()-yt,ft}track(it){return this.state.activeScope!=null&&(it.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(it)),it}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new nt;for(const it in this.registry)this.disposeRegisteredKernels(it),this.registry[it].dispose(),delete this.registry[it];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function ot(){const pt=Object(d.b)();if(pt._tfengine==null){const it=new c.a(pt);pt._tfengine=new st(it)}return Object(c.c)(pt._tfengine.ENV),Object(rt.f)(()=>pt._tfengine),pt._tfengine}st.nextTensorId=0,st.nextVariableId=0;const ut=ot();function ht(pt,it){const yt={a:pt,b:it};return ut.runKernelFunc((ft,bt)=>{const Tt=ft.add(pt,it);return bt([pt,it]),Tt},yt,null,g.d)}},function(i,s,o){o.r(s),o.d(s,"createScalarValue",function(){return d}),o.d(s,"toTypedArray",function(){return g}),o.d(s,"now",function(){return b}),o.d(s,"fetch",function(){return $}),o.d(s,"encodeString",function(){return _}),o.d(s,"decodeString",function(){return _e});var a=o(11),c=o(16);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d(et,rt){return rt==="string"?_(et):g([et],rt)}function g(et,rt){if(rt==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(et)&&(et=c.m(et)),Object(a.b)().getBool("DEBUG")&&c.h(et,rt),function(tt,j){return tt instanceof Float32Array&&j==="float32"||tt instanceof Int32Array&&j==="int32"||tt instanceof Uint8Array&&j==="bool"}(et,rt))return et;if(rt==null||rt==="float32"||rt==="complex64")return new Float32Array(et);if(rt==="int32")return new Int32Array(et);if(rt==="bool"){const tt=new Uint8Array(et.length);for(let j=0;j<tt.length;++j)Math.round(et[j])!==0&&(tt[j]=1);return tt}throw new Error("Unknown data type "+rt)}function b(){return Object(a.b)().platform.now()}function $(et,rt){return Object(a.b)().platform.fetch(et,rt)}function _(et,rt="utf-8"){return rt=rt||"utf-8",Object(a.b)().platform.encode(et,rt)}function _e(et,rt="utf-8"){return rt=rt||"utf-8",Object(a.b)().platform.decode(et,rt)}o.d(s,"shuffle",function(){return c.M}),o.d(s,"clamp",function(){return c.i}),o.d(s,"nearestLargerEven",function(){return c.H}),o.d(s,"sum",function(){return c.Q}),o.d(s,"randUniform",function(){return c.J}),o.d(s,"distSquared",function(){return c.l}),o.d(s,"assert",function(){return c.b}),o.d(s,"assertShapesMatch",function(){return c.e}),o.d(s,"assertNonNull",function(){return c.d}),o.d(s,"flatten",function(){return c.m}),o.d(s,"sizeFromShape",function(){return c.N}),o.d(s,"isScalarShape",function(){return c.y}),o.d(s,"arraysEqual",function(){return c.a}),o.d(s,"isInt",function(){return c.v}),o.d(s,"tanh",function(){return c.R}),o.d(s,"sizeToSquarishShape",function(){return c.O}),o.d(s,"createShuffledIndices",function(){return c.k}),o.d(s,"rightPad",function(){return c.L}),o.d(s,"repeatedTry",function(){return c.K}),o.d(s,"inferFromImplicitShape",function(){return c.s}),o.d(s,"parseAxisParam",function(){return c.I}),o.d(s,"squeezeShape",function(){return c.P}),o.d(s,"getTypedArrayFromDType",function(){return c.o}),o.d(s,"getArrayFromDType",function(){return c.n}),o.d(s,"checkConversionForErrors",function(){return c.h}),o.d(s,"isValidDtype",function(){return c.B}),o.d(s,"hasEncodingLoss",function(){return c.p}),o.d(s,"isTypedArray",function(){return c.A}),o.d(s,"bytesPerElement",function(){return c.g}),o.d(s,"bytesFromStringArray",function(){return c.f}),o.d(s,"isString",function(){return c.z}),o.d(s,"isBoolean",function(){return c.t}),o.d(s,"isNumber",function(){return c.w}),o.d(s,"inferDtype",function(){return c.r}),o.d(s,"isFunction",function(){return c.u}),o.d(s,"nearestDivisor",function(){return c.G}),o.d(s,"computeStrides",function(){return c.j}),o.d(s,"toNestedArray",function(){return c.S}),o.d(s,"makeOnesTypedArray",function(){return c.D}),o.d(s,"makeZerosTypedArray",function(){return c.F}),o.d(s,"makeZerosNestedTypedArray",function(){return c.E}),o.d(s,"assertNonNegativeIntegerDimensions",function(){return c.c}),o.d(s,"locToIndex",function(){return c.C}),o.d(s,"indexToLoc",function(){return c.q}),o.d(s,"isPromise",function(){return c.x})},function(i,s,o){o.r(s),o.d(s,"DEFAULT_QUARTERS_PER_MINUTE",function(){return a}),o.d(s,"DEFAULT_STEPS_PER_BAR",function(){return c}),o.d(s,"DEFAULT_STEPS_PER_QUARTER",function(){return d}),o.d(s,"DEFAULT_STEPS_PER_SECOND",function(){return g}),o.d(s,"DEFAULT_VELOCITY",function(){return b}),o.d(s,"DEFAULT_PROGRAM",function(){return $}),o.d(s,"DEFAULT_TICKS_PER_QUARTER",function(){return _}),o.d(s,"DEFAULT_CHANNEL",function(){return _e}),o.d(s,"DRUM_CHANNEL",function(){return et}),o.d(s,"NON_DRUM_CHANNELS",function(){return rt}),o.d(s,"DEFAULT_DRUM_PITCH_CLASSES",function(){return tt}),o.d(s,"MIN_MIDI_VELOCITY",function(){return j}),o.d(s,"MAX_MIDI_VELOCITY",function(){return nt}),o.d(s,"MIDI_VELOCITIES",function(){return st}),o.d(s,"NO_CHORD",function(){return ot}),o.d(s,"NUM_PITCH_CLASSES",function(){return ut}),o.d(s,"MIN_MIDI_PITCH",function(){return ht}),o.d(s,"MAX_MIDI_PITCH",function(){return pt}),o.d(s,"MIDI_PITCHES",function(){return it}),o.d(s,"MIN_PIANO_PITCH",function(){return yt}),o.d(s,"MAX_PIANO_PITCH",function(){return ft}),o.d(s,"MIN_DRUM_PITCH",function(){return bt}),o.d(s,"MAX_DRUM_PITCH",function(){return Tt}),o.d(s,"MIN_MIDI_PROGRAM",function(){return Ct}),o.d(s,"MAX_MIDI_PROGRAM",function(){return _t}),o.d(s,"LO_CLICK_PITCH",function(){return Ot}),o.d(s,"HI_CLICK_PITCH",function(){return kt}),o.d(s,"LO_CLICK_CLASS",function(){return Rt}),o.d(s,"HI_CLICK_CLASS",function(){return jt});const a=120,c=16,d=4,g=100,b=80,$=0,_=220,_e=0,et=9,rt=[0,1,2,3,4,5,6,7,8,10,11,12,13,14,15],tt=[[36,35],[38,27,28,31,32,33,34,37,39,40,56,65,66,75,85],[42,44,54,68,69,70,71,73,78,80],[46,67,72,74,79,81],[45,29,41,61,64,84],[48,47,60,63,77,86,87],[50,30,43,62,76,83],[49,55,57,58],[51,52,53,59,82]],j=0,nt=127,st=nt-j+1,ot="N.C.",ut=12,ht=0,pt=127,it=pt-ht+1,yt=21,ft=108,bt=35,Tt=81,Ct=0,_t=127,Ot=89,kt=90,Rt=9,jt=10},function(i,s){i.exports=__WEBPACK_EXTERNAL_MODULE__9__},function(i,s,o){o.d(s,"a",function(){return c});var a=o(35),c=a.tensorflow.magenta.NoteSequence},function(i,s,o){o.d(s,"a",function(){return c}),o.d(s,"b",function(){return d}),o.d(s,"c",function(){return b});var a=o(16);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c{constructor(_){this.global=_,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(_,_e){this.platform!=null&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${_e}.`),this.platformName=_,this.platform=_e}registerFlag(_,_e,et){if(this.flagRegistry[_]={evaluationFn:_e,setHook:et},this.urlFlags[_]!=null){const rt=this.urlFlags[_];console.warn(`Setting feature override from URL ${_}: ${rt}.`),this.set(_,rt)}}async getAsync(_){return _ in this.flags||(this.flags[_]=await this.evaluateFlag(_)),this.flags[_]}get(_){if(_ in this.flags)return this.flags[_];const _e=this.evaluateFlag(_);if(Object(a.x)(_e))throw new Error(`Flag ${_} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[_]=_e,this.flags[_]}getNumber(_){return this.get(_)}getBool(_){return this.get(_)}getFlags(){return this.flags}get features(){return this.flags}set(_,_e){if(this.flagRegistry[_]==null)throw new Error(`Cannot set flag ${_} as it has not been registered.`);this.flags[_]=_e,this.flagRegistry[_].setHook!=null&&this.flagRegistry[_].setHook(_e)}evaluateFlag(_){if(this.flagRegistry[_]==null)throw new Error(`Cannot evaluate flag '${_}': no evaluation function found.`);return this.flagRegistry[_].evaluationFn()}setFlags(_){this.flags=Object.assign({},_)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(this.global===void 0||this.global.location===void 0||this.global.location.search===void 0)return;const _=function(_e){const et={};return _e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(rt,...tt)=>(function(j,nt,st){j[decodeURIComponent(nt)]=decodeURIComponent(st||"")}(et,tt[0],tt[1]),tt.join("="))),et}(this.global.location.search);"tfjsflags"in _&&_.tfjsflags.split(",").forEach(_e=>{const[et,rt]=_e.split(":");this.urlFlags[et]=function(tt,j){if((j=j.toLowerCase())==="true"||j==="false")return j==="true";if(""+ +j===j)return+j;throw new Error(`Could not parse value flag value ${j} for flag ${tt}.`)}(et,rt)})}}function d(){return g}let g=null;function b($){g=$}},function(i,s,o){o.r(s),o.d(s,"Level",function(){return a}),o.d(s,"verbosity",function(){return d}),o.d(s,"setVerbosity",function(){return g}),o.d(s,"log",function(){return b}),o.d(s,"logWithDuration",function(){return $});var a,c=o(15);(function(_){_[_.NONE=0]="NONE",_[_.WARN=5]="WARN",_[_.INFO=10]="INFO",_[_.DEBUG=20]="DEBUG"})(a||(a={}));let d=10;function g(_){}function b(_,_e="Magenta.js",et=10){if(et===0)throw Error("Logging level cannot be NONE.");d>=et&&(et===5?console.warn:console.log)(`%c ${_e} `,"background:magenta; color:white",_)}function $(_,_e,et="Magenta.js",rt=10){b(`${_} in ${((c.d.now()-_e)/1e3).toPrecision(3)}s`,et,rt)}},function(i,s,o){o.r(s),o.d(s,"MultipleTimeSignatureException",function(){return d}),o.d(s,"BadTimeSignatureException",function(){return g}),o.d(s,"NegativeTimeException",function(){return b}),o.d(s,"MultipleTempoException",function(){return $}),o.d(s,"QuantizationStatusException",function(){return _}),o.d(s,"clone",function(){return _e}),o.d(s,"stepsPerQuarterToStepsPerSecond",function(){return et}),o.d(s,"quantizeToStep",function(){return rt}),o.d(s,"quantizeNoteSequence",function(){return nt}),o.d(s,"isQuantizedSequence",function(){return st}),o.d(s,"assertIsQuantizedSequence",function(){return ot}),o.d(s,"isRelativeQuantizedSequence",function(){return ut}),o.d(s,"assertIsRelativeQuantizedSequence",function(){return ht}),o.d(s,"isAbsoluteQuantizedSequence",function(){return pt}),o.d(s,"assertIsAbsoluteQuantizedSequence",function(){return it}),o.d(s,"unquantizeSequence",function(){return yt}),o.d(s,"createQuantizedNoteSequence",function(){return ft}),o.d(s,"mergeInstruments",function(){return bt}),o.d(s,"replaceInstruments",function(){return Tt}),o.d(s,"mergeConsecutiveNotes",function(){return Ct}),o.d(s,"applySustainControlChanges",function(){return _t}),o.d(s,"concatenate",function(){return Ot}),o.d(s,"trim",function(){return kt}),o.d(s,"split",function(){return Gt});var a=o(10),c=o(8);class d extends Error{constructor(zt){super(zt),Object.setPrototypeOf(this,new.target.prototype)}}class g extends Error{constructor(zt){super(zt),Object.setPrototypeOf(this,new.target.prototype)}}class b extends Error{constructor(zt){super(zt),Object.setPrototypeOf(this,new.target.prototype)}}class $ extends Error{constructor(zt){super(zt),Object.setPrototypeOf(this,new.target.prototype)}}class _ extends Error{constructor(zt){super(zt),Object.setPrototypeOf(this,new.target.prototype)}}function _e(Bt){return a.a.decode(a.a.encode(Bt).finish())}function et(Bt,zt){return Bt*zt/60}function rt(Bt,zt,Ut=.5){const Qt=Bt*zt;return Math.floor(Qt+(1-Ut))}function tt(Bt){return Bt.controlChanges.concat(Bt.textAnnotations)}function j(Bt){if(Bt.tempos&&Bt.tempos.length!==0){if(Bt.tempos.sort((zt,Ut)=>zt.time-Ut.time),Bt.tempos[0].time!==0&&Bt.tempos[0].qpm!==c.DEFAULT_QUARTERS_PER_MINUTE)throw new $("NoteSequence has an implicit tempo change from initial "+c.DEFAULT_QUARTERS_PER_MINUTE+` qpm to ${Bt.tempos[0].qpm} qpm at ${Bt.tempos[0].time} seconds.`);for(let zt=1;zt<Bt.tempos.length;zt++)if(Bt.tempos[zt].qpm!==Bt.tempos[0].qpm)throw new $(`NoteSequence has at least one tempo change from ${Bt.tempos[0].qpm} qpm to ${Bt.tempos[zt].qpm}qpm at ${Bt.tempos[zt].time} seconds.`)}}function nt(Bt,zt){const Ut=_e(Bt);if(Ut.quantizationInfo=a.a.QuantizationInfo.create({stepsPerQuarter:zt}),Ut.timeSignatures.length>0){if(Ut.timeSignatures.sort((ln,an)=>ln.time-an.time),Ut.timeSignatures[0].time!==0&&(Ut.timeSignatures[0].numerator!==4||Ut.timeSignatures[0].denominator!==4))throw new d(`NoteSequence has an implicit change from initial 4/4 time signature to ${Ut.timeSignatures[0].numerator}/`+Ut.timeSignatures[0].denominator+" at "+Ut.timeSignatures[0].time+" seconds.");for(let ln=1;ln<Ut.timeSignatures.length;ln++){const an=Ut.timeSignatures[ln];if(an.numerator!==Ut.timeSignatures[0].numerator||an.denominator!==Ut.timeSignatures[0].denominator)throw new d("NoteSequence has at least one time signature change from "+Ut.timeSignatures[0].numerator+"/"+Ut.timeSignatures[0].denominator+` to ${an.numerator}/${an.denominator} at ${an.time} seconds`)}Ut.timeSignatures[0].time=0,Ut.timeSignatures=[Ut.timeSignatures[0]]}else{const ln=a.a.TimeSignature.create({numerator:4,denominator:4,time:0});Ut.timeSignatures.push(ln)}const Qt=Ut.timeSignatures[0];if(!(tn=Qt.denominator)||tn&tn-1)throw new g(`Denominator is not a power of 2. Time signature: ${Qt.numerator}/${Qt.denominator}`);var tn;if(Qt.numerator===0)throw new g(`Numerator is 0. Time signature: ${Qt.numerator}/${Qt.denominator}`);if(Ut.tempos.length>0)j(Ut),Ut.tempos[0].time=0,Ut.tempos=[Ut.tempos[0]];else{const ln=a.a.Tempo.create({qpm:c.DEFAULT_QUARTERS_PER_MINUTE,time:0});Ut.tempos.push(ln)}const sn=et(zt,Ut.tempos[0].qpm);return Ut.totalQuantizedSteps=rt(Bt.totalTime,sn),function(ln,an){for(const Yt of ln.notes){if(Yt.quantizedStartStep=rt(Yt.startTime,an),Yt.quantizedEndStep=rt(Yt.endTime,an),Yt.quantizedEndStep===Yt.quantizedStartStep&&(Yt.quantizedEndStep+=1),Yt.quantizedStartStep<0||Yt.quantizedEndStep<0)throw new b("Got negative note time: start_step = "+Yt.quantizedStartStep+", end_step = "+Yt.quantizedEndStep);Yt.quantizedEndStep>ln.totalQuantizedSteps&&(ln.totalQuantizedSteps=Yt.quantizedEndStep)}tt(ln).forEach(Yt=>{if(Yt.quantizedStep=rt(Yt.time,an),Yt.quantizedStep<0)throw new b("Got negative event time: step = "+Yt.quantizedStep)})}(Ut,sn),Ut}function st(Bt){return Bt.quantizationInfo&&(Bt.quantizationInfo.stepsPerQuarter>0||Bt.quantizationInfo.stepsPerSecond>0)}function ot(Bt){if(!st(Bt))throw new _(`NoteSequence ${Bt.id} is not quantized (missing quantizationInfo)`)}function ut(Bt){return Bt.quantizationInfo&&Bt.quantizationInfo.stepsPerQuarter>0}function ht(Bt){if(!ut(Bt))throw new _(`NoteSequence ${Bt.id} is not quantized or is quantized based on absolute timing`)}function pt(Bt){return Bt.quantizationInfo&&Bt.quantizationInfo.stepsPerSecond>0}function it(Bt){if(!pt(Bt))throw new _(`NoteSequence ${Bt.id} is not quantized or is quantized based on relative timing`)}function yt(Bt,zt){ht(Bt),j(Bt);const Ut=_e(Bt);zt?Ut.tempos&&Ut.tempos.length>0?Ut.tempos[0].qpm=zt:Ut.tempos.push(a.a.Tempo.create({time:0,qpm:zt})):zt=Bt.tempos&&Bt.tempos.length>0?Ut.tempos[0].qpm:c.DEFAULT_QUARTERS_PER_MINUTE;const Qt=tn=>tn/Ut.quantizationInfo.stepsPerQuarter*(60/zt);return Ut.totalTime=Qt(Ut.totalQuantizedSteps),Ut.notes.forEach(tn=>{tn.startTime=Qt(tn.quantizedStartStep),tn.endTime=Qt(tn.quantizedEndStep),Ut.totalTime=Math.max(Ut.totalTime,tn.endTime),delete tn.quantizedStartStep,delete tn.quantizedEndStep}),tt(Ut).forEach(tn=>{tn.time=Qt(tn.time)}),delete Ut.totalQuantizedSteps,delete Ut.quantizationInfo,Ut}function ft(Bt=c.DEFAULT_STEPS_PER_QUARTER,zt=c.DEFAULT_QUARTERS_PER_MINUTE){return a.a.create({quantizationInfo:{stepsPerQuarter:Bt},tempos:[{qpm:zt}]})}function bt(Bt){const zt=_e(Bt),Ut=zt.notes.concat(zt.pitchBends).concat(zt.controlChanges),Qt=Array.from(new Set(Ut.filter(tn=>!tn.isDrum).map(tn=>tn.program)));return Ut.forEach(tn=>{tn.isDrum?(tn.program=0,tn.instrument=Qt.length):tn.instrument=Qt.indexOf(tn.program)}),zt}function Tt(Bt,zt){const Ut=new Set(Bt.notes.map(ln=>ln.instrument)),Qt=new Set(zt.notes.map(ln=>ln.instrument)),tn=[];Bt.notes.forEach(ln=>{Qt.has(ln.instrument)||tn.push(a.a.Note.create(ln))}),zt.notes.forEach(ln=>{Ut.has(ln.instrument)&&tn.push(a.a.Note.create(ln))});const sn=_e(Bt);return sn.notes=tn.sort((ln,an)=>ln.instrument-an.instrument||ln.quantizedStartStep-an.quantizedStartStep),sn}function Ct(Bt){ot(Bt);const zt=_e(Bt);zt.notes=[];const Ut=Bt.notes.sort((sn,ln)=>sn.instrument-ln.instrument||sn.quantizedStartStep-ln.quantizedStartStep),Qt=new a.a.Note;Qt.pitch=Ut[0].pitch,Qt.instrument=Ut[0].instrument,Qt.quantizedStartStep=Ut[0].quantizedStartStep,Qt.quantizedEndStep=Ut[0].quantizedEndStep,zt.notes.push(Qt);let tn=0;for(let sn=1;sn<Ut.length;sn++){const ln=Ut[sn],an=zt.notes[tn];if(an.instrument===ln.instrument&&an.pitch===ln.pitch&&ln.quantizedStartStep===an.quantizedEndStep&&ln.quantizedStartStep%16!=0)zt.notes[tn].quantizedEndStep+=ln.quantizedEndStep-ln.quantizedStartStep;else{const Yt=new a.a.Note;Yt.pitch=Ut[sn].pitch,Yt.instrument=Ut[sn].instrument,Yt.quantizedStartStep=Ut[sn].quantizedStartStep,Yt.quantizedEndStep=Ut[sn].quantizedEndStep,zt.notes.push(Yt),tn++}}return zt}function _t(Bt,zt=64){let Ut;if(function(Yt){Yt[Yt.SUSTAIN_ON=0]="SUSTAIN_ON",Yt[Yt.SUSTAIN_OFF=1]="SUSTAIN_OFF",Yt[Yt.NOTE_ON=2]="NOTE_ON",Yt[Yt.NOTE_OFF=3]="NOTE_OFF"}(Ut||(Ut={})),st(Bt))throw new Error("Can only apply sustain to unquantized NoteSequence.");const Qt=_e(Bt),tn=[];for(const Yt of Qt.notes)Yt.isDrum===!1&&(Yt.startTime!==null&&tn.push({time:Yt.startTime,type:Ut.NOTE_ON,event:Yt}),Yt.endTime!==null&&tn.push({time:Yt.endTime,type:Ut.NOTE_OFF,event:Yt}));for(const Yt of Qt.controlChanges)if(Yt.controlNumber===zt){const cn=Yt.controlValue;cn>=64?tn.push({time:Yt.time,type:Ut.SUSTAIN_ON,event:Yt}):cn<64&&tn.push({time:Yt.time,type:Ut.SUSTAIN_OFF,event:Yt})}tn.sort((Yt,cn)=>Yt.time-cn.time);const sn={},ln={};let an=0;for(const Yt of tn){an=Yt.time;const cn=Yt.type,Wt=Yt.event;if(cn===Ut.SUSTAIN_ON)ln[Wt.instrument]=!0;else if(cn===Ut.SUSTAIN_OFF){ln[Wt.instrument]=!1;const wt=[];Wt.instrument in sn||(sn[Wt.instrument]=[]);for(const xt of sn[Wt.instrument])xt.endTime<an?(xt.endTime=an,an>Qt.totalTime&&(Qt.totalTime=an)):wt.push(xt);sn[Wt.instrument]=wt}else if(cn===Ut.NOTE_ON){if(ln[Wt.instrument]===!0){const wt=[];Wt.instrument in sn||(sn[Wt.instrument]=[]);for(const xt of sn[Wt.instrument])xt.pitch===Wt.pitch?(xt.endTime=an,xt.startTime===xt.endTime&&Qt.notes.push(xt)):wt.push(xt);sn[Wt.instrument]=wt}Wt.instrument in sn||(sn[Wt.instrument]=[]),sn[Wt.instrument].push(Wt)}else if(cn===Ut.NOTE_OFF&&ln[Wt.instrument]!==!0){const wt=sn[Wt.instrument].indexOf(Wt);wt>-1&&sn[Wt.instrument].splice(wt,1)}}for(const Yt of Object.values(sn))for(const cn of Yt)cn.endTime=an,Qt.totalTime=an;return Qt}function Ot(Bt,zt){if(zt&&zt.length!==Bt.length)throw new Error(`Number of sequences to concatenate and their individual
 durations does not match.`);if(st(Bt[0])){for(let Ut=0;Ut<Bt.length;++Ut)if(ot(Bt[Ut]),Bt[Ut].quantizationInfo.stepsPerQuarter!==Bt[0].quantizationInfo.stepsPerQuarter)throw new Error("Not all sequences have the same quantizationInfo");return Rt(Bt,"totalQuantizedSteps","quantizedStartStep","quantizedEndStep",zt)}return Rt(Bt,"totalTime","startTime","endTime",zt)}function kt(Bt,zt,Ut,Qt){return st(Bt)?jt(Bt,zt,Ut,"totalQuantizedSteps","quantizedStartStep","quantizedEndStep",Qt):jt(Bt,zt,Ut,"totalTime","startTime","endTime",Qt)}function Rt(Bt,zt,Ut,Qt,tn){let sn,ln=0;for(let an=0;an<Bt.length;++an){const Yt=tn?tn[an]:Bt[an][zt];if(Yt===0)throw Error(`Sequence ${Bt[an].id} has no ${zt}, and no individual duration was provided.`);an===0?sn=_e(Bt[0]):Array.prototype.push.apply(sn.notes,Bt[an].notes.map(cn=>{const Wt=a.a.Note.create(cn);return Wt[Ut]+=ln,Wt[Qt]+=ln,Wt})),ln+=Yt}return sn[zt]=ln,sn}function jt(Bt,zt,Ut,Qt,tn,sn,ln){const an=_e(Bt);an[Qt]=Ut,an.notes=an.notes.filter(Yt=>Yt[tn]>=zt&&Yt[tn]<=Ut&&(ln||Yt[sn]<=Ut)),an[Qt]-=zt;for(let Yt=0;Yt<an.notes.length;Yt++)an.notes[Yt][tn]-=zt,an.notes[Yt][sn]-=zt,ln&&(an.notes[Yt][sn]=Math.min(an.notes[Yt][sn],an[Qt]));return an}function Gt(Bt,zt){ot(Bt);const Ut=_e(Bt),Qt=Ut.notes.sort((an,Yt)=>an.quantizedStartStep-Yt.quantizedStartStep),tn=[];let sn=0,ln=[];for(let an=0;an<Qt.length;an++){const Yt=Qt[an],cn=Yt.quantizedStartStep,Wt=Yt.quantizedEndStep;if(Yt.quantizedStartStep-=sn,Yt.quantizedEndStep-=sn,!(Yt.quantizedStartStep<0))if(Yt.quantizedEndStep<=zt)ln.push(Yt);else{if(Yt.quantizedStartStep<zt){const wt=a.a.Note.create(Yt);wt.quantizedEndStep=zt,wt.startTime=wt.endTime=void 0,ln.push(wt),Yt.quantizedStartStep=sn+zt,Yt.quantizedEndStep=Wt}else Yt.quantizedStartStep=cn,Yt.quantizedEndStep=Wt;if((Yt.quantizedEndStep>zt||Yt.quantizedStartStep>zt)&&(an-=1),ln.length!==0){const wt=_e(Ut);wt.notes=ln,wt.totalQuantizedSteps=zt,tn.push(wt)}ln=[],sn+=zt}}if(ln.length!==0){const an=_e(Ut);an.notes=ln,an.totalQuantizedSteps=zt,tn.push(an)}return tn}},function(i,s,o){o.d(s,"b",function(){return d}),o.d(s,"a",function(){return g});var a=o(5),c=o(27);o(16);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d(b,$){if(b.dtype===$.dtype)return[b,$];const _=Object(c.b)(b.dtype,$.dtype);return[b.cast(_),$.cast(_)]}function g(b){const $=[];return function _(_e,et,rt){if(_e==null)return;if(_e instanceof a.a)return void et.push(_e);if(tt=_e,!Array.isArray(tt)&&typeof tt!="object")return;var tt;const j=_e;for(const nt in j){const st=j[nt];rt.has(st)||(rt.add(st),_(st,et,rt))}}(b,$,new Set),$}},function(i,s,o){(function(a){o.d(s,"a",function(){return d}),o.d(s,"d",function(){return g}),o.d(s,"c",function(){return b}),o.d(s,"b",function(){return _});const c=function(){if(typeof globalThis<"u")return globalThis;if(typeof self<"u")return self;if(typeof window<"u")return window;if(a!==void 0)return a;throw new Error("cannot find the global object")}(),d=c.fetch.bind(c),g=c.performance,b=(c.navigator,!!c.webkitOfflineAudioContext),$=c.WorkerGlobalScope!==void 0;function _(_e){if(_e=b?44100:_e,$)throw new Error("Cannot use offline audio context in a web worker.");const et=c.webkitOfflineAudioContext;return b?new et(1,_e,_e):new c.OfflineAudioContext(1,_e,_e)}}).call(this,o(21))},function(i,s,o){/**
* @license
* Copyright 2020 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/function a(Pt){let Zt=Pt.length,nn=0,dn=0;for(;Zt>0;)dn=Math.random()*Zt|0,Zt--,nn=Pt[Zt],Pt[Zt]=Pt[dn],Pt[dn]=nn}function c(Pt,Zt,nn){return Math.max(Pt,Math.min(Zt,nn))}function d(Pt){return Pt%2==0?Pt:Pt+1}function g(Pt){let Zt=0;for(let nn=0;nn<Pt.length;nn++)Zt+=Pt[nn];return Zt}function b(Pt,Zt){const nn=Math.random();return Zt*nn+(1-nn)*Pt}function $(Pt,Zt){let nn=0;for(let dn=0;dn<Pt.length;dn++){const wn=Number(Pt[dn])-Number(Zt[dn]);nn+=wn*wn}return nn}function _(Pt,Zt){if(!Pt)throw new Error(typeof Zt=="string"?Zt:Zt())}function _e(Pt,Zt,nn=""){_(nt(Pt,Zt),()=>nn+` Shapes ${Pt} and ${Zt} must match`)}function et(Pt){_(Pt!=null,()=>"The input to the tensor constructor must be a non-null value.")}function rt(Pt,Zt=[],nn=!1){if(Zt==null&&(Zt=[]),Array.isArray(Pt)||Rt(Pt)&&!nn)for(let dn=0;dn<Pt.length;++dn)rt(Pt[dn],Zt,nn);else Zt.push(Pt);return Zt}function tt(Pt){if(Pt.length===0)return 1;let Zt=Pt[0];for(let nn=1;nn<Pt.length;nn++)Zt*=Pt[nn];return Zt}function j(Pt){return Pt.length===0}function nt(Pt,Zt){if(Pt===Zt)return!0;if(Pt==null||Zt==null||Pt.length!==Zt.length)return!1;for(let nn=0;nn<Pt.length;nn++)if(Pt[nn]!==Zt[nn])return!1;return!0}function st(Pt){return Pt%1==0}function ot(Pt){if(Math.tanh!=null)return Math.tanh(Pt);if(Pt===1/0)return 1;if(Pt===-1/0)return-1;{const Zt=Math.exp(2*Pt);return(Zt-1)/(Zt+1)}}function ut(Pt){const Zt=Math.ceil(Math.sqrt(Pt));return[Zt,Math.ceil(Pt/Zt)]}function ht(Pt){const Zt=new Uint32Array(Pt);for(let nn=0;nn<Pt;++nn)Zt[nn]=nn;return a(Zt),Zt}function pt(Pt,Zt){return Zt<=Pt.length?Pt:Pt+" ".repeat(Zt-Pt.length)}function it(Pt,Zt=dn=>0,nn){return new Promise((dn,wn)=>{let kn=0;const Pn=()=>{if(Pt())return void dn();kn++;const On=Zt(kn);nn!=null&&kn>=nn?wn():setTimeout(Pn,On)};Pn()})}function yt(Pt,Zt){let nn=1,dn=-1;for(let kn=0;kn<Pt.length;++kn)if(Pt[kn]>=0)nn*=Pt[kn];else if(Pt[kn]===-1){if(dn!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${dn} and dim ${kn}`);dn=kn}else if(Pt[kn]<0)throw Error(`Shapes can not be < 0. Found ${Pt[kn]} at dim ${kn}`);if(dn===-1){if(Zt>0&&Zt!==nn)throw Error(`Size(${Zt}) must match the product of shape ${Pt}`);return Pt}if(nn===0)throw Error(`Cannot infer the missing size in [${Pt}] when there are 0 elements`);if(Zt%nn!=0)throw Error(`The implicit shape can't be a fractional number. Got ${Zt} / ${nn}`);const wn=Pt.slice();return wn[dn]=Zt/nn,wn}function ft(Pt,Zt){const nn=Zt.length;return _((Pt=Pt==null?Zt.map((dn,wn)=>wn):[].concat(Pt)).every(dn=>dn>=-nn&&dn<nn),()=>`All values in axis param must be in range [-${nn}, ${nn}) but got axis `+Pt),_(Pt.every(dn=>st(dn)),()=>"All values in axis param must be integers but got axis "+Pt),Pt.map(dn=>dn<0?nn+dn:dn)}function bt(Pt,Zt){const nn=[],dn=[],wn=Zt!=null&&Array.isArray(Zt)&&Zt.length===0,kn=Zt==null||wn?null:ft(Zt,Pt).sort();let Pn=0;for(let On=0;On<Pt.length;++On){if(kn!=null){if(kn[Pn]===On&&Pt[On]!==1)throw new Error(`Can't squeeze axis ${On} since its dim '${Pt[On]}' is not 1`);(kn[Pn]==null||kn[Pn]>On)&&Pt[On]===1&&(nn.push(Pt[On]),dn.push(On)),kn[Pn]<=On&&Pn++}Pt[On]!==1&&(nn.push(Pt[On]),dn.push(On))}return{newShape:nn,keptDims:dn}}function Tt(Pt,Zt){let nn=null;if(Pt==null||Pt==="float32")nn=new Float32Array(Zt);else if(Pt==="int32")nn=new Int32Array(Zt);else{if(Pt!=="bool")throw new Error("Unknown data type "+Pt);nn=new Uint8Array(Zt)}return nn}function Ct(Pt,Zt){let nn=null;if(Pt==null||Pt==="float32")nn=new Float32Array(Zt);else if(Pt==="int32")nn=new Int32Array(Zt);else if(Pt==="bool")nn=new Uint8Array(Zt);else{if(Pt!=="string")throw new Error("Unknown data type "+Pt);nn=new Array(Zt)}return nn}function _t(Pt,Zt){for(let nn=0;nn<Pt.length;nn++){const dn=Pt[nn];if(isNaN(dn)||!isFinite(dn))throw Error(`A tensor of type ${Zt} being uploaded contains ${dn}.`)}}function Ot(Pt){return Pt==="bool"||Pt==="complex64"||Pt==="float32"||Pt==="int32"||Pt==="string"}function kt(Pt,Zt){return Zt!=="complex64"&&(Zt!=="float32"||Pt==="complex64")&&(Zt!=="int32"||Pt==="float32"||Pt==="complex64")&&(Zt!=="bool"||Pt!=="bool")}function Rt(Pt){return Pt instanceof Float32Array||Pt instanceof Int32Array||Pt instanceof Uint8Array}function jt(Pt){if(Pt==="float32"||Pt==="int32")return 4;if(Pt==="complex64")return 8;if(Pt==="bool")return 1;throw new Error("Unknown dtype "+Pt)}function Gt(Pt){if(Pt==null)return 0;let Zt=0;return Pt.forEach(nn=>Zt+=nn.length),Zt}function Bt(Pt){return typeof Pt=="string"||Pt instanceof String}function zt(Pt){return typeof Pt=="boolean"}function Ut(Pt){return typeof Pt=="number"}function Qt(Pt){return Array.isArray(Pt)?Qt(Pt[0]):Pt instanceof Float32Array?"float32":Pt instanceof Int32Array||Pt instanceof Uint8Array?"int32":Ut(Pt)?"float32":Bt(Pt)?"string":zt(Pt)?"bool":"float32"}function tn(Pt){return!!(Pt&&Pt.constructor&&Pt.call&&Pt.apply)}function sn(Pt,Zt){for(let nn=Zt;nn<Pt;++nn)if(Pt%nn==0)return nn;return Pt}function ln(Pt){const Zt=Pt.length;if(Zt<2)return[];const nn=new Array(Zt-1);nn[Zt-2]=Pt[Zt-1];for(let dn=Zt-3;dn>=0;--dn)nn[dn]=nn[dn+1]*Pt[dn+1];return nn}function an(Pt,Zt){if(Pt.length===0)return Zt[0];const nn=Pt.reduce((dn,wn)=>dn*wn);if(nn===0)return[];if(nn!==Zt.length)throw new Error(`[${Pt}] does not match the input size ${Zt.length}.`);return function dn(wn,kn,Pn){const On=new Array;if(kn.length===1){const Bn=kn[0];for(let Zn=0;Zn<Bn;Zn++)On[Zn]=Pn[wn+Zn]}else{const Bn=kn[0],Zn=kn.slice(1),jn=Zn.reduce((tr,Un)=>tr*Un);for(let tr=0;tr<Bn;tr++)On[tr]=dn(wn+tr*jn,Zn,Pn)}return On}(0,Pt,Zt)}function Yt(Pt,Zt){const nn=cn(Pt,Zt);for(let dn=0;dn<nn.length;dn++)nn[dn]=1;return nn}function cn(Pt,Zt){if(Zt==null||Zt==="float32"||Zt==="complex64")return new Float32Array(Pt);if(Zt==="int32")return new Int32Array(Pt);if(Zt==="bool")return new Uint8Array(Pt);throw new Error("Unknown data type "+Zt)}function Wt(Pt,Zt){const nn=Pt.reduce((dn,wn)=>dn*wn,1);if(Zt==null||Zt==="float32")return an(Pt,new Float32Array(nn));if(Zt==="int32")return an(Pt,new Int32Array(nn));if(Zt==="bool")return an(Pt,new Uint8Array(nn));throw new Error("Unknown data type "+Zt)}function wt(Pt){Pt.forEach(Zt=>{_(Number.isInteger(Zt)&&Zt>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${Pt}].`)})}function xt(Pt,Zt,nn){if(Zt===0)return 0;if(Zt===1)return Pt[0];let dn=Pt[Pt.length-1];for(let wn=0;wn<Pt.length-1;++wn)dn+=nn[wn]*Pt[wn];return dn}function At(Pt,Zt,nn){if(Zt===0)return[];if(Zt===1)return[Pt];const dn=new Array(Zt);for(let wn=0;wn<dn.length-1;++wn)dn[wn]=Math.floor(Pt/nn[wn]),Pt-=dn[wn]*nn[wn];return dn[dn.length-1]=Pt,dn}function qt(Pt){return Pt&&Pt.then&&typeof Pt.then=="function"}o.d(s,"M",function(){return a}),o.d(s,"i",function(){return c}),o.d(s,"H",function(){return d}),o.d(s,"Q",function(){return g}),o.d(s,"J",function(){return b}),o.d(s,"l",function(){return $}),o.d(s,"b",function(){return _}),o.d(s,"e",function(){return _e}),o.d(s,"d",function(){return et}),o.d(s,"m",function(){return rt}),o.d(s,"N",function(){return tt}),o.d(s,"y",function(){return j}),o.d(s,"a",function(){return nt}),o.d(s,"v",function(){return st}),o.d(s,"R",function(){return ot}),o.d(s,"O",function(){return ut}),o.d(s,"k",function(){return ht}),o.d(s,"L",function(){return pt}),o.d(s,"K",function(){return it}),o.d(s,"s",function(){return yt}),o.d(s,"I",function(){return ft}),o.d(s,"P",function(){return bt}),o.d(s,"o",function(){return Tt}),o.d(s,"n",function(){return Ct}),o.d(s,"h",function(){return _t}),o.d(s,"B",function(){return Ot}),o.d(s,"p",function(){return kt}),o.d(s,"A",function(){return Rt}),o.d(s,"g",function(){return jt}),o.d(s,"f",function(){return Gt}),o.d(s,"z",function(){return Bt}),o.d(s,"t",function(){return zt}),o.d(s,"w",function(){return Ut}),o.d(s,"r",function(){return Qt}),o.d(s,"u",function(){return tn}),o.d(s,"G",function(){return sn}),o.d(s,"j",function(){return ln}),o.d(s,"S",function(){return an}),o.d(s,"D",function(){return Yt}),o.d(s,"F",function(){return cn}),o.d(s,"E",function(){return Wt}),o.d(s,"c",function(){return wt}),o.d(s,"C",function(){return xt}),o.d(s,"q",function(){return At}),o.d(s,"x",function(){return qt})},function(i,s,o){(function(a){o.d(s,"f",function(){return $}),o.d(s,"e",function(){return _}),o.d(s,"a",function(){return tt}),o.d(s,"b",function(){return j}),o.d(s,"d",function(){return nt}),o.d(s,"c",function(){return st}),o.d(s,"g",function(){return ot});var c=o(19),d=o(24),g=o(16),b=o(41);async function $(ht,pt){const it=[],yt=[],ft=Array.isArray(ht)?ht.map(bt=>bt.name):Object.keys(ht);for(let bt=0;bt<ft.length;++bt){const Tt=ft[bt],Ct=Array.isArray(ht)?ht[bt].tensor:ht[Tt];if(Ct.dtype!=="float32"&&Ct.dtype!=="int32"&&Ct.dtype!=="bool"&&Ct.dtype!=="string"&&Ct.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${Tt}': ${Ct.dtype}`);const _t={name:Tt,shape:Ct.shape,dtype:Ct.dtype};if(Ct.dtype==="string"){const Ot=new Promise(async kt=>{const Rt=await Ct.bytes(),jt=Rt.reduce((zt,Ut)=>zt+Ut.length,0)+4*Rt.length,Gt=new Uint8Array(jt);let Bt=0;for(let zt=0;zt<Rt.length;zt++){const Ut=Rt[zt],Qt=new Uint8Array(new Uint32Array([Ut.length]).buffer);Gt.set(Qt,Bt),Bt+=4,Gt.set(Ut,Bt),Bt+=Ut.length}kt(Gt)});yt.push(Ot)}else yt.push(Ct.data());pt!=null&&(_t.group=pt),it.push(_t)}return{data:_e(await Promise.all(yt)),specs:it}}function _(ht,pt){const it={};let yt,ft=0;for(const bt of pt){const Tt=bt.name,Ct=bt.dtype,_t=bt.shape,Ot=Object(g.N)(_t);let kt;if("quantization"in bt){const Rt=bt.quantization;if(Rt.dtype==="uint8"||Rt.dtype==="uint16"){if(!("min"in Rt)||!("scale"in Rt))throw new Error(`Weight ${bt.name} with quantization ${Rt.dtype} doesn't have corresponding metadata min and scale.`)}else{if(Rt.dtype!=="float16")throw new Error(`Weight ${bt.name} has unknown quantization dtype ${Rt.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if(Ct!=="float32")throw new Error(`Weight ${bt.name} is quantized with ${Rt.dtype} which only supports weights of type float32 not ${Ct}.`)}const jt=b.a[Rt.dtype],Gt=ht.slice(ft,ft+Ot*jt),Bt=Rt.dtype==="uint8"?new Uint8Array(Gt):new Uint16Array(Gt);if(Ct==="float32")if(Rt.dtype==="uint8"||Rt.dtype==="uint16"){kt=new Float32Array(Bt.length);for(let zt=0;zt<Bt.length;zt++){const Ut=Bt[zt];kt[zt]=Ut*Rt.scale+Rt.min}}else{if(Rt.dtype!=="float16")throw new Error(`Unsupported quantization type ${Rt.dtype} for weight type float32.`);yt===void 0&&(yt=ut()),kt=yt(Bt)}else{if(Ct!=="int32")throw new Error(`Unsupported dtype in weight '${Tt}': ${Ct}`);if(Rt.dtype!=="uint8"&&Rt.dtype!=="uint16")throw new Error(`Unsupported quantization type ${Rt.dtype} for weight type int32.`);kt=new Int32Array(Bt.length);for(let zt=0;zt<Bt.length;zt++){const Ut=Bt[zt];kt[zt]=Math.round(Ut*Rt.scale+Rt.min)}}ft+=Ot*jt}else if(Ct==="string"){const Rt=Object(g.N)(bt.shape);kt=[];for(let jt=0;jt<Rt;jt++){const Gt=new Uint32Array(ht.slice(ft,ft+4))[0];ft+=4;const Bt=new Uint8Array(ht.slice(ft,ft+Gt));kt.push(Bt),ft+=Gt}}else{const Rt=b.a[Ct],jt=ht.slice(ft,ft+Ot*Rt);if(Ct==="float32")kt=new Float32Array(jt);else if(Ct==="int32")kt=new Int32Array(jt);else if(Ct==="bool")kt=new Uint8Array(jt);else{if(Ct!=="complex64")throw new Error(`Unsupported dtype in weight '${Tt}': ${Ct}`);{kt=new Float32Array(jt);const Gt=new Float32Array(kt.length/2),Bt=new Float32Array(kt.length/2);for(let Qt=0;Qt<Gt.length;Qt++)Gt[Qt]=kt[2*Qt],Bt[Qt]=kt[2*Qt+1];const zt=Object(d.a)(Gt,_t,"float32"),Ut=Object(d.a)(Bt,_t,"float32");it[Tt]=Object(c.a)(zt,Ut),zt.dispose(),Ut.dispose()}}ft+=Ot*Rt}Ct!=="complex64"&&(it[Tt]=Object(d.a)(kt,_t,Ct))}return it}function _e(ht){if(ht===null)throw new Error("Invalid input value: "+JSON.stringify(ht));let pt=0;const it=[];ht.forEach(bt=>{if(pt+=bt.byteLength,it.push(bt.byteLength===bt.buffer.byteLength?bt:new bt.constructor(bt)),!(bt instanceof Float32Array||bt instanceof Int32Array||bt instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+bt.constructor.name)});const yt=new Uint8Array(pt);let ft=0;return it.forEach(bt=>{yt.set(new Uint8Array(bt.buffer),ft),ft+=bt.byteLength}),yt.buffer}const et=a!==void 0&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function rt(ht){return et?a.byteLength(ht):new Blob([ht]).size}function tt(ht){if(et)return a.from(ht).toString("base64");const pt=new Uint8Array(ht);let it="";for(let yt=0,ft=pt.length;yt<ft;yt++)it+=String.fromCharCode(pt[yt]);return btoa(it)}function j(ht){if(et){const yt=a.from(ht,"base64");return yt.buffer.slice(yt.byteOffset,yt.byteOffset+yt.byteLength)}const pt=atob(ht),it=new Uint8Array(pt.length);for(let yt=0;yt<pt.length;++yt)it.set([pt.charCodeAt(yt)],yt);return it.buffer}function nt(ht){if(ht.length===1)return ht[0];let pt=0;ht.forEach(ft=>{pt+=ft.byteLength});const it=new Uint8Array(pt);let yt=0;return ht.forEach(ft=>{it.set(new Uint8Array(ft),yt),yt+=ft.byteLength}),it.buffer}function st(ht){for(ht=ht.trim();ht.endsWith("/");)ht=ht.slice(0,ht.length-1);const pt=ht.split("/");return pt[pt.length-1]}function ot(ht){if(ht.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:ht.modelTopology==null?0:rt(JSON.stringify(ht.modelTopology)),weightSpecsBytes:ht.weightSpecs==null?0:rt(JSON.stringify(ht.weightSpecs)),weightDataBytes:ht.weightData==null?0:ht.weightData.byteLength}}function ut(){const ht=function(){const yt=bt=>{let Tt=bt<<13,Ct=0;for(;!(8388608&Tt);)Ct-=8388608,Tt<<=1;return Tt&=-8388609,Ct+=947912704,Tt|Ct},ft=new Uint32Array(2048);ft[0]=0;for(let bt=1;bt<1024;bt++)ft[bt]=yt(bt);for(let bt=1024;bt<2048;bt++)ft[bt]=939524096+(bt-1024<<13);return ft}(),pt=function(){const yt=new Uint32Array(64);yt[0]=0,yt[31]=1199570944,yt[32]=2147483648,yt[63]=3347054592;for(let ft=1;ft<31;ft++)yt[ft]=ft<<23;for(let ft=33;ft<63;ft++)yt[ft]=2147483648+(ft-32<<23);return yt}(),it=function(){const yt=new Uint32Array(64);for(let ft=0;ft<64;ft++)yt[ft]=1024;return yt[0]=yt[32]=0,yt}();return yt=>{const ft=new ArrayBuffer(4*yt.length),bt=new Uint32Array(ft);for(let Tt=0;Tt<yt.length;Tt++){const Ct=yt[Tt],_t=ht[it[Ct>>10]+(1023&Ct)]+pt[Ct>>10];bt[Tt]=_t}return new Float32Array(ft)}}}).call(this,o(68).Buffer)},function(i,s,o){(function(a){var c=s;function d(b,$,_){for(var _e=Object.keys($),et=0;et<_e.length;++et)b[_e[et]]!==void 0&&_||(b[_e[et]]=$[_e[et]]);return b}function g(b){function $(_,_e){if(!(this instanceof $))return new $(_,_e);Object.defineProperty(this,"message",{get:function(){return _}}),Error.captureStackTrace?Error.captureStackTrace(this,$):Object.defineProperty(this,"stack",{value:new Error().stack||""}),_e&&d(this,_e)}return($.prototype=Object.create(Error.prototype)).constructor=$,Object.defineProperty($.prototype,"name",{get:function(){return b}}),$.prototype.toString=function(){return this.name+": "+this.message},$}c.asPromise=o(51),c.base64=o(52),c.EventEmitter=o(53),c.float=o(54),c.inquire=o(55),c.utf8=o(56),c.pool=o(57),c.LongBits=o(58),c.isNode=!!(a!==void 0&&a&&a.process&&a.process.versions&&a.process.versions.node),c.global=c.isNode&&a||typeof window<"u"&&window||typeof self<"u"&&self||this,c.emptyArray=Object.freeze?Object.freeze([]):[],c.emptyObject=Object.freeze?Object.freeze({}):{},c.isInteger=Number.isInteger||function(b){return typeof b=="number"&&isFinite(b)&&Math.floor(b)===b},c.isString=function(b){return typeof b=="string"||b instanceof String},c.isObject=function(b){return b&&typeof b=="object"},c.isset=c.isSet=function(b,$){var _=b[$];return!(_==null||!b.hasOwnProperty($))&&(typeof _!="object"||(Array.isArray(_)?_.length:Object.keys(_).length)>0)},c.Buffer=function(){try{var b=c.inquire("buffer").Buffer;return b.prototype.utf8Write?b:null}catch{return null}}(),c._Buffer_from=null,c._Buffer_allocUnsafe=null,c.newBuffer=function(b){return typeof b=="number"?c.Buffer?c._Buffer_allocUnsafe(b):new c.Array(b):c.Buffer?c._Buffer_from(b):typeof Uint8Array>"u"?b:new Uint8Array(b)},c.Array=typeof Uint8Array<"u"?Uint8Array:Array,c.Long=c.global.dcodeIO&&c.global.dcodeIO.Long||c.global.Long||c.inquire("long"),c.key2Re=/^true|false|0|1$/,c.key32Re=/^-?(?:0|[1-9][0-9]*)$/,c.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/,c.longToHash=function(b){return b?c.LongBits.from(b).toHash():c.LongBits.zeroHash},c.longFromHash=function(b,$){var _=c.LongBits.fromHash(b);return c.Long?c.Long.fromBits(_.lo,_.hi,$):_.toNumber(!!$)},c.merge=d,c.lcFirst=function(b){return b.charAt(0).toLowerCase()+b.substring(1)},c.newError=g,c.ProtocolError=g("ProtocolError"),c.oneOfGetter=function(b){for(var $={},_=0;_<b.length;++_)$[b[_]]=1;return function(){for(var _e=Object.keys(this),et=_e.length-1;et>-1;--et)if($[_e[et]]===1&&this[_e[et]]!==void 0&&this[_e[et]]!==null)return _e[et]}},c.oneOfSetter=function(b){return function($){for(var _=0;_<b.length;++_)b[_]!==$&&delete this[b[_]]}},c.toJSONOptions={longs:String,enums:String,bytes:String,json:!0},c._configure=function(){var b=c.Buffer;b?(c._Buffer_from=b.from!==Uint8Array.from&&b.from||function($,_){return new b($,_)},c._Buffer_allocUnsafe=b.allocUnsafe||function($){return new b($)}):c._Buffer_from=c._Buffer_allocUnsafe=null}}).call(this,o(21))},function(i,s,o){o.d(s,"a",function(){return $});var a=o(6),c=o(1),d=o(3),g=o(16),b=o(4);const $=Object(b.a)({complex_:function(_,_e){const et=Object(d.a)(_,"real","complex"),rt=Object(d.a)(_e,"imag","complex");g.e(et.shape,rt.shape,`real and imag shapes, ${et.shape} and ${rt.shape}, must match in call to tf.complex().`);const tt={real:et,imag:rt};return a.a.runKernelFunc(j=>j.complex(et,rt),tt,null,c.y)}})},function(i,s,o){o.d(s,"e",function(){return _e}),o.d(s,"d",function(){return et}),o.d(s,"f",function(){return rt}),o.d(s,"i",function(){return tt}),o.d(s,"j",function(){return nt}),o.d(s,"a",function(){return ot}),o.d(s,"h",function(){return ut}),o.d(s,"b",function(){return it}),o.d(s,"g",function(){return ft}),o.d(s,"c",function(){return bt});var a=o(2),c=o(43),d=o(30),g=o(74),b=o(15),$=o(12);const _=Object(b.b)(16e3);async function _e(Ct){return Object(b.a)(Ct).then(_t=>_t.arrayBuffer()).then(_t=>_.decodeAudioData(_t))}async function et(Ct){const _t=new FileReader;return new Promise((Ot,kt)=>{_t.onerror=()=>{_t.abort(),kt(new DOMException("Something went wrong reading that file."))},_t.onload=()=>{Ot(_t.result)},_t.readAsArrayBuffer(Ct)}).then(Ot=>_.decodeAudioData(Ot))}function rt(Ct,_t){_t.power||(_t.power=2);const Ot=function(jt,Gt){const Bt=Gt.nFft||2048,zt=Gt.winLength||Bt,Ut=Gt.hopLength||Math.floor(zt/4);let Qt=it(zt);Qt=ut(Qt,Bt);const tn=function(Yt,cn,Wt){const wt=Math.floor((Yt.length-cn)/Wt)+1,xt=Array.from({length:wt},(At,qt)=>new Float32Array(cn));for(let At=0;At<wt;At++){const qt=At*Wt,Pt=Yt.slice(qt,qt+cn);xt[At].set(Pt),Pt.length}return xt}(jt=function(Yt,cn){const Wt=ht(Yt,cn);for(let wt=0;wt<cn;wt++)Wt[wt]=Wt[2*cn-wt],Wt[Wt.length-wt-1]=Wt[Wt.length-2*cn+wt-1];return Wt}(jt,Math.floor(Bt/2)),Bt,Ut),sn=[],ln=tn.length,an=Bt+2;for(let Yt=0;Yt<ln;Yt++){const cn=new Float32Array(an);sn[Yt]=cn}for(let Yt=0;Yt<ln;Yt++){const cn=pt(ot(tn[Yt],Qt));sn[Yt].set(cn.slice(0,an))}return sn}(Ct,_t),[kt,Rt]=function(jt,Gt){const Bt=jt.map(Ut=>function(Qt,tn){return Qt.map(sn=>Math.pow(sn,tn))}(function(Qt){const tn=new Float32Array(Qt.length/2);for(let sn=0;sn<Qt.length/2;sn++)tn[sn]=Math.sqrt(Qt[2*sn]*Qt[2*sn]+Qt[2*sn+1]*Qt[2*sn+1]);return tn}(Ut),Gt)),zt=jt[0].length-1;return[Bt,zt]}(Ot,_t.power);return _t.nFft=Rt,function(jt,Gt){const Bt=[];for(let zt=0;zt<jt.length;zt++)Bt[zt]=st(jt[zt],Gt);return Bt}(kt,function(jt){const Gt=jt.fMin||0,Bt=jt.fMax||jt.sampleRate/2,zt=jt.nMels||128,Ut=jt.nFft||2048,Qt=function(cn,Wt){return yt(0,cn/2,Math.floor(1+Wt/2))}(jt.sampleRate,Ut),tn=function(cn,Wt,wt){const xt=Tt(Wt),At=Tt(wt);return yt(xt,At,cn).map(Pt=>function(Zt){return 700*(Math.exp(Zt/1125)-1)}(Pt))}(zt+2,Gt,Bt),sn=function(cn){const Wt=new Float32Array(cn.length-1);for(let wt=0;wt<cn.length;wt++)Wt[wt]=cn[wt+1]-cn[wt];return Wt}(tn),ln=function(cn,Wt){const wt=[];for(let xt=0;xt<cn.length;xt++)wt[xt]=new Float32Array(Wt.length);for(let xt=0;xt<cn.length;xt++)for(let At=0;At<Wt.length;At++)wt[xt][At]=cn[xt]-Wt[At];return wt}(tn,Qt),an=ln[0].length,Yt=[];for(let cn=0;cn<zt;cn++){Yt[cn]=new Float32Array(an);for(let Wt=0;Wt<ln[cn].length;Wt++){const wt=-ln[cn][Wt]/sn[cn],xt=ln[cn+2][Wt]/sn[cn+1],At=Math.max(0,Math.min(wt,xt));Yt[cn][Wt]=At}}for(let cn=0;cn<Yt.length;cn++){const Wt=2/(tn[2+cn]-tn[cn]);Yt[cn]=Yt[cn].map(wt=>wt*Wt)}return Yt}(_t))}function tt(Ct,_t=1e-10,Ot=80){const kt=Ct.length,Rt=Ct[0].length,jt=[];for(let Gt=0;Gt<kt;Gt++)jt[Gt]=new Float32Array(Rt);for(let Gt=0;Gt<kt;Gt++)for(let Bt=0;Bt<Rt;Bt++){const zt=Ct[Gt][Bt];jt[Gt][Bt]=10*Math.log10(Math.max(_t,zt))}if(Ot){if(Ot<0)throw new Error("topDb must be non-negative.");for(let Gt=0;Gt<kt;Gt++){const Bt=jt[Gt].reduce((zt,Ut)=>Math.max(zt,Ut));for(let zt=0;zt<Rt;zt++)jt[Gt][zt]=Math.max(jt[Gt][zt],Bt-Ot)}}return jt}function j(Ct){if(Ct.numberOfChannels===1)return Ct.getChannelData(0);if(Ct.numberOfChannels!==2)throw Error(Ct.numberOfChannels+" channel audio is not supported.");const _t=Ct.getChannelData(0),Ot=Ct.getChannelData(1),kt=new Float32Array(Ct.length);for(let Rt=0;Rt<Ct.length;++Rt)kt[Rt]=(_t[Rt]+Ot[Rt])/2;return kt}async function nt(Ct,_t=16e3){if(Ct.sampleRate===_t)return j(Ct);const Ot=Ct.sampleRate,kt=Ct.length*_t/Ot;if(b.c){$.log("Safari does not support WebAudio resampling, so this may be slow.","O&F",5);const Rt=j(Ct),jt=new Float32Array(kt);return g(d(jt,[kt]),d(Rt,[Rt.length])),jt}{const Rt=new OfflineAudioContext(Ct.numberOfChannels,Ct.duration*_t,_t),jt=Rt.createBufferSource();return jt.buffer=Ct,jt.connect(Rt.destination),jt.start(),Rt.startRendering().then(Gt=>Gt.getChannelData(0))}}function st(Ct,_t){if(Ct.length!==_t[0].length)throw new Error(`Each entry in filterbank should have dimensions matching FFT. |mags| = ${Ct.length}, |filterbank[0]| = ${_t[0].length}.`);const Ot=new Float32Array(_t.length);for(let kt=0;kt<_t.length;kt++){const Rt=ot(Ct,_t[kt]);Ot[kt]=Rt.reduce((jt,Gt)=>jt+Gt)}return Ot}function ot(Ct,_t){if(Ct.length!==_t.length)return console.error(`Buffer length ${Ct.length} != window length ${_t.length}.`),null;const Ot=new Float32Array(Ct.length);for(let kt=0;kt<Ct.length;kt++)Ot[kt]=_t[kt]*Ct[kt];return Ot}function ut(Ct,_t){if(Ct.length>_t)throw new Error("Data is longer than length.");const Ot=Math.floor((_t-Ct.length)/2);return ht(Ct,[Ot,_t-Ct.length-Ot])}function ht(Ct,_t){let Ot,kt;typeof _t=="object"?[Ot,kt]=_t:Ot=kt=_t;const Rt=new Float32Array(Ct.length+Ot+kt);return Rt.set(Ct,Ot),Rt}function pt(Ct){const _t=new c(Ct.length),Ot=_t.createComplexArray(),kt=_t.toComplexArray(Ct);return _t.transform(Ot,kt),Ot}function it(Ct){const _t=new Float32Array(Ct);for(let Ot=0;Ot<Ct;Ot++)_t[Ot]=.5*(1-Math.cos(2*Math.PI*Ot/(Ct-1)));return _t}function yt(Ct,_t,Ot){const kt=(_t-Ct)/(Ot-1),Rt=new Float32Array(Ot);for(let jt=0;jt<Ot;jt++)Rt[jt]=Ct+kt*jt;return Rt}function ft(Ct){let _t=a.sub(Ct,69);return _t=a.div(_t,12),_t=a.pow(2,_t),_t=a.mul(440,_t),_t}async function bt(Ct){let _t=a.sub(a.div(a.log(Ct),a.log(2)),a.div(a.log(440),a.log(2)));return _t=a.mul(12,_t),_t=a.add(_t,69),await _t.array()}function Tt(Ct){return 1125*Math.log(1+Ct/700)}},function(i,s){var o;o=function(){return this}();try{o=o||new Function("return this")()}catch{typeof window=="object"&&(o=window)}i.exports=o},function(i,s){i.exports=function(){throw new Error("define cannot be used indirect")}},function(i,s,o){o.r(s),o.d(s,"NO_EVENT",function(){return g}),o.d(s,"NOTE_OFF",function(){return b}),o.d(s,"Melody",function(){return $}),o.d(s,"MelodyRhythm",function(){return _}),o.d(s,"MelodyShape",function(){return _e}),o.d(s,"MelodyRegister",function(){return et});var a=o(2),c=o(10),d=o(13);const g=0,b=1;class ${constructor(tt,j,nt){this.events=tt,this.minPitch=j,this.maxPitch=nt}static fromNoteSequence(tt,j,nt,st=!0,ot){d.assertIsQuantizedSequence(tt);const ut=tt.notes.sort((it,yt)=>it.quantizedStartStep===yt.quantizedStartStep?yt.pitch-it.pitch:it.quantizedStartStep-yt.quantizedStartStep),ht=new Int32Array(ot||tt.totalQuantizedSteps);let pt=-1;return ut.forEach(it=>{if(it.quantizedStartStep===pt){if(st)return;throw new Error("`NoteSequence` is not monophonic.")}if(it.pitch<j||it.pitch>nt)throw Error("`NoteSequence` has a pitch outside of the valid range: "+it.pitch);ht[it.quantizedStartStep]=it.pitch-j+2,ht[it.quantizedEndStep]=b,pt=it.quantizedStartStep}),new $(ht,j,nt)}toNoteSequence(tt,j){const nt=d.createQuantizedNoteSequence(tt,j);let st=null;for(let ot=0;ot<this.events.length;++ot){const ut=this.events[ot];switch(ut){case g:break;case b:st&&(st.quantizedEndStep=ot,nt.notes.push(st),st=null);break;default:st&&(st.quantizedEndStep=ot,nt.notes.push(st)),st=c.a.Note.create({pitch:ut-2+this.minPitch,quantizedStartStep:ot})}}return st&&(st.quantizedEndStep=this.events.length,nt.notes.push(st)),nt.totalQuantizedSteps=this.events.length,nt}}class _{constructor(){this.depth=1}extract(tt){const j=tt.events.length,nt=a.buffer([j,1]);for(let st=0;st<j;++st)nt.set(tt.events[st]>=2?1:0,st,0);return nt.toTensor().as2D(j,1)}}class _e{constructor(){this.depth=3}extract(tt){const j=tt.events.length,nt=a.buffer([j,3]);let st=null,ot=null;for(let ut=0;ut<j;++ut)if(tt.events[ut]>=2){if(st!==null){let ht;nt.get(st,0)===0&&nt.get(st,1)===0&&nt.get(st,2)===0&&(st=-1),ht=tt.events[ut]<ot?0:tt.events[ut]>ot?2:1;for(let pt=ut;pt>st;--pt)nt.set(1,pt,ht)}st=ut,ot=tt.events[ut]}if(st!==j-1)if(st===null||nt.get(st,0)===0&&nt.get(st,1)===0&&nt.get(st,2)===0)for(let ut=0;ut<j;++ut)nt.set(1,ut,1);else for(let ut=j-1;ut>st;--ut)for(let ht=0;ht<3;ht++)nt.set(nt.get(st,ht),ut,ht);return nt.toTensor().as2D(j,3)}}class et{constructor(tt){this.boundaryPitches=tt,this.depth=tt.length+1}meanMelodyPitch(tt){let j=0,nt=0,st=null;for(let ot=0;ot<tt.events.length;++ot)tt.events[ot]===b?st=null:tt.events[ot]>=2&&(st=tt.minPitch+tt.events[ot]-2),st!==null&&(j+=st,nt+=1);return nt?j/nt:null}extract(tt){const j=tt.events.length,nt=this.meanMelodyPitch(tt);if(nt===null)return a.zeros([j,this.depth]);let st=0;for(;st<this.boundaryPitches.length&&nt>=this.boundaryPitches[st];)st++;const ot=a.buffer([j,this.depth]);for(let ut=0;ut<j;++ut)ot.set(1,ut,st);return ot.toTensor().as2D(j,this.depth)}}},function(i,s,o){o.d(s,"a",function(){return d});var a=o(3),c=o(28);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d(g,b,$){const _=Object(a.c)(g,$);return Object(c.a)(g,b,_,$)}},function(i,s,o){o.d(s,"c",function(){return g}),o.d(s,"b",function(){return b}),o.d(s,"e",function(){return $}),o.d(s,"f",function(){return _}),o.d(s,"d",function(){return _e}),o.d(s,"a",function(){return et}),o.d(s,"h",function(){return rt}),o.d(s,"g",function(){return tt});var a=o(2),c=o(20),d=o(42);const g=16e3,b=250,$=25.58,_=63.07,_e=.002,et=.7;async function rt(j){let nt;return nt=await a.loadGraphModel(j,{fromTFHub:!0}),nt}async function tt(j,nt,st){if(a.getBackend()!=="webgl")throw new Error("Device does not support webgl.");const ot=await Object(c.j)(j,g),ut=ot.length,ht=await async function(yt){const ft=Math.floor(g/b),bt=a.tensor1d(yt,"float32"),Tt=yt.length;if(bt===null)return[];const Ct=bt.mul(bt).reshape([Tt,1]),_t=a.conv1d(Ct,a.ones([1024,1,1]).div(1024),ft,"same").sqrt().squeeze(),Ot=a.mul(a.log(a.maximum(1e-20,_t)).div(a.log(10)),20),kt=Ot.sub(20.7),Rt=a.maximum(kt,-120),jt=await Rt.array();return bt.dispose(),Ct.dispose(),_t.dispose(),Ot.dispose(),kt.dispose(),Rt.dispose(),jt}(ot),{pitches:pt,confidences:it}=await Object(d.a)(nt,ot,st);return{f0_hz:pt,loudness_db:ht,confidences:it,originalRecordedBufferLength:ut}}},function(i,s,o){o.d(s,"b",function(){return b}),o.d(s,"a",function(){return $}),o.d(s,"c",function(){return _}),o.d(s,"e",function(){return _e}),o.d(s,"d",function(){return et});var a=o(11),c=o(40);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d=Object(c.a)("kernelRegistry",()=>new Map),g=Object(c.a)("gradRegistry",()=>new Map);function b(tt,j){const nt=rt(tt,j);return d.get(nt)}function $(tt){return g.get(tt)}function _(tt){const j=d.entries(),nt=[];for(;;){const{done:st,value:ot}=j.next();if(st)break;const[ut,ht]=ot,[pt]=ut.split("_");pt===tt&&nt.push(ht)}return nt}function _e(tt){const{kernelName:j,backendName:nt}=tt,st=rt(j,nt);d.has(st)&&console.warn(`The kernel '${j}' for backend '${nt}' is already registered`),d.set(st,tt)}function et(tt){const{kernelName:j}=tt;g.has(j)&&Object(a.b)().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${j}'`),g.set(j,tt)}function rt(tt,j){return`${j}_${tt}`}},function(i,s,o){/**
* @license
* Copyright 2017 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/var a,c,d,g,b;o.d(s,"b",function(){return _}),o.d(s,"a",function(){return _e}),function(et){et.R0="R0",et.R1="R1",et.R2="R2",et.R3="R3",et.R4="R4",et.R5="R5",et.R6="R6"}(a||(a={})),function(et){et.float32="float32",et.int32="int32",et.bool="int32",et.complex64="complex64"}(c||(c={})),function(et){et.float32="float32",et.int32="int32",et.bool="bool",et.complex64="complex64"}(d||(d={})),function(et){et.float32="float32",et.int32="float32",et.bool="float32",et.complex64="complex64"}(g||(g={})),function(et){et.float32="complex64",et.int32="complex64",et.bool="complex64",et.complex64="complex64"}(b||(b={}));const $={float32:g,int32:c,bool:d,complex64:b};function _(et,rt){if(et==="string"||rt==="string"){if(et==="string"&&rt==="string")return"string";throw new Error(`Can not upcast ${et} with ${rt}`)}return $[et][rt]}function _e(et){return _(et,"int32")}},function(i,s,o){o.d(s,"a",function(){return g});var a=o(6),c=o(16),d=o(7);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g(b,$,_,_e){if(_e==null&&(_e=Object(c.r)(b)),_e==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(c.A)(b)&&!Array.isArray(b)&&typeof b!="number"&&typeof b!="boolean"&&typeof b!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if($!=null){Object(c.c)($);const et=Object(c.N)($),rt=Object(c.N)(_);Object(c.b)(et===rt,()=>`Based on the provided shape, [${$}], the tensor should have ${et} values but has ${rt}`);for(let tt=0;tt<_.length;++tt){const j=_[tt],nt=tt!==_.length-1||j!==Object(c.N)($.slice(tt));Object(c.b)(_[tt]===$[tt]||!nt,()=>`Error creating a new Tensor. Inferred shape (${_}) does not match the provided shape (${$}). `)}}return Object(c.A)(b)||Array.isArray(b)||(b=[b]),$=$||_,b=_e!=="string"?Object(d.toTypedArray)(b,_e):Object(c.m)(b,[],!0),a.a.makeTensor(b,$,_e)}},function(i,s,o){o.r(s),o.d(s,"Performance",function(){return b});var a=o(10),c=o(8),d=o(13),g=o(12);class b{constructor(_,_e,et,rt,tt){this.events=_,this.maxShiftSteps=_e,this.numVelocityBins=et,this.program=rt,this.isDrum=tt}static fromNoteSequence(_,_e,et,rt){d.assertIsQuantizedSequence(_);const tt=_.notes.filter((Ct,_t)=>rt===void 0||Ct.instrument===rt),j=tt.sort((Ct,_t)=>Ct.startTime===_t.startTime?Ct.pitch-_t.pitch:Ct.startTime-_t.startTime),nt=j.map((Ct,_t)=>({step:Ct.quantizedStartStep,index:_t,isOffset:0})),st=j.map((Ct,_t)=>({step:Ct.quantizedEndStep,index:_t,isOffset:1})),ot=nt.concat(st).sort((Ct,_t)=>Ct.step===_t.step?Ct.index===_t.index?Ct.isOffset-_t.isOffset:Ct.index-_t.index:Ct.step-_t.step),ut=et?Math.ceil((c.MIDI_VELOCITIES-1)/et):void 0,ht=[];let pt=0,it=et;for(const Ct of ot){if(Ct.step>pt){for(;Ct.step>pt+_e;)ht.push({type:"time-shift",steps:_e}),pt+=_e;ht.push({type:"time-shift",steps:Ct.step-pt}),pt=Ct.step}if(Ct.isOffset)ht.push({type:"note-off",pitch:j[Ct.index].pitch});else{if(ut){const _t=Math.floor((j[Ct.index].velocity-c.MIN_MIDI_VELOCITY-1)/ut)+1;_t!==it&&(ht.push({type:"velocity-change",velocityBin:_t}),it=_t)}ht.push({type:"note-on",pitch:j[Ct.index].pitch})}}const yt=!!tt.some(Ct=>Ct.isDrum)&&(!tt.some(Ct=>!Ct.isDrum)||void 0),ft=Array.from(new Set(tt.map(Ct=>Ct.program))),bt=yt||ft.length!==1?void 0:ft[0],Tt=new b(ht,_e,et,bt,yt);return Tt.setNumSteps(_.totalQuantizedSteps),Tt}getNumSteps(){return this.events.filter(_=>_.type==="time-shift").map(_=>_.steps).reduce((_,_e)=>_+_e,0)}setNumSteps(_){let _e=this.getNumSteps();if(_e<_){if(this.events.length){const et=this.events[this.events.length-1];if(et.type==="time-shift"){const rt=Math.min(_-_e,this.maxShiftSteps-et.steps);et.steps+=rt,_e+=rt}}for(;_e<_;)_e+this.maxShiftSteps>_?(this.events.push({type:"time-shift",steps:_-_e}),_e=_):(this.events.push({type:"time-shift",steps:this.maxShiftSteps}),_e+=this.maxShiftSteps)}else if(_e>_)for(;this.events.length&&_e>_;){const et=this.events[this.events.length-1];et.type==="time-shift"?_e-et.steps<_?(et.steps-=_e-_,_e=_):(this.events.pop(),_e-=et.steps):this.events.pop()}}toNoteSequence(_){const _e=this.numVelocityBins?Math.ceil((c.MIDI_VELOCITIES-1)/this.numVelocityBins):void 0,et=a.a.create();let rt=0,tt;const j=new Map;for(let nt=c.MIN_MIDI_PITCH;nt<=c.MAX_MIDI_PITCH;++nt)j.set(nt,[]);for(const nt of this.events)switch(nt.type){case"note-on":j.get(nt.pitch).push([rt,tt]);break;case"note-off":const st=j.get(nt.pitch);if(st.length){const[ot,ut]=st.shift();rt>ot?et.notes.push(a.a.Note.create({pitch:nt.pitch,velocity:ut,instrument:_,quantizedStartStep:ot,quantizedEndStep:rt,program:this.program,isDrum:this.isDrum})):g.log(`Ignoring zero-length note: (pitch = ${nt.pitch}, step = ${rt})`,"Performance")}else g.log(`Ignoring note-off with no previous note-on:(pitch = ${nt.pitch}, step = ${rt})`,"Performance");break;case"time-shift":rt+=nt.steps;break;case"velocity-change":if(!_e)throw new Error("Unexpected velocity change event: "+nt);tt=c.MIN_MIDI_VELOCITY+(nt.velocityBin-1)*_e+1;break;default:throw new Error("Unrecognized performance event: "+nt)}return j.forEach((nt,st)=>{for(const[ot,ut]of nt)rt>ot?et.notes.push(a.a.Note.create({pitch:st,velocity:ut,instrument:_,quantizedStartStep:ot,quantizedEndStep:rt,program:this.program,isDrum:this.isDrum})):g.log(`Ignoring zero-length note: (pitch = ${st}, step = ${rt})`,"Performance")}),et.totalQuantizedSteps=rt,et}}},function(i,s,o){var a=o(84),c=o(85),d=typeof Float64Array<"u";function g(_e,et){return _e[0]-et[0]}function b(){var _e,et=this.stride,rt=new Array(et.length);for(_e=0;_e<rt.length;++_e)rt[_e]=[Math.abs(et[_e]),_e];rt.sort(g);var tt=new Array(rt.length);for(_e=0;_e<tt.length;++_e)tt[_e]=rt[_e][1];return tt}function $(_e,et){var rt=["View",et,"d",_e].join("");et<0&&(rt="View_Nil"+_e);var tt=_e==="generic";if(et===-1){var j="function "+rt+"(a){this.data=a;};var proto="+rt+".prototype;proto.dtype='"+_e+"';proto.index=function(){return -1};proto.size=0;proto.dimension=-1;proto.shape=proto.stride=proto.order=[];proto.lo=proto.hi=proto.transpose=proto.step=function(){return new "+rt+"(this.data);};proto.get=proto.set=function(){};proto.pick=function(){return null};return function construct_"+rt+"(a){return new "+rt+"(a);}";return new Function(j)()}if(et===0)return j="function "+rt+"(a,d) {this.data = a;this.offset = d};var proto="+rt+".prototype;proto.dtype='"+_e+"';proto.index=function(){return this.offset};proto.dimension=0;proto.size=1;proto.shape=proto.stride=proto.order=[];proto.lo=proto.hi=proto.transpose=proto.step=function "+rt+"_copy() {return new "+rt+"(this.data,this.offset)};proto.pick=function "+rt+"_pick(){return TrivialArray(this.data);};proto.valueOf=proto.get=function "+rt+"_get(){return "+(tt?"this.data.get(this.offset)":"this.data[this.offset]")+"};proto.set=function "+rt+"_set(v){return "+(tt?"this.data.set(this.offset,v)":"this.data[this.offset]=v")+"};return function construct_"+rt+"(a,b,c,d){return new "+rt+"(a,d)}",new Function("TrivialArray",j)(_[_e][0]);j=["'use strict'"];var nt=a(et),st=nt.map(function(Tt){return"i"+Tt}),ot="this.offset+"+nt.map(function(Tt){return"this.stride["+Tt+"]*i"+Tt}).join("+"),ut=nt.map(function(Tt){return"b"+Tt}).join(","),ht=nt.map(function(Tt){return"c"+Tt}).join(",");j.push("function "+rt+"(a,"+ut+","+ht+",d){this.data=a","this.shape=["+ut+"]","this.stride=["+ht+"]","this.offset=d|0}","var proto="+rt+".prototype","proto.dtype='"+_e+"'","proto.dimension="+et),j.push("Object.defineProperty(proto,'size',{get:function "+rt+"_size(){return "+nt.map(function(Tt){return"this.shape["+Tt+"]"}).join("*"),"}})"),et===1?j.push("proto.order=[0]"):(j.push("Object.defineProperty(proto,'order',{get:"),et<4?(j.push("function "+rt+"_order(){"),et===2?j.push("return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})"):et===3&&j.push("var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);if(s0>s1){if(s1>s2){return [2,1,0];}else if(s0>s2){return [1,2,0];}else{return [1,0,2];}}else if(s0>s2){return [2,0,1];}else if(s2>s1){return [0,1,2];}else{return [0,2,1];}}})")):j.push("ORDER})")),j.push("proto.set=function "+rt+"_set("+st.join(",")+",v){"),tt?j.push("return this.data.set("+ot+",v)}"):j.push("return this.data["+ot+"]=v}"),j.push("proto.get=function "+rt+"_get("+st.join(",")+"){"),tt?j.push("return this.data.get("+ot+")}"):j.push("return this.data["+ot+"]}"),j.push("proto.index=function "+rt+"_index(",st.join(),"){return "+ot+"}"),j.push("proto.hi=function "+rt+"_hi("+st.join(",")+"){return new "+rt+"(this.data,"+nt.map(function(Tt){return["(typeof i",Tt,"!=='number'||i",Tt,"<0)?this.shape[",Tt,"]:i",Tt,"|0"].join("")}).join(",")+","+nt.map(function(Tt){return"this.stride["+Tt+"]"}).join(",")+",this.offset)}");var pt=nt.map(function(Tt){return"a"+Tt+"=this.shape["+Tt+"]"}),it=nt.map(function(Tt){return"c"+Tt+"=this.stride["+Tt+"]"});j.push("proto.lo=function "+rt+"_lo("+st.join(",")+"){var b=this.offset,d=0,"+pt.join(",")+","+it.join(","));for(var yt=0;yt<et;++yt)j.push("if(typeof i"+yt+"==='number'&&i"+yt+">=0){d=i"+yt+"|0;b+=c"+yt+"*d;a"+yt+"-=d}");for(j.push("return new "+rt+"(this.data,"+nt.map(function(Tt){return"a"+Tt}).join(",")+","+nt.map(function(Tt){return"c"+Tt}).join(",")+",b)}"),j.push("proto.step=function "+rt+"_step("+st.join(",")+"){var "+nt.map(function(Tt){return"a"+Tt+"=this.shape["+Tt+"]"}).join(",")+","+nt.map(function(Tt){return"b"+Tt+"=this.stride["+Tt+"]"}).join(",")+",c=this.offset,d=0,ceil=Math.ceil"),yt=0;yt<et;++yt)j.push("if(typeof i"+yt+"==='number'){d=i"+yt+"|0;if(d<0){c+=b"+yt+"*(a"+yt+"-1);a"+yt+"=ceil(-a"+yt+"/d)}else{a"+yt+"=ceil(a"+yt+"/d)}b"+yt+"*=d}");j.push("return new "+rt+"(this.data,"+nt.map(function(Tt){return"a"+Tt}).join(",")+","+nt.map(function(Tt){return"b"+Tt}).join(",")+",c)}");var ft=new Array(et),bt=new Array(et);for(yt=0;yt<et;++yt)ft[yt]="a[i"+yt+"]",bt[yt]="b[i"+yt+"]";for(j.push("proto.transpose=function "+rt+"_transpose("+st+"){"+st.map(function(Tt,Ct){return Tt+"=("+Tt+"===undefined?"+Ct+":"+Tt+"|0)"}).join(";"),"var a=this.shape,b=this.stride;return new "+rt+"(this.data,"+ft.join(",")+","+bt.join(",")+",this.offset)}"),j.push("proto.pick=function "+rt+"_pick("+st+"){var a=[],b=[],c=this.offset"),yt=0;yt<et;++yt)j.push("if(typeof i"+yt+"==='number'&&i"+yt+">=0){c=(c+this.stride["+yt+"]*i"+yt+")|0}else{a.push(this.shape["+yt+"]);b.push(this.stride["+yt+"])}");return j.push("var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}"),j.push("return function construct_"+rt+"(data,shape,stride,offset){return new "+rt+"(data,"+nt.map(function(Tt){return"shape["+Tt+"]"}).join(",")+","+nt.map(function(Tt){return"stride["+Tt+"]"}).join(",")+",offset)}"),new Function("CTOR_LIST","ORDER",j.join(`
`))(_[_e],b)}var _={float32:[],float64:[],int8:[],int16:[],int32:[],uint8:[],uint16:[],uint32:[],array:[],uint8_clamped:[],bigint64:[],biguint64:[],buffer:[],generic:[]};i.exports=function(_e,et,rt,tt){if(_e===void 0)return(0,_.array[0])([]);typeof _e=="number"&&(_e=[_e]),et===void 0&&(et=[_e.length]);var j=et.length;if(rt===void 0){rt=new Array(j);for(var nt=j-1,st=1;nt>=0;--nt)rt[nt]=st,st*=et[nt]}if(tt===void 0)for(tt=0,nt=0;nt<j;++nt)rt[nt]<0&&(tt-=(et[nt]-1)*rt[nt]);for(var ot=function(ht){if(c(ht))return"buffer";if(d)switch(Object.prototype.toString.call(ht)){case"[object Float64Array]":return"float64";case"[object Float32Array]":return"float32";case"[object Int8Array]":return"int8";case"[object Int16Array]":return"int16";case"[object Int32Array]":return"int32";case"[object Uint8Array]":return"uint8";case"[object Uint16Array]":return"uint16";case"[object Uint32Array]":return"uint32";case"[object Uint8ClampedArray]":return"uint8_clamped";case"[object BigInt64Array]":return"bigint64";case"[object BigUint64Array]":return"biguint64"}return Array.isArray(ht)?"array":"generic"}(_e),ut=_[ot];ut.length<=j+1;)ut.push($(ot,ut.length-1));return(0,ut[j+1])(_e,et,rt,tt)}},function(i,s){i.exports=function(o){return o.webpackPolyfill||(o.deprecate=function(){},o.paths=[],o.children||(o.children=[]),Object.defineProperty(o,"loaded",{enumerable:!0,get:function(){return o.l}}),Object.defineProperty(o,"id",{enumerable:!0,get:function(){return o.i}}),o.webpackPolyfill=1),o}},function(i,s){(function(o){i.exports=o}).call(this,{})},function(i,s,o){i.exports=et;var a,c=o(18),d=c.LongBits,g=c.base64,b=c.utf8;function $(ut,ht,pt){this.fn=ut,this.len=ht,this.next=void 0,this.val=pt}function _(){}function _e(ut){this.head=ut.head,this.tail=ut.tail,this.len=ut.len,this.next=ut.states}function et(){this.len=0,this.head=new $(_,0,0),this.tail=this.head,this.states=null}var rt=function(){return c.Buffer?function(){return(et.create=function(){return new a})()}:function(){return new et}};function tt(ut,ht,pt){ht[pt]=255&ut}function j(ut,ht){this.len=ut,this.next=void 0,this.val=ht}function nt(ut,ht,pt){for(;ut.hi;)ht[pt++]=127&ut.lo|128,ut.lo=(ut.lo>>>7|ut.hi<<25)>>>0,ut.hi>>>=7;for(;ut.lo>127;)ht[pt++]=127&ut.lo|128,ut.lo=ut.lo>>>7;ht[pt++]=ut.lo}function st(ut,ht,pt){ht[pt]=255&ut,ht[pt+1]=ut>>>8&255,ht[pt+2]=ut>>>16&255,ht[pt+3]=ut>>>24}et.create=rt(),et.alloc=function(ut){return new c.Array(ut)},c.Array!==Array&&(et.alloc=c.pool(et.alloc,c.Array.prototype.subarray)),et.prototype._push=function(ut,ht,pt){return this.tail=this.tail.next=new $(ut,ht,pt),this.len+=ht,this},j.prototype=Object.create($.prototype),j.prototype.fn=function(ut,ht,pt){for(;ut>127;)ht[pt++]=127&ut|128,ut>>>=7;ht[pt]=ut},et.prototype.uint32=function(ut){return this.len+=(this.tail=this.tail.next=new j((ut>>>=0)<128?1:ut<16384?2:ut<2097152?3:ut<268435456?4:5,ut)).len,this},et.prototype.int32=function(ut){return ut<0?this._push(nt,10,d.fromNumber(ut)):this.uint32(ut)},et.prototype.sint32=function(ut){return this.uint32((ut<<1^ut>>31)>>>0)},et.prototype.uint64=function(ut){var ht=d.from(ut);return this._push(nt,ht.length(),ht)},et.prototype.int64=et.prototype.uint64,et.prototype.sint64=function(ut){var ht=d.from(ut).zzEncode();return this._push(nt,ht.length(),ht)},et.prototype.bool=function(ut){return this._push(tt,1,ut?1:0)},et.prototype.fixed32=function(ut){return this._push(st,4,ut>>>0)},et.prototype.sfixed32=et.prototype.fixed32,et.prototype.fixed64=function(ut){var ht=d.from(ut);return this._push(st,4,ht.lo)._push(st,4,ht.hi)},et.prototype.sfixed64=et.prototype.fixed64,et.prototype.float=function(ut){return this._push(c.float.writeFloatLE,4,ut)},et.prototype.double=function(ut){return this._push(c.float.writeDoubleLE,8,ut)};var ot=c.Array.prototype.set?function(ut,ht,pt){ht.set(ut,pt)}:function(ut,ht,pt){for(var it=0;it<ut.length;++it)ht[pt+it]=ut[it]};et.prototype.bytes=function(ut){var ht=ut.length>>>0;if(!ht)return this._push(tt,1,0);if(c.isString(ut)){var pt=et.alloc(ht=g.length(ut));g.decode(ut,pt,0),ut=pt}return this.uint32(ht)._push(ot,ht,ut)},et.prototype.string=function(ut){var ht=b.length(ut);return ht?this.uint32(ht)._push(b.write,ht,ut):this._push(tt,1,0)},et.prototype.fork=function(){return this.states=new _e(this),this.head=this.tail=new $(_,0,0),this.len=0,this},et.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new $(_,0,0),this.len=0),this},et.prototype.ldelim=function(){var ut=this.head,ht=this.tail,pt=this.len;return this.reset().uint32(pt),pt&&(this.tail.next=ut.next,this.tail=ht,this.len+=pt),this},et.prototype.finish=function(){for(var ut=this.head.next,ht=this.constructor.alloc(this.len),pt=0;ut;)ut.fn(ut.val,ht,pt),pt+=ut.len,ut=ut.next;return ht},et._configure=function(ut){a=ut,et.create=rt(),a._configure()}},function(i,s,o){i.exports=$;var a,c=o(18),d=c.LongBits,g=c.utf8;function b(nt,st){return RangeError("index out of range: "+nt.pos+" + "+(st||1)+" > "+nt.len)}function $(nt){this.buf=nt,this.pos=0,this.len=nt.length}var _,_e=typeof Uint8Array<"u"?function(nt){if(nt instanceof Uint8Array||Array.isArray(nt))return new $(nt);throw Error("illegal buffer")}:function(nt){if(Array.isArray(nt))return new $(nt);throw Error("illegal buffer")},et=function(){return c.Buffer?function(nt){return($.create=function(st){return c.Buffer.isBuffer(st)?new a(st):_e(st)})(nt)}:_e};function rt(){var nt=new d(0,0),st=0;if(!(this.len-this.pos>4)){for(;st<3;++st){if(this.pos>=this.len)throw b(this);if(nt.lo=(nt.lo|(127&this.buf[this.pos])<<7*st)>>>0,this.buf[this.pos++]<128)return nt}return nt.lo=(nt.lo|(127&this.buf[this.pos++])<<7*st)>>>0,nt}for(;st<4;++st)if(nt.lo=(nt.lo|(127&this.buf[this.pos])<<7*st)>>>0,this.buf[this.pos++]<128)return nt;if(nt.lo=(nt.lo|(127&this.buf[this.pos])<<28)>>>0,nt.hi=(nt.hi|(127&this.buf[this.pos])>>4)>>>0,this.buf[this.pos++]<128)return nt;if(st=0,this.len-this.pos>4){for(;st<5;++st)if(nt.hi=(nt.hi|(127&this.buf[this.pos])<<7*st+3)>>>0,this.buf[this.pos++]<128)return nt}else for(;st<5;++st){if(this.pos>=this.len)throw b(this);if(nt.hi=(nt.hi|(127&this.buf[this.pos])<<7*st+3)>>>0,this.buf[this.pos++]<128)return nt}throw Error("invalid varint encoding")}function tt(nt,st){return(nt[st-4]|nt[st-3]<<8|nt[st-2]<<16|nt[st-1]<<24)>>>0}function j(){if(this.pos+8>this.len)throw b(this,8);return new d(tt(this.buf,this.pos+=4),tt(this.buf,this.pos+=4))}$.create=et(),$.prototype._slice=c.Array.prototype.subarray||c.Array.prototype.slice,$.prototype.uint32=(_=4294967295,function(){if(_=(127&this.buf[this.pos])>>>0,this.buf[this.pos++]<128||(_=(_|(127&this.buf[this.pos])<<7)>>>0,this.buf[this.pos++]<128)||(_=(_|(127&this.buf[this.pos])<<14)>>>0,this.buf[this.pos++]<128)||(_=(_|(127&this.buf[this.pos])<<21)>>>0,this.buf[this.pos++]<128)||(_=(_|(15&this.buf[this.pos])<<28)>>>0,this.buf[this.pos++]<128))return _;if((this.pos+=5)>this.len)throw this.pos=this.len,b(this,10);return _}),$.prototype.int32=function(){return 0|this.uint32()},$.prototype.sint32=function(){var nt=this.uint32();return nt>>>1^-(1&nt)|0},$.prototype.bool=function(){return this.uint32()!==0},$.prototype.fixed32=function(){if(this.pos+4>this.len)throw b(this,4);return tt(this.buf,this.pos+=4)},$.prototype.sfixed32=function(){if(this.pos+4>this.len)throw b(this,4);return 0|tt(this.buf,this.pos+=4)},$.prototype.float=function(){if(this.pos+4>this.len)throw b(this,4);var nt=c.float.readFloatLE(this.buf,this.pos);return this.pos+=4,nt},$.prototype.double=function(){if(this.pos+8>this.len)throw b(this,4);var nt=c.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,nt},$.prototype.bytes=function(){var nt=this.uint32(),st=this.pos,ot=this.pos+nt;if(ot>this.len)throw b(this,nt);return this.pos+=nt,Array.isArray(this.buf)?this.buf.slice(st,ot):st===ot?new this.buf.constructor(0):this._slice.call(this.buf,st,ot)},$.prototype.string=function(){var nt=this.bytes();return g.read(nt,0,nt.length)},$.prototype.skip=function(nt){if(typeof nt=="number"){if(this.pos+nt>this.len)throw b(this,nt);this.pos+=nt}else do if(this.pos>=this.len)throw b(this);while(128&this.buf[this.pos++]);return this},$.prototype.skipType=function(nt){switch(nt){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(nt=7&this.uint32())!=4;)this.skipType(nt);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+nt+" at offset "+this.pos)}return this},$._configure=function(nt){a=nt,$.create=et(),a._configure();var st=c.Long?"toLong":"toNumber";c.merge($.prototype,{int64:function(){return rt.call(this)[st](!1)},uint64:function(){return rt.call(this)[st](!0)},sint64:function(){return rt.call(this).zzDecode()[st](!1)},fixed64:function(){return j.call(this)[st](!0)},sfixed64:function(){return j.call(this)[st](!1)}})}},function(i,s,o){var a,c,d=o(49),g=d.Reader,b=d.Writer,$=d.util,_=d.roots.default||(d.roots.default={});_.tensorflow=((c={}).magenta=((a={}).NoteSequence=function(){function _e(tt){if(this.timeSignatures=[],this.keySignatures=[],this.tempos=[],this.notes=[],this.pitchBends=[],this.controlChanges=[],this.partInfos=[],this.textAnnotations=[],this.sectionAnnotations=[],this.sectionGroups=[],tt)for(var j=Object.keys(tt),nt=0;nt<j.length;++nt)tt[j[nt]]!=null&&(this[j[nt]]=tt[j[nt]])}var et,rt;return _e.prototype.id="",_e.prototype.filename="",_e.prototype.referenceNumber=$.Long?$.Long.fromBits(0,0,!1):0,_e.prototype.collectionName="",_e.prototype.ticksPerQuarter=0,_e.prototype.timeSignatures=$.emptyArray,_e.prototype.keySignatures=$.emptyArray,_e.prototype.tempos=$.emptyArray,_e.prototype.notes=$.emptyArray,_e.prototype.totalTime=0,_e.prototype.totalQuantizedSteps=$.Long?$.Long.fromBits(0,0,!1):0,_e.prototype.pitchBends=$.emptyArray,_e.prototype.controlChanges=$.emptyArray,_e.prototype.partInfos=$.emptyArray,_e.prototype.sourceInfo=null,_e.prototype.textAnnotations=$.emptyArray,_e.prototype.sectionAnnotations=$.emptyArray,_e.prototype.sectionGroups=$.emptyArray,_e.prototype.quantizationInfo=null,_e.prototype.subsequenceInfo=null,_e.prototype.sequenceMetadata=null,_e.create=function(tt){return new _e(tt)},_e.encode=function(tt,j){if(j||(j=b.create()),tt.id!=null&&tt.hasOwnProperty("id")&&j.uint32(10).string(tt.id),tt.filename!=null&&tt.hasOwnProperty("filename")&&j.uint32(18).string(tt.filename),tt.collectionName!=null&&tt.hasOwnProperty("collectionName")&&j.uint32(26).string(tt.collectionName),tt.ticksPerQuarter!=null&&tt.hasOwnProperty("ticksPerQuarter")&&j.uint32(32).int32(tt.ticksPerQuarter),tt.timeSignatures!=null&&tt.timeSignatures.length)for(var nt=0;nt<tt.timeSignatures.length;++nt)_.tensorflow.magenta.NoteSequence.TimeSignature.encode(tt.timeSignatures[nt],j.uint32(42).fork()).ldelim();if(tt.keySignatures!=null&&tt.keySignatures.length)for(nt=0;nt<tt.keySignatures.length;++nt)_.tensorflow.magenta.NoteSequence.KeySignature.encode(tt.keySignatures[nt],j.uint32(50).fork()).ldelim();if(tt.tempos!=null&&tt.tempos.length)for(nt=0;nt<tt.tempos.length;++nt)_.tensorflow.magenta.NoteSequence.Tempo.encode(tt.tempos[nt],j.uint32(58).fork()).ldelim();if(tt.notes!=null&&tt.notes.length)for(nt=0;nt<tt.notes.length;++nt)_.tensorflow.magenta.NoteSequence.Note.encode(tt.notes[nt],j.uint32(66).fork()).ldelim();if(tt.totalTime!=null&&tt.hasOwnProperty("totalTime")&&j.uint32(73).double(tt.totalTime),tt.pitchBends!=null&&tt.pitchBends.length)for(nt=0;nt<tt.pitchBends.length;++nt)_.tensorflow.magenta.NoteSequence.PitchBend.encode(tt.pitchBends[nt],j.uint32(82).fork()).ldelim();if(tt.controlChanges!=null&&tt.controlChanges.length)for(nt=0;nt<tt.controlChanges.length;++nt)_.tensorflow.magenta.NoteSequence.ControlChange.encode(tt.controlChanges[nt],j.uint32(90).fork()).ldelim();if(tt.partInfos!=null&&tt.partInfos.length)for(nt=0;nt<tt.partInfos.length;++nt)_.tensorflow.magenta.NoteSequence.PartInfo.encode(tt.partInfos[nt],j.uint32(98).fork()).ldelim();if(tt.sourceInfo!=null&&tt.hasOwnProperty("sourceInfo")&&_.tensorflow.magenta.NoteSequence.SourceInfo.encode(tt.sourceInfo,j.uint32(106).fork()).ldelim(),tt.textAnnotations!=null&&tt.textAnnotations.length)for(nt=0;nt<tt.textAnnotations.length;++nt)_.tensorflow.magenta.NoteSequence.TextAnnotation.encode(tt.textAnnotations[nt],j.uint32(114).fork()).ldelim();if(tt.quantizationInfo!=null&&tt.hasOwnProperty("quantizationInfo")&&_.tensorflow.magenta.NoteSequence.QuantizationInfo.encode(tt.quantizationInfo,j.uint32(122).fork()).ldelim(),tt.totalQuantizedSteps!=null&&tt.hasOwnProperty("totalQuantizedSteps")&&j.uint32(128).int64(tt.totalQuantizedSteps),tt.subsequenceInfo!=null&&tt.hasOwnProperty("subsequenceInfo")&&_.tensorflow.magenta.NoteSequence.SubsequenceInfo.encode(tt.subsequenceInfo,j.uint32(138).fork()).ldelim(),tt.referenceNumber!=null&&tt.hasOwnProperty("referenceNumber")&&j.uint32(144).int64(tt.referenceNumber),tt.sequenceMetadata!=null&&tt.hasOwnProperty("sequenceMetadata")&&_.tensorflow.magenta.SequenceMetadata.encode(tt.sequenceMetadata,j.uint32(154).fork()).ldelim(),tt.sectionAnnotations!=null&&tt.sectionAnnotations.length)for(nt=0;nt<tt.sectionAnnotations.length;++nt)_.tensorflow.magenta.NoteSequence.SectionAnnotation.encode(tt.sectionAnnotations[nt],j.uint32(162).fork()).ldelim();if(tt.sectionGroups!=null&&tt.sectionGroups.length)for(nt=0;nt<tt.sectionGroups.length;++nt)_.tensorflow.magenta.NoteSequence.SectionGroup.encode(tt.sectionGroups[nt],j.uint32(170).fork()).ldelim();return j},_e.encodeDelimited=function(tt,j){return this.encode(tt,j).ldelim()},_e.decode=function(tt,j){tt instanceof g||(tt=g.create(tt));for(var nt=j===void 0?tt.len:tt.pos+j,st=new _.tensorflow.magenta.NoteSequence;tt.pos<nt;){var ot=tt.uint32();switch(ot>>>3){case 1:st.id=tt.string();break;case 2:st.filename=tt.string();break;case 18:st.referenceNumber=$.Long?tt.int64().toNumber():tt.int64();break;case 3:st.collectionName=tt.string();break;case 4:st.ticksPerQuarter=tt.int32();break;case 5:st.timeSignatures&&st.timeSignatures.length||(st.timeSignatures=[]),st.timeSignatures.push(_.tensorflow.magenta.NoteSequence.TimeSignature.decode(tt,tt.uint32()));break;case 6:st.keySignatures&&st.keySignatures.length||(st.keySignatures=[]),st.keySignatures.push(_.tensorflow.magenta.NoteSequence.KeySignature.decode(tt,tt.uint32()));break;case 7:st.tempos&&st.tempos.length||(st.tempos=[]),st.tempos.push(_.tensorflow.magenta.NoteSequence.Tempo.decode(tt,tt.uint32()));break;case 8:st.notes&&st.notes.length||(st.notes=[]),st.notes.push(_.tensorflow.magenta.NoteSequence.Note.decode(tt,tt.uint32()));break;case 9:st.totalTime=tt.double();break;case 16:st.totalQuantizedSteps=$.Long?tt.int64().toNumber():tt.int64();break;case 10:st.pitchBends&&st.pitchBends.length||(st.pitchBends=[]),st.pitchBends.push(_.tensorflow.magenta.NoteSequence.PitchBend.decode(tt,tt.uint32()));break;case 11:st.controlChanges&&st.controlChanges.length||(st.controlChanges=[]),st.controlChanges.push(_.tensorflow.magenta.NoteSequence.ControlChange.decode(tt,tt.uint32()));break;case 12:st.partInfos&&st.partInfos.length||(st.partInfos=[]),st.partInfos.push(_.tensorflow.magenta.NoteSequence.PartInfo.decode(tt,tt.uint32()));break;case 13:st.sourceInfo=_.tensorflow.magenta.NoteSequence.SourceInfo.decode(tt,tt.uint32());break;case 14:st.textAnnotations&&st.textAnnotations.length||(st.textAnnotations=[]),st.textAnnotations.push(_.tensorflow.magenta.NoteSequence.TextAnnotation.decode(tt,tt.uint32()));break;case 20:st.sectionAnnotations&&st.sectionAnnotations.length||(st.sectionAnnotations=[]),st.sectionAnnotations.push(_.tensorflow.magenta.NoteSequence.SectionAnnotation.decode(tt,tt.uint32()));break;case 21:st.sectionGroups&&st.sectionGroups.length||(st.sectionGroups=[]),st.sectionGroups.push(_.tensorflow.magenta.NoteSequence.SectionGroup.decode(tt,tt.uint32()));break;case 15:st.quantizationInfo=_.tensorflow.magenta.NoteSequence.QuantizationInfo.decode(tt,tt.uint32());break;case 17:st.subsequenceInfo=_.tensorflow.magenta.NoteSequence.SubsequenceInfo.decode(tt,tt.uint32());break;case 19:st.sequenceMetadata=_.tensorflow.magenta.SequenceMetadata.decode(tt,tt.uint32());break;default:tt.skipType(7&ot)}}return st},_e.decodeDelimited=function(tt){return tt instanceof g||(tt=new g(tt)),this.decode(tt,tt.uint32())},_e.verify=function(tt){if(typeof tt!="object"||tt===null)return"object expected";if(tt.id!=null&&tt.hasOwnProperty("id")&&!$.isString(tt.id))return"id: string expected";if(tt.filename!=null&&tt.hasOwnProperty("filename")&&!$.isString(tt.filename))return"filename: string expected";if(tt.referenceNumber!=null&&tt.hasOwnProperty("referenceNumber")&&!($.isInteger(tt.referenceNumber)||tt.referenceNumber&&$.isInteger(tt.referenceNumber.low)&&$.isInteger(tt.referenceNumber.high)))return"referenceNumber: integer|Long expected";if(tt.collectionName!=null&&tt.hasOwnProperty("collectionName")&&!$.isString(tt.collectionName))return"collectionName: string expected";if(tt.ticksPerQuarter!=null&&tt.hasOwnProperty("ticksPerQuarter")&&!$.isInteger(tt.ticksPerQuarter))return"ticksPerQuarter: integer expected";if(tt.timeSignatures!=null&&tt.hasOwnProperty("timeSignatures")){if(!Array.isArray(tt.timeSignatures))return"timeSignatures: array expected";for(var j=0;j<tt.timeSignatures.length;++j)if(nt=_.tensorflow.magenta.NoteSequence.TimeSignature.verify(tt.timeSignatures[j]))return"timeSignatures."+nt}if(tt.keySignatures!=null&&tt.hasOwnProperty("keySignatures")){if(!Array.isArray(tt.keySignatures))return"keySignatures: array expected";for(j=0;j<tt.keySignatures.length;++j)if(nt=_.tensorflow.magenta.NoteSequence.KeySignature.verify(tt.keySignatures[j]))return"keySignatures."+nt}if(tt.tempos!=null&&tt.hasOwnProperty("tempos")){if(!Array.isArray(tt.tempos))return"tempos: array expected";for(j=0;j<tt.tempos.length;++j)if(nt=_.tensorflow.magenta.NoteSequence.Tempo.verify(tt.tempos[j]))return"tempos."+nt}if(tt.notes!=null&&tt.hasOwnProperty("notes")){if(!Array.isArray(tt.notes))return"notes: array expected";for(j=0;j<tt.notes.length;++j)if(nt=_.tensorflow.magenta.NoteSequence.Note.verify(tt.notes[j]))return"notes."+nt}if(tt.totalTime!=null&&tt.hasOwnProperty("totalTime")&&typeof tt.totalTime!="number")return"totalTime: number expected";if(tt.totalQuantizedSteps!=null&&tt.hasOwnProperty("totalQuantizedSteps")&&!($.isInteger(tt.totalQuantizedSteps)||tt.totalQuantizedSteps&&$.isInteger(tt.totalQuantizedSteps.low)&&$.isInteger(tt.totalQuantizedSteps.high)))return"totalQuantizedSteps: integer|Long expected";if(tt.pitchBends!=null&&tt.hasOwnProperty("pitchBends")){if(!Array.isArray(tt.pitchBends))return"pitchBends: array expected";for(j=0;j<tt.pitchBends.length;++j)if(nt=_.tensorflow.magenta.NoteSequence.PitchBend.verify(tt.pitchBends[j]))return"pitchBends."+nt}if(tt.controlChanges!=null&&tt.hasOwnProperty("controlChanges")){if(!Array.isArray(tt.controlChanges))return"controlChanges: array expected";for(j=0;j<tt.controlChanges.length;++j)if(nt=_.tensorflow.magenta.NoteSequence.ControlChange.verify(tt.controlChanges[j]))return"controlChanges."+nt}if(tt.partInfos!=null&&tt.hasOwnProperty("partInfos")){if(!Array.isArray(tt.partInfos))return"partInfos: array expected";for(j=0;j<tt.partInfos.length;++j)if(nt=_.tensorflow.magenta.NoteSequence.PartInfo.verify(tt.partInfos[j]))return"partInfos."+nt}if(tt.sourceInfo!=null&&tt.hasOwnProperty("sourceInfo")&&(nt=_.tensorflow.magenta.NoteSequence.SourceInfo.verify(tt.sourceInfo)))return"sourceInfo."+nt;if(tt.textAnnotations!=null&&tt.hasOwnProperty("textAnnotations")){if(!Array.isArray(tt.textAnnotations))return"textAnnotations: array expected";for(j=0;j<tt.textAnnotations.length;++j)if(nt=_.tensorflow.magenta.NoteSequence.TextAnnotation.verify(tt.textAnnotations[j]))return"textAnnotations."+nt}if(tt.sectionAnnotations!=null&&tt.hasOwnProperty("sectionAnnotations")){if(!Array.isArray(tt.sectionAnnotations))return"sectionAnnotations: array expected";for(j=0;j<tt.sectionAnnotations.length;++j)if(nt=_.tensorflow.magenta.NoteSequence.SectionAnnotation.verify(tt.sectionAnnotations[j]))return"sectionAnnotations."+nt}if(tt.sectionGroups!=null&&tt.hasOwnProperty("sectionGroups")){if(!Array.isArray(tt.sectionGroups))return"sectionGroups: array expected";for(j=0;j<tt.sectionGroups.length;++j){var nt;if(nt=_.tensorflow.magenta.NoteSequence.SectionGroup.verify(tt.sectionGroups[j]))return"sectionGroups."+nt}}return tt.quantizationInfo!=null&&tt.hasOwnProperty("quantizationInfo")&&(nt=_.tensorflow.magenta.NoteSequence.QuantizationInfo.verify(tt.quantizationInfo))?"quantizationInfo."+nt:tt.subsequenceInfo!=null&&tt.hasOwnProperty("subsequenceInfo")&&(nt=_.tensorflow.magenta.NoteSequence.SubsequenceInfo.verify(tt.subsequenceInfo))?"subsequenceInfo."+nt:tt.sequenceMetadata!=null&&tt.hasOwnProperty("sequenceMetadata")&&(nt=_.tensorflow.magenta.SequenceMetadata.verify(tt.sequenceMetadata))?"sequenceMetadata."+nt:null},_e.fromObject=function(tt){if(tt instanceof _.tensorflow.magenta.NoteSequence)return tt;var j=new _.tensorflow.magenta.NoteSequence;if(tt.id!=null&&(j.id=String(tt.id)),tt.filename!=null&&(j.filename=String(tt.filename)),tt.referenceNumber!=null&&($.Long?(j.referenceNumber=$.Long.fromValue(tt.referenceNumber)).unsigned=!1:typeof tt.referenceNumber=="string"?j.referenceNumber=parseInt(tt.referenceNumber,10):typeof tt.referenceNumber=="number"?j.referenceNumber=tt.referenceNumber:typeof tt.referenceNumber=="object"&&(j.referenceNumber=new $.LongBits(tt.referenceNumber.low>>>0,tt.referenceNumber.high>>>0).toNumber())),tt.collectionName!=null&&(j.collectionName=String(tt.collectionName)),tt.ticksPerQuarter!=null&&(j.ticksPerQuarter=0|tt.ticksPerQuarter),tt.timeSignatures){if(!Array.isArray(tt.timeSignatures))throw TypeError(".tensorflow.magenta.NoteSequence.timeSignatures: array expected");j.timeSignatures=[];for(var nt=0;nt<tt.timeSignatures.length;++nt){if(typeof tt.timeSignatures[nt]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.timeSignatures: object expected");j.timeSignatures[nt]=_.tensorflow.magenta.NoteSequence.TimeSignature.fromObject(tt.timeSignatures[nt])}}if(tt.keySignatures){if(!Array.isArray(tt.keySignatures))throw TypeError(".tensorflow.magenta.NoteSequence.keySignatures: array expected");for(j.keySignatures=[],nt=0;nt<tt.keySignatures.length;++nt){if(typeof tt.keySignatures[nt]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.keySignatures: object expected");j.keySignatures[nt]=_.tensorflow.magenta.NoteSequence.KeySignature.fromObject(tt.keySignatures[nt])}}if(tt.tempos){if(!Array.isArray(tt.tempos))throw TypeError(".tensorflow.magenta.NoteSequence.tempos: array expected");for(j.tempos=[],nt=0;nt<tt.tempos.length;++nt){if(typeof tt.tempos[nt]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.tempos: object expected");j.tempos[nt]=_.tensorflow.magenta.NoteSequence.Tempo.fromObject(tt.tempos[nt])}}if(tt.notes){if(!Array.isArray(tt.notes))throw TypeError(".tensorflow.magenta.NoteSequence.notes: array expected");for(j.notes=[],nt=0;nt<tt.notes.length;++nt){if(typeof tt.notes[nt]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.notes: object expected");j.notes[nt]=_.tensorflow.magenta.NoteSequence.Note.fromObject(tt.notes[nt])}}if(tt.totalTime!=null&&(j.totalTime=Number(tt.totalTime)),tt.totalQuantizedSteps!=null&&($.Long?(j.totalQuantizedSteps=$.Long.fromValue(tt.totalQuantizedSteps)).unsigned=!1:typeof tt.totalQuantizedSteps=="string"?j.totalQuantizedSteps=parseInt(tt.totalQuantizedSteps,10):typeof tt.totalQuantizedSteps=="number"?j.totalQuantizedSteps=tt.totalQuantizedSteps:typeof tt.totalQuantizedSteps=="object"&&(j.totalQuantizedSteps=new $.LongBits(tt.totalQuantizedSteps.low>>>0,tt.totalQuantizedSteps.high>>>0).toNumber())),tt.pitchBends){if(!Array.isArray(tt.pitchBends))throw TypeError(".tensorflow.magenta.NoteSequence.pitchBends: array expected");for(j.pitchBends=[],nt=0;nt<tt.pitchBends.length;++nt){if(typeof tt.pitchBends[nt]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.pitchBends: object expected");j.pitchBends[nt]=_.tensorflow.magenta.NoteSequence.PitchBend.fromObject(tt.pitchBends[nt])}}if(tt.controlChanges){if(!Array.isArray(tt.controlChanges))throw TypeError(".tensorflow.magenta.NoteSequence.controlChanges: array expected");for(j.controlChanges=[],nt=0;nt<tt.controlChanges.length;++nt){if(typeof tt.controlChanges[nt]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.controlChanges: object expected");j.controlChanges[nt]=_.tensorflow.magenta.NoteSequence.ControlChange.fromObject(tt.controlChanges[nt])}}if(tt.partInfos){if(!Array.isArray(tt.partInfos))throw TypeError(".tensorflow.magenta.NoteSequence.partInfos: array expected");for(j.partInfos=[],nt=0;nt<tt.partInfos.length;++nt){if(typeof tt.partInfos[nt]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.partInfos: object expected");j.partInfos[nt]=_.tensorflow.magenta.NoteSequence.PartInfo.fromObject(tt.partInfos[nt])}}if(tt.sourceInfo!=null){if(typeof tt.sourceInfo!="object")throw TypeError(".tensorflow.magenta.NoteSequence.sourceInfo: object expected");j.sourceInfo=_.tensorflow.magenta.NoteSequence.SourceInfo.fromObject(tt.sourceInfo)}if(tt.textAnnotations){if(!Array.isArray(tt.textAnnotations))throw TypeError(".tensorflow.magenta.NoteSequence.textAnnotations: array expected");for(j.textAnnotations=[],nt=0;nt<tt.textAnnotations.length;++nt){if(typeof tt.textAnnotations[nt]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.textAnnotations: object expected");j.textAnnotations[nt]=_.tensorflow.magenta.NoteSequence.TextAnnotation.fromObject(tt.textAnnotations[nt])}}if(tt.sectionAnnotations){if(!Array.isArray(tt.sectionAnnotations))throw TypeError(".tensorflow.magenta.NoteSequence.sectionAnnotations: array expected");for(j.sectionAnnotations=[],nt=0;nt<tt.sectionAnnotations.length;++nt){if(typeof tt.sectionAnnotations[nt]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.sectionAnnotations: object expected");j.sectionAnnotations[nt]=_.tensorflow.magenta.NoteSequence.SectionAnnotation.fromObject(tt.sectionAnnotations[nt])}}if(tt.sectionGroups){if(!Array.isArray(tt.sectionGroups))throw TypeError(".tensorflow.magenta.NoteSequence.sectionGroups: array expected");for(j.sectionGroups=[],nt=0;nt<tt.sectionGroups.length;++nt){if(typeof tt.sectionGroups[nt]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.sectionGroups: object expected");j.sectionGroups[nt]=_.tensorflow.magenta.NoteSequence.SectionGroup.fromObject(tt.sectionGroups[nt])}}if(tt.quantizationInfo!=null){if(typeof tt.quantizationInfo!="object")throw TypeError(".tensorflow.magenta.NoteSequence.quantizationInfo: object expected");j.quantizationInfo=_.tensorflow.magenta.NoteSequence.QuantizationInfo.fromObject(tt.quantizationInfo)}if(tt.subsequenceInfo!=null){if(typeof tt.subsequenceInfo!="object")throw TypeError(".tensorflow.magenta.NoteSequence.subsequenceInfo: object expected");j.subsequenceInfo=_.tensorflow.magenta.NoteSequence.SubsequenceInfo.fromObject(tt.subsequenceInfo)}if(tt.sequenceMetadata!=null){if(typeof tt.sequenceMetadata!="object")throw TypeError(".tensorflow.magenta.NoteSequence.sequenceMetadata: object expected");j.sequenceMetadata=_.tensorflow.magenta.SequenceMetadata.fromObject(tt.sequenceMetadata)}return j},_e.toObject=function(tt,j){j||(j={});var nt={};if((j.arrays||j.defaults)&&(nt.timeSignatures=[],nt.keySignatures=[],nt.tempos=[],nt.notes=[],nt.pitchBends=[],nt.controlChanges=[],nt.partInfos=[],nt.textAnnotations=[],nt.sectionAnnotations=[],nt.sectionGroups=[]),j.defaults){if(nt.id="",nt.filename="",nt.collectionName="",nt.ticksPerQuarter=0,nt.totalTime=0,nt.sourceInfo=null,nt.quantizationInfo=null,$.Long){var st=new $.Long(0,0,!1);nt.totalQuantizedSteps=j.longs===String?st.toString():j.longs===Number?st.toNumber():st}else nt.totalQuantizedSteps=j.longs===String?"0":0;nt.subsequenceInfo=null,$.Long?(st=new $.Long(0,0,!1),nt.referenceNumber=j.longs===String?st.toString():j.longs===Number?st.toNumber():st):nt.referenceNumber=j.longs===String?"0":0,nt.sequenceMetadata=null}if(tt.id!=null&&tt.hasOwnProperty("id")&&(nt.id=tt.id),tt.filename!=null&&tt.hasOwnProperty("filename")&&(nt.filename=tt.filename),tt.collectionName!=null&&tt.hasOwnProperty("collectionName")&&(nt.collectionName=tt.collectionName),tt.ticksPerQuarter!=null&&tt.hasOwnProperty("ticksPerQuarter")&&(nt.ticksPerQuarter=tt.ticksPerQuarter),tt.timeSignatures&&tt.timeSignatures.length){nt.timeSignatures=[];for(var ot=0;ot<tt.timeSignatures.length;++ot)nt.timeSignatures[ot]=_.tensorflow.magenta.NoteSequence.TimeSignature.toObject(tt.timeSignatures[ot],j)}if(tt.keySignatures&&tt.keySignatures.length)for(nt.keySignatures=[],ot=0;ot<tt.keySignatures.length;++ot)nt.keySignatures[ot]=_.tensorflow.magenta.NoteSequence.KeySignature.toObject(tt.keySignatures[ot],j);if(tt.tempos&&tt.tempos.length)for(nt.tempos=[],ot=0;ot<tt.tempos.length;++ot)nt.tempos[ot]=_.tensorflow.magenta.NoteSequence.Tempo.toObject(tt.tempos[ot],j);if(tt.notes&&tt.notes.length)for(nt.notes=[],ot=0;ot<tt.notes.length;++ot)nt.notes[ot]=_.tensorflow.magenta.NoteSequence.Note.toObject(tt.notes[ot],j);if(tt.totalTime!=null&&tt.hasOwnProperty("totalTime")&&(nt.totalTime=j.json&&!isFinite(tt.totalTime)?String(tt.totalTime):tt.totalTime),tt.pitchBends&&tt.pitchBends.length)for(nt.pitchBends=[],ot=0;ot<tt.pitchBends.length;++ot)nt.pitchBends[ot]=_.tensorflow.magenta.NoteSequence.PitchBend.toObject(tt.pitchBends[ot],j);if(tt.controlChanges&&tt.controlChanges.length)for(nt.controlChanges=[],ot=0;ot<tt.controlChanges.length;++ot)nt.controlChanges[ot]=_.tensorflow.magenta.NoteSequence.ControlChange.toObject(tt.controlChanges[ot],j);if(tt.partInfos&&tt.partInfos.length)for(nt.partInfos=[],ot=0;ot<tt.partInfos.length;++ot)nt.partInfos[ot]=_.tensorflow.magenta.NoteSequence.PartInfo.toObject(tt.partInfos[ot],j);if(tt.sourceInfo!=null&&tt.hasOwnProperty("sourceInfo")&&(nt.sourceInfo=_.tensorflow.magenta.NoteSequence.SourceInfo.toObject(tt.sourceInfo,j)),tt.textAnnotations&&tt.textAnnotations.length)for(nt.textAnnotations=[],ot=0;ot<tt.textAnnotations.length;++ot)nt.textAnnotations[ot]=_.tensorflow.magenta.NoteSequence.TextAnnotation.toObject(tt.textAnnotations[ot],j);if(tt.quantizationInfo!=null&&tt.hasOwnProperty("quantizationInfo")&&(nt.quantizationInfo=_.tensorflow.magenta.NoteSequence.QuantizationInfo.toObject(tt.quantizationInfo,j)),tt.totalQuantizedSteps!=null&&tt.hasOwnProperty("totalQuantizedSteps")&&(typeof tt.totalQuantizedSteps=="number"?nt.totalQuantizedSteps=j.longs===String?String(tt.totalQuantizedSteps):tt.totalQuantizedSteps:nt.totalQuantizedSteps=j.longs===String?$.Long.prototype.toString.call(tt.totalQuantizedSteps):j.longs===Number?new $.LongBits(tt.totalQuantizedSteps.low>>>0,tt.totalQuantizedSteps.high>>>0).toNumber():tt.totalQuantizedSteps),tt.subsequenceInfo!=null&&tt.hasOwnProperty("subsequenceInfo")&&(nt.subsequenceInfo=_.tensorflow.magenta.NoteSequence.SubsequenceInfo.toObject(tt.subsequenceInfo,j)),tt.referenceNumber!=null&&tt.hasOwnProperty("referenceNumber")&&(typeof tt.referenceNumber=="number"?nt.referenceNumber=j.longs===String?String(tt.referenceNumber):tt.referenceNumber:nt.referenceNumber=j.longs===String?$.Long.prototype.toString.call(tt.referenceNumber):j.longs===Number?new $.LongBits(tt.referenceNumber.low>>>0,tt.referenceNumber.high>>>0).toNumber():tt.referenceNumber),tt.sequenceMetadata!=null&&tt.hasOwnProperty("sequenceMetadata")&&(nt.sequenceMetadata=_.tensorflow.magenta.SequenceMetadata.toObject(tt.sequenceMetadata,j)),tt.sectionAnnotations&&tt.sectionAnnotations.length)for(nt.sectionAnnotations=[],ot=0;ot<tt.sectionAnnotations.length;++ot)nt.sectionAnnotations[ot]=_.tensorflow.magenta.NoteSequence.SectionAnnotation.toObject(tt.sectionAnnotations[ot],j);if(tt.sectionGroups&&tt.sectionGroups.length)for(nt.sectionGroups=[],ot=0;ot<tt.sectionGroups.length;++ot)nt.sectionGroups[ot]=_.tensorflow.magenta.NoteSequence.SectionGroup.toObject(tt.sectionGroups[ot],j);return nt},_e.prototype.toJSON=function(){return this.constructor.toObject(this,d.util.toJSONOptions)},_e.Note=function(){function tt(j){if(j)for(var nt=Object.keys(j),st=0;st<nt.length;++st)j[nt[st]]!=null&&(this[nt[st]]=j[nt[st]])}return tt.prototype.pitch=0,tt.prototype.pitchName=0,tt.prototype.velocity=0,tt.prototype.startTime=0,tt.prototype.quantizedStartStep=$.Long?$.Long.fromBits(0,0,!1):0,tt.prototype.endTime=0,tt.prototype.quantizedEndStep=$.Long?$.Long.fromBits(0,0,!1):0,tt.prototype.numerator=0,tt.prototype.denominator=0,tt.prototype.instrument=0,tt.prototype.program=0,tt.prototype.isDrum=!1,tt.prototype.part=0,tt.prototype.voice=0,tt.create=function(j){return new tt(j)},tt.encode=function(j,nt){return nt||(nt=b.create()),j.pitch!=null&&j.hasOwnProperty("pitch")&&nt.uint32(8).int32(j.pitch),j.velocity!=null&&j.hasOwnProperty("velocity")&&nt.uint32(16).int32(j.velocity),j.startTime!=null&&j.hasOwnProperty("startTime")&&nt.uint32(25).double(j.startTime),j.endTime!=null&&j.hasOwnProperty("endTime")&&nt.uint32(33).double(j.endTime),j.numerator!=null&&j.hasOwnProperty("numerator")&&nt.uint32(40).int32(j.numerator),j.denominator!=null&&j.hasOwnProperty("denominator")&&nt.uint32(48).int32(j.denominator),j.instrument!=null&&j.hasOwnProperty("instrument")&&nt.uint32(56).int32(j.instrument),j.program!=null&&j.hasOwnProperty("program")&&nt.uint32(64).int32(j.program),j.isDrum!=null&&j.hasOwnProperty("isDrum")&&nt.uint32(72).bool(j.isDrum),j.part!=null&&j.hasOwnProperty("part")&&nt.uint32(80).int32(j.part),j.pitchName!=null&&j.hasOwnProperty("pitchName")&&nt.uint32(88).int32(j.pitchName),j.voice!=null&&j.hasOwnProperty("voice")&&nt.uint32(96).int32(j.voice),j.quantizedStartStep!=null&&j.hasOwnProperty("quantizedStartStep")&&nt.uint32(104).int64(j.quantizedStartStep),j.quantizedEndStep!=null&&j.hasOwnProperty("quantizedEndStep")&&nt.uint32(112).int64(j.quantizedEndStep),nt},tt.encodeDelimited=function(j,nt){return this.encode(j,nt).ldelim()},tt.decode=function(j,nt){j instanceof g||(j=g.create(j));for(var st=nt===void 0?j.len:j.pos+nt,ot=new _.tensorflow.magenta.NoteSequence.Note;j.pos<st;){var ut=j.uint32();switch(ut>>>3){case 1:ot.pitch=j.int32();break;case 11:ot.pitchName=j.int32();break;case 2:ot.velocity=j.int32();break;case 3:ot.startTime=j.double();break;case 13:ot.quantizedStartStep=$.Long?j.int64().toNumber():j.int64();break;case 4:ot.endTime=j.double();break;case 14:ot.quantizedEndStep=$.Long?j.int64().toNumber():j.int64();break;case 5:ot.numerator=j.int32();break;case 6:ot.denominator=j.int32();break;case 7:ot.instrument=j.int32();break;case 8:ot.program=j.int32();break;case 9:ot.isDrum=j.bool();break;case 10:ot.part=j.int32();break;case 12:ot.voice=j.int32();break;default:j.skipType(7&ut)}}return ot},tt.decodeDelimited=function(j){return j instanceof g||(j=new g(j)),this.decode(j,j.uint32())},tt.verify=function(j){if(typeof j!="object"||j===null)return"object expected";if(j.pitch!=null&&j.hasOwnProperty("pitch")&&!$.isInteger(j.pitch))return"pitch: integer expected";if(j.pitchName!=null&&j.hasOwnProperty("pitchName"))switch(j.pitchName){default:return"pitchName: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 31:case 32:case 33:case 34:case 35:}return j.velocity!=null&&j.hasOwnProperty("velocity")&&!$.isInteger(j.velocity)?"velocity: integer expected":j.startTime!=null&&j.hasOwnProperty("startTime")&&typeof j.startTime!="number"?"startTime: number expected":j.quantizedStartStep!=null&&j.hasOwnProperty("quantizedStartStep")&&!($.isInteger(j.quantizedStartStep)||j.quantizedStartStep&&$.isInteger(j.quantizedStartStep.low)&&$.isInteger(j.quantizedStartStep.high))?"quantizedStartStep: integer|Long expected":j.endTime!=null&&j.hasOwnProperty("endTime")&&typeof j.endTime!="number"?"endTime: number expected":j.quantizedEndStep!=null&&j.hasOwnProperty("quantizedEndStep")&&!($.isInteger(j.quantizedEndStep)||j.quantizedEndStep&&$.isInteger(j.quantizedEndStep.low)&&$.isInteger(j.quantizedEndStep.high))?"quantizedEndStep: integer|Long expected":j.numerator!=null&&j.hasOwnProperty("numerator")&&!$.isInteger(j.numerator)?"numerator: integer expected":j.denominator!=null&&j.hasOwnProperty("denominator")&&!$.isInteger(j.denominator)?"denominator: integer expected":j.instrument!=null&&j.hasOwnProperty("instrument")&&!$.isInteger(j.instrument)?"instrument: integer expected":j.program!=null&&j.hasOwnProperty("program")&&!$.isInteger(j.program)?"program: integer expected":j.isDrum!=null&&j.hasOwnProperty("isDrum")&&typeof j.isDrum!="boolean"?"isDrum: boolean expected":j.part!=null&&j.hasOwnProperty("part")&&!$.isInteger(j.part)?"part: integer expected":j.voice!=null&&j.hasOwnProperty("voice")&&!$.isInteger(j.voice)?"voice: integer expected":null},tt.fromObject=function(j){if(j instanceof _.tensorflow.magenta.NoteSequence.Note)return j;var nt=new _.tensorflow.magenta.NoteSequence.Note;switch(j.pitch!=null&&(nt.pitch=0|j.pitch),j.pitchName){case"UNKNOWN_PITCH_NAME":case 0:nt.pitchName=0;break;case"F_FLAT_FLAT":case 1:nt.pitchName=1;break;case"C_FLAT_FLAT":case 2:nt.pitchName=2;break;case"G_FLAT_FLAT":case 3:nt.pitchName=3;break;case"D_FLAT_FLAT":case 4:nt.pitchName=4;break;case"A_FLAT_FLAT":case 5:nt.pitchName=5;break;case"E_FLAT_FLAT":case 6:nt.pitchName=6;break;case"B_FLAT_FLAT":case 7:nt.pitchName=7;break;case"F_FLAT":case 8:nt.pitchName=8;break;case"C_FLAT":case 9:nt.pitchName=9;break;case"G_FLAT":case 10:nt.pitchName=10;break;case"D_FLAT":case 11:nt.pitchName=11;break;case"A_FLAT":case 12:nt.pitchName=12;break;case"E_FLAT":case 13:nt.pitchName=13;break;case"B_FLAT":case 14:nt.pitchName=14;break;case"F":case 15:nt.pitchName=15;break;case"C":case 16:nt.pitchName=16;break;case"G":case 17:nt.pitchName=17;break;case"D":case 18:nt.pitchName=18;break;case"A":case 19:nt.pitchName=19;break;case"E":case 20:nt.pitchName=20;break;case"B":case 21:nt.pitchName=21;break;case"F_SHARP":case 22:nt.pitchName=22;break;case"C_SHARP":case 23:nt.pitchName=23;break;case"G_SHARP":case 24:nt.pitchName=24;break;case"D_SHARP":case 25:nt.pitchName=25;break;case"A_SHARP":case 26:nt.pitchName=26;break;case"E_SHARP":case 27:nt.pitchName=27;break;case"B_SHARP":case 28:nt.pitchName=28;break;case"F_SHARP_SHARP":case 29:nt.pitchName=29;break;case"C_SHARP_SHARP":case 30:nt.pitchName=30;break;case"G_SHARP_SHARP":case 31:nt.pitchName=31;break;case"D_SHARP_SHARP":case 32:nt.pitchName=32;break;case"A_SHARP_SHARP":case 33:nt.pitchName=33;break;case"E_SHARP_SHARP":case 34:nt.pitchName=34;break;case"B_SHARP_SHARP":case 35:nt.pitchName=35}return j.velocity!=null&&(nt.velocity=0|j.velocity),j.startTime!=null&&(nt.startTime=Number(j.startTime)),j.quantizedStartStep!=null&&($.Long?(nt.quantizedStartStep=$.Long.fromValue(j.quantizedStartStep)).unsigned=!1:typeof j.quantizedStartStep=="string"?nt.quantizedStartStep=parseInt(j.quantizedStartStep,10):typeof j.quantizedStartStep=="number"?nt.quantizedStartStep=j.quantizedStartStep:typeof j.quantizedStartStep=="object"&&(nt.quantizedStartStep=new $.LongBits(j.quantizedStartStep.low>>>0,j.quantizedStartStep.high>>>0).toNumber())),j.endTime!=null&&(nt.endTime=Number(j.endTime)),j.quantizedEndStep!=null&&($.Long?(nt.quantizedEndStep=$.Long.fromValue(j.quantizedEndStep)).unsigned=!1:typeof j.quantizedEndStep=="string"?nt.quantizedEndStep=parseInt(j.quantizedEndStep,10):typeof j.quantizedEndStep=="number"?nt.quantizedEndStep=j.quantizedEndStep:typeof j.quantizedEndStep=="object"&&(nt.quantizedEndStep=new $.LongBits(j.quantizedEndStep.low>>>0,j.quantizedEndStep.high>>>0).toNumber())),j.numerator!=null&&(nt.numerator=0|j.numerator),j.denominator!=null&&(nt.denominator=0|j.denominator),j.instrument!=null&&(nt.instrument=0|j.instrument),j.program!=null&&(nt.program=0|j.program),j.isDrum!=null&&(nt.isDrum=!!j.isDrum),j.part!=null&&(nt.part=0|j.part),j.voice!=null&&(nt.voice=0|j.voice),nt},tt.toObject=function(j,nt){nt||(nt={});var st={};if(nt.defaults){if(st.pitch=0,st.velocity=0,st.startTime=0,st.endTime=0,st.numerator=0,st.denominator=0,st.instrument=0,st.program=0,st.isDrum=!1,st.part=0,st.pitchName=nt.enums===String?"UNKNOWN_PITCH_NAME":0,st.voice=0,$.Long){var ot=new $.Long(0,0,!1);st.quantizedStartStep=nt.longs===String?ot.toString():nt.longs===Number?ot.toNumber():ot}else st.quantizedStartStep=nt.longs===String?"0":0;$.Long?(ot=new $.Long(0,0,!1),st.quantizedEndStep=nt.longs===String?ot.toString():nt.longs===Number?ot.toNumber():ot):st.quantizedEndStep=nt.longs===String?"0":0}return j.pitch!=null&&j.hasOwnProperty("pitch")&&(st.pitch=j.pitch),j.velocity!=null&&j.hasOwnProperty("velocity")&&(st.velocity=j.velocity),j.startTime!=null&&j.hasOwnProperty("startTime")&&(st.startTime=nt.json&&!isFinite(j.startTime)?String(j.startTime):j.startTime),j.endTime!=null&&j.hasOwnProperty("endTime")&&(st.endTime=nt.json&&!isFinite(j.endTime)?String(j.endTime):j.endTime),j.numerator!=null&&j.hasOwnProperty("numerator")&&(st.numerator=j.numerator),j.denominator!=null&&j.hasOwnProperty("denominator")&&(st.denominator=j.denominator),j.instrument!=null&&j.hasOwnProperty("instrument")&&(st.instrument=j.instrument),j.program!=null&&j.hasOwnProperty("program")&&(st.program=j.program),j.isDrum!=null&&j.hasOwnProperty("isDrum")&&(st.isDrum=j.isDrum),j.part!=null&&j.hasOwnProperty("part")&&(st.part=j.part),j.pitchName!=null&&j.hasOwnProperty("pitchName")&&(st.pitchName=nt.enums===String?_.tensorflow.magenta.NoteSequence.PitchName[j.pitchName]:j.pitchName),j.voice!=null&&j.hasOwnProperty("voice")&&(st.voice=j.voice),j.quantizedStartStep!=null&&j.hasOwnProperty("quantizedStartStep")&&(typeof j.quantizedStartStep=="number"?st.quantizedStartStep=nt.longs===String?String(j.quantizedStartStep):j.quantizedStartStep:st.quantizedStartStep=nt.longs===String?$.Long.prototype.toString.call(j.quantizedStartStep):nt.longs===Number?new $.LongBits(j.quantizedStartStep.low>>>0,j.quantizedStartStep.high>>>0).toNumber():j.quantizedStartStep),j.quantizedEndStep!=null&&j.hasOwnProperty("quantizedEndStep")&&(typeof j.quantizedEndStep=="number"?st.quantizedEndStep=nt.longs===String?String(j.quantizedEndStep):j.quantizedEndStep:st.quantizedEndStep=nt.longs===String?$.Long.prototype.toString.call(j.quantizedEndStep):nt.longs===Number?new $.LongBits(j.quantizedEndStep.low>>>0,j.quantizedEndStep.high>>>0).toNumber():j.quantizedEndStep),st},tt.prototype.toJSON=function(){return this.constructor.toObject(this,d.util.toJSONOptions)},tt}(),_e.PitchName=(et={},(rt=Object.create(et))[et[0]="UNKNOWN_PITCH_NAME"]=0,rt[et[1]="F_FLAT_FLAT"]=1,rt[et[2]="C_FLAT_FLAT"]=2,rt[et[3]="G_FLAT_FLAT"]=3,rt[et[4]="D_FLAT_FLAT"]=4,rt[et[5]="A_FLAT_FLAT"]=5,rt[et[6]="E_FLAT_FLAT"]=6,rt[et[7]="B_FLAT_FLAT"]=7,rt[et[8]="F_FLAT"]=8,rt[et[9]="C_FLAT"]=9,rt[et[10]="G_FLAT"]=10,rt[et[11]="D_FLAT"]=11,rt[et[12]="A_FLAT"]=12,rt[et[13]="E_FLAT"]=13,rt[et[14]="B_FLAT"]=14,rt[et[15]="F"]=15,rt[et[16]="C"]=16,rt[et[17]="G"]=17,rt[et[18]="D"]=18,rt[et[19]="A"]=19,rt[et[20]="E"]=20,rt[et[21]="B"]=21,rt[et[22]="F_SHARP"]=22,rt[et[23]="C_SHARP"]=23,rt[et[24]="G_SHARP"]=24,rt[et[25]="D_SHARP"]=25,rt[et[26]="A_SHARP"]=26,rt[et[27]="E_SHARP"]=27,rt[et[28]="B_SHARP"]=28,rt[et[29]="F_SHARP_SHARP"]=29,rt[et[30]="C_SHARP_SHARP"]=30,rt[et[31]="G_SHARP_SHARP"]=31,rt[et[32]="D_SHARP_SHARP"]=32,rt[et[33]="A_SHARP_SHARP"]=33,rt[et[34]="E_SHARP_SHARP"]=34,rt[et[35]="B_SHARP_SHARP"]=35,rt),_e.TimeSignature=function(){function tt(j){if(j)for(var nt=Object.keys(j),st=0;st<nt.length;++st)j[nt[st]]!=null&&(this[nt[st]]=j[nt[st]])}return tt.prototype.time=0,tt.prototype.numerator=0,tt.prototype.denominator=0,tt.create=function(j){return new tt(j)},tt.encode=function(j,nt){return nt||(nt=b.create()),j.time!=null&&j.hasOwnProperty("time")&&nt.uint32(9).double(j.time),j.numerator!=null&&j.hasOwnProperty("numerator")&&nt.uint32(16).int32(j.numerator),j.denominator!=null&&j.hasOwnProperty("denominator")&&nt.uint32(24).int32(j.denominator),nt},tt.encodeDelimited=function(j,nt){return this.encode(j,nt).ldelim()},tt.decode=function(j,nt){j instanceof g||(j=g.create(j));for(var st=nt===void 0?j.len:j.pos+nt,ot=new _.tensorflow.magenta.NoteSequence.TimeSignature;j.pos<st;){var ut=j.uint32();switch(ut>>>3){case 1:ot.time=j.double();break;case 2:ot.numerator=j.int32();break;case 3:ot.denominator=j.int32();break;default:j.skipType(7&ut)}}return ot},tt.decodeDelimited=function(j){return j instanceof g||(j=new g(j)),this.decode(j,j.uint32())},tt.verify=function(j){return typeof j!="object"||j===null?"object expected":j.time!=null&&j.hasOwnProperty("time")&&typeof j.time!="number"?"time: number expected":j.numerator!=null&&j.hasOwnProperty("numerator")&&!$.isInteger(j.numerator)?"numerator: integer expected":j.denominator!=null&&j.hasOwnProperty("denominator")&&!$.isInteger(j.denominator)?"denominator: integer expected":null},tt.fromObject=function(j){if(j instanceof _.tensorflow.magenta.NoteSequence.TimeSignature)return j;var nt=new _.tensorflow.magenta.NoteSequence.TimeSignature;return j.time!=null&&(nt.time=Number(j.time)),j.numerator!=null&&(nt.numerator=0|j.numerator),j.denominator!=null&&(nt.denominator=0|j.denominator),nt},tt.toObject=function(j,nt){nt||(nt={});var st={};return nt.defaults&&(st.time=0,st.numerator=0,st.denominator=0),j.time!=null&&j.hasOwnProperty("time")&&(st.time=nt.json&&!isFinite(j.time)?String(j.time):j.time),j.numerator!=null&&j.hasOwnProperty("numerator")&&(st.numerator=j.numerator),j.denominator!=null&&j.hasOwnProperty("denominator")&&(st.denominator=j.denominator),st},tt.prototype.toJSON=function(){return this.constructor.toObject(this,d.util.toJSONOptions)},tt}(),_e.KeySignature=function(){function tt(j){if(j)for(var nt=Object.keys(j),st=0;st<nt.length;++st)j[nt[st]]!=null&&(this[nt[st]]=j[nt[st]])}return tt.prototype.time=0,tt.prototype.key=0,tt.prototype.mode=0,tt.create=function(j){return new tt(j)},tt.encode=function(j,nt){return nt||(nt=b.create()),j.time!=null&&j.hasOwnProperty("time")&&nt.uint32(9).double(j.time),j.key!=null&&j.hasOwnProperty("key")&&nt.uint32(16).int32(j.key),j.mode!=null&&j.hasOwnProperty("mode")&&nt.uint32(24).int32(j.mode),nt},tt.encodeDelimited=function(j,nt){return this.encode(j,nt).ldelim()},tt.decode=function(j,nt){j instanceof g||(j=g.create(j));for(var st=nt===void 0?j.len:j.pos+nt,ot=new _.tensorflow.magenta.NoteSequence.KeySignature;j.pos<st;){var ut=j.uint32();switch(ut>>>3){case 1:ot.time=j.double();break;case 2:ot.key=j.int32();break;case 3:ot.mode=j.int32();break;default:j.skipType(7&ut)}}return ot},tt.decodeDelimited=function(j){return j instanceof g||(j=new g(j)),this.decode(j,j.uint32())},tt.verify=function(j){if(typeof j!="object"||j===null)return"object expected";if(j.time!=null&&j.hasOwnProperty("time")&&typeof j.time!="number")return"time: number expected";if(j.key!=null&&j.hasOwnProperty("key"))switch(j.key){default:return"key: enum value expected";case 0:case 1:case 1:case 2:case 3:case 3:case 4:case 5:case 6:case 6:case 7:case 8:case 8:case 9:case 10:case 10:case 11:}if(j.mode!=null&&j.hasOwnProperty("mode"))switch(j.mode){default:return"mode: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:}return null},tt.fromObject=function(j){if(j instanceof _.tensorflow.magenta.NoteSequence.KeySignature)return j;var nt=new _.tensorflow.magenta.NoteSequence.KeySignature;switch(j.time!=null&&(nt.time=Number(j.time)),j.key){case"C":case 0:nt.key=0;break;case"C_SHARP":case 1:nt.key=1;break;case"D_FLAT":case 1:nt.key=1;break;case"D":case 2:nt.key=2;break;case"D_SHARP":case 3:nt.key=3;break;case"E_FLAT":case 3:nt.key=3;break;case"E":case 4:nt.key=4;break;case"F":case 5:nt.key=5;break;case"F_SHARP":case 6:nt.key=6;break;case"G_FLAT":case 6:nt.key=6;break;case"G":case 7:nt.key=7;break;case"G_SHARP":case 8:nt.key=8;break;case"A_FLAT":case 8:nt.key=8;break;case"A":case 9:nt.key=9;break;case"A_SHARP":case 10:nt.key=10;break;case"B_FLAT":case 10:nt.key=10;break;case"B":case 11:nt.key=11}switch(j.mode){case"MAJOR":case 0:nt.mode=0;break;case"MINOR":case 1:nt.mode=1;break;case"NOT_SPECIFIED":case 2:nt.mode=2;break;case"MIXOLYDIAN":case 3:nt.mode=3;break;case"DORIAN":case 4:nt.mode=4;break;case"PHRYGIAN":case 5:nt.mode=5;break;case"LYDIAN":case 6:nt.mode=6;break;case"LOCRIAN":case 7:nt.mode=7}return nt},tt.toObject=function(j,nt){nt||(nt={});var st={};return nt.defaults&&(st.time=0,st.key=nt.enums===String?"C":0,st.mode=nt.enums===String?"MAJOR":0),j.time!=null&&j.hasOwnProperty("time")&&(st.time=nt.json&&!isFinite(j.time)?String(j.time):j.time),j.key!=null&&j.hasOwnProperty("key")&&(st.key=nt.enums===String?_.tensorflow.magenta.NoteSequence.KeySignature.Key[j.key]:j.key),j.mode!=null&&j.hasOwnProperty("mode")&&(st.mode=nt.enums===String?_.tensorflow.magenta.NoteSequence.KeySignature.Mode[j.mode]:j.mode),st},tt.prototype.toJSON=function(){return this.constructor.toObject(this,d.util.toJSONOptions)},tt.Key=function(){var j={},nt=Object.create(j);return nt[j[0]="C"]=0,nt[j[1]="C_SHARP"]=1,nt.D_FLAT=1,nt[j[2]="D"]=2,nt[j[3]="D_SHARP"]=3,nt.E_FLAT=3,nt[j[4]="E"]=4,nt[j[5]="F"]=5,nt[j[6]="F_SHARP"]=6,nt.G_FLAT=6,nt[j[7]="G"]=7,nt[j[8]="G_SHARP"]=8,nt.A_FLAT=8,nt[j[9]="A"]=9,nt[j[10]="A_SHARP"]=10,nt.B_FLAT=10,nt[j[11]="B"]=11,nt}(),tt.Mode=function(){var j={},nt=Object.create(j);return nt[j[0]="MAJOR"]=0,nt[j[1]="MINOR"]=1,nt[j[2]="NOT_SPECIFIED"]=2,nt[j[3]="MIXOLYDIAN"]=3,nt[j[4]="DORIAN"]=4,nt[j[5]="PHRYGIAN"]=5,nt[j[6]="LYDIAN"]=6,nt[j[7]="LOCRIAN"]=7,nt}(),tt}(),_e.Tempo=function(){function tt(j){if(j)for(var nt=Object.keys(j),st=0;st<nt.length;++st)j[nt[st]]!=null&&(this[nt[st]]=j[nt[st]])}return tt.prototype.time=0,tt.prototype.qpm=0,tt.create=function(j){return new tt(j)},tt.encode=function(j,nt){return nt||(nt=b.create()),j.time!=null&&j.hasOwnProperty("time")&&nt.uint32(9).double(j.time),j.qpm!=null&&j.hasOwnProperty("qpm")&&nt.uint32(17).double(j.qpm),nt},tt.encodeDelimited=function(j,nt){return this.encode(j,nt).ldelim()},tt.decode=function(j,nt){j instanceof g||(j=g.create(j));for(var st=nt===void 0?j.len:j.pos+nt,ot=new _.tensorflow.magenta.NoteSequence.Tempo;j.pos<st;){var ut=j.uint32();switch(ut>>>3){case 1:ot.time=j.double();break;case 2:ot.qpm=j.double();break;default:j.skipType(7&ut)}}return ot},tt.decodeDelimited=function(j){return j instanceof g||(j=new g(j)),this.decode(j,j.uint32())},tt.verify=function(j){return typeof j!="object"||j===null?"object expected":j.time!=null&&j.hasOwnProperty("time")&&typeof j.time!="number"?"time: number expected":j.qpm!=null&&j.hasOwnProperty("qpm")&&typeof j.qpm!="number"?"qpm: number expected":null},tt.fromObject=function(j){if(j instanceof _.tensorflow.magenta.NoteSequence.Tempo)return j;var nt=new _.tensorflow.magenta.NoteSequence.Tempo;return j.time!=null&&(nt.time=Number(j.time)),j.qpm!=null&&(nt.qpm=Number(j.qpm)),nt},tt.toObject=function(j,nt){nt||(nt={});var st={};return nt.defaults&&(st.time=0,st.qpm=0),j.time!=null&&j.hasOwnProperty("time")&&(st.time=nt.json&&!isFinite(j.time)?String(j.time):j.time),j.qpm!=null&&j.hasOwnProperty("qpm")&&(st.qpm=nt.json&&!isFinite(j.qpm)?String(j.qpm):j.qpm),st},tt.prototype.toJSON=function(){return this.constructor.toObject(this,d.util.toJSONOptions)},tt}(),_e.PitchBend=function(){function tt(j){if(j)for(var nt=Object.keys(j),st=0;st<nt.length;++st)j[nt[st]]!=null&&(this[nt[st]]=j[nt[st]])}return tt.prototype.time=0,tt.prototype.bend=0,tt.prototype.instrument=0,tt.prototype.program=0,tt.prototype.isDrum=!1,tt.create=function(j){return new tt(j)},tt.encode=function(j,nt){return nt||(nt=b.create()),j.time!=null&&j.hasOwnProperty("time")&&nt.uint32(9).double(j.time),j.bend!=null&&j.hasOwnProperty("bend")&&nt.uint32(16).int32(j.bend),j.instrument!=null&&j.hasOwnProperty("instrument")&&nt.uint32(24).int32(j.instrument),j.program!=null&&j.hasOwnProperty("program")&&nt.uint32(32).int32(j.program),j.isDrum!=null&&j.hasOwnProperty("isDrum")&&nt.uint32(40).bool(j.isDrum),nt},tt.encodeDelimited=function(j,nt){return this.encode(j,nt).ldelim()},tt.decode=function(j,nt){j instanceof g||(j=g.create(j));for(var st=nt===void 0?j.len:j.pos+nt,ot=new _.tensorflow.magenta.NoteSequence.PitchBend;j.pos<st;){var ut=j.uint32();switch(ut>>>3){case 1:ot.time=j.double();break;case 2:ot.bend=j.int32();break;case 3:ot.instrument=j.int32();break;case 4:ot.program=j.int32();break;case 5:ot.isDrum=j.bool();break;default:j.skipType(7&ut)}}return ot},tt.decodeDelimited=function(j){return j instanceof g||(j=new g(j)),this.decode(j,j.uint32())},tt.verify=function(j){return typeof j!="object"||j===null?"object expected":j.time!=null&&j.hasOwnProperty("time")&&typeof j.time!="number"?"time: number expected":j.bend!=null&&j.hasOwnProperty("bend")&&!$.isInteger(j.bend)?"bend: integer expected":j.instrument!=null&&j.hasOwnProperty("instrument")&&!$.isInteger(j.instrument)?"instrument: integer expected":j.program!=null&&j.hasOwnProperty("program")&&!$.isInteger(j.program)?"program: integer expected":j.isDrum!=null&&j.hasOwnProperty("isDrum")&&typeof j.isDrum!="boolean"?"isDrum: boolean expected":null},tt.fromObject=function(j){if(j instanceof _.tensorflow.magenta.NoteSequence.PitchBend)return j;var nt=new _.tensorflow.magenta.NoteSequence.PitchBend;return j.time!=null&&(nt.time=Number(j.time)),j.bend!=null&&(nt.bend=0|j.bend),j.instrument!=null&&(nt.instrument=0|j.instrument),j.program!=null&&(nt.program=0|j.program),j.isDrum!=null&&(nt.isDrum=!!j.isDrum),nt},tt.toObject=function(j,nt){nt||(nt={});var st={};return nt.defaults&&(st.time=0,st.bend=0,st.instrument=0,st.program=0,st.isDrum=!1),j.time!=null&&j.hasOwnProperty("time")&&(st.time=nt.json&&!isFinite(j.time)?String(j.time):j.time),j.bend!=null&&j.hasOwnProperty("bend")&&(st.bend=j.bend),j.instrument!=null&&j.hasOwnProperty("instrument")&&(st.instrument=j.instrument),j.program!=null&&j.hasOwnProperty("program")&&(st.program=j.program),j.isDrum!=null&&j.hasOwnProperty("isDrum")&&(st.isDrum=j.isDrum),st},tt.prototype.toJSON=function(){return this.constructor.toObject(this,d.util.toJSONOptions)},tt}(),_e.ControlChange=function(){function tt(j){if(j)for(var nt=Object.keys(j),st=0;st<nt.length;++st)j[nt[st]]!=null&&(this[nt[st]]=j[nt[st]])}return tt.prototype.time=0,tt.prototype.quantizedStep=$.Long?$.Long.fromBits(0,0,!1):0,tt.prototype.controlNumber=0,tt.prototype.controlValue=0,tt.prototype.instrument=0,tt.prototype.program=0,tt.prototype.isDrum=!1,tt.create=function(j){return new tt(j)},tt.encode=function(j,nt){return nt||(nt=b.create()),j.time!=null&&j.hasOwnProperty("time")&&nt.uint32(9).double(j.time),j.controlNumber!=null&&j.hasOwnProperty("controlNumber")&&nt.uint32(16).int32(j.controlNumber),j.controlValue!=null&&j.hasOwnProperty("controlValue")&&nt.uint32(24).int32(j.controlValue),j.instrument!=null&&j.hasOwnProperty("instrument")&&nt.uint32(32).int32(j.instrument),j.program!=null&&j.hasOwnProperty("program")&&nt.uint32(40).int32(j.program),j.isDrum!=null&&j.hasOwnProperty("isDrum")&&nt.uint32(48).bool(j.isDrum),j.quantizedStep!=null&&j.hasOwnProperty("quantizedStep")&&nt.uint32(56).int64(j.quantizedStep),nt},tt.encodeDelimited=function(j,nt){return this.encode(j,nt).ldelim()},tt.decode=function(j,nt){j instanceof g||(j=g.create(j));for(var st=nt===void 0?j.len:j.pos+nt,ot=new _.tensorflow.magenta.NoteSequence.ControlChange;j.pos<st;){var ut=j.uint32();switch(ut>>>3){case 1:ot.time=j.double();break;case 7:ot.quantizedStep=$.Long?j.int64().toNumber():j.int64();break;case 2:ot.controlNumber=j.int32();break;case 3:ot.controlValue=j.int32();break;case 4:ot.instrument=j.int32();break;case 5:ot.program=j.int32();break;case 6:ot.isDrum=j.bool();break;default:j.skipType(7&ut)}}return ot},tt.decodeDelimited=function(j){return j instanceof g||(j=new g(j)),this.decode(j,j.uint32())},tt.verify=function(j){return typeof j!="object"||j===null?"object expected":j.time!=null&&j.hasOwnProperty("time")&&typeof j.time!="number"?"time: number expected":j.quantizedStep!=null&&j.hasOwnProperty("quantizedStep")&&!($.isInteger(j.quantizedStep)||j.quantizedStep&&$.isInteger(j.quantizedStep.low)&&$.isInteger(j.quantizedStep.high))?"quantizedStep: integer|Long expected":j.controlNumber!=null&&j.hasOwnProperty("controlNumber")&&!$.isInteger(j.controlNumber)?"controlNumber: integer expected":j.controlValue!=null&&j.hasOwnProperty("controlValue")&&!$.isInteger(j.controlValue)?"controlValue: integer expected":j.instrument!=null&&j.hasOwnProperty("instrument")&&!$.isInteger(j.instrument)?"instrument: integer expected":j.program!=null&&j.hasOwnProperty("program")&&!$.isInteger(j.program)?"program: integer expected":j.isDrum!=null&&j.hasOwnProperty("isDrum")&&typeof j.isDrum!="boolean"?"isDrum: boolean expected":null},tt.fromObject=function(j){if(j instanceof _.tensorflow.magenta.NoteSequence.ControlChange)return j;var nt=new _.tensorflow.magenta.NoteSequence.ControlChange;return j.time!=null&&(nt.time=Number(j.time)),j.quantizedStep!=null&&($.Long?(nt.quantizedStep=$.Long.fromValue(j.quantizedStep)).unsigned=!1:typeof j.quantizedStep=="string"?nt.quantizedStep=parseInt(j.quantizedStep,10):typeof j.quantizedStep=="number"?nt.quantizedStep=j.quantizedStep:typeof j.quantizedStep=="object"&&(nt.quantizedStep=new $.LongBits(j.quantizedStep.low>>>0,j.quantizedStep.high>>>0).toNumber())),j.controlNumber!=null&&(nt.controlNumber=0|j.controlNumber),j.controlValue!=null&&(nt.controlValue=0|j.controlValue),j.instrument!=null&&(nt.instrument=0|j.instrument),j.program!=null&&(nt.program=0|j.program),j.isDrum!=null&&(nt.isDrum=!!j.isDrum),nt},tt.toObject=function(j,nt){nt||(nt={});var st={};if(nt.defaults)if(st.time=0,st.controlNumber=0,st.controlValue=0,st.instrument=0,st.program=0,st.isDrum=!1,$.Long){var ot=new $.Long(0,0,!1);st.quantizedStep=nt.longs===String?ot.toString():nt.longs===Number?ot.toNumber():ot}else st.quantizedStep=nt.longs===String?"0":0;return j.time!=null&&j.hasOwnProperty("time")&&(st.time=nt.json&&!isFinite(j.time)?String(j.time):j.time),j.controlNumber!=null&&j.hasOwnProperty("controlNumber")&&(st.controlNumber=j.controlNumber),j.controlValue!=null&&j.hasOwnProperty("controlValue")&&(st.controlValue=j.controlValue),j.instrument!=null&&j.hasOwnProperty("instrument")&&(st.instrument=j.instrument),j.program!=null&&j.hasOwnProperty("program")&&(st.program=j.program),j.isDrum!=null&&j.hasOwnProperty("isDrum")&&(st.isDrum=j.isDrum),j.quantizedStep!=null&&j.hasOwnProperty("quantizedStep")&&(typeof j.quantizedStep=="number"?st.quantizedStep=nt.longs===String?String(j.quantizedStep):j.quantizedStep:st.quantizedStep=nt.longs===String?$.Long.prototype.toString.call(j.quantizedStep):nt.longs===Number?new $.LongBits(j.quantizedStep.low>>>0,j.quantizedStep.high>>>0).toNumber():j.quantizedStep),st},tt.prototype.toJSON=function(){return this.constructor.toObject(this,d.util.toJSONOptions)},tt}(),_e.PartInfo=function(){function tt(j){if(j)for(var nt=Object.keys(j),st=0;st<nt.length;++st)j[nt[st]]!=null&&(this[nt[st]]=j[nt[st]])}return tt.prototype.part=0,tt.prototype.name="",tt.create=function(j){return new tt(j)},tt.encode=function(j,nt){return nt||(nt=b.create()),j.part!=null&&j.hasOwnProperty("part")&&nt.uint32(8).int32(j.part),j.name!=null&&j.hasOwnProperty("name")&&nt.uint32(18).string(j.name),nt},tt.encodeDelimited=function(j,nt){return this.encode(j,nt).ldelim()},tt.decode=function(j,nt){j instanceof g||(j=g.create(j));for(var st=nt===void 0?j.len:j.pos+nt,ot=new _.tensorflow.magenta.NoteSequence.PartInfo;j.pos<st;){var ut=j.uint32();switch(ut>>>3){case 1:ot.part=j.int32();break;case 2:ot.name=j.string();break;default:j.skipType(7&ut)}}return ot},tt.decodeDelimited=function(j){return j instanceof g||(j=new g(j)),this.decode(j,j.uint32())},tt.verify=function(j){return typeof j!="object"||j===null?"object expected":j.part!=null&&j.hasOwnProperty("part")&&!$.isInteger(j.part)?"part: integer expected":j.name!=null&&j.hasOwnProperty("name")&&!$.isString(j.name)?"name: string expected":null},tt.fromObject=function(j){if(j instanceof _.tensorflow.magenta.NoteSequence.PartInfo)return j;var nt=new _.tensorflow.magenta.NoteSequence.PartInfo;return j.part!=null&&(nt.part=0|j.part),j.name!=null&&(nt.name=String(j.name)),nt},tt.toObject=function(j,nt){nt||(nt={});var st={};return nt.defaults&&(st.part=0,st.name=""),j.part!=null&&j.hasOwnProperty("part")&&(st.part=j.part),j.name!=null&&j.hasOwnProperty("name")&&(st.name=j.name),st},tt.prototype.toJSON=function(){return this.constructor.toObject(this,d.util.toJSONOptions)},tt}(),_e.SourceInfo=function(){function tt(j){if(j)for(var nt=Object.keys(j),st=0;st<nt.length;++st)j[nt[st]]!=null&&(this[nt[st]]=j[nt[st]])}return tt.prototype.sourceType=0,tt.prototype.encodingType=0,tt.prototype.parser=0,tt.create=function(j){return new tt(j)},tt.encode=function(j,nt){return nt||(nt=b.create()),j.sourceType!=null&&j.hasOwnProperty("sourceType")&&nt.uint32(8).int32(j.sourceType),j.encodingType!=null&&j.hasOwnProperty("encodingType")&&nt.uint32(16).int32(j.encodingType),j.parser!=null&&j.hasOwnProperty("parser")&&nt.uint32(24).int32(j.parser),nt},tt.encodeDelimited=function(j,nt){return this.encode(j,nt).ldelim()},tt.decode=function(j,nt){j instanceof g||(j=g.create(j));for(var st=nt===void 0?j.len:j.pos+nt,ot=new _.tensorflow.magenta.NoteSequence.SourceInfo;j.pos<st;){var ut=j.uint32();switch(ut>>>3){case 1:ot.sourceType=j.int32();break;case 2:ot.encodingType=j.int32();break;case 3:ot.parser=j.int32();break;default:j.skipType(7&ut)}}return ot},tt.decodeDelimited=function(j){return j instanceof g||(j=new g(j)),this.decode(j,j.uint32())},tt.verify=function(j){if(typeof j!="object"||j===null)return"object expected";if(j.sourceType!=null&&j.hasOwnProperty("sourceType"))switch(j.sourceType){default:return"sourceType: enum value expected";case 0:case 1:case 2:}if(j.encodingType!=null&&j.hasOwnProperty("encodingType"))switch(j.encodingType){default:return"encodingType: enum value expected";case 0:case 1:case 2:case 3:case 4:}if(j.parser!=null&&j.hasOwnProperty("parser"))switch(j.parser){default:return"parser: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 6:}return null},tt.fromObject=function(j){if(j instanceof _.tensorflow.magenta.NoteSequence.SourceInfo)return j;var nt=new _.tensorflow.magenta.NoteSequence.SourceInfo;switch(j.sourceType){case"UNKNOWN_SOURCE_TYPE":case 0:nt.sourceType=0;break;case"SCORE_BASED":case 1:nt.sourceType=1;break;case"PERFORMANCE_BASED":case 2:nt.sourceType=2}switch(j.encodingType){case"UNKNOWN_ENCODING_TYPE":case 0:nt.encodingType=0;break;case"MUSIC_XML":case 1:nt.encodingType=1;break;case"ABC":case 2:nt.encodingType=2;break;case"MIDI":case 3:nt.encodingType=3;break;case"MUSICNET":case 4:nt.encodingType=4}switch(j.parser){case"UNKNOWN_PARSER":case 0:nt.parser=0;break;case"MUSIC21":case 1:nt.parser=1;break;case"PRETTY_MIDI":case 2:nt.parser=2;break;case"MAGENTA_MUSIC_XML":case 3:nt.parser=3;break;case"MAGENTA_MUSICNET":case 4:nt.parser=4;break;case"MAGENTA_ABC":case 5:nt.parser=5;break;case"TONEJS_MIDI_CONVERT":case 6:nt.parser=6}return nt},tt.toObject=function(j,nt){nt||(nt={});var st={};return nt.defaults&&(st.sourceType=nt.enums===String?"UNKNOWN_SOURCE_TYPE":0,st.encodingType=nt.enums===String?"UNKNOWN_ENCODING_TYPE":0,st.parser=nt.enums===String?"UNKNOWN_PARSER":0),j.sourceType!=null&&j.hasOwnProperty("sourceType")&&(st.sourceType=nt.enums===String?_.tensorflow.magenta.NoteSequence.SourceInfo.SourceType[j.sourceType]:j.sourceType),j.encodingType!=null&&j.hasOwnProperty("encodingType")&&(st.encodingType=nt.enums===String?_.tensorflow.magenta.NoteSequence.SourceInfo.EncodingType[j.encodingType]:j.encodingType),j.parser!=null&&j.hasOwnProperty("parser")&&(st.parser=nt.enums===String?_.tensorflow.magenta.NoteSequence.SourceInfo.Parser[j.parser]:j.parser),st},tt.prototype.toJSON=function(){return this.constructor.toObject(this,d.util.toJSONOptions)},tt.SourceType=function(){var j={},nt=Object.create(j);return nt[j[0]="UNKNOWN_SOURCE_TYPE"]=0,nt[j[1]="SCORE_BASED"]=1,nt[j[2]="PERFORMANCE_BASED"]=2,nt}(),tt.EncodingType=function(){var j={},nt=Object.create(j);return nt[j[0]="UNKNOWN_ENCODING_TYPE"]=0,nt[j[1]="MUSIC_XML"]=1,nt[j[2]="ABC"]=2,nt[j[3]="MIDI"]=3,nt[j[4]="MUSICNET"]=4,nt}(),tt.Parser=function(){var j={},nt=Object.create(j);return nt[j[0]="UNKNOWN_PARSER"]=0,nt[j[1]="MUSIC21"]=1,nt[j[2]="PRETTY_MIDI"]=2,nt[j[3]="MAGENTA_MUSIC_XML"]=3,nt[j[4]="MAGENTA_MUSICNET"]=4,nt[j[5]="MAGENTA_ABC"]=5,nt[j[6]="TONEJS_MIDI_CONVERT"]=6,nt}(),tt}(),_e.TextAnnotation=function(){function tt(j){if(j)for(var nt=Object.keys(j),st=0;st<nt.length;++st)j[nt[st]]!=null&&(this[nt[st]]=j[nt[st]])}return tt.prototype.time=0,tt.prototype.quantizedStep=$.Long?$.Long.fromBits(0,0,!1):0,tt.prototype.text="",tt.prototype.annotationType=0,tt.create=function(j){return new tt(j)},tt.encode=function(j,nt){return nt||(nt=b.create()),j.time!=null&&j.hasOwnProperty("time")&&nt.uint32(9).double(j.time),j.text!=null&&j.hasOwnProperty("text")&&nt.uint32(18).string(j.text),j.annotationType!=null&&j.hasOwnProperty("annotationType")&&nt.uint32(24).int32(j.annotationType),j.quantizedStep!=null&&j.hasOwnProperty("quantizedStep")&&nt.uint32(32).int64(j.quantizedStep),nt},tt.encodeDelimited=function(j,nt){return this.encode(j,nt).ldelim()},tt.decode=function(j,nt){j instanceof g||(j=g.create(j));for(var st=nt===void 0?j.len:j.pos+nt,ot=new _.tensorflow.magenta.NoteSequence.TextAnnotation;j.pos<st;){var ut=j.uint32();switch(ut>>>3){case 1:ot.time=j.double();break;case 4:ot.quantizedStep=$.Long?j.int64().toNumber():j.int64();break;case 2:ot.text=j.string();break;case 3:ot.annotationType=j.int32();break;default:j.skipType(7&ut)}}return ot},tt.decodeDelimited=function(j){return j instanceof g||(j=new g(j)),this.decode(j,j.uint32())},tt.verify=function(j){if(typeof j!="object"||j===null)return"object expected";if(j.time!=null&&j.hasOwnProperty("time")&&typeof j.time!="number")return"time: number expected";if(j.quantizedStep!=null&&j.hasOwnProperty("quantizedStep")&&!($.isInteger(j.quantizedStep)||j.quantizedStep&&$.isInteger(j.quantizedStep.low)&&$.isInteger(j.quantizedStep.high)))return"quantizedStep: integer|Long expected";if(j.text!=null&&j.hasOwnProperty("text")&&!$.isString(j.text))return"text: string expected";if(j.annotationType!=null&&j.hasOwnProperty("annotationType"))switch(j.annotationType){default:return"annotationType: enum value expected";case 0:case 1:case 2:}return null},tt.fromObject=function(j){if(j instanceof _.tensorflow.magenta.NoteSequence.TextAnnotation)return j;var nt=new _.tensorflow.magenta.NoteSequence.TextAnnotation;switch(j.time!=null&&(nt.time=Number(j.time)),j.quantizedStep!=null&&($.Long?(nt.quantizedStep=$.Long.fromValue(j.quantizedStep)).unsigned=!1:typeof j.quantizedStep=="string"?nt.quantizedStep=parseInt(j.quantizedStep,10):typeof j.quantizedStep=="number"?nt.quantizedStep=j.quantizedStep:typeof j.quantizedStep=="object"&&(nt.quantizedStep=new $.LongBits(j.quantizedStep.low>>>0,j.quantizedStep.high>>>0).toNumber())),j.text!=null&&(nt.text=String(j.text)),j.annotationType){case"UNKNOWN":case 0:nt.annotationType=0;break;case"CHORD_SYMBOL":case 1:nt.annotationType=1;break;case"BEAT":case 2:nt.annotationType=2}return nt},tt.toObject=function(j,nt){nt||(nt={});var st={};if(nt.defaults)if(st.time=0,st.text="",st.annotationType=nt.enums===String?"UNKNOWN":0,$.Long){var ot=new $.Long(0,0,!1);st.quantizedStep=nt.longs===String?ot.toString():nt.longs===Number?ot.toNumber():ot}else st.quantizedStep=nt.longs===String?"0":0;return j.time!=null&&j.hasOwnProperty("time")&&(st.time=nt.json&&!isFinite(j.time)?String(j.time):j.time),j.text!=null&&j.hasOwnProperty("text")&&(st.text=j.text),j.annotationType!=null&&j.hasOwnProperty("annotationType")&&(st.annotationType=nt.enums===String?_.tensorflow.magenta.NoteSequence.TextAnnotation.TextAnnotationType[j.annotationType]:j.annotationType),j.quantizedStep!=null&&j.hasOwnProperty("quantizedStep")&&(typeof j.quantizedStep=="number"?st.quantizedStep=nt.longs===String?String(j.quantizedStep):j.quantizedStep:st.quantizedStep=nt.longs===String?$.Long.prototype.toString.call(j.quantizedStep):nt.longs===Number?new $.LongBits(j.quantizedStep.low>>>0,j.quantizedStep.high>>>0).toNumber():j.quantizedStep),st},tt.prototype.toJSON=function(){return this.constructor.toObject(this,d.util.toJSONOptions)},tt.TextAnnotationType=function(){var j={},nt=Object.create(j);return nt[j[0]="UNKNOWN"]=0,nt[j[1]="CHORD_SYMBOL"]=1,nt[j[2]="BEAT"]=2,nt}(),tt}(),_e.QuantizationInfo=function(){function tt(nt){if(nt)for(var st=Object.keys(nt),ot=0;ot<st.length;++ot)nt[st[ot]]!=null&&(this[st[ot]]=nt[st[ot]])}var j;return tt.prototype.stepsPerQuarter=0,tt.prototype.stepsPerSecond=0,Object.defineProperty(tt.prototype,"resolution",{get:$.oneOfGetter(j=["stepsPerQuarter","stepsPerSecond"]),set:$.oneOfSetter(j)}),tt.create=function(nt){return new tt(nt)},tt.encode=function(nt,st){return st||(st=b.create()),nt.stepsPerQuarter!=null&&nt.hasOwnProperty("stepsPerQuarter")&&st.uint32(8).int32(nt.stepsPerQuarter),nt.stepsPerSecond!=null&&nt.hasOwnProperty("stepsPerSecond")&&st.uint32(16).int32(nt.stepsPerSecond),st},tt.encodeDelimited=function(nt,st){return this.encode(nt,st).ldelim()},tt.decode=function(nt,st){nt instanceof g||(nt=g.create(nt));for(var ot=st===void 0?nt.len:nt.pos+st,ut=new _.tensorflow.magenta.NoteSequence.QuantizationInfo;nt.pos<ot;){var ht=nt.uint32();switch(ht>>>3){case 1:ut.stepsPerQuarter=nt.int32();break;case 2:ut.stepsPerSecond=nt.int32();break;default:nt.skipType(7&ht)}}return ut},tt.decodeDelimited=function(nt){return nt instanceof g||(nt=new g(nt)),this.decode(nt,nt.uint32())},tt.verify=function(nt){if(typeof nt!="object"||nt===null)return"object expected";var st={};if(nt.stepsPerQuarter!=null&&nt.hasOwnProperty("stepsPerQuarter")&&(st.resolution=1,!$.isInteger(nt.stepsPerQuarter)))return"stepsPerQuarter: integer expected";if(nt.stepsPerSecond!=null&&nt.hasOwnProperty("stepsPerSecond")){if(st.resolution===1)return"resolution: multiple values";if(st.resolution=1,!$.isInteger(nt.stepsPerSecond))return"stepsPerSecond: integer expected"}return null},tt.fromObject=function(nt){if(nt instanceof _.tensorflow.magenta.NoteSequence.QuantizationInfo)return nt;var st=new _.tensorflow.magenta.NoteSequence.QuantizationInfo;return nt.stepsPerQuarter!=null&&(st.stepsPerQuarter=0|nt.stepsPerQuarter),nt.stepsPerSecond!=null&&(st.stepsPerSecond=0|nt.stepsPerSecond),st},tt.toObject=function(nt,st){st||(st={});var ot={};return nt.stepsPerQuarter!=null&&nt.hasOwnProperty("stepsPerQuarter")&&(ot.stepsPerQuarter=nt.stepsPerQuarter,st.oneofs&&(ot.resolution="stepsPerQuarter")),nt.stepsPerSecond!=null&&nt.hasOwnProperty("stepsPerSecond")&&(ot.stepsPerSecond=nt.stepsPerSecond,st.oneofs&&(ot.resolution="stepsPerSecond")),ot},tt.prototype.toJSON=function(){return this.constructor.toObject(this,d.util.toJSONOptions)},tt}(),_e.SubsequenceInfo=function(){function tt(j){if(j)for(var nt=Object.keys(j),st=0;st<nt.length;++st)j[nt[st]]!=null&&(this[nt[st]]=j[nt[st]])}return tt.prototype.startTimeOffset=0,tt.prototype.endTimeOffset=0,tt.create=function(j){return new tt(j)},tt.encode=function(j,nt){return nt||(nt=b.create()),j.startTimeOffset!=null&&j.hasOwnProperty("startTimeOffset")&&nt.uint32(9).double(j.startTimeOffset),j.endTimeOffset!=null&&j.hasOwnProperty("endTimeOffset")&&nt.uint32(17).double(j.endTimeOffset),nt},tt.encodeDelimited=function(j,nt){return this.encode(j,nt).ldelim()},tt.decode=function(j,nt){j instanceof g||(j=g.create(j));for(var st=nt===void 0?j.len:j.pos+nt,ot=new _.tensorflow.magenta.NoteSequence.SubsequenceInfo;j.pos<st;){var ut=j.uint32();switch(ut>>>3){case 1:ot.startTimeOffset=j.double();break;case 2:ot.endTimeOffset=j.double();break;default:j.skipType(7&ut)}}return ot},tt.decodeDelimited=function(j){return j instanceof g||(j=new g(j)),this.decode(j,j.uint32())},tt.verify=function(j){return typeof j!="object"||j===null?"object expected":j.startTimeOffset!=null&&j.hasOwnProperty("startTimeOffset")&&typeof j.startTimeOffset!="number"?"startTimeOffset: number expected":j.endTimeOffset!=null&&j.hasOwnProperty("endTimeOffset")&&typeof j.endTimeOffset!="number"?"endTimeOffset: number expected":null},tt.fromObject=function(j){if(j instanceof _.tensorflow.magenta.NoteSequence.SubsequenceInfo)return j;var nt=new _.tensorflow.magenta.NoteSequence.SubsequenceInfo;return j.startTimeOffset!=null&&(nt.startTimeOffset=Number(j.startTimeOffset)),j.endTimeOffset!=null&&(nt.endTimeOffset=Number(j.endTimeOffset)),nt},tt.toObject=function(j,nt){nt||(nt={});var st={};return nt.defaults&&(st.startTimeOffset=0,st.endTimeOffset=0),j.startTimeOffset!=null&&j.hasOwnProperty("startTimeOffset")&&(st.startTimeOffset=nt.json&&!isFinite(j.startTimeOffset)?String(j.startTimeOffset):j.startTimeOffset),j.endTimeOffset!=null&&j.hasOwnProperty("endTimeOffset")&&(st.endTimeOffset=nt.json&&!isFinite(j.endTimeOffset)?String(j.endTimeOffset):j.endTimeOffset),st},tt.prototype.toJSON=function(){return this.constructor.toObject(this,d.util.toJSONOptions)},tt}(),_e.SectionAnnotation=function(){function tt(j){if(j)for(var nt=Object.keys(j),st=0;st<nt.length;++st)j[nt[st]]!=null&&(this[nt[st]]=j[nt[st]])}return tt.prototype.time=0,tt.prototype.sectionId=$.Long?$.Long.fromBits(0,0,!1):0,tt.create=function(j){return new tt(j)},tt.encode=function(j,nt){return nt||(nt=b.create()),j.time!=null&&j.hasOwnProperty("time")&&nt.uint32(9).double(j.time),j.sectionId!=null&&j.hasOwnProperty("sectionId")&&nt.uint32(32).int64(j.sectionId),nt},tt.encodeDelimited=function(j,nt){return this.encode(j,nt).ldelim()},tt.decode=function(j,nt){j instanceof g||(j=g.create(j));for(var st=nt===void 0?j.len:j.pos+nt,ot=new _.tensorflow.magenta.NoteSequence.SectionAnnotation;j.pos<st;){var ut=j.uint32();switch(ut>>>3){case 1:ot.time=j.double();break;case 4:ot.sectionId=$.Long?j.int64().toNumber():j.int64();break;default:j.skipType(7&ut)}}return ot},tt.decodeDelimited=function(j){return j instanceof g||(j=new g(j)),this.decode(j,j.uint32())},tt.verify=function(j){return typeof j!="object"||j===null?"object expected":j.time!=null&&j.hasOwnProperty("time")&&typeof j.time!="number"?"time: number expected":j.sectionId!=null&&j.hasOwnProperty("sectionId")&&!($.isInteger(j.sectionId)||j.sectionId&&$.isInteger(j.sectionId.low)&&$.isInteger(j.sectionId.high))?"sectionId: integer|Long expected":null},tt.fromObject=function(j){if(j instanceof _.tensorflow.magenta.NoteSequence.SectionAnnotation)return j;var nt=new _.tensorflow.magenta.NoteSequence.SectionAnnotation;return j.time!=null&&(nt.time=Number(j.time)),j.sectionId!=null&&($.Long?(nt.sectionId=$.Long.fromValue(j.sectionId)).unsigned=!1:typeof j.sectionId=="string"?nt.sectionId=parseInt(j.sectionId,10):typeof j.sectionId=="number"?nt.sectionId=j.sectionId:typeof j.sectionId=="object"&&(nt.sectionId=new $.LongBits(j.sectionId.low>>>0,j.sectionId.high>>>0).toNumber())),nt},tt.toObject=function(j,nt){nt||(nt={});var st={};if(nt.defaults)if(st.time=0,$.Long){var ot=new $.Long(0,0,!1);st.sectionId=nt.longs===String?ot.toString():nt.longs===Number?ot.toNumber():ot}else st.sectionId=nt.longs===String?"0":0;return j.time!=null&&j.hasOwnProperty("time")&&(st.time=nt.json&&!isFinite(j.time)?String(j.time):j.time),j.sectionId!=null&&j.hasOwnProperty("sectionId")&&(typeof j.sectionId=="number"?st.sectionId=nt.longs===String?String(j.sectionId):j.sectionId:st.sectionId=nt.longs===String?$.Long.prototype.toString.call(j.sectionId):nt.longs===Number?new $.LongBits(j.sectionId.low>>>0,j.sectionId.high>>>0).toNumber():j.sectionId),st},tt.prototype.toJSON=function(){return this.constructor.toObject(this,d.util.toJSONOptions)},tt}(),_e.Section=function(){function tt(nt){if(nt)for(var st=Object.keys(nt),ot=0;ot<st.length;++ot)nt[st[ot]]!=null&&(this[st[ot]]=nt[st[ot]])}var j;return tt.prototype.sectionId=$.Long?$.Long.fromBits(0,0,!1):0,tt.prototype.sectionGroup=null,Object.defineProperty(tt.prototype,"sectionType",{get:$.oneOfGetter(j=["sectionId","sectionGroup"]),set:$.oneOfSetter(j)}),tt.create=function(nt){return new tt(nt)},tt.encode=function(nt,st){return st||(st=b.create()),nt.sectionId!=null&&nt.hasOwnProperty("sectionId")&&st.uint32(8).int64(nt.sectionId),nt.sectionGroup!=null&&nt.hasOwnProperty("sectionGroup")&&_.tensorflow.magenta.NoteSequence.SectionGroup.encode(nt.sectionGroup,st.uint32(18).fork()).ldelim(),st},tt.encodeDelimited=function(nt,st){return this.encode(nt,st).ldelim()},tt.decode=function(nt,st){nt instanceof g||(nt=g.create(nt));for(var ot=st===void 0?nt.len:nt.pos+st,ut=new _.tensorflow.magenta.NoteSequence.Section;nt.pos<ot;){var ht=nt.uint32();switch(ht>>>3){case 1:ut.sectionId=$.Long?nt.int64().toNumber():nt.int64();break;case 2:ut.sectionGroup=_.tensorflow.magenta.NoteSequence.SectionGroup.decode(nt,nt.uint32());break;default:nt.skipType(7&ht)}}return ut},tt.decodeDelimited=function(nt){return nt instanceof g||(nt=new g(nt)),this.decode(nt,nt.uint32())},tt.verify=function(nt){if(typeof nt!="object"||nt===null)return"object expected";var st={};if(nt.sectionId!=null&&nt.hasOwnProperty("sectionId")&&(st.sectionType=1,!($.isInteger(nt.sectionId)||nt.sectionId&&$.isInteger(nt.sectionId.low)&&$.isInteger(nt.sectionId.high))))return"sectionId: integer|Long expected";if(nt.sectionGroup!=null&&nt.hasOwnProperty("sectionGroup")){if(st.sectionType===1)return"sectionType: multiple values";st.sectionType=1;var ot=_.tensorflow.magenta.NoteSequence.SectionGroup.verify(nt.sectionGroup);if(ot)return"sectionGroup."+ot}return null},tt.fromObject=function(nt){if(nt instanceof _.tensorflow.magenta.NoteSequence.Section)return nt;var st=new _.tensorflow.magenta.NoteSequence.Section;if(nt.sectionId!=null&&($.Long?(st.sectionId=$.Long.fromValue(nt.sectionId)).unsigned=!1:typeof nt.sectionId=="string"?st.sectionId=parseInt(nt.sectionId,10):typeof nt.sectionId=="number"?st.sectionId=nt.sectionId:typeof nt.sectionId=="object"&&(st.sectionId=new $.LongBits(nt.sectionId.low>>>0,nt.sectionId.high>>>0).toNumber())),nt.sectionGroup!=null){if(typeof nt.sectionGroup!="object")throw TypeError(".tensorflow.magenta.NoteSequence.Section.sectionGroup: object expected");st.sectionGroup=_.tensorflow.magenta.NoteSequence.SectionGroup.fromObject(nt.sectionGroup)}return st},tt.toObject=function(nt,st){st||(st={});var ot={};return nt.sectionId!=null&&nt.hasOwnProperty("sectionId")&&(typeof nt.sectionId=="number"?ot.sectionId=st.longs===String?String(nt.sectionId):nt.sectionId:ot.sectionId=st.longs===String?$.Long.prototype.toString.call(nt.sectionId):st.longs===Number?new $.LongBits(nt.sectionId.low>>>0,nt.sectionId.high>>>0).toNumber():nt.sectionId,st.oneofs&&(ot.sectionType="sectionId")),nt.sectionGroup!=null&&nt.hasOwnProperty("sectionGroup")&&(ot.sectionGroup=_.tensorflow.magenta.NoteSequence.SectionGroup.toObject(nt.sectionGroup,st),st.oneofs&&(ot.sectionType="sectionGroup")),ot},tt.prototype.toJSON=function(){return this.constructor.toObject(this,d.util.toJSONOptions)},tt}(),_e.SectionGroup=function(){function tt(j){if(this.sections=[],j)for(var nt=Object.keys(j),st=0;st<nt.length;++st)j[nt[st]]!=null&&(this[nt[st]]=j[nt[st]])}return tt.prototype.sections=$.emptyArray,tt.prototype.numTimes=0,tt.create=function(j){return new tt(j)},tt.encode=function(j,nt){if(nt||(nt=b.create()),j.sections!=null&&j.sections.length)for(var st=0;st<j.sections.length;++st)_.tensorflow.magenta.NoteSequence.Section.encode(j.sections[st],nt.uint32(10).fork()).ldelim();return j.numTimes!=null&&j.hasOwnProperty("numTimes")&&nt.uint32(16).int32(j.numTimes),nt},tt.encodeDelimited=function(j,nt){return this.encode(j,nt).ldelim()},tt.decode=function(j,nt){j instanceof g||(j=g.create(j));for(var st=nt===void 0?j.len:j.pos+nt,ot=new _.tensorflow.magenta.NoteSequence.SectionGroup;j.pos<st;){var ut=j.uint32();switch(ut>>>3){case 1:ot.sections&&ot.sections.length||(ot.sections=[]),ot.sections.push(_.tensorflow.magenta.NoteSequence.Section.decode(j,j.uint32()));break;case 2:ot.numTimes=j.int32();break;default:j.skipType(7&ut)}}return ot},tt.decodeDelimited=function(j){return j instanceof g||(j=new g(j)),this.decode(j,j.uint32())},tt.verify=function(j){if(typeof j!="object"||j===null)return"object expected";if(j.sections!=null&&j.hasOwnProperty("sections")){if(!Array.isArray(j.sections))return"sections: array expected";for(var nt=0;nt<j.sections.length;++nt){var st=_.tensorflow.magenta.NoteSequence.Section.verify(j.sections[nt]);if(st)return"sections."+st}}return j.numTimes!=null&&j.hasOwnProperty("numTimes")&&!$.isInteger(j.numTimes)?"numTimes: integer expected":null},tt.fromObject=function(j){if(j instanceof _.tensorflow.magenta.NoteSequence.SectionGroup)return j;var nt=new _.tensorflow.magenta.NoteSequence.SectionGroup;if(j.sections){if(!Array.isArray(j.sections))throw TypeError(".tensorflow.magenta.NoteSequence.SectionGroup.sections: array expected");nt.sections=[];for(var st=0;st<j.sections.length;++st){if(typeof j.sections[st]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.SectionGroup.sections: object expected");nt.sections[st]=_.tensorflow.magenta.NoteSequence.Section.fromObject(j.sections[st])}}return j.numTimes!=null&&(nt.numTimes=0|j.numTimes),nt},tt.toObject=function(j,nt){nt||(nt={});var st={};if((nt.arrays||nt.defaults)&&(st.sections=[]),nt.defaults&&(st.numTimes=0),j.sections&&j.sections.length){st.sections=[];for(var ot=0;ot<j.sections.length;++ot)st.sections[ot]=_.tensorflow.magenta.NoteSequence.Section.toObject(j.sections[ot],nt)}return j.numTimes!=null&&j.hasOwnProperty("numTimes")&&(st.numTimes=j.numTimes),st},tt.prototype.toJSON=function(){return this.constructor.toObject(this,d.util.toJSONOptions)},tt}(),_e}(),a.SequenceMetadata=function(){function _e(et){if(this.genre=[],this.composers=[],et)for(var rt=Object.keys(et),tt=0;tt<rt.length;++tt)et[rt[tt]]!=null&&(this[rt[tt]]=et[rt[tt]])}return _e.prototype.title="",_e.prototype.artist="",_e.prototype.genre=$.emptyArray,_e.prototype.composers=$.emptyArray,_e.create=function(et){return new _e(et)},_e.encode=function(et,rt){if(rt||(rt=b.create()),et.title!=null&&et.hasOwnProperty("title")&&rt.uint32(10).string(et.title),et.artist!=null&&et.hasOwnProperty("artist")&&rt.uint32(18).string(et.artist),et.genre!=null&&et.genre.length)for(var tt=0;tt<et.genre.length;++tt)rt.uint32(26).string(et.genre[tt]);if(et.composers!=null&&et.composers.length)for(tt=0;tt<et.composers.length;++tt)rt.uint32(34).string(et.composers[tt]);return rt},_e.encodeDelimited=function(et,rt){return this.encode(et,rt).ldelim()},_e.decode=function(et,rt){et instanceof g||(et=g.create(et));for(var tt=rt===void 0?et.len:et.pos+rt,j=new _.tensorflow.magenta.SequenceMetadata;et.pos<tt;){var nt=et.uint32();switch(nt>>>3){case 1:j.title=et.string();break;case 2:j.artist=et.string();break;case 3:j.genre&&j.genre.length||(j.genre=[]),j.genre.push(et.string());break;case 4:j.composers&&j.composers.length||(j.composers=[]),j.composers.push(et.string());break;default:et.skipType(7&nt)}}return j},_e.decodeDelimited=function(et){return et instanceof g||(et=new g(et)),this.decode(et,et.uint32())},_e.verify=function(et){if(typeof et!="object"||et===null)return"object expected";if(et.title!=null&&et.hasOwnProperty("title")&&!$.isString(et.title))return"title: string expected";if(et.artist!=null&&et.hasOwnProperty("artist")&&!$.isString(et.artist))return"artist: string expected";if(et.genre!=null&&et.hasOwnProperty("genre")){if(!Array.isArray(et.genre))return"genre: array expected";for(var rt=0;rt<et.genre.length;++rt)if(!$.isString(et.genre[rt]))return"genre: string[] expected"}if(et.composers!=null&&et.hasOwnProperty("composers")){if(!Array.isArray(et.composers))return"composers: array expected";for(rt=0;rt<et.composers.length;++rt)if(!$.isString(et.composers[rt]))return"composers: string[] expected"}return null},_e.fromObject=function(et){if(et instanceof _.tensorflow.magenta.SequenceMetadata)return et;var rt=new _.tensorflow.magenta.SequenceMetadata;if(et.title!=null&&(rt.title=String(et.title)),et.artist!=null&&(rt.artist=String(et.artist)),et.genre){if(!Array.isArray(et.genre))throw TypeError(".tensorflow.magenta.SequenceMetadata.genre: array expected");rt.genre=[];for(var tt=0;tt<et.genre.length;++tt)rt.genre[tt]=String(et.genre[tt])}if(et.composers){if(!Array.isArray(et.composers))throw TypeError(".tensorflow.magenta.SequenceMetadata.composers: array expected");for(rt.composers=[],tt=0;tt<et.composers.length;++tt)rt.composers[tt]=String(et.composers[tt])}return rt},_e.toObject=function(et,rt){rt||(rt={});var tt={};if((rt.arrays||rt.defaults)&&(tt.genre=[],tt.composers=[]),rt.defaults&&(tt.title="",tt.artist=""),et.title!=null&&et.hasOwnProperty("title")&&(tt.title=et.title),et.artist!=null&&et.hasOwnProperty("artist")&&(tt.artist=et.artist),et.genre&&et.genre.length){tt.genre=[];for(var j=0;j<et.genre.length;++j)tt.genre[j]=et.genre[j]}if(et.composers&&et.composers.length)for(tt.composers=[],j=0;j<et.composers.length;++j)tt.composers[j]=et.composers[j];return tt},_e.prototype.toJSON=function(){return this.constructor.toObject(this,d.util.toJSONOptions)},_e}(),a.VelocityRange=function(){function _e(et){if(et)for(var rt=Object.keys(et),tt=0;tt<rt.length;++tt)et[rt[tt]]!=null&&(this[rt[tt]]=et[rt[tt]])}return _e.prototype.min=0,_e.prototype.max=0,_e.create=function(et){return new _e(et)},_e.encode=function(et,rt){return rt||(rt=b.create()),et.min!=null&&et.hasOwnProperty("min")&&rt.uint32(8).int32(et.min),et.max!=null&&et.hasOwnProperty("max")&&rt.uint32(16).int32(et.max),rt},_e.encodeDelimited=function(et,rt){return this.encode(et,rt).ldelim()},_e.decode=function(et,rt){et instanceof g||(et=g.create(et));for(var tt=rt===void 0?et.len:et.pos+rt,j=new _.tensorflow.magenta.VelocityRange;et.pos<tt;){var nt=et.uint32();switch(nt>>>3){case 1:j.min=et.int32();break;case 2:j.max=et.int32();break;default:et.skipType(7&nt)}}return j},_e.decodeDelimited=function(et){return et instanceof g||(et=new g(et)),this.decode(et,et.uint32())},_e.verify=function(et){return typeof et!="object"||et===null?"object expected":et.min!=null&&et.hasOwnProperty("min")&&!$.isInteger(et.min)?"min: integer expected":et.max!=null&&et.hasOwnProperty("max")&&!$.isInteger(et.max)?"max: integer expected":null},_e.fromObject=function(et){if(et instanceof _.tensorflow.magenta.VelocityRange)return et;var rt=new _.tensorflow.magenta.VelocityRange;return et.min!=null&&(rt.min=0|et.min),et.max!=null&&(rt.max=0|et.max),rt},_e.toObject=function(et,rt){rt||(rt={});var tt={};return rt.defaults&&(tt.min=0,tt.max=0),et.min!=null&&et.hasOwnProperty("min")&&(tt.min=et.min),et.max!=null&&et.hasOwnProperty("max")&&(tt.max=et.max),tt},_e.prototype.toJSON=function(){return this.constructor.toObject(this,d.util.toJSONOptions)},_e}(),a),c),i.exports=_},function(i,s,o){o.r(s),o.d(s,"converterFromSpec",function(){return _e}),o.d(s,"DataConverter",function(){return et}),o.d(s,"DrumsConverter",function(){return rt}),o.d(s,"DrumRollConverter",function(){return tt}),o.d(s,"DrumsOneHotConverter",function(){return j}),o.d(s,"MelodyConverter",function(){return nt}),o.d(s,"MelodyRhythmConverter",function(){return ot}),o.d(s,"MelodyShapeConverter",function(){return ut}),o.d(s,"TrioConverter",function(){return ht}),o.d(s,"TrioRhythmConverter",function(){return pt}),o.d(s,"MultitrackConverter",function(){return it}),o.d(s,"GrooveConverter",function(){return yt});var a=o(2),c=o(10),d=o(8);o.d(s,"DEFAULT_DRUM_PITCH_CLASSES",function(){return d.DEFAULT_DRUM_PITCH_CLASSES});var g=o(12),b=o(23),$=o(29),_=o(13);function _e(ft){switch(ft.type){case"MelodyConverter":return new nt(ft.args);case"MelodyRhythmConverter":return new ot(ft.args);case"MelodyShapeConverter":return new ut(ft.args);case"DrumsConverter":return new rt(ft.args);case"DrumRollConverter":return new tt(ft.args);case"TrioConverter":return new ht(ft.args);case"TrioRhythmConverter":return new pt(ft.args);case"DrumsOneHotConverter":return new j(ft.args);case"MultitrackConverter":return new it(ft.args);case"GrooveConverter":return new yt(ft.args);default:throw new Error("Unknown DataConverter type: "+ft)}}class et{constructor(bt){this.NUM_SPLITS=0,this.SEGMENTED_BY_TRACK=!1,this.numSteps=bt.numSteps,this.numSegments=bt.numSegments}tensorSteps(bt){return a.scalar(bt.shape[0],"int32")}}class rt extends et{constructor(bt){super(bt),this.pitchClasses=bt.pitchClasses||d.DEFAULT_DRUM_PITCH_CLASSES,this.pitchToClass=new Map;for(let Tt=0;Tt<this.pitchClasses.length;++Tt)this.pitchClasses[Tt].forEach(Ct=>{this.pitchToClass.set(Ct,Tt)});this.depth=this.pitchClasses.length+1}toTensor(bt){_.assertIsQuantizedSequence(bt);const Tt=this.numSteps||bt.totalQuantizedSteps,Ct=a.buffer([Tt,this.pitchClasses.length+1],"int32");for(let _t=0;_t<Tt;++_t)Ct.set(1,_t,-1);return bt.notes.forEach(_t=>{Ct.set(1,_t.quantizedStartStep,this.pitchToClass.get(_t.pitch)),Ct.set(0,_t.quantizedStartStep,-1)}),Ct.toTensor()}async toNoteSequence(bt,Tt,Ct){const _t=_.createQuantizedNoteSequence(Tt,Ct),Ot=bt.argMax(1),kt=await Ot.data();Ot.dispose();for(let Rt=0;Rt<kt.length;++Rt)for(let jt=0;jt<this.pitchClasses.length;jt++)kt[Rt]>>jt&1&&_t.notes.push(c.a.Note.create({pitch:this.pitchClasses[jt][0],quantizedStartStep:Rt,quantizedEndStep:Rt+1,isDrum:!0}));return _t.totalQuantizedSteps=kt.length,_t}}class tt extends rt{async toNoteSequence(bt,Tt,Ct){const _t=_.createQuantizedNoteSequence(Tt,Ct),Ot=await bt.data();for(let kt=0;kt<bt.shape[0];++kt){const Rt=Ot.slice(kt*this.pitchClasses.length,(kt+1)*this.pitchClasses.length);for(let jt=0;jt<Rt.length;++jt)Rt[jt]&&_t.notes.push(c.a.Note.create({pitch:this.pitchClasses[jt][0],quantizedStartStep:kt,quantizedEndStep:kt+1,isDrum:!0}))}return _t.totalQuantizedSteps=bt.shape[0],_t}}class j extends rt{constructor(bt){super(bt),this.depth=Math.pow(2,this.pitchClasses.length)}toTensor(bt){_.assertIsRelativeQuantizedSequence(bt);const Tt=this.numSteps||bt.totalQuantizedSteps,Ct=Array(Tt).fill(0);for(const{pitch:_t,quantizedStartStep:Ot}of bt.notes)Ct[Ot]+=Math.pow(2,this.pitchToClass.get(_t));return a.tidy(()=>a.oneHot(a.tensor1d(Ct,"int32"),this.depth))}}class nt extends et{constructor(bt){super(bt),this.NOTE_OFF=1,this.FIRST_PITCH=2,this.minPitch=bt.minPitch,this.maxPitch=bt.maxPitch,this.ignorePolyphony=bt.ignorePolyphony,this.depth=bt.maxPitch-bt.minPitch+1+this.FIRST_PITCH}toTensor(bt){const Tt=b.Melody.fromNoteSequence(bt,this.minPitch,this.maxPitch,this.ignorePolyphony,this.numSteps);return a.tidy(()=>a.oneHot(a.tensor(Tt.events,[Tt.events.length],"int32"),this.depth))}async toNoteSequence(bt,Tt,Ct){const _t=bt.argMax(1),Ot=await _t.data();return _t.dispose(),new b.Melody(Ot,this.minPitch,this.maxPitch).toNoteSequence(Tt,Ct)}}class st extends et{constructor(bt,Tt){super(bt),this.minPitch=bt.minPitch,this.maxPitch=bt.maxPitch,this.ignorePolyphony=bt.ignorePolyphony,this.melodyControl=Tt,this.depth=Tt.depth}toTensor(bt){const Tt=b.Melody.fromNoteSequence(bt,this.minPitch,this.maxPitch,this.ignorePolyphony,this.numSteps);return this.melodyControl.extract(Tt)}}class ot extends st{constructor(bt){super(bt,new b.MelodyRhythm)}async toNoteSequence(bt,Tt,Ct){const _t=_.createQuantizedNoteSequence(Tt,Ct),Ot=await bt.data();for(let kt=0;kt<Ot.length;++kt)Ot[kt]&&_t.notes.push(c.a.Note.create({pitch:d.DEFAULT_DRUM_PITCH_CLASSES[1][0],quantizedStartStep:kt,quantizedEndStep:kt+1,isDrum:!0}));return _t.totalQuantizedSteps=Ot.length,_t}}class ut extends st{constructor(bt){super(bt,new b.MelodyShape)}async toNoteSequence(bt,Tt,Ct){const _t=_.createQuantizedNoteSequence(Tt,Ct),Ot=bt.argMax(1),kt=await Ot.data();Ot.dispose();let Rt=Math.round((this.maxPitch+this.minPitch)/2);for(let jt=0;jt<kt.length;++jt){switch(kt[jt]){case 0:Rt-=1,Rt<this.minPitch&&(Rt=this.minPitch,g.log("Pitch range exceeded when creating NoteSequence from shape.","MelodyShapeConverter"));break;case 2:Rt+=1,Rt>this.maxPitch&&(Rt=this.maxPitch,g.log("Pitch range exceeded when creating NoteSequence from shape.","MelodyShapeConverter"))}_t.notes.push(c.a.Note.create({pitch:Rt,quantizedStartStep:jt,quantizedEndStep:jt+1}))}return _t.totalQuantizedSteps=kt.length,_t}}class ht extends et{constructor(bt){super(bt),this.NUM_SPLITS=3,this.MEL_PROG_RANGE=[0,31],this.BASS_PROG_RANGE=[32,39],bt.melArgs.numSteps=bt.numSteps,bt.bassArgs.numSteps=bt.numSteps,bt.drumsArgs.numSteps=bt.numSteps,this.melConverter=new nt(bt.melArgs),this.bassConverter=new nt(bt.bassArgs),this.drumsConverter=new j(bt.drumsArgs),this.depth=this.melConverter.depth+this.bassConverter.depth+this.drumsConverter.depth}toTensor(bt){_.assertIsQuantizedSequence(bt);const Tt=_.clone(bt),Ct=_.clone(bt),_t=_.clone(bt);return Tt.notes=bt.notes.filter(Ot=>!Ot.isDrum&&Ot.program>=this.MEL_PROG_RANGE[0]&&Ot.program<=this.MEL_PROG_RANGE[1]),Ct.notes=bt.notes.filter(Ot=>!Ot.isDrum&&Ot.program>=this.BASS_PROG_RANGE[0]&&Ot.program<=this.BASS_PROG_RANGE[1]),_t.notes=bt.notes.filter(Ot=>Ot.isDrum),a.tidy(()=>a.concat([this.melConverter.toTensor(Tt),this.bassConverter.toTensor(Ct),this.drumsConverter.toTensor(_t)],-1))}async toNoteSequence(bt,Tt,Ct){const _t=a.split(bt,[this.melConverter.depth,this.bassConverter.depth,this.drumsConverter.depth],-1),Ot=await this.melConverter.toNoteSequence(_t[0],Tt,Ct);Ot.notes.forEach(jt=>{jt.instrument=0,jt.program=0});const kt=await this.bassConverter.toNoteSequence(_t[1],Tt,Ct);Ot.notes.push(...kt.notes.map(jt=>(jt.instrument=1,jt.program=this.BASS_PROG_RANGE[0],jt)));const Rt=await this.drumsConverter.toNoteSequence(_t[2],Tt,Ct);return Ot.notes.push(...Rt.notes.map(jt=>(jt.instrument=2,jt))),_t.forEach(jt=>jt.dispose()),Ot}}class pt extends et{constructor(bt){super(bt),this.NUM_SPLITS=3,this.trioConverter=new ht(bt),this.depth=3}toTensor(bt){return a.tidy(()=>{const Tt=this.trioConverter.toTensor(bt),Ct=a.split(Tt,[this.trioConverter.melConverter.depth,this.trioConverter.bassConverter.depth,this.trioConverter.drumsConverter.depth],1),_t=a.argMax(Ct[0],1),Ot=a.argMax(Ct[1],1),kt=a.argMax(Ct[2],1),Rt=a.greater(_t,1),jt=a.greater(Ot,1),Gt=a.greater(kt,0);return a.stack([Rt,jt,Gt],1)})}async toNoteSequence(bt,Tt,Ct){const _t=a.split(bt,3,1),Ot=await Promise.all(_t.map(Rt=>Rt.data())),kt=_.createQuantizedNoteSequence(Tt,Ct);for(let Rt=0;Rt<this.numSteps;++Rt)Ot[0][Rt]&&kt.notes.push(c.a.Note.create({pitch:72,quantizedStartStep:Rt,quantizedEndStep:Rt+1,instrument:0,program:0})),Ot[1][Rt]&&kt.notes.push(c.a.Note.create({pitch:36,quantizedStartStep:Rt,quantizedEndStep:Rt+1,instrument:1,program:32})),Ot[2][Rt]&&kt.notes.push(c.a.Note.create({pitch:d.DEFAULT_DRUM_PITCH_CLASSES[1][0],quantizedStartStep:Rt,quantizedEndStep:Rt+1,instrument:2,isDrum:!0}));return kt.totalQuantizedSteps=this.numSteps,kt}}class it extends et{constructor(bt){super(bt),this.SEGMENTED_BY_TRACK=!0,this.stepsPerQuarter=bt.stepsPerQuarter,this.totalSteps=bt.totalSteps,this.numVelocityBins=bt.numVelocityBins,this.minPitch=bt.minPitch?bt.minPitch:d.MIN_MIDI_PITCH,this.maxPitch=bt.maxPitch?bt.maxPitch:d.MAX_MIDI_PITCH,this.numPitches=this.maxPitch-this.minPitch+1,this.performanceEventDepth=2*this.numPitches+this.totalSteps+this.numVelocityBins,this.numPrograms=d.MAX_MIDI_PROGRAM-d.MIN_MIDI_PROGRAM+2,this.endToken=this.performanceEventDepth+this.numPrograms,this.depth=this.endToken+1,this.endTensor=a.tidy(()=>a.oneHot(a.tensor1d([this.endToken],"int32"),this.depth).as1D())}trackToTensor(bt){const Tt=this.numSteps/this.numSegments;let Ct;if(bt){for(;bt.events.length>Tt-2;)bt.events.pop();Ct=a.buffer([bt.events.length+2],"int32"),Ct.set(this.performanceEventDepth+(bt.isDrum?this.numPrograms-1:bt.program),0),bt.events.forEach((_t,Ot)=>{switch(_t.type){case"note-on":Ct.set(_t.pitch-this.minPitch,Ot+1);break;case"note-off":Ct.set(this.numPitches+_t.pitch-this.minPitch,Ot+1);break;case"time-shift":Ct.set(2*this.numPitches+_t.steps-1,Ot+1);break;case"velocity-change":Ct.set(2*this.numPitches+this.totalSteps+_t.velocityBin-1,Ot+1);break;default:throw new Error("Unrecognized performance event: "+_t)}}),Ct.set(this.endToken,bt.events.length+1)}else Ct=a.buffer([1],"int32",new Int32Array([this.endToken]));return a.tidy(()=>{const _t=a.oneHot(Ct.toTensor(),this.depth);return _t.pad([[0,Tt-_t.shape[0]],[0,0]])})}toTensor(bt){if(_.assertIsRelativeQuantizedSequence(bt),bt.quantizationInfo.stepsPerQuarter!==this.stepsPerQuarter)throw new Error(`Steps per quarter note mismatch: ${bt.quantizationInfo.stepsPerQuarter} != ${this.stepsPerQuarter}`);const Tt=_.clone(bt);Tt.notes=bt.notes.filter(Ot=>Ot.pitch>=this.minPitch&&Ot.pitch<=this.maxPitch);const Ct=new Set(Tt.notes.map(Ot=>Ot.instrument)),_t=Array.from(Ct).map(Ot=>$.Performance.fromNoteSequence(Tt,this.totalSteps,this.numVelocityBins,Ot)).sort((Ot,kt)=>kt.isDrum?-1:Ot.isDrum?1:Ot.program-kt.program);for(;_t.length>this.numSegments;)_t.pop();for(_t.forEach(Ot=>Ot.setNumSteps(this.totalSteps));_t.length<this.numSegments;)_t.push(void 0);return a.tidy(()=>a.concat(_t.map(Ot=>this.trackToTensor(Ot)),0))}tokensToTrack(bt){const Tt=bt.indexOf(this.endToken),Ct=Tt>=0?Tt:bt.length,_t=bt.slice(0,Ct),Ot=_t.filter(Bt=>Bt<this.performanceEventDepth),kt=_t.filter(Bt=>Bt>=this.performanceEventDepth),[Rt,jt]=kt.length?kt[0]-this.performanceEventDepth<this.numPrograms-1?[kt[0]-this.performanceEventDepth,!1]:[0,!0]:[0,!1],Gt=Array.from(Ot).map(Bt=>{if(Bt<this.numPitches)return{type:"note-on",pitch:this.minPitch+Bt};if(Bt<2*this.numPitches)return{type:"note-off",pitch:this.minPitch+Bt-this.numPitches};if(Bt<2*this.numPitches+this.totalSteps)return{type:"time-shift",steps:Bt-2*this.numPitches+1};if(Bt<2*this.numPitches+this.totalSteps+this.numVelocityBins)return{type:"velocity-change",velocityBin:Bt-2*this.numPitches-this.totalSteps+1};throw new Error("Invalid performance event token: "+Bt)});return new $.Performance(Gt,this.totalSteps,this.numVelocityBins,Rt,jt)}async toNoteSequence(bt,Tt=this.stepsPerQuarter,Ct){const _t=_.createQuantizedNoteSequence(Tt,Ct);_t.totalQuantizedSteps=this.totalSteps;const Ot=a.tidy(()=>a.split(bt.argMax(1),this.numSegments));return(await Promise.all(Ot.map(async kt=>{const Rt=await kt.data(),jt=this.tokensToTrack(Rt);return kt.dispose(),jt}))).forEach((kt,Rt)=>{kt.setNumSteps(this.totalSteps),_t.notes.push(...kt.toNoteSequence(Rt).notes)}),_t}}class yt extends et{constructor(bt){super(bt),this.TAPIFY_CHANNEL=3,this.stepsPerQuarter=bt.stepsPerQuarter||d.DEFAULT_STEPS_PER_QUARTER,this.pitchClasses=bt.pitchClasses||d.DEFAULT_DRUM_PITCH_CLASSES,this.pitchToClass=new Map;for(let Tt=0;Tt<this.pitchClasses.length;++Tt)this.pitchClasses[Tt].forEach(Ct=>{this.pitchToClass.set(Ct,Tt)});this.humanize=bt.humanize||!1,this.tapify=bt.tapify||!1,this.splitInstruments=bt.splitInstruments||!1,this.depth=3}toTensor(bt){const Tt=_.isRelativeQuantizedSequence(bt)?bt:_.quantizeNoteSequence(bt,this.stepsPerQuarter),Ct=this.numSteps,_t=Tt.tempos&&Tt.tempos.length?Tt.tempos[0].qpm:d.DEFAULT_QUARTERS_PER_MINUTE,Ot=60/_t/this.stepsPerQuarter,kt=[];for(let Ut=0;Ut<Ct;++Ut)kt.push(new Map);Tt.notes.forEach(Ut=>{if(!this.tapify&&!this.pitchToClass.has(Ut.pitch))return;const Qt=Ut.quantizedStartStep;if(Qt>=kt.length)throw Error(`Model does not support sequences with more than ${Ct} steps (${Ct*Ot} seconds at qpm ${_t}).`);const tn=this.tapify?this.TAPIFY_CHANNEL:this.pitchToClass.get(Ut.pitch);(!kt[Qt].has(tn)||kt[Qt].get(tn).velocity<Ut.velocity)&&kt[Qt].set(tn,Ut)});const Rt=this.pitchClasses.length,jt=a.buffer([Ct,Rt]),Gt=a.buffer([Ct,Rt]),Bt=a.buffer([Ct,Rt]);function zt(Ut){if(Ut.startTime===void 0)return 0;const Qt=Ut.startTime;return 2*(Ut.quantizedStartStep*Ot-Qt)/Ot}for(let Ut=0;Ut<Ct;++Ut)for(let Qt=0;Qt<Rt;++Qt){const tn=kt[Ut].get(Qt);jt.set(tn?1:0,Ut,Qt),this.humanize||this.tapify||Gt.set(tn?tn.velocity/d.MAX_MIDI_VELOCITY:0,Ut,Qt),this.humanize||Bt.set(tn?zt(tn):0,Ut,Qt)}return a.tidy(()=>{const Ut=jt.toTensor(),Qt=Gt.toTensor(),tn=Bt.toTensor(),sn=this.splitInstruments?Ct*Rt:Ct;return a.concat([Ut.as2D(sn,-1),Qt.as2D(sn,-1),tn.as2D(sn,-1)],1)})}async toNoteSequence(bt,Tt,Ct=d.DEFAULT_QUARTERS_PER_MINUTE){if(Tt&&Tt!==this.stepsPerQuarter)throw Error("`stepsPerQuarter` is set by the model.");Tt=this.stepsPerQuarter;const _t=this.splitInstruments?bt.shape[0]/this.pitchClasses.length:bt.shape[0],Ot=60/Ct/this.stepsPerQuarter,kt=c.a.create({totalTime:_t*Ot,tempos:[{qpm:Ct}]}),Rt=await bt.data();function jt(Bt,zt,Ut){return Math.min(Math.max(Bt,zt),Ut)}const Gt=this.pitchClasses.length;for(let Bt=0;Bt<_t;++Bt){const zt=Rt.slice(Bt*Gt*this.depth,(Bt+1)*Gt*this.depth);for(let Ut=0;Ut<Gt;++Ut){const Qt=zt[this.splitInstruments?Ut*this.depth:Ut],tn=zt[this.splitInstruments?Ut*this.depth+1:Gt+Ut],sn=zt[this.splitInstruments?Ut*this.depth+2:2*Gt+Ut];if(Qt>.5){const ln=jt(Math.round(tn*d.MAX_MIDI_VELOCITY),d.MIN_MIDI_VELOCITY,d.MAX_MIDI_VELOCITY),an=jt(sn/2,-.5,.5);kt.notes.push(c.a.Note.create({pitch:this.pitchClasses[Ut][0],startTime:(Bt-an)*Ot,endTime:(Bt-an+1)*Ot,velocity:ln,isDrum:!0}))}}}return kt}}},function(i,s,o){o.r(s),o.d(s,"ChordQuality",function(){return Jr}),o.d(s,"ChordSymbolException",function(){return vs}),o.d(s,"ChordEncodingException",function(){return Os}),o.d(s,"ChordSymbols",function(){return Pr}),o.d(s,"ChordEncoder",function(){return Nr}),o.d(s,"chordEncoderFromType",function(){return Ds}),o.d(s,"MajorMinorChordEncoder",function(){return ns}),o.d(s,"TriadChordEncoder",function(){return Rs}),o.d(s,"PitchChordEncoder",function(){return xs});var a={};o.r(a),o.d(a,"names",function(){return b}),o.d(a,"tokenize",function(){return et}),o.d(a,"props",function(){return j}),o.d(a,"name",function(){return nt}),o.d(a,"pc",function(){return st}),o.d(a,"midi",function(){return ot}),o.d(a,"midiToFreq",function(){return ut}),o.d(a,"freq",function(){return ht}),o.d(a,"freqToMidi",function(){return yt}),o.d(a,"chroma",function(){return ft}),o.d(a,"oct",function(){return bt}),o.d(a,"stepToLetter",function(){return Tt}),o.d(a,"altToAcc",function(){return _t}),o.d(a,"from",function(){return Ot}),o.d(a,"build",function(){return kt}),o.d(a,"fromMidi",function(){return Rt}),o.d(a,"simplify",function(){return jt}),o.d(a,"enharmonic",function(){return Gt});var c={};o.r(c),o.d(c,"names",function(){return Cr}),o.d(c,"props",function(){return Er}),o.d(c,"intervals",function(){return zr}),o.d(c,"notes",function(){return bs}),o.d(c,"exists",function(){return ms}),o.d(c,"supersets",function(){return gs}),o.d(c,"subsets",function(){return ys}),o.d(c,"tokenize",function(){return ls});var d=o(2),g="C C# Db D D# Eb E F F# Gb G G# Ab A A# Bb B".split(" "),b=function($n){return typeof $n!="string"?g.slice():g.filter(function(Tn){var Dn=Tn[1]||" ";return $n.indexOf(Dn)!==-1})},$=b(" #"),_=b(" b"),_e=/^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\d*)\s*(.*)$/;function et($n){typeof $n!="string"&&($n="");var Tn=_e.exec($n);return[Tn[1].toUpperCase(),Tn[2].replace(/x/g,"##"),Tn[3],Tn[4]]}var rt=Object.freeze({pc:null,name:null,step:null,alt:null,oct:null,octStr:null,chroma:null,midi:null,freq:null}),tt=[0,2,4,5,7,9,11],j=function($n,Tn){return Tn===void 0&&(Tn={}),function(Dn){return Tn[Dn]||(Tn[Dn]=$n(Dn))}}(function($n){var Tn=et($n);if(Tn[0]===""||Tn[3]!=="")return rt;var Dn=Tn[0],bn=Tn[1],Gn=Tn[2],Jn={letter:Dn,acc:bn,octStr:Gn,pc:Dn+bn,name:Dn+bn+Gn,step:(Dn.charCodeAt(0)+3)%7,alt:bn[0]==="b"?-bn.length:bn.length,oct:Gn.length?+Gn:null,chroma:0,midi:null,freq:null};return Jn.chroma=(tt[Jn.step]+Jn.alt+120)%12,Jn.midi=Jn.oct!==null?tt[Jn.step]+Jn.alt+12*(Jn.oct+1):null,Jn.freq=ut(Jn.midi),Object.freeze(Jn)}),nt=function($n){return j($n).name},st=function($n){return j($n).pc},ot=function($n){if(typeof $n!="number"&&typeof $n!="string")return null;var Tn,Dn=j($n).midi,bn=Dn||Dn===0?Dn:+$n;return(Tn=bn)>=0&&Tn<=127?bn:null},ut=function($n,Tn){return Tn===void 0&&(Tn=440),typeof $n=="number"?Math.pow(2,($n-69)/12)*Tn:null},ht=function($n){return j($n).freq||ut($n)},pt=Math.log(2),it=Math.log(440),yt=function($n){var Tn=12*(Math.log($n)-it)/pt+69;return Math.round(100*Tn)/100},ft=function($n){return j($n).chroma},bt=function($n){return j($n).oct},Tt=function($n){return"CDEFGAB"[$n]},Ct=function($n,Tn){return Array(Tn+1).join($n)},_t=function($n){return function(Tn,Dn){return typeof Tn!="number"?"":Dn(Tn)}($n,function(Tn){return Tn<0?Ct("b",-Tn):Ct("#",Tn)})},Ot=function($n,Tn){$n===void 0&&($n={}),Tn===void 0&&(Tn=null);var Dn=Tn?Object.assign({},j(Tn),$n):$n,bn=Dn.step,Gn=Dn.alt,Jn=Dn.oct;if(typeof bn!="number")return null;var rr=Tt(bn);if(!rr)return null;var hr=rr+_t(Gn);return Jn||Jn===0?hr+Jn:hr},kt=Ot;function Rt($n,Tn){return Tn===void 0&&(Tn=!1),$n=Math.round($n),(Tn===!0?$:_)[$n%12]+(Math.floor($n/12)-1)}var jt=function($n,Tn){Tn===void 0&&(Tn=!0);var Dn=j($n),bn=Dn.alt,Gn=Dn.chroma,Jn=Dn.midi;if(Gn===null)return null;var rr=Tn===!1?bn<0:bn>0;return Jn===null?st(Rt(Gn,rr)):Rt(Jn,rr)},Gt=function($n){return jt($n,!1)},Bt=new RegExp("^([-+]?\\d+)(d{1,4}|m|M|P|A{1,4})|(AA|A|P|M|m|d|dd)([-+]?\\d+)$"),zt=[0,2,4,5,7,9,11],Ut=Object.freeze({name:null,num:null,q:null,step:null,alt:null,dir:null,type:null,simple:null,semitones:null,chroma:null,oct:null}),Qt=function($n){return(Math.abs($n)-1)%7},tn=function($n){var Tn=function(Jn){var rr=Bt.exec(""+Jn);return rr===null?null:rr[1]?[rr[1],rr[2]]:[rr[4],rr[3]]}($n);if(Tn===null)return Ut;var Dn,bn,Gn={num:0,q:"d",name:"",type:"M",step:0,dir:-1,simple:1,alt:0,oct:0,semitones:0,chroma:0,ic:0};return Gn.num=+Tn[0],Gn.q=Tn[1],Gn.step=Qt(Gn.num),Gn.type="PMMPPMM"[Gn.step],Gn.type==="M"&&Gn.q==="P"?Ut:(Gn.name=""+Gn.num+Gn.q,Gn.dir=Gn.num<0?-1:1,Gn.simple=Gn.num===8||Gn.num===-8?Gn.num:Gn.dir*(Gn.step+1),Gn.alt=(Dn=Gn.type,(bn=Gn.q)==="M"&&Dn==="M"||bn==="P"&&Dn==="P"?0:bn==="m"&&Dn==="M"?-1:/^A+$/.test(bn)?bn.length:/^d+$/.test(bn)?Dn==="P"?-bn.length:-bn.length-1:null),Gn.oct=Math.floor((Math.abs(Gn.num)-1)/7),Gn.semitones=Gn.dir*(zt[Gn.step]+Gn.alt+12*Gn.oct),Gn.chroma=(Gn.dir*(zt[Gn.step]+Gn.alt)%12+12)%12,Object.freeze(Gn))},sn={};function ln($n){return typeof $n!="string"?Ut:sn[$n]||(sn[$n]=tn($n))}var an=[0,2,4,-1,1,3,5],Yt=an.map(function($n){return Math.floor(7*$n/12)}),cn=[3,0,4,1,5,2,6],Wt=function($n,Tn,Dn){var bn=cn[function(Jn){var rr=(Jn+1)%7;return rr<0?7+rr:rr}($n)],Gn=Math.floor(($n+1)/7);return Tn===void 0?{step:bn,alt:Gn,dir:Dn}:{step:bn,alt:Gn,oct:Tn+4*Gn+Yt[bn],dir:Dn}},wt=function($n){return function(Tn,Dn){return Dn===void 0&&(Dn={}),function(bn){return Dn[bn]||(Dn[bn]=Tn(bn))}}(function(Tn){var Dn=$n(Tn);return Dn.name===null?null:function(bn){var Gn=bn.step,Jn=bn.alt,rr=bn.oct,hr=bn.dir;hr===void 0&&(hr=1);var Gr=an[Gn]+7*Jn;return rr===null?[hr*Gr]:[hr*Gr,hr*(rr-Yt[Gn]-4*Jn)]}(Dn)})},xt=wt(j),At=wt(ln);function qt($n,Tn){if(arguments.length===1)return function(Jn){return qt($n,Jn)};var Dn=xt($n),bn=At(Tn);if(Dn===null||bn===null)return null;var Gn=Dn.length===1?[Dn[0]+bn[0]]:[Dn[0]+bn[0],Dn[1]+bn[1]];return kt(Wt(Gn[0],Gn[1]))}var Pt=o(64),Zt=o(65),nn=function($n){return ft($n)||function(Tn){return ln(Tn).chroma}($n)||0},dn=function($n){return parseInt(wn($n),2)};function wn($n){if(Pn($n))return $n;if(!Array.isArray($n))return"";var Tn=[0,0,0,0,0,0,0,0,0,0,0,0];return $n.map(nn).forEach(function(Dn){Tn[Dn]=1}),Tn.join("")}var kn=/^[01]{12}$/;function Pn($n){return kn.test($n)}function On($n,Tn){return arguments.length>1?On($n)(Tn):($n=dn($n),function(Dn){return(Dn=dn(Dn))!==$n&&(Dn&$n)===Dn})}function Bn($n,Tn){return arguments.length>1?Bn($n)(Tn):($n=dn($n),function(Dn){return(Dn=dn(Dn))!==$n&&(Dn|$n)===Dn})}var Zn,jn,tr=function($n){var Tn=Object.keys($n).sort(),Dn=[],bn=[],Gn=function(hr,Gr,Ar){Dn[hr]=Gr,bn[Ar]=bn[Ar]||[],bn[Ar].push(hr)};Tn.forEach(function(hr){var Gr=$n[hr][0].split(" "),Ar=$n[hr][1],Kt=wn(Gr);Gn(hr,Gr,Kt),Ar&&Ar.forEach(function(rn){return Gn(rn,Gr,Kt)})});var Jn=Object.keys(Dn).sort(),rr=function(hr){return Dn[hr]};return rr.names=function(hr){return typeof hr=="string"?(bn[hr]||[]).slice():(hr===!0?Jn:Tn).slice()},rr},Un=tr(Pt),or=tr(Zt);Zn=Un,jn=or,function($n){return Zn($n)||jn($n)}.names=function($n){return Zn.names($n).concat(jn.names($n))},Object.freeze({name:null,intervals:[],names:[],chroma:null,setnum:null}),Un.names;var Cr=or.names,Rr=Object.freeze({name:null,names:[],intervals:[],chroma:null,setnum:null}),Er=function($n,Tn){return Tn===void 0&&(Tn={}),function(Dn){return Tn[Dn]||(Tn[Dn]=$n(Dn))}}(function($n){var Tn=or($n);if(!Tn)return Rr;var Dn={intervals:Tn,name:$n};return Dn.chroma=wn(Tn),Dn.setnum=parseInt(Dn.chroma,2),Dn.names=or.names(Dn.chroma),Dn}),zr=function($n){return Er(ls($n)[1]).intervals};function bs($n,Tn){if(Tn)return Er(Tn).intervals.map(qt($n));var Dn=ls($n),bn=Dn[0],Gn=Dn[1];return Er(Gn).intervals.map(qt(bn))}var ms=function($n){return or(ls($n)[1])!==void 0},gs=function($n){if(!zr($n).length)return[];var Tn=Bn(zr($n));return or.names().filter(function(Dn){return Tn(or(Dn))})},ys=function($n){var Tn=On(zr($n));return or.names().filter(function(Dn){return Tn(or(Dn))})},$s=/^(6|64|7|9|11|13)$/;function ls($n){var Tn=et($n);return Tn[0]===""?["",$n]:Tn[0]==="A"&&Tn[3]==="ug"?["","aug"]:$s.test(Tn[2])?[Tn[0]+Tn[1],Tn[2]+Tn[3]]:[Tn[0]+Tn[1]+Tn[2],Tn[3]]}var Yr=o(8);const Ls=[["1P","3M","5P"],["1P","3m","5P"],["1P","3M","5A"],["1P","3m","5d"]];var Jr;(function($n){$n[$n.Major=0]="Major",$n[$n.Minor=1]="Minor",$n[$n.Augmented=2]="Augmented",$n[$n.Diminished=3]="Diminished",$n[$n.Other=4]="Other"})(Jr||(Jr={}));class vs extends Error{constructor(Tn){super(Tn),Object.setPrototypeOf(this,new.target.prototype)}}class Os extends Error{constructor(Tn){super(Tn),Object.setPrototypeOf(this,new.target.prototype)}}class Pr{static pitches(Tn){if(!c.tokenize(Tn)[0]||!c.exists(Tn))throw new vs("Unrecognized chord symbol: "+Tn);return c.notes(Tn).map(a.chroma)}static root(Tn){const Dn=c.tokenize(Tn)[0];if(!Dn)throw new vs("Chord symbol has unknown root: "+Tn);return a.chroma(Dn)}static quality(Tn){if(!c.exists(Tn))throw new vs("Unrecognized chord symbol: "+Tn);const Dn=c.intervals(Tn),bn=Ls.map(rr=>rr.every(hr=>Dn.includes(hr))),Gn=bn.indexOf(!0),Jn=bn.lastIndexOf(!0);return Gn>=0&&Gn===Jn?Gn:Jr.Other}}class Nr{encodeProgression(Tn,Dn){const bn=Tn.map(Jn=>this.encode(Jn)),Gn=Array.from(Array(Dn).keys()).map(Jn=>Math.floor(Jn*bn.length/Dn));return d.stack(Gn.map(Jn=>bn[Jn]))}}function Ds($n){switch($n){case"MajorMinorChordEncoder":return new ns;case"TriadChordEncoder":return new Rs;case"PitchChordEncoder":return new xs;default:throw new Error("Unknown chord encoder type: "+$n)}}class ns extends Nr{constructor(){super(...arguments),this.depth=1+2*Yr.NUM_PITCH_CLASSES}index(Tn){if(Tn===Yr.NO_CHORD)return 0;const Dn=Pr.root(Tn),bn=1+Pr.quality(Tn)*Yr.NUM_PITCH_CLASSES+Dn;if(bn>=this.depth)throw new Os("Chord is neither major nor minor: "+Tn);return bn}encode(Tn){return d.tidy(()=>d.oneHot(d.tensor1d([this.index(Tn)],"int32"),this.depth).as1D())}}class Rs extends Nr{constructor(){super(...arguments),this.depth=1+4*Yr.NUM_PITCH_CLASSES}index(Tn){if(Tn===Yr.NO_CHORD)return 0;const Dn=Pr.root(Tn),bn=1+Pr.quality(Tn)*Yr.NUM_PITCH_CLASSES+Dn;if(bn>=this.depth)throw new Os("Chord is not a standard triad: "+Tn);return bn}encode(Tn){return d.tidy(()=>d.oneHot(d.tensor1d([this.index(Tn)],"int32"),this.depth).as1D())}}class xs extends Nr{constructor(){super(...arguments),this.depth=1+3*Yr.NUM_PITCH_CLASSES}encode(Tn){return d.tidy(()=>{if(Tn===Yr.NO_CHORD)return d.oneHot(d.tensor1d([0],"int32"),this.depth).as1D();const Dn=Pr.root(Tn),bn=d.oneHot(d.tensor1d([Dn],"int32"),Yr.NUM_PITCH_CLASSES).as1D(),Gn=d.buffer([Yr.NUM_PITCH_CLASSES]);Pr.pitches(Tn).forEach(hr=>Gn.set(1,hr));const Jn=Gn.toTensor().as1D(),rr=bn;return d.concat1d([d.tensor1d([0]),bn,Jn,rr])})}}},function(i,s,o){(function(a){var c=o(46),d=o(11);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g=Object(d.b)();g.registerFlag("DEBUG",()=>!1,b=>{b&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),g.registerFlag("IS_BROWSER",()=>c.isBrowser()),g.registerFlag("IS_NODE",()=>a!==void 0&&a.versions!==void 0&&a.versions.node!==void 0),g.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),g.registerFlag("PROD",()=>!1),g.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>g.getBool("DEBUG")),g.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),g.registerFlag("IS_TEST",()=>!1)}).call(this,o(44))},function(i,s,o){o.d(s,"a",function(){return a}),o.d(s,"b",function(){return c});class a{constructor(b,$){this.backend=b,this.dataMover=$,this.data=new WeakMap,this.dataIdsCount=0}get(b){return this.data.has(b)||this.dataMover.moveData(this.backend,b),this.data.get(b)}set(b,$){this.dataIdsCount++,this.data.set(b,$)}has(b){return this.data.has(b)}delete(b){return this.dataIdsCount--,this.data.delete(b)}numDataIds(){return this.dataIdsCount}}class c{time(b){return d("time")}read(b){return d("read")}readSync(b){return d("readSync")}numDataIds(){return d("numDataIds")}disposeData(b){return d("disposeData")}write(b,$,_){return d("write")}move(b,$,_,_e){return d("move")}memory(){return d("memory")}floatPrecision(){return d("floatPrecision")}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}batchMatMul(b,$,_,_e){return d("batchMatMul")}fusedBatchMatMul({a:b,b:$,transposeA:_,transposeB:_e,bias:et,activation:rt,preluActivationWeights:tt}){return d("fusedBatchMatMul")}slice(b,$,_){return d("slice")}stridedSlice(b,$,_,_e){return d("stridedSlice")}unstack(b,$){return d("unstack")}reverse(b,$){return d("reverse")}concat(b,$){return d("concat")}neg(b){return d("neg")}add(b,$){return d("add")}addN(b){return d("addN")}subtract(b,$){return d("subtract")}multiply(b,$){return d("multiply")}realDivide(b,$){return d("realDivide")}floorDiv(b,$){return d("floorDiv")}sum(b,$){return d("sum")}prod(b,$){return d("prod")}unsortedSegmentSum(b,$,_){return d("unsortedSegmentSum")}argMin(b,$){return d("argMin")}argMax(b,$){return d("argMax")}equal(b,$){return d("equal")}notEqual(b,$){return d("notEqual")}less(b,$){return d("less")}lessEqual(b,$){return d("lessEqual")}greater(b,$){return d("greater")}greaterEqual(b,$){return d("greaterEqual")}logicalNot(b){return d("logicalNot")}logicalAnd(b,$){return d("logicalAnd")}logicalOr(b,$){return d("logicalOr")}where(b){return d("where")}select(b,$,_){return d("select")}topk(b,$,_){return d("topk")}min(b,$){return d("min")}minimum(b,$){return d("minimum")}mod(b,$){return d("mod")}max(b,$){return d("max")}maximum(b,$){return d("maximum")}all(b,$){return d("all")}any(b,$){return d("any")}squaredDifference(b,$){return d("squaredDifference")}ceil(b){return d("ceil")}floor(b){return d("floor")}round(b){return d("round")}sign(b){return d("sign")}isNaN(b){return d("isNaN")}isInf(b){return d("isInf")}isFinite(b){return d("isFinite")}pow(b,$){return d("pow")}exp(b){return d("exp")}expm1(b){return d("expm1")}softmax(b,$){return d("softmax")}log(b){return d("log")}log1p(b){return d("log1p")}sqrt(b){return d("sqrt")}rsqrt(b){return d("rsqrt")}square(b){return d("square")}reciprocal(b){return d("reciprocal")}relu(b){return d("relu")}relu6(b){return d("relu6")}prelu(b,$){return d("prelu")}elu(b){return d("elu")}eluDer(b,$){return d("eluDer")}selu(b){return d("selu")}int(b){return d("int")}clip(b,$,_){return d("clip")}abs(b){return d("abs")}complexAbs(b){return d("complexAbs")}sigmoid(b){return d("sigmoid")}softplus(b){return d("softplus")}sin(b){return d("sin")}cos(b){return d("cos")}tan(b){return d("tan")}asin(b){return d("asin")}acos(b){return d("acos")}atan(b){return d("atan")}atan2(b,$){return d("atan2")}sinh(b){return d("sinh")}cosh(b){return d("cosh")}tanh(b){return d("tanh")}asinh(b){return d("asinh")}acosh(b){return d("acosh")}atanh(b){return d("atanh")}erf(b){return d("erf")}step(b,$){return d("step")}fusedConv2d({input:b,filter:$,convInfo:_,bias:_e,activation:et,preluActivationWeights:rt}){return d("fusedConv2d")}conv2d(b,$,_){return d("conv2d")}conv2dDerInput(b,$,_){return d("conv2dDerInput")}conv2dDerFilter(b,$,_){return d("conv2dDerFilter")}fusedDepthwiseConv2D({input:b,filter:$,convInfo:_,bias:_e,activation:et,preluActivationWeights:rt}){return d("fusedDepthwiseConv2D")}depthwiseConv2D(b,$,_){return d("depthwiseConv2D")}depthwiseConv2DDerInput(b,$,_){return d("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(b,$,_){return d("depthwiseConv2DDerFilter")}conv3d(b,$,_){return d("conv3d")}conv3dDerInput(b,$,_){return d("conv3dDerInput")}conv3dDerFilter(b,$,_){return d("conv3dDerFilter")}maxPool(b,$){return d("maxPool")}maxPoolBackprop(b,$,_,_e){return d("maxPoolBackprop")}avgPool(b,$){return d("avgPool")}avgPoolBackprop(b,$,_){return d("avgPoolBackprop")}avgPool3d(b,$){return d("avgPool3d")}avgPool3dBackprop(b,$,_){return d("avgPool3dBackprop")}maxPool3d(b,$){return d("maxPool3d")}maxPool3dBackprop(b,$,_,_e){return d("maxPool3dBackprop")}reshape(b,$){return d("reshape")}cast(b,$){return d("cast")}tile(b,$){return d("tile")}pad(b,$,_){return d("pad")}transpose(b,$){return d("transpose")}gather(b,$,_){return d("gather")}gatherND(b,$){return d("gatherND")}scatterND(b,$,_){return d("scatterND")}batchToSpaceND(b,$,_){return d("batchToSpaceND")}spaceToBatchND(b,$,_){return d("spaceToBatchND")}resizeBilinear(b,$,_,_e){return d("resizeBilinear")}resizeBilinearBackprop(b,$,_){return d("resizeBilinearBackprop")}resizeNearestNeighbor(b,$,_,_e){return d("resizeNearestNeighbor")}resizeNearestNeighborBackprop(b,$,_){return d("resizeNearestNeighborBackprop")}batchNorm(b,$,_,_e,et,rt){return d("batchNorm")}localResponseNormalization4D(b,$,_,_e,et){return d("localResponseNormalization4D")}LRNGrad(b,$,_,_e,et,rt,tt){return d("LRNGrad")}multinomial(b,$,_,_e){return d("multinomial")}oneHot(b,$,_,_e){return d("oneHot")}cumsum(b,$,_,_e){return d("cumsum")}nonMaxSuppression(b,$,_,_e,et){return d("nonMaxSuppression")}fft(b){return d("fft")}ifft(b){return d("ifft")}complex(b,$){return d("complex")}real(b){return d("real")}imag(b){return d("imag")}cropAndResize(b,$,_,_e,et,rt){return d("cropAndResize")}depthToSpace(b,$,_){return d("depthToSpace")}split(b,$,_){return d("split")}sparseToDense(b,$,_,_e){return d("sparseToDense")}diag(b){return d("diag")}fill(b,$,_){return d("fill")}onesLike(b){return d("onesLike")}zerosLike(b){return d("zerosLike")}linspace(b,$,_){return d("linspace")}dispose(){return d("dispose")}}function d(g){throw new Error(`'${g}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},function(i,s,o){(function(a,c){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let d;function g(){if(d==null){let $;if(typeof window<"u")$=window;else if(a!==void 0)$=a;else if(c!==void 0)$=c;else{if(typeof self>"u")throw new Error("Could not find a global object");$=self}d=$}return d}function b($,_){const _e=function(){const et=g();return et._tfGlobals==null&&(et._tfGlobals=new Map),et._tfGlobals}();if(_e.has($))return _e.get($);{const et=_();return _e.set($,et),_e.get($)}}o.d(s,"b",function(){return g}),o.d(s,"a",function(){return b})}).call(this,o(21),o(44))},function(i,s,o){o.d(s,"a",function(){return a});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},function(i,s,o){o.d(s,"a",function(){return _}),o.d(s,"b",function(){return g}),o.d(s,"c",function(){return b});var a=o(2),c=o(20),d=o(25);function g(_e,et=0){return a.tidy(()=>{let rt=a.mul(_e,a.pow(2,et));return rt=rt.clipByValue(0,Object(c.g)(110).dataSync()[0]),rt})}function b(_e,et,rt){return _e.splice(rt),function(tt,j){const nt=[],st=Math.floor(j/tt.length),ot=j%tt.length;for(let ht=0;ht<tt.length;ht++){nt.push(tt[ht]);for(let pt=1;pt<st;pt++)nt.push(-1);ht<ot&&nt.push(-1)}let ut=-1;for(let ht=0;ht<nt.length;ht++)if(nt[ht]!==-1){let pt=nt[ht];const it=ut>=0?nt[ut]:0;ut!==-1&&(pt-=nt[ut]);for(let yt=ut+1;yt<ht;yt++)nt[yt]=it+pt*(yt-ut)/(ht-ut);ut=ht}for(let ht=ut+1;ht<nt.length;ht++)nt[ht]=ut>=0?nt[ht-1]:0;return nt}(_e,et)}function $(_e){const et=_e*d.f+d.e;return 10*Math.pow(2,1*et/12)}async function _(_e,et,rt=d.a){const tt=[],j=[],nt=et.length,st=a.tensor(et),ot=512*Math.ceil(nt/512),ut=st.pad([[0,ot-nt]]),ht=ut.size/16e3,pt=await _e.execute({input_audio_samples:ut});let it=await pt[0].data();const yt=await pt[1].data();if(32*(yt.length-1)/1e3===ht){let ft=20;for(let bt=0;bt<yt.length;++bt){const Tt=1-it[bt];if(j.push(Tt),Tt>=d.a)ft=$(yt[bt]),tt.push(ft);else{const Ct=a.truncatedNormal([1],0,d.d),_t=1-await Ct.array();tt.push(ft*_t),Ct.dispose()}}}else{const ft=ot/512+1,bt=new Float32Array(ft);it=new Float32Array(ft);for(let Ct=0;Ct<ot;Ct+=ot/4){const _t=ut.slice([Ct],[ot/4]),Ot=await _e.execute({input_audio_samples:_t}),kt=await Ot[0].data(),Rt=await Ot[1].data(),jt=Math.floor(Ct/512);it.set(kt,jt),bt.set(Rt,jt),_t.dispose(),Ot[0].dispose(),Ot[1].dispose()}let Tt=20;for(let Ct=0;Ct<bt.length;++Ct){const _t=1-it[Ct];if(j.push(_t),_t>=rt)Tt=$(bt[Ct]),tt.push(Tt);else{const Ot=a.truncatedNormal([1],0,d.d),kt=1-await Ot.array();tt.push(Tt*kt),Ot.dispose()}}}return pt[0].dispose(),pt[1].dispose(),st.dispose(),ut.dispose(),{pitches:tt,confidences:j}}},function(i,s,o){function a(c){if(this.size=0|c,this.size<=1||(this.size&this.size-1)!=0)throw new Error("FFT size must be a power of two and bigger than 1");this._csize=c<<1;for(var d=new Array(2*this.size),g=0;g<d.length;g+=2){const rt=Math.PI*g/this.size;d[g]=Math.cos(rt),d[g+1]=-Math.sin(rt)}this.table=d;for(var b=0,$=1;this.size>$;$<<=1)b++;this._width=b%2==0?b-1:b,this._bitrev=new Array(1<<this._width);for(var _=0;_<this._bitrev.length;_++){this._bitrev[_]=0;for(var _e=0;_e<this._width;_e+=2){var et=this._width-_e-2;this._bitrev[_]|=(_>>>_e&3)<<et}}this._out=null,this._data=null,this._inv=0}i.exports=a,a.prototype.fromComplexArray=function(c,d){for(var g=d||new Array(c.length>>>1),b=0;b<c.length;b+=2)g[b>>>1]=c[b];return g},a.prototype.createComplexArray=function(){const c=new Array(this._csize);for(var d=0;d<c.length;d++)c[d]=0;return c},a.prototype.toComplexArray=function(c,d){for(var g=d||this.createComplexArray(),b=0;b<g.length;b+=2)g[b]=c[b>>>1],g[b+1]=0;return g},a.prototype.completeSpectrum=function(c){for(var d=this._csize,g=d>>>1,b=2;b<g;b+=2)c[d-b]=c[b],c[d-b+1]=-c[b+1]},a.prototype.transform=function(c,d){if(c===d)throw new Error("Input and output buffers must be different");this._out=c,this._data=d,this._inv=0,this._transform4(),this._out=null,this._data=null},a.prototype.realTransform=function(c,d){if(c===d)throw new Error("Input and output buffers must be different");this._out=c,this._data=d,this._inv=0,this._realTransform4(),this._out=null,this._data=null},a.prototype.inverseTransform=function(c,d){if(c===d)throw new Error("Input and output buffers must be different");this._out=c,this._data=d,this._inv=1,this._transform4();for(var g=0;g<c.length;g++)c[g]/=this.size;this._out=null,this._data=null},a.prototype._transform4=function(){var c,d,g=this._out,b=this._csize,$=1<<this._width,_=b/$<<1,_e=this._bitrev;if(_===4)for(c=0,d=0;c<b;c+=_,d++){const ot=_e[d];this._singleTransform2(c,ot,$)}else for(c=0,d=0;c<b;c+=_,d++){const ot=_e[d];this._singleTransform4(c,ot,$)}var et=this._inv?-1:1,rt=this.table;for($>>=2;$>=2;$>>=2){var tt=(_=b/$<<1)>>>2;for(c=0;c<b;c+=_)for(var j=c+tt,nt=c,st=0;nt<j;nt+=2,st+=$){const ot=nt,ut=ot+tt,ht=ut+tt,pt=ht+tt,it=g[ot],yt=g[ot+1],ft=g[ut],bt=g[ut+1],Tt=g[ht],Ct=g[ht+1],_t=g[pt],Ot=g[pt+1],kt=it,Rt=yt,jt=rt[st],Gt=et*rt[st+1],Bt=ft*jt-bt*Gt,zt=ft*Gt+bt*jt,Ut=rt[2*st],Qt=et*rt[2*st+1],tn=Tt*Ut-Ct*Qt,sn=Tt*Qt+Ct*Ut,ln=rt[3*st],an=et*rt[3*st+1],Yt=_t*ln-Ot*an,cn=_t*an+Ot*ln,Wt=kt+tn,wt=Rt+sn,xt=kt-tn,At=Rt-sn,qt=Bt+Yt,Pt=zt+cn,Zt=et*(Bt-Yt),nn=et*(zt-cn),dn=Wt+qt,wn=wt+Pt,kn=Wt-qt,Pn=wt-Pt,On=xt+nn,Bn=At-Zt,Zn=xt-nn,jn=At+Zt;g[ot]=dn,g[ot+1]=wn,g[ut]=On,g[ut+1]=Bn,g[ht]=kn,g[ht+1]=Pn,g[pt]=Zn,g[pt+1]=jn}}},a.prototype._singleTransform2=function(c,d,g){const b=this._out,$=this._data,_=$[d],_e=$[d+1],et=$[d+g],rt=$[d+g+1],tt=_+et,j=_e+rt,nt=_-et,st=_e-rt;b[c]=tt,b[c+1]=j,b[c+2]=nt,b[c+3]=st},a.prototype._singleTransform4=function(c,d,g){const b=this._out,$=this._data,_=this._inv?-1:1,_e=2*g,et=3*g,rt=$[d],tt=$[d+1],j=$[d+g],nt=$[d+g+1],st=$[d+_e],ot=$[d+_e+1],ut=$[d+et],ht=$[d+et+1],pt=rt+st,it=tt+ot,yt=rt-st,ft=tt-ot,bt=j+ut,Tt=nt+ht,Ct=_*(j-ut),_t=_*(nt-ht),Ot=pt+bt,kt=it+Tt,Rt=yt+_t,jt=ft-Ct,Gt=pt-bt,Bt=it-Tt,zt=yt-_t,Ut=ft+Ct;b[c]=Ot,b[c+1]=kt,b[c+2]=Rt,b[c+3]=jt,b[c+4]=Gt,b[c+5]=Bt,b[c+6]=zt,b[c+7]=Ut},a.prototype._realTransform4=function(){var c,d,g=this._out,b=this._csize,$=1<<this._width,_=b/$<<1,_e=this._bitrev;if(_===4)for(c=0,d=0;c<b;c+=_,d++){const Er=_e[d];this._singleRealTransform2(c,Er>>>1,$>>>1)}else for(c=0,d=0;c<b;c+=_,d++){const Er=_e[d];this._singleRealTransform4(c,Er>>>1,$>>>1)}var et=this._inv?-1:1,rt=this.table;for($>>=2;$>=2;$>>=2){var tt=(_=b/$<<1)>>>1,j=tt>>>1,nt=j>>>1;for(c=0;c<b;c+=_)for(var st=0,ot=0;st<=nt;st+=2,ot+=$){var ut=c+st,ht=ut+j,pt=ht+j,it=pt+j,yt=g[ut],ft=g[ut+1],bt=g[ht],Tt=g[ht+1],Ct=g[pt],_t=g[pt+1],Ot=g[it],kt=g[it+1],Rt=yt,jt=ft,Gt=rt[ot],Bt=et*rt[ot+1],zt=bt*Gt-Tt*Bt,Ut=bt*Bt+Tt*Gt,Qt=rt[2*ot],tn=et*rt[2*ot+1],sn=Ct*Qt-_t*tn,ln=Ct*tn+_t*Qt,an=rt[3*ot],Yt=et*rt[3*ot+1],cn=Ot*an-kt*Yt,Wt=Ot*Yt+kt*an,wt=Rt+sn,xt=jt+ln,At=Rt-sn,qt=jt-ln,Pt=zt+cn,Zt=Ut+Wt,nn=et*(zt-cn),dn=et*(Ut-Wt),wn=wt+Pt,kn=xt+Zt,Pn=At+dn,On=qt-nn;if(g[ut]=wn,g[ut+1]=kn,g[ht]=Pn,g[ht+1]=On,st!==0){if(st!==nt){var Bn=At+-et*dn,Zn=-qt+-et*nn,jn=wt+-et*Pt,tr=-xt- -et*Zt,Un=c+j-st,or=c+tt-st;g[Un]=Bn,g[Un+1]=Zn,g[or]=jn,g[or+1]=tr}}else{var Cr=wt-Pt,Rr=xt-Zt;g[pt]=Cr,g[pt+1]=Rr}}}},a.prototype._singleRealTransform2=function(c,d,g){const b=this._out,$=this._data,_=$[d],_e=$[d+g],et=_+_e,rt=_-_e;b[c]=et,b[c+1]=0,b[c+2]=rt,b[c+3]=0},a.prototype._singleRealTransform4=function(c,d,g){const b=this._out,$=this._data,_=this._inv?-1:1,_e=2*g,et=3*g,rt=$[d],tt=$[d+g],j=$[d+_e],nt=$[d+et],st=rt+j,ot=rt-j,ut=tt+nt,ht=_*(tt-nt),pt=st+ut,it=ot,yt=-ht,ft=st-ut,bt=ot,Tt=ht;b[c]=pt,b[c+1]=0,b[c+2]=it,b[c+3]=yt,b[c+4]=ft,b[c+5]=0,b[c+6]=bt,b[c+7]=Tt}},function(i,s){var o,a,c=i.exports={};function d(){throw new Error("setTimeout has not been defined")}function g(){throw new Error("clearTimeout has not been defined")}function b(st){if(o===setTimeout)return setTimeout(st,0);if((o===d||!o)&&setTimeout)return o=setTimeout,setTimeout(st,0);try{return o(st,0)}catch{try{return o.call(null,st,0)}catch{return o.call(this,st,0)}}}(function(){try{o=typeof setTimeout=="function"?setTimeout:d}catch{o=d}try{a=typeof clearTimeout=="function"?clearTimeout:g}catch{a=g}})();var $,_=[],_e=!1,et=-1;function rt(){_e&&$&&(_e=!1,$.length?_=$.concat(_):et=-1,_.length&&tt())}function tt(){if(!_e){var st=b(rt);_e=!0;for(var ot=_.length;ot;){for($=_,_=[];++et<ot;)$&&$[et].run();et=-1,ot=_.length}$=null,_e=!1,function(ut){if(a===clearTimeout)return clearTimeout(ut);if((a===g||!a)&&clearTimeout)return a=clearTimeout,clearTimeout(ut);try{a(ut)}catch{try{return a.call(null,ut)}catch{return a.call(this,ut)}}}(st)}}function j(st,ot){this.fun=st,this.array=ot}function nt(){}c.nextTick=function(st){var ot=new Array(arguments.length-1);if(arguments.length>1)for(var ut=1;ut<arguments.length;ut++)ot[ut-1]=arguments[ut];_.push(new j(st,ot)),_.length!==1||_e||b(tt)},j.prototype.run=function(){this.fun.apply(null,this.array)},c.title="browser",c.browser=!0,c.env={},c.argv=[],c.version="",c.versions={},c.on=nt,c.addListener=nt,c.once=nt,c.off=nt,c.removeListener=nt,c.removeAllListeners=nt,c.emit=nt,c.prependListener=nt,c.prependOnceListener=nt,c.listeners=function(st){return[]},c.binding=function(st){throw new Error("process.binding is not supported")},c.cwd=function(){return"/"},c.chdir=function(st){throw new Error("process.chdir is not supported")},c.umask=function(){return 0}},function(i,s,o){var a=o(69),c={body:"",args:[],thisVars:[],localVars:[]};function d(tt){if(!tt)return c;for(var j=0;j<tt.args.length;++j){var nt=tt.args[j];tt.args[j]=j===0?{name:nt,lvalue:!0,rvalue:!!tt.rvalue,count:tt.count||1}:{name:nt,lvalue:!1,rvalue:!0,count:1}}return tt.thisVars||(tt.thisVars=[]),tt.localVars||(tt.localVars=[]),tt}function g(tt){for(var j=[],nt=0;nt<tt.args.length;++nt)j.push("a"+nt);return new Function("P",["return function ",tt.funcName,"_ndarrayops(",j.join(","),") {P(",j.join(","),");return a0}"].join(""))(function(st){return a({args:st.args,pre:d(st.pre),body:d(st.body),post:d(st.proc),funcName:st.funcName})}(tt))}var b={add:"+",sub:"-",mul:"*",div:"/",mod:"%",band:"&",bor:"|",bxor:"^",lshift:"<<",rshift:">>",rrshift:">>>"};(function(){for(var tt in b){var j=b[tt];s[tt]=g({args:["array","array","array"],body:{args:["a","b","c"],body:"a=b"+j+"c"},funcName:tt}),s[tt+"eq"]=g({args:["array","array"],body:{args:["a","b"],body:"a"+j+"=b"},rvalue:!0,funcName:tt+"eq"}),s[tt+"s"]=g({args:["array","array","scalar"],body:{args:["a","b","s"],body:"a=b"+j+"s"},funcName:tt+"s"}),s[tt+"seq"]=g({args:["array","scalar"],body:{args:["a","s"],body:"a"+j+"=s"},rvalue:!0,funcName:tt+"seq"})}})();var $={not:"!",bnot:"~",neg:"-",recip:"1.0/"};(function(){for(var tt in $){var j=$[tt];s[tt]=g({args:["array","array"],body:{args:["a","b"],body:"a="+j+"b"},funcName:tt}),s[tt+"eq"]=g({args:["array"],body:{args:["a"],body:"a="+j+"a"},rvalue:!0,count:2,funcName:tt+"eq"})}})();var _={and:"&&",or:"||",eq:"===",neq:"!==",lt:"<",gt:">",leq:"<=",geq:">="};(function(){for(var tt in _){var j=_[tt];s[tt]=g({args:["array","array","array"],body:{args:["a","b","c"],body:"a=b"+j+"c"},funcName:tt}),s[tt+"s"]=g({args:["array","array","scalar"],body:{args:["a","b","s"],body:"a=b"+j+"s"},funcName:tt+"s"}),s[tt+"eq"]=g({args:["array","array"],body:{args:["a","b"],body:"a=a"+j+"b"},rvalue:!0,count:2,funcName:tt+"eq"}),s[tt+"seq"]=g({args:["array","scalar"],body:{args:["a","s"],body:"a=a"+j+"s"},rvalue:!0,count:2,funcName:tt+"seq"})}})();var _e=["abs","acos","asin","atan","ceil","cos","exp","floor","log","round","sin","sqrt","tan"];(function(){for(var tt=0;tt<_e.length;++tt){var j=_e[tt];s[j]=g({args:["array","array"],pre:{args:[],body:"this_f=Math."+j,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(b)",thisVars:["this_f"]},funcName:j}),s[j+"eq"]=g({args:["array"],pre:{args:[],body:"this_f=Math."+j,thisVars:["this_f"]},body:{args:["a"],body:"a=this_f(a)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:j+"eq"})}})();var et=["max","min","atan2","pow"];(function(){for(var tt=0;tt<et.length;++tt){var j=et[tt];s[j]=g({args:["array","array","array"],pre:{args:[],body:"this_f=Math."+j,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(b,c)",thisVars:["this_f"]},funcName:j}),s[j+"s"]=g({args:["array","array","scalar"],pre:{args:[],body:"this_f=Math."+j,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(b,c)",thisVars:["this_f"]},funcName:j+"s"}),s[j+"eq"]=g({args:["array","array"],pre:{args:[],body:"this_f=Math."+j,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(a,b)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:j+"eq"}),s[j+"seq"]=g({args:["array","scalar"],pre:{args:[],body:"this_f=Math."+j,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(a,b)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:j+"seq"})}})();var rt=["atan2","pow"];(function(){for(var tt=0;tt<rt.length;++tt){var j=rt[tt];s[j+"op"]=g({args:["array","array","array"],pre:{args:[],body:"this_f=Math."+j,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(c,b)",thisVars:["this_f"]},funcName:j+"op"}),s[j+"ops"]=g({args:["array","array","scalar"],pre:{args:[],body:"this_f=Math."+j,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(c,b)",thisVars:["this_f"]},funcName:j+"ops"}),s[j+"opeq"]=g({args:["array","array"],pre:{args:[],body:"this_f=Math."+j,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(b,a)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:j+"opeq"}),s[j+"opseq"]=g({args:["array","scalar"],pre:{args:[],body:"this_f=Math."+j,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(b,a)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:j+"opseq"})}})(),s.any=a({args:["array"],pre:c,body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:1}],body:"if(a){return true}",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:"return false"},funcName:"any"}),s.all=a({args:["array"],pre:c,body:{args:[{name:"x",lvalue:!1,rvalue:!0,count:1}],body:"if(!x){return false}",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:"return true"},funcName:"all"}),s.sum=a({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:1}],body:"this_s+=a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"sum"}),s.prod=a({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=1"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:1}],body:"this_s*=a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"prod"}),s.norm2squared=a({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:2}],body:"this_s+=a*a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"norm2squared"}),s.norm2=a({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:2}],body:"this_s+=a*a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return Math.sqrt(this_s)"},funcName:"norm2"}),s.norminf=a({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:4}],body:"if(-a>this_s){this_s=-a}else if(a>this_s){this_s=a}",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"norminf"}),s.norm1=a({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:3}],body:"this_s+=a<0?-a:a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"norm1"}),s.sup=a({args:["array"],pre:{body:"this_h=-Infinity",args:[],thisVars:["this_h"],localVars:[]},body:{body:"if(_inline_1_arg0_>this_h)this_h=_inline_1_arg0_",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_h"],localVars:[]},post:{body:"return this_h",args:[],thisVars:["this_h"],localVars:[]}}),s.inf=a({args:["array"],pre:{body:"this_h=Infinity",args:[],thisVars:["this_h"],localVars:[]},body:{body:"if(_inline_1_arg0_<this_h)this_h=_inline_1_arg0_",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_h"],localVars:[]},post:{body:"return this_h",args:[],thisVars:["this_h"],localVars:[]}}),s.argmin=a({args:["index","array","shape"],pre:{body:"{this_v=Infinity;this_i=_inline_0_arg2_.slice(0)}",args:[{name:"_inline_0_arg0_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg1_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg2_",lvalue:!1,rvalue:!0,count:1}],thisVars:["this_i","this_v"],localVars:[]},body:{body:"{if(_inline_1_arg1_<this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2},{name:"_inline_1_arg1_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_i","this_v"],localVars:["_inline_1_k"]},post:{body:"{return this_i}",args:[],thisVars:["this_i"],localVars:[]}}),s.argmax=a({args:["index","array","shape"],pre:{body:"{this_v=-Infinity;this_i=_inline_0_arg2_.slice(0)}",args:[{name:"_inline_0_arg0_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg1_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg2_",lvalue:!1,rvalue:!0,count:1}],thisVars:["this_i","this_v"],localVars:[]},body:{body:"{if(_inline_1_arg1_>this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2},{name:"_inline_1_arg1_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_i","this_v"],localVars:["_inline_1_k"]},post:{body:"{return this_i}",args:[],thisVars:["this_i"],localVars:[]}}),s.random=g({args:["array"],pre:{args:[],body:"this_f=Math.random",thisVars:["this_f"]},body:{args:["a"],body:"a=this_f()",thisVars:["this_f"]},funcName:"random"}),s.assign=g({args:["array","array"],body:{args:["a","b"],body:"a=b"},funcName:"assign"}),s.assigns=g({args:["array","scalar"],body:{args:["a","b"],body:"a=b"},funcName:"assigns"}),s.equals=a({args:["array","array"],pre:c,body:{args:[{name:"x",lvalue:!1,rvalue:!0,count:1},{name:"y",lvalue:!1,rvalue:!0,count:1}],body:"if(x!==y){return false}",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:"return true"},funcName:"equals"})},function(i,s,o){function a(){if(typeof navigator<"u"&&navigator!=null){const d=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(d)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(d.substr(0,4))}return!1}function c(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}o.r(s),o.d(s,"isMobile",function(){return a}),o.d(s,"isBrowser",function(){return c})},function(i,s,o){var a=o(162),c=o(163),d=o(164),g=o(165),b=o(166),$=o(167),_=o(168);_.alea=a,_.xor128=c,_.xorwow=d,_.xorshift7=g,_.xor4096=b,_.tychei=$,i.exports=_},function(i,s,o){o.r(s),o.d(s,"auxiliaryInputFromSpec",function(){return c}),o.d(s,"AuxiliaryInput",function(){return d}),o.d(s,"BinaryCounter",function(){return g});var a=o(2);function c(b){switch(b.type){case"BinaryCounter":return new g(b.args);default:throw new Error("Unknown auxiliary input: "+b)}}class d{constructor($){this.depth=$}}class g extends d{constructor($){super($.numBits)}getTensors($){const _=a.buffer([$,this.depth]);for(let _e=0;_e<$;++_e)for(let et=0;et<this.depth;++et)_.set(Math.floor((_e+1)/Math.pow(2,et))%2?1:-1,_e,et);return _.toTensor().as2D($,this.depth)}}},function(i,s,o){i.exports=o(50)},function(i,s,o){var a=s;function c(){a.util._configure(),a.Writer._configure(a.BufferWriter),a.Reader._configure(a.BufferReader)}a.build="minimal",a.Writer=o(33),a.BufferWriter=o(59),a.Reader=o(34),a.BufferReader=o(60),a.util=o(18),a.rpc=o(61),a.roots=o(63),a.configure=c,c()},function(i,s,o){i.exports=function(a,c){for(var d=new Array(arguments.length-1),g=0,b=2,$=!0;b<arguments.length;)d[g++]=arguments[b++];return new Promise(function(_,_e){d[g]=function(et){if($)if($=!1,et)_e(et);else{for(var rt=new Array(arguments.length-1),tt=0;tt<rt.length;)rt[tt++]=arguments[tt];_.apply(null,rt)}};try{a.apply(c||null,d)}catch(et){$&&($=!1,_e(et))}})}},function(i,s,o){var a=s;a.length=function(b){var $=b.length;if(!$)return 0;for(var _=0;--$%4>1&&b.charAt($)==="=";)++_;return Math.ceil(3*b.length)/4-_};for(var c=new Array(64),d=new Array(123),g=0;g<64;)d[c[g]=g<26?g+65:g<52?g+71:g<62?g-4:g-59|43]=g++;a.encode=function(b,$,_){for(var _e,et=null,rt=[],tt=0,j=0;$<_;){var nt=b[$++];switch(j){case 0:rt[tt++]=c[nt>>2],_e=(3&nt)<<4,j=1;break;case 1:rt[tt++]=c[_e|nt>>4],_e=(15&nt)<<2,j=2;break;case 2:rt[tt++]=c[_e|nt>>6],rt[tt++]=c[63&nt],j=0}tt>8191&&((et||(et=[])).push(String.fromCharCode.apply(String,rt)),tt=0)}return j&&(rt[tt++]=c[_e],rt[tt++]=61,j===1&&(rt[tt++]=61)),et?(tt&&et.push(String.fromCharCode.apply(String,rt.slice(0,tt))),et.join("")):String.fromCharCode.apply(String,rt.slice(0,tt))},a.decode=function(b,$,_){for(var _e,et=_,rt=0,tt=0;tt<b.length;){var j=b.charCodeAt(tt++);if(j===61&&rt>1)break;if((j=d[j])===void 0)throw Error("invalid encoding");switch(rt){case 0:_e=j,rt=1;break;case 1:$[_++]=_e<<2|(48&j)>>4,_e=j,rt=2;break;case 2:$[_++]=(15&_e)<<4|(60&j)>>2,_e=j,rt=3;break;case 3:$[_++]=(3&_e)<<6|j,rt=0}}if(rt===1)throw Error("invalid encoding");return _-et},a.test=function(b){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(b)}},function(i,s,o){function a(){this._listeners={}}i.exports=a,a.prototype.on=function(c,d,g){return(this._listeners[c]||(this._listeners[c]=[])).push({fn:d,ctx:g||this}),this},a.prototype.off=function(c,d){if(c===void 0)this._listeners={};else if(d===void 0)this._listeners[c]=[];else for(var g=this._listeners[c],b=0;b<g.length;)g[b].fn===d?g.splice(b,1):++b;return this},a.prototype.emit=function(c){var d=this._listeners[c];if(d){for(var g=[],b=1;b<arguments.length;)g.push(arguments[b++]);for(b=0;b<d.length;)d[b].fn.apply(d[b++].ctx,g)}return this}},function(i,s,o){function a($){return typeof Float32Array<"u"?function(){var _=new Float32Array([-0]),_e=new Uint8Array(_.buffer),et=_e[3]===128;function rt(st,ot,ut){_[0]=st,ot[ut]=_e[0],ot[ut+1]=_e[1],ot[ut+2]=_e[2],ot[ut+3]=_e[3]}function tt(st,ot,ut){_[0]=st,ot[ut]=_e[3],ot[ut+1]=_e[2],ot[ut+2]=_e[1],ot[ut+3]=_e[0]}function j(st,ot){return _e[0]=st[ot],_e[1]=st[ot+1],_e[2]=st[ot+2],_e[3]=st[ot+3],_[0]}function nt(st,ot){return _e[3]=st[ot],_e[2]=st[ot+1],_e[1]=st[ot+2],_e[0]=st[ot+3],_[0]}$.writeFloatLE=et?rt:tt,$.writeFloatBE=et?tt:rt,$.readFloatLE=et?j:nt,$.readFloatBE=et?nt:j}():function(){function _(et,rt,tt,j){var nt=rt<0?1:0;if(nt&&(rt=-rt),rt===0)et(1/rt>0?0:2147483648,tt,j);else if(isNaN(rt))et(2143289344,tt,j);else if(rt>34028234663852886e22)et((nt<<31|2139095040)>>>0,tt,j);else if(rt<11754943508222875e-54)et((nt<<31|Math.round(rt/1401298464324817e-60))>>>0,tt,j);else{var st=Math.floor(Math.log(rt)/Math.LN2);et((nt<<31|st+127<<23|8388607&Math.round(rt*Math.pow(2,-st)*8388608))>>>0,tt,j)}}function _e(et,rt,tt){var j=et(rt,tt),nt=2*(j>>31)+1,st=j>>>23&255,ot=8388607&j;return st===255?ot?NaN:nt*(1/0):st===0?1401298464324817e-60*nt*ot:nt*Math.pow(2,st-150)*(ot+8388608)}$.writeFloatLE=_.bind(null,c),$.writeFloatBE=_.bind(null,d),$.readFloatLE=_e.bind(null,g),$.readFloatBE=_e.bind(null,b)}(),typeof Float64Array<"u"?function(){var _=new Float64Array([-0]),_e=new Uint8Array(_.buffer),et=_e[7]===128;function rt(st,ot,ut){_[0]=st,ot[ut]=_e[0],ot[ut+1]=_e[1],ot[ut+2]=_e[2],ot[ut+3]=_e[3],ot[ut+4]=_e[4],ot[ut+5]=_e[5],ot[ut+6]=_e[6],ot[ut+7]=_e[7]}function tt(st,ot,ut){_[0]=st,ot[ut]=_e[7],ot[ut+1]=_e[6],ot[ut+2]=_e[5],ot[ut+3]=_e[4],ot[ut+4]=_e[3],ot[ut+5]=_e[2],ot[ut+6]=_e[1],ot[ut+7]=_e[0]}function j(st,ot){return _e[0]=st[ot],_e[1]=st[ot+1],_e[2]=st[ot+2],_e[3]=st[ot+3],_e[4]=st[ot+4],_e[5]=st[ot+5],_e[6]=st[ot+6],_e[7]=st[ot+7],_[0]}function nt(st,ot){return _e[7]=st[ot],_e[6]=st[ot+1],_e[5]=st[ot+2],_e[4]=st[ot+3],_e[3]=st[ot+4],_e[2]=st[ot+5],_e[1]=st[ot+6],_e[0]=st[ot+7],_[0]}$.writeDoubleLE=et?rt:tt,$.writeDoubleBE=et?tt:rt,$.readDoubleLE=et?j:nt,$.readDoubleBE=et?nt:j}():function(){function _(et,rt,tt,j,nt,st){var ot=j<0?1:0;if(ot&&(j=-j),j===0)et(0,nt,st+rt),et(1/j>0?0:2147483648,nt,st+tt);else if(isNaN(j))et(0,nt,st+rt),et(2146959360,nt,st+tt);else if(j>17976931348623157e292)et(0,nt,st+rt),et((ot<<31|2146435072)>>>0,nt,st+tt);else{var ut;if(j<22250738585072014e-324)et((ut=j/5e-324)>>>0,nt,st+rt),et((ot<<31|ut/4294967296)>>>0,nt,st+tt);else{var ht=Math.floor(Math.log(j)/Math.LN2);ht===1024&&(ht=1023),et(4503599627370496*(ut=j*Math.pow(2,-ht))>>>0,nt,st+rt),et((ot<<31|ht+1023<<20|1048576*ut&1048575)>>>0,nt,st+tt)}}}function _e(et,rt,tt,j,nt){var st=et(j,nt+rt),ot=et(j,nt+tt),ut=2*(ot>>31)+1,ht=ot>>>20&2047,pt=4294967296*(1048575&ot)+st;return ht===2047?pt?NaN:ut*(1/0):ht===0?5e-324*ut*pt:ut*Math.pow(2,ht-1075)*(pt+4503599627370496)}$.writeDoubleLE=_.bind(null,c,0,4),$.writeDoubleBE=_.bind(null,d,4,0),$.readDoubleLE=_e.bind(null,g,0,4),$.readDoubleBE=_e.bind(null,b,4,0)}(),$}function c($,_,_e){_[_e]=255&$,_[_e+1]=$>>>8&255,_[_e+2]=$>>>16&255,_[_e+3]=$>>>24}function d($,_,_e){_[_e]=$>>>24,_[_e+1]=$>>>16&255,_[_e+2]=$>>>8&255,_[_e+3]=255&$}function g($,_){return($[_]|$[_+1]<<8|$[_+2]<<16|$[_+3]<<24)>>>0}function b($,_){return($[_]<<24|$[_+1]<<16|$[_+2]<<8|$[_+3])>>>0}i.exports=a(a)},function(module,exports,__webpack_require__){function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(i){}return null}module.exports=inquire},function(i,s,o){var a=s;a.length=function(c){for(var d=0,g=0,b=0;b<c.length;++b)(g=c.charCodeAt(b))<128?d+=1:g<2048?d+=2:(64512&g)==55296&&(64512&c.charCodeAt(b+1))==56320?(++b,d+=4):d+=3;return d},a.read=function(c,d,g){if(g-d<1)return"";for(var b,$=null,_=[],_e=0;d<g;)(b=c[d++])<128?_[_e++]=b:b>191&&b<224?_[_e++]=(31&b)<<6|63&c[d++]:b>239&&b<365?(b=((7&b)<<18|(63&c[d++])<<12|(63&c[d++])<<6|63&c[d++])-65536,_[_e++]=55296+(b>>10),_[_e++]=56320+(1023&b)):_[_e++]=(15&b)<<12|(63&c[d++])<<6|63&c[d++],_e>8191&&(($||($=[])).push(String.fromCharCode.apply(String,_)),_e=0);return $?(_e&&$.push(String.fromCharCode.apply(String,_.slice(0,_e))),$.join("")):String.fromCharCode.apply(String,_.slice(0,_e))},a.write=function(c,d,g){for(var b,$,_=g,_e=0;_e<c.length;++_e)(b=c.charCodeAt(_e))<128?d[g++]=b:b<2048?(d[g++]=b>>6|192,d[g++]=63&b|128):(64512&b)==55296&&(64512&($=c.charCodeAt(_e+1)))==56320?(b=65536+((1023&b)<<10)+(1023&$),++_e,d[g++]=b>>18|240,d[g++]=b>>12&63|128,d[g++]=b>>6&63|128,d[g++]=63&b|128):(d[g++]=b>>12|224,d[g++]=b>>6&63|128,d[g++]=63&b|128);return g-_}},function(i,s,o){i.exports=function(a,c,d){var g=d||8192,b=g>>>1,$=null,_=g;return function(_e){if(_e<1||_e>b)return a(_e);_+_e>g&&($=a(g),_=0);var et=c.call($,_,_+=_e);return 7&_&&(_=1+(7|_)),et}}},function(i,s,o){i.exports=c;var a=o(18);function c($,_){this.lo=$>>>0,this.hi=_>>>0}var d=c.zero=new c(0,0);d.toNumber=function(){return 0},d.zzEncode=d.zzDecode=function(){return this},d.length=function(){return 1};var g=c.zeroHash="\0\0\0\0\0\0\0\0";c.fromNumber=function($){if($===0)return d;var _=$<0;_&&($=-$);var _e=$>>>0,et=($-_e)/4294967296>>>0;return _&&(et=~et>>>0,_e=~_e>>>0,++_e>4294967295&&(_e=0,++et>4294967295&&(et=0))),new c(_e,et)},c.from=function($){if(typeof $=="number")return c.fromNumber($);if(a.isString($)){if(!a.Long)return c.fromNumber(parseInt($,10));$=a.Long.fromString($)}return $.low||$.high?new c($.low>>>0,$.high>>>0):d},c.prototype.toNumber=function($){if(!$&&this.hi>>>31){var _=1+~this.lo>>>0,_e=~this.hi>>>0;return _||(_e=_e+1>>>0),-(_+4294967296*_e)}return this.lo+4294967296*this.hi},c.prototype.toLong=function($){return a.Long?new a.Long(0|this.lo,0|this.hi,!!$):{low:0|this.lo,high:0|this.hi,unsigned:!!$}};var b=String.prototype.charCodeAt;c.fromHash=function($){return $===g?d:new c((b.call($,0)|b.call($,1)<<8|b.call($,2)<<16|b.call($,3)<<24)>>>0,(b.call($,4)|b.call($,5)<<8|b.call($,6)<<16|b.call($,7)<<24)>>>0)},c.prototype.toHash=function(){return String.fromCharCode(255&this.lo,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,255&this.hi,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)},c.prototype.zzEncode=function(){var $=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^$)>>>0,this.lo=(this.lo<<1^$)>>>0,this},c.prototype.zzDecode=function(){var $=-(1&this.lo);return this.lo=((this.lo>>>1|this.hi<<31)^$)>>>0,this.hi=(this.hi>>>1^$)>>>0,this},c.prototype.length=function(){var $=this.lo,_=(this.lo>>>28|this.hi<<4)>>>0,_e=this.hi>>>24;return _e===0?_===0?$<16384?$<128?1:2:$<2097152?3:4:_<16384?_<128?5:6:_<2097152?7:8:_e<128?9:10}},function(i,s,o){i.exports=d;var a=o(33);(d.prototype=Object.create(a.prototype)).constructor=d;var c=o(18);function d(){a.call(this)}function g(b,$,_){b.length<40?c.utf8.write(b,$,_):$.utf8Write?$.utf8Write(b,_):$.write(b,_)}d._configure=function(){d.alloc=c._Buffer_allocUnsafe,d.writeBytesBuffer=c.Buffer&&c.Buffer.prototype instanceof Uint8Array&&c.Buffer.prototype.set.name==="set"?function(b,$,_){$.set(b,_)}:function(b,$,_){if(b.copy)b.copy($,_,0,b.length);else for(var _e=0;_e<b.length;)$[_++]=b[_e++]}},d.prototype.bytes=function(b){c.isString(b)&&(b=c._Buffer_from(b,"base64"));var $=b.length>>>0;return this.uint32($),$&&this._push(d.writeBytesBuffer,$,b),this},d.prototype.string=function(b){var $=c.Buffer.byteLength(b);return this.uint32($),$&&this._push(g,$,b),this},d._configure()},function(i,s,o){i.exports=d;var a=o(34);(d.prototype=Object.create(a.prototype)).constructor=d;var c=o(18);function d(g){a.call(this,g)}d._configure=function(){c.Buffer&&(d.prototype._slice=c.Buffer.prototype.slice)},d.prototype.string=function(){var g=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+g,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+g,this.len))},d._configure()},function(i,s,o){s.Service=o(62)},function(i,s,o){i.exports=c;var a=o(18);function c(d,g,b){if(typeof d!="function")throw TypeError("rpcImpl must be a function");a.EventEmitter.call(this),this.rpcImpl=d,this.requestDelimited=!!g,this.responseDelimited=!!b}(c.prototype=Object.create(a.EventEmitter.prototype)).constructor=c,c.prototype.rpcCall=function d(g,b,$,_,_e){if(!_)throw TypeError("request must be specified");var et=this;if(!_e)return a.asPromise(d,et,g,b,$,_);if(et.rpcImpl)try{return et.rpcImpl(g,b[et.requestDelimited?"encodeDelimited":"encode"](_).finish(),function(rt,tt){if(rt)return et.emit("error",rt,g),_e(rt);if(tt!==null){if(!(tt instanceof $))try{tt=$[et.responseDelimited?"decodeDelimited":"decode"](tt)}catch(j){return et.emit("error",j,g),_e(j)}return et.emit("data",tt,g),_e(null,tt)}et.end(!0)})}catch(rt){return et.emit("error",rt,g),void setTimeout(function(){_e(rt)},0)}else setTimeout(function(){_e(Error("already ended"))},0)},c.prototype.end=function(d){return this.rpcImpl&&(d||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}},function(i,s,o){i.exports={}},function(i){i.exports=JSON.parse('{"chromatic":["1P 2m 2M 3m 3M 4P 4A 5P 6m 6M 7m 7M"],"lydian":["1P 2M 3M 4A 5P 6M 7M"],"major":["1P 2M 3M 4P 5P 6M 7M",["ionian"]],"mixolydian":["1P 2M 3M 4P 5P 6M 7m",["dominant"]],"dorian":["1P 2M 3m 4P 5P 6M 7m"],"aeolian":["1P 2M 3m 4P 5P 6m 7m",["minor"]],"phrygian":["1P 2m 3m 4P 5P 6m 7m"],"locrian":["1P 2m 3m 4P 5d 6m 7m"],"melodic minor":["1P 2M 3m 4P 5P 6M 7M"],"melodic minor second mode":["1P 2m 3m 4P 5P 6M 7m"],"lydian augmented":["1P 2M 3M 4A 5A 6M 7M"],"lydian dominant":["1P 2M 3M 4A 5P 6M 7m",["lydian b7"]],"melodic minor fifth mode":["1P 2M 3M 4P 5P 6m 7m",["hindu","mixolydian b6M"]],"locrian #2":["1P 2M 3m 4P 5d 6m 7m",["half-diminished"]],"altered":["1P 2m 3m 3M 5d 6m 7m",["super locrian","diminished whole tone","pomeroy"]],"harmonic minor":["1P 2M 3m 4P 5P 6m 7M"],"phrygian dominant":["1P 2m 3M 4P 5P 6m 7m",["spanish","phrygian major"]],"half-whole diminished":["1P 2m 3m 3M 4A 5P 6M 7m",["dominant diminished"]],"diminished":["1P 2M 3m 4P 5d 6m 6M 7M",["whole-half diminished"]],"major pentatonic":["1P 2M 3M 5P 6M",["pentatonic"]],"lydian pentatonic":["1P 3M 4A 5P 7M",["chinese"]],"mixolydian pentatonic":["1P 3M 4P 5P 7m",["indian"]],"locrian pentatonic":["1P 3m 4P 5d 7m",["minor seven flat five pentatonic"]],"minor pentatonic":["1P 3m 4P 5P 7m"],"minor six pentatonic":["1P 3m 4P 5P 6M"],"minor hexatonic":["1P 2M 3m 4P 5P 7M"],"flat three pentatonic":["1P 2M 3m 5P 6M",["kumoi"]],"flat six pentatonic":["1P 2M 3M 5P 6m"],"major flat two pentatonic":["1P 2m 3M 5P 6M"],"whole tone pentatonic":["1P 3M 5d 6m 7m"],"ionian pentatonic":["1P 3M 4P 5P 7M"],"lydian #5P pentatonic":["1P 3M 4A 5A 7M"],"lydian dominant pentatonic":["1P 3M 4A 5P 7m"],"minor #7M pentatonic":["1P 3m 4P 5P 7M"],"super locrian pentatonic":["1P 3m 4d 5d 7m"],"in-sen":["1P 2m 4P 5P 7m"],"iwato":["1P 2m 4P 5d 7m"],"hirajoshi":["1P 2M 3m 5P 6m"],"kumoijoshi":["1P 2m 4P 5P 6m"],"pelog":["1P 2m 3m 5P 6m"],"vietnamese 1":["1P 3m 4P 5P 6m"],"vietnamese 2":["1P 3m 4P 5P 7m"],"prometheus":["1P 2M 3M 4A 6M 7m"],"prometheus neopolitan":["1P 2m 3M 4A 6M 7m"],"ritusen":["1P 2M 4P 5P 6M"],"scriabin":["1P 2m 3M 5P 6M"],"piongio":["1P 2M 4P 5P 6M 7m"],"major blues":["1P 2M 3m 3M 5P 6M"],"minor blues":["1P 3m 4P 5d 5P 7m",["blues"]],"composite blues":["1P 2M 3m 3M 4P 5d 5P 6M 7m"],"augmented":["1P 2A 3M 5P 5A 7M"],"augmented heptatonic":["1P 2A 3M 4P 5P 5A 7M"],"dorian #4":["1P 2M 3m 4A 5P 6M 7m"],"lydian diminished":["1P 2M 3m 4A 5P 6M 7M"],"whole tone":["1P 2M 3M 4A 5A 7m"],"leading whole tone":["1P 2M 3M 4A 5A 7m 7M"],"lydian minor":["1P 2M 3M 4A 5P 6m 7m"],"locrian major":["1P 2M 3M 4P 5d 6m 7m",["arabian"]],"neopolitan":["1P 2m 3m 4P 5P 6m 7M"],"neopolitan minor":["1P 2m 3m 4P 5P 6m 7M"],"neopolitan major":["1P 2m 3m 4P 5P 6M 7M",["dorian b2"]],"neopolitan major pentatonic":["1P 3M 4P 5d 7m"],"romanian minor":["1P 2M 3m 5d 5P 6M 7m"],"double harmonic lydian":["1P 2m 3M 4A 5P 6m 7M"],"harmonic major":["1P 2M 3M 4P 5P 6m 7M"],"double harmonic major":["1P 2m 3M 4P 5P 6m 7M",["gypsy"]],"egyptian":["1P 2M 4P 5P 7m"],"hungarian minor":["1P 2M 3m 4A 5P 6m 7M"],"hungarian major":["1P 2A 3M 4A 5P 6M 7m"],"oriental":["1P 2m 3M 4P 5d 6M 7m"],"spanish heptatonic":["1P 2m 3m 3M 4P 5P 6m 7m"],"flamenco":["1P 2m 3m 3M 4A 5P 7m"],"balinese":["1P 2m 3m 4P 5P 6m 7M"],"todi raga":["1P 2m 3m 4A 5P 6m 7M"],"malkos raga":["1P 3m 4P 6m 7m"],"kafi raga":["1P 3m 3M 4P 5P 6M 7m 7M"],"purvi raga":["1P 2m 3M 4P 4A 5P 6m 7M"],"persian":["1P 2m 3M 4P 5d 6m 7M"],"bebop":["1P 2M 3M 4P 5P 6M 7m 7M"],"bebop dominant":["1P 2M 3M 4P 5P 6M 7m 7M"],"bebop minor":["1P 2M 3m 3M 4P 5P 6M 7m"],"bebop major":["1P 2M 3M 4P 5P 5A 6M 7M"],"bebop locrian":["1P 2m 3m 4P 5d 5P 6m 7m"],"minor bebop":["1P 2M 3m 4P 5P 6m 7m 7M"],"mystery #1":["1P 2m 3M 5d 6m 7m"],"enigmatic":["1P 2m 3M 5d 6m 7m 7M"],"minor six diminished":["1P 2M 3m 4P 5P 6m 6M 7M"],"ionian augmented":["1P 2M 3M 4P 5A 6M 7M"],"lydian #9":["1P 2m 3M 4A 5P 6M 7M"],"ichikosucho":["1P 2M 3M 4P 5d 5P 6M 7M"],"six tone symmetric":["1P 2m 3M 4P 5A 6M"]}')},function(i){i.exports=JSON.parse('{"4":["1P 4P 7m 10m",["quartal"]],"5":["1P 5P"],"7":["1P 3M 5P 7m",["Dominant","Dom"]],"9":["1P 3M 5P 7m 9M",["79"]],"11":["1P 5P 7m 9M 11P"],"13":["1P 3M 5P 7m 9M 13M",["13_"]],"64":["5P 8P 10M"],"M":["1P 3M 5P",["Major",""]],"M#5":["1P 3M 5A",["augmented","maj#5","Maj#5","+","aug"]],"M#5add9":["1P 3M 5A 9M",["+add9"]],"M13":["1P 3M 5P 7M 9M 13M",["maj13","Maj13"]],"M13#11":["1P 3M 5P 7M 9M 11A 13M",["maj13#11","Maj13#11","M13+4","M13#4"]],"M6":["1P 3M 5P 13M",["6"]],"M6#11":["1P 3M 5P 6M 11A",["M6b5","6#11","6b5"]],"M69":["1P 3M 5P 6M 9M",["69"]],"M69#11":["1P 3M 5P 6M 9M 11A"],"M7#11":["1P 3M 5P 7M 11A",["maj7#11","Maj7#11","M7+4","M7#4"]],"M7#5":["1P 3M 5A 7M",["maj7#5","Maj7#5","maj9#5","M7+"]],"M7#5sus4":["1P 4P 5A 7M"],"M7#9#11":["1P 3M 5P 7M 9A 11A"],"M7add13":["1P 3M 5P 6M 7M 9M"],"M7b5":["1P 3M 5d 7M"],"M7b6":["1P 3M 6m 7M"],"M7b9":["1P 3M 5P 7M 9m"],"M7sus4":["1P 4P 5P 7M"],"M9":["1P 3M 5P 7M 9M",["maj9","Maj9"]],"M9#11":["1P 3M 5P 7M 9M 11A",["maj9#11","Maj9#11","M9+4","M9#4"]],"M9#5":["1P 3M 5A 7M 9M",["Maj9#5"]],"M9#5sus4":["1P 4P 5A 7M 9M"],"M9b5":["1P 3M 5d 7M 9M"],"M9sus4":["1P 4P 5P 7M 9M"],"Madd9":["1P 3M 5P 9M",["2","add9","add2"]],"Maj7":["1P 3M 5P 7M",["maj7","M7"]],"Mb5":["1P 3M 5d"],"Mb6":["1P 3M 13m"],"Msus2":["1P 2M 5P",["add9no3","sus2"]],"Msus4":["1P 4P 5P",["sus","sus4"]],"Maddb9":["1P 3M 5P 9m"],"11b9":["1P 5P 7m 9m 11P"],"13#11":["1P 3M 5P 7m 9M 11A 13M",["13+4","13#4"]],"13#9":["1P 3M 5P 7m 9A 13M",["13#9_"]],"13#9#11":["1P 3M 5P 7m 9A 11A 13M"],"13b5":["1P 3M 5d 6M 7m 9M"],"13b9":["1P 3M 5P 7m 9m 13M"],"13b9#11":["1P 3M 5P 7m 9m 11A 13M"],"13no5":["1P 3M 7m 9M 13M"],"13sus4":["1P 4P 5P 7m 9M 13M",["13sus"]],"69#11":["1P 3M 5P 6M 9M 11A"],"7#11":["1P 3M 5P 7m 11A",["7+4","7#4","7#11_","7#4_"]],"7#11b13":["1P 3M 5P 7m 11A 13m",["7b5b13"]],"7#5":["1P 3M 5A 7m",["+7","7aug","aug7"]],"7#5#9":["1P 3M 5A 7m 9A",["7alt","7#5#9_","7#9b13_"]],"7#5b9":["1P 3M 5A 7m 9m"],"7#5b9#11":["1P 3M 5A 7m 9m 11A"],"7#5sus4":["1P 4P 5A 7m"],"7#9":["1P 3M 5P 7m 9A",["7#9_"]],"7#9#11":["1P 3M 5P 7m 9A 11A",["7b5#9"]],"7#9#11b13":["1P 3M 5P 7m 9A 11A 13m"],"7#9b13":["1P 3M 5P 7m 9A 13m"],"7add6":["1P 3M 5P 7m 13M",["67","7add13"]],"7b13":["1P 3M 7m 13m"],"7b5":["1P 3M 5d 7m"],"7b6":["1P 3M 5P 6m 7m"],"7b9":["1P 3M 5P 7m 9m"],"7b9#11":["1P 3M 5P 7m 9m 11A",["7b5b9"]],"7b9#9":["1P 3M 5P 7m 9m 9A"],"7b9b13":["1P 3M 5P 7m 9m 13m"],"7b9b13#11":["1P 3M 5P 7m 9m 11A 13m",["7b9#11b13","7b5b9b13"]],"7no5":["1P 3M 7m"],"7sus4":["1P 4P 5P 7m",["7sus"]],"7sus4b9":["1P 4P 5P 7m 9m",["susb9","7susb9","7b9sus","7b9sus4","phryg"]],"7sus4b9b13":["1P 4P 5P 7m 9m 13m",["7b9b13sus4"]],"9#11":["1P 3M 5P 7m 9M 11A",["9+4","9#4","9#11_","9#4_"]],"9#11b13":["1P 3M 5P 7m 9M 11A 13m",["9b5b13"]],"9#5":["1P 3M 5A 7m 9M",["9+"]],"9#5#11":["1P 3M 5A 7m 9M 11A"],"9b13":["1P 3M 7m 9M 13m"],"9b5":["1P 3M 5d 7m 9M"],"9no5":["1P 3M 7m 9M"],"9sus4":["1P 4P 5P 7m 9M",["9sus"]],"m":["1P 3m 5P"],"m#5":["1P 3m 5A",["m+","mb6"]],"m11":["1P 3m 5P 7m 9M 11P",["_11"]],"m11A 5":["1P 3m 6m 7m 9M 11P"],"m11b5":["1P 3m 7m 12d 2M 4P",["h11","_11b5"]],"m13":["1P 3m 5P 7m 9M 11P 13M",["_13"]],"m6":["1P 3m 4P 5P 13M",["_6"]],"m69":["1P 3m 5P 6M 9M",["_69"]],"m7":["1P 3m 5P 7m",["minor7","_","_7"]],"m7#5":["1P 3m 6m 7m"],"m7add11":["1P 3m 5P 7m 11P",["m7add4"]],"m7b5":["1P 3m 5d 7m",["half-diminished","h7","_7b5"]],"m9":["1P 3m 5P 7m 9M",["_9"]],"m9#5":["1P 3m 6m 7m 9M"],"m9b5":["1P 3m 7m 12d 2M",["h9","-9b5"]],"mMaj7":["1P 3m 5P 7M",["mM7","_M7"]],"mMaj7b6":["1P 3m 5P 6m 7M",["mM7b6"]],"mM9":["1P 3m 5P 7M 9M",["mMaj9","-M9"]],"mM9b6":["1P 3m 5P 6m 7M 9M",["mMaj9b6"]],"mb6M7":["1P 3m 6m 7M"],"mb6b9":["1P 3m 6m 9m"],"o":["1P 3m 5d",["mb5","dim"]],"o7":["1P 3m 5d 13M",["diminished","m6b5","dim7"]],"o7M7":["1P 3m 5d 6M 7M"],"oM7":["1P 3m 5d 7M"],"sus24":["1P 2M 4P 5P",["sus4add9"]],"+add#9":["1P 3M 5A 9A"],"madd4":["1P 3m 4P 5P"],"madd9":["1P 3m 5P 9M"]}')},function(i,s,o){Object.defineProperty(s,"__esModule",{value:!0});var a=o(80),c=new WeakMap;s.keySignatureKeys=["Cb","Gb","Db","Ab","Eb","Bb","F","C","G","D","A","E","B","F#","C#"];var d=function(){function g(b){var $=this;this.tempos=[],this.timeSignatures=[],this.keySignatures=[],this.meta=[],this.name="",c.set(this,480),b&&(c.set(this,b.header.ticksPerBeat),b.tracks.forEach(function(_){return _.forEach(function(_e){_e.meta&&(_e.type==="timeSignature"?$.timeSignatures.push({ticks:_e.absoluteTime,timeSignature:[_e.numerator,_e.denominator]}):_e.type==="setTempo"?$.tempos.push({bpm:6e7/_e.microsecondsPerBeat,ticks:_e.absoluteTime}):_e.type==="keySignature"&&$.keySignatures.push({key:s.keySignatureKeys[_e.key+7],scale:_e.scale===0?"major":"minor",ticks:_e.absoluteTime}))})}),b.tracks[0].forEach(function(_){_.meta&&(_.type==="trackName"?$.name=_.text:_.type!=="text"&&_.type!=="cuePoint"&&_.type!=="marker"&&_.type!=="lyrics"||$.meta.push({text:_.text,ticks:_.absoluteTime,type:_.type}))}),this.update())}return g.prototype.update=function(){var b=this,$=0,_=0;this.tempos.sort(function(_e,et){return _e.ticks-et.ticks}),this.tempos.forEach(function(_e,et){var rt=et>0?b.tempos[et-1].bpm:b.tempos[0].bpm,tt=_e.ticks/b.ppq-_,j=60/rt*tt;_e.time=j+$,$=_e.time,_+=tt}),this.timeSignatures.sort(function(_e,et){return _e.ticks-et.ticks}),this.timeSignatures.forEach(function(_e,et){var rt=et>0?b.timeSignatures[et-1]:b.timeSignatures[0],tt=(_e.ticks-rt.ticks)/b.ppq/rt.timeSignature[0]/(rt.timeSignature[1]/4);rt.measures=rt.measures||0,_e.measures=tt+rt.measures})},g.prototype.ticksToSeconds=function(b){var $=a.search(this.tempos,b);if($!==-1){var _=this.tempos[$],_e=_.time,et=(b-_.ticks)/this.ppq;return _e+60/_.bpm*et}return .5*(b/this.ppq)},g.prototype.ticksToMeasures=function(b){var $=a.search(this.timeSignatures,b);if($!==-1){var _=this.timeSignatures[$],_e=(b-_.ticks)/this.ppq;return _.measures+_e/(_.timeSignature[0]/_.timeSignature[1])/4}return b/this.ppq/4},Object.defineProperty(g.prototype,"ppq",{get:function(){return c.get(this)},enumerable:!0,configurable:!0}),g.prototype.secondsToTicks=function(b){var $=a.search(this.tempos,b,"time");if($!==-1){var _=this.tempos[$],_e=(b-_.time)/(60/_.bpm);return Math.round(_.ticks+_e*this.ppq)}var et=b/.5;return Math.round(et*this.ppq)},g.prototype.toJSON=function(){return{keySignatures:this.keySignatures,meta:this.meta,name:this.name,ppq:this.ppq,tempos:this.tempos.map(function(b){return{bpm:b.bpm,ticks:b.ticks}}),timeSignatures:this.timeSignatures}},g.prototype.fromJSON=function(b){this.name=b.name,this.tempos=b.tempos.map(function($){return Object.assign({},$)}),this.timeSignatures=b.timeSignatures.map(function($){return Object.assign({},$)}),this.keySignatures=b.keySignatures.map(function($){return Object.assign({},$)}),this.meta=b.meta.map(function($){return Object.assign({},$)}),c.set(this,b.ppq),this.update()},g.prototype.setTempo=function(b){this.tempos=[{bpm:b,ticks:0}],this.update()},g}();s.Header=d},function(i,s,o){var a=this&&this.__awaiter||function(rt,tt,j,nt){return new(j||(j=Promise))(function(st,ot){function ut(it){try{pt(nt.next(it))}catch(yt){ot(yt)}}function ht(it){try{pt(nt.throw(it))}catch(yt){ot(yt)}}function pt(it){var yt;it.done?st(it.value):(yt=it.value,yt instanceof j?yt:new j(function(ft){ft(yt)})).then(ut,ht)}pt((nt=nt.apply(rt,tt||[])).next())})},c=this&&this.__generator||function(rt,tt){var j,nt,st,ot,ut={label:0,sent:function(){if(1&st[0])throw st[1];return st[1]},trys:[],ops:[]};return ot={next:ht(0),throw:ht(1),return:ht(2)},typeof Symbol=="function"&&(ot[Symbol.iterator]=function(){return this}),ot;function ht(pt){return function(it){return function(yt){if(j)throw new TypeError("Generator is already executing.");for(;ut;)try{if(j=1,nt&&(st=2&yt[0]?nt.return:yt[0]?nt.throw||((st=nt.return)&&st.call(nt),0):nt.next)&&!(st=st.call(nt,yt[1])).done)return st;switch(nt=0,st&&(yt=[2&yt[0],st.value]),yt[0]){case 0:case 1:st=yt;break;case 4:return ut.label++,{value:yt[1],done:!1};case 5:ut.label++,nt=yt[1],yt=[0];continue;case 7:yt=ut.ops.pop(),ut.trys.pop();continue;default:if(st=ut.trys,!((st=st.length>0&&st[st.length-1])||yt[0]!==6&&yt[0]!==2)){ut=0;continue}if(yt[0]===3&&(!st||yt[1]>st[0]&&yt[1]<st[3])){ut.label=yt[1];break}if(yt[0]===6&&ut.label<st[1]){ut.label=st[1],st=yt;break}if(st&&ut.label<st[2]){ut.label=st[2],ut.ops.push(yt);break}st[2]&&ut.ops.pop(),ut.trys.pop();continue}yt=tt.call(rt,ut)}catch(ft){yt=[6,ft],nt=0}finally{j=st=0}if(5&yt[0])throw yt[1];return{value:yt[0]?yt[1]:void 0,done:!0}}([pt,it])}}};Object.defineProperty(s,"__esModule",{value:!0});var d=o(79),g=o(174),b=o(66),$=o(81),_=function(){function rt(tt){var j=this,nt=null;tt&&(tt instanceof ArrayBuffer&&(tt=new Uint8Array(tt)),(nt=d.parseMidi(tt)).tracks.forEach(function(st){var ot=0;st.forEach(function(ut){ot+=ut.deltaTime,ut.absoluteTime=ot})}),nt.tracks=function(st){for(var ot=[],ut=0;ut<st.length;ut++)for(var ht=ot.length,pt=new Map,it=Array(16).fill(0),yt=0,ft=st[ut];yt<ft.length;yt++){var bt=ft[yt],Tt=ht,Ct=bt.channel;if(Ct!==void 0){bt.type==="programChange"&&(it[Ct]=bt.programNumber);var _t=it[Ct]+" "+Ct;pt.has(_t)?Tt=pt.get(_t):(Tt=ht+pt.size,pt.set(_t,Tt))}ot[Tt]||ot.push([]),ot[Tt].push(bt)}return ot}(nt.tracks)),this.header=new b.Header(nt),this.tracks=[],tt&&(this.tracks=nt.tracks.map(function(st){return new $.Track(st,j.header)}),nt.header.format===1&&this.tracks[0].duration===0&&this.tracks.shift())}return rt.fromUrl=function(tt){return a(this,void 0,void 0,function(){var j;return c(this,function(nt){switch(nt.label){case 0:return[4,fetch(tt)];case 1:return(j=nt.sent()).ok?[4,j.arrayBuffer()]:[3,3];case 2:return[2,new rt(nt.sent())];case 3:throw new Error("could not load "+tt)}})})},Object.defineProperty(rt.prototype,"name",{get:function(){return this.header.name},set:function(tt){this.header.name=tt},enumerable:!0,configurable:!0}),Object.defineProperty(rt.prototype,"duration",{get:function(){var tt=this.tracks.map(function(j){return j.duration});return Math.max.apply(Math,tt)},enumerable:!0,configurable:!0}),Object.defineProperty(rt.prototype,"durationTicks",{get:function(){var tt=this.tracks.map(function(j){return j.durationTicks});return Math.max.apply(Math,tt)},enumerable:!0,configurable:!0}),rt.prototype.addTrack=function(){var tt=new $.Track(void 0,this.header);return this.tracks.push(tt),tt},rt.prototype.toArray=function(){return g.encode(this)},rt.prototype.toJSON=function(){return{header:this.header.toJSON(),tracks:this.tracks.map(function(tt){return tt.toJSON()})}},rt.prototype.fromJSON=function(tt){var j=this;this.header=new b.Header,this.header.fromJSON(tt.header),this.tracks=tt.tracks.map(function(nt){var st=new $.Track(void 0,j.header);return st.fromJSON(nt),st})},rt.prototype.clone=function(){var tt=new rt;return tt.fromJSON(this.toJSON()),tt},rt}();s.Midi=_;var _e=o(81);s.Track=_e.Track;var et=o(66);s.Header=et.Header},function(i,s,o){(function(a){/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */var c=o(75),d=o(76),g=o(77);function b(){return _.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function $(wt,xt){if(b()<xt)throw new RangeError("Invalid typed array length");return _.TYPED_ARRAY_SUPPORT?(wt=new Uint8Array(xt)).__proto__=_.prototype:(wt===null&&(wt=new _(xt)),wt.length=xt),wt}function _(wt,xt,At){if(!(_.TYPED_ARRAY_SUPPORT||this instanceof _))return new _(wt,xt,At);if(typeof wt=="number"){if(typeof xt=="string")throw new Error("If encoding is specified then the first argument must be a string");return rt(this,wt)}return _e(this,wt,xt,At)}function _e(wt,xt,At,qt){if(typeof xt=="number")throw new TypeError('"value" argument must not be a number');return typeof ArrayBuffer<"u"&&xt instanceof ArrayBuffer?function(Pt,Zt,nn,dn){if(Zt.byteLength,nn<0||Zt.byteLength<nn)throw new RangeError("'offset' is out of bounds");if(Zt.byteLength<nn+(dn||0))throw new RangeError("'length' is out of bounds");return Zt=nn===void 0&&dn===void 0?new Uint8Array(Zt):dn===void 0?new Uint8Array(Zt,nn):new Uint8Array(Zt,nn,dn),_.TYPED_ARRAY_SUPPORT?(Pt=Zt).__proto__=_.prototype:Pt=tt(Pt,Zt),Pt}(wt,xt,At,qt):typeof xt=="string"?function(Pt,Zt,nn){if(typeof nn=="string"&&nn!==""||(nn="utf8"),!_.isEncoding(nn))throw new TypeError('"encoding" must be a valid string encoding');var dn=0|nt(Zt,nn),wn=(Pt=$(Pt,dn)).write(Zt,nn);return wn!==dn&&(Pt=Pt.slice(0,wn)),Pt}(wt,xt,At):function(Pt,Zt){if(_.isBuffer(Zt)){var nn=0|j(Zt.length);return(Pt=$(Pt,nn)).length===0||Zt.copy(Pt,0,0,nn),Pt}if(Zt){if(typeof ArrayBuffer<"u"&&Zt.buffer instanceof ArrayBuffer||"length"in Zt)return typeof Zt.length!="number"||(dn=Zt.length)!=dn?$(Pt,0):tt(Pt,Zt);if(Zt.type==="Buffer"&&g(Zt.data))return tt(Pt,Zt.data)}var dn;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(wt,xt)}function et(wt){if(typeof wt!="number")throw new TypeError('"size" argument must be a number');if(wt<0)throw new RangeError('"size" argument must not be negative')}function rt(wt,xt){if(et(xt),wt=$(wt,xt<0?0:0|j(xt)),!_.TYPED_ARRAY_SUPPORT)for(var At=0;At<xt;++At)wt[At]=0;return wt}function tt(wt,xt){var At=xt.length<0?0:0|j(xt.length);wt=$(wt,At);for(var qt=0;qt<At;qt+=1)wt[qt]=255&xt[qt];return wt}function j(wt){if(wt>=b())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+b().toString(16)+" bytes");return 0|wt}function nt(wt,xt){if(_.isBuffer(wt))return wt.length;if(typeof ArrayBuffer<"u"&&typeof ArrayBuffer.isView=="function"&&(ArrayBuffer.isView(wt)||wt instanceof ArrayBuffer))return wt.byteLength;typeof wt!="string"&&(wt=""+wt);var At=wt.length;if(At===0)return 0;for(var qt=!1;;)switch(xt){case"ascii":case"latin1":case"binary":return At;case"utf8":case"utf-8":case void 0:return Yt(wt).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*At;case"hex":return At>>>1;case"base64":return cn(wt).length;default:if(qt)return Yt(wt).length;xt=(""+xt).toLowerCase(),qt=!0}}function st(wt,xt,At){var qt=!1;if((xt===void 0||xt<0)&&(xt=0),xt>this.length||((At===void 0||At>this.length)&&(At=this.length),At<=0)||(At>>>=0)<=(xt>>>=0))return"";for(wt||(wt="utf8");;)switch(wt){case"hex":return Rt(this,xt,At);case"utf8":case"utf-8":return _t(this,xt,At);case"ascii":return Ot(this,xt,At);case"latin1":case"binary":return kt(this,xt,At);case"base64":return Ct(this,xt,At);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return jt(this,xt,At);default:if(qt)throw new TypeError("Unknown encoding: "+wt);wt=(wt+"").toLowerCase(),qt=!0}}function ot(wt,xt,At){var qt=wt[xt];wt[xt]=wt[At],wt[At]=qt}function ut(wt,xt,At,qt,Pt){if(wt.length===0)return-1;if(typeof At=="string"?(qt=At,At=0):At>2147483647?At=2147483647:At<-2147483648&&(At=-2147483648),At=+At,isNaN(At)&&(At=Pt?0:wt.length-1),At<0&&(At=wt.length+At),At>=wt.length){if(Pt)return-1;At=wt.length-1}else if(At<0){if(!Pt)return-1;At=0}if(typeof xt=="string"&&(xt=_.from(xt,qt)),_.isBuffer(xt))return xt.length===0?-1:ht(wt,xt,At,qt,Pt);if(typeof xt=="number")return xt&=255,_.TYPED_ARRAY_SUPPORT&&typeof Uint8Array.prototype.indexOf=="function"?Pt?Uint8Array.prototype.indexOf.call(wt,xt,At):Uint8Array.prototype.lastIndexOf.call(wt,xt,At):ht(wt,[xt],At,qt,Pt);throw new TypeError("val must be string, number or Buffer")}function ht(wt,xt,At,qt,Pt){var Zt,nn=1,dn=wt.length,wn=xt.length;if(qt!==void 0&&((qt=String(qt).toLowerCase())==="ucs2"||qt==="ucs-2"||qt==="utf16le"||qt==="utf-16le")){if(wt.length<2||xt.length<2)return-1;nn=2,dn/=2,wn/=2,At/=2}function kn(Zn,jn){return nn===1?Zn[jn]:Zn.readUInt16BE(jn*nn)}if(Pt){var Pn=-1;for(Zt=At;Zt<dn;Zt++)if(kn(wt,Zt)===kn(xt,Pn===-1?0:Zt-Pn)){if(Pn===-1&&(Pn=Zt),Zt-Pn+1===wn)return Pn*nn}else Pn!==-1&&(Zt-=Zt-Pn),Pn=-1}else for(At+wn>dn&&(At=dn-wn),Zt=At;Zt>=0;Zt--){for(var On=!0,Bn=0;Bn<wn;Bn++)if(kn(wt,Zt+Bn)!==kn(xt,Bn)){On=!1;break}if(On)return Zt}return-1}function pt(wt,xt,At,qt){At=Number(At)||0;var Pt=wt.length-At;qt?(qt=Number(qt))>Pt&&(qt=Pt):qt=Pt;var Zt=xt.length;if(Zt%2!=0)throw new TypeError("Invalid hex string");qt>Zt/2&&(qt=Zt/2);for(var nn=0;nn<qt;++nn){var dn=parseInt(xt.substr(2*nn,2),16);if(isNaN(dn))return nn;wt[At+nn]=dn}return nn}function it(wt,xt,At,qt){return Wt(Yt(xt,wt.length-At),wt,At,qt)}function yt(wt,xt,At,qt){return Wt(function(Pt){for(var Zt=[],nn=0;nn<Pt.length;++nn)Zt.push(255&Pt.charCodeAt(nn));return Zt}(xt),wt,At,qt)}function ft(wt,xt,At,qt){return yt(wt,xt,At,qt)}function bt(wt,xt,At,qt){return Wt(cn(xt),wt,At,qt)}function Tt(wt,xt,At,qt){return Wt(function(Pt,Zt){for(var nn,dn,wn,kn=[],Pn=0;Pn<Pt.length&&!((Zt-=2)<0);++Pn)nn=Pt.charCodeAt(Pn),dn=nn>>8,wn=nn%256,kn.push(wn),kn.push(dn);return kn}(xt,wt.length-At),wt,At,qt)}function Ct(wt,xt,At){return xt===0&&At===wt.length?c.fromByteArray(wt):c.fromByteArray(wt.slice(xt,At))}function _t(wt,xt,At){At=Math.min(wt.length,At);for(var qt=[],Pt=xt;Pt<At;){var Zt,nn,dn,wn,kn=wt[Pt],Pn=null,On=kn>239?4:kn>223?3:kn>191?2:1;if(Pt+On<=At)switch(On){case 1:kn<128&&(Pn=kn);break;case 2:(192&(Zt=wt[Pt+1]))==128&&(wn=(31&kn)<<6|63&Zt)>127&&(Pn=wn);break;case 3:Zt=wt[Pt+1],nn=wt[Pt+2],(192&Zt)==128&&(192&nn)==128&&(wn=(15&kn)<<12|(63&Zt)<<6|63&nn)>2047&&(wn<55296||wn>57343)&&(Pn=wn);break;case 4:Zt=wt[Pt+1],nn=wt[Pt+2],dn=wt[Pt+3],(192&Zt)==128&&(192&nn)==128&&(192&dn)==128&&(wn=(15&kn)<<18|(63&Zt)<<12|(63&nn)<<6|63&dn)>65535&&wn<1114112&&(Pn=wn)}Pn===null?(Pn=65533,On=1):Pn>65535&&(Pn-=65536,qt.push(Pn>>>10&1023|55296),Pn=56320|1023&Pn),qt.push(Pn),Pt+=On}return function(Bn){var Zn=Bn.length;if(Zn<=4096)return String.fromCharCode.apply(String,Bn);for(var jn="",tr=0;tr<Zn;)jn+=String.fromCharCode.apply(String,Bn.slice(tr,tr+=4096));return jn}(qt)}s.Buffer=_,s.SlowBuffer=function(wt){return+wt!=wt&&(wt=0),_.alloc(+wt)},s.INSPECT_MAX_BYTES=50,_.TYPED_ARRAY_SUPPORT=a.TYPED_ARRAY_SUPPORT!==void 0?a.TYPED_ARRAY_SUPPORT:function(){try{var wt=new Uint8Array(1);return wt.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},wt.foo()===42&&typeof wt.subarray=="function"&&wt.subarray(1,1).byteLength===0}catch{return!1}}(),s.kMaxLength=b(),_.poolSize=8192,_._augment=function(wt){return wt.__proto__=_.prototype,wt},_.from=function(wt,xt,At){return _e(null,wt,xt,At)},_.TYPED_ARRAY_SUPPORT&&(_.prototype.__proto__=Uint8Array.prototype,_.__proto__=Uint8Array,typeof Symbol<"u"&&Symbol.species&&_[Symbol.species]===_&&Object.defineProperty(_,Symbol.species,{value:null,configurable:!0})),_.alloc=function(wt,xt,At){return function(qt,Pt,Zt,nn){return et(Pt),Pt<=0?$(qt,Pt):Zt!==void 0?typeof nn=="string"?$(qt,Pt).fill(Zt,nn):$(qt,Pt).fill(Zt):$(qt,Pt)}(null,wt,xt,At)},_.allocUnsafe=function(wt){return rt(null,wt)},_.allocUnsafeSlow=function(wt){return rt(null,wt)},_.isBuffer=function(wt){return!(wt==null||!wt._isBuffer)},_.compare=function(wt,xt){if(!_.isBuffer(wt)||!_.isBuffer(xt))throw new TypeError("Arguments must be Buffers");if(wt===xt)return 0;for(var At=wt.length,qt=xt.length,Pt=0,Zt=Math.min(At,qt);Pt<Zt;++Pt)if(wt[Pt]!==xt[Pt]){At=wt[Pt],qt=xt[Pt];break}return At<qt?-1:qt<At?1:0},_.isEncoding=function(wt){switch(String(wt).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},_.concat=function(wt,xt){if(!g(wt))throw new TypeError('"list" argument must be an Array of Buffers');if(wt.length===0)return _.alloc(0);var At;if(xt===void 0)for(xt=0,At=0;At<wt.length;++At)xt+=wt[At].length;var qt=_.allocUnsafe(xt),Pt=0;for(At=0;At<wt.length;++At){var Zt=wt[At];if(!_.isBuffer(Zt))throw new TypeError('"list" argument must be an Array of Buffers');Zt.copy(qt,Pt),Pt+=Zt.length}return qt},_.byteLength=nt,_.prototype._isBuffer=!0,_.prototype.swap16=function(){var wt=this.length;if(wt%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var xt=0;xt<wt;xt+=2)ot(this,xt,xt+1);return this},_.prototype.swap32=function(){var wt=this.length;if(wt%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var xt=0;xt<wt;xt+=4)ot(this,xt,xt+3),ot(this,xt+1,xt+2);return this},_.prototype.swap64=function(){var wt=this.length;if(wt%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var xt=0;xt<wt;xt+=8)ot(this,xt,xt+7),ot(this,xt+1,xt+6),ot(this,xt+2,xt+5),ot(this,xt+3,xt+4);return this},_.prototype.toString=function(){var wt=0|this.length;return wt===0?"":arguments.length===0?_t(this,0,wt):st.apply(this,arguments)},_.prototype.equals=function(wt){if(!_.isBuffer(wt))throw new TypeError("Argument must be a Buffer");return this===wt||_.compare(this,wt)===0},_.prototype.inspect=function(){var wt="",xt=s.INSPECT_MAX_BYTES;return this.length>0&&(wt=this.toString("hex",0,xt).match(/.{2}/g).join(" "),this.length>xt&&(wt+=" ... ")),"<Buffer "+wt+">"},_.prototype.compare=function(wt,xt,At,qt,Pt){if(!_.isBuffer(wt))throw new TypeError("Argument must be a Buffer");if(xt===void 0&&(xt=0),At===void 0&&(At=wt?wt.length:0),qt===void 0&&(qt=0),Pt===void 0&&(Pt=this.length),xt<0||At>wt.length||qt<0||Pt>this.length)throw new RangeError("out of range index");if(qt>=Pt&&xt>=At)return 0;if(qt>=Pt)return-1;if(xt>=At)return 1;if(this===wt)return 0;for(var Zt=(Pt>>>=0)-(qt>>>=0),nn=(At>>>=0)-(xt>>>=0),dn=Math.min(Zt,nn),wn=this.slice(qt,Pt),kn=wt.slice(xt,At),Pn=0;Pn<dn;++Pn)if(wn[Pn]!==kn[Pn]){Zt=wn[Pn],nn=kn[Pn];break}return Zt<nn?-1:nn<Zt?1:0},_.prototype.includes=function(wt,xt,At){return this.indexOf(wt,xt,At)!==-1},_.prototype.indexOf=function(wt,xt,At){return ut(this,wt,xt,At,!0)},_.prototype.lastIndexOf=function(wt,xt,At){return ut(this,wt,xt,At,!1)},_.prototype.write=function(wt,xt,At,qt){if(xt===void 0)qt="utf8",At=this.length,xt=0;else if(At===void 0&&typeof xt=="string")qt=xt,At=this.length,xt=0;else{if(!isFinite(xt))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");xt|=0,isFinite(At)?(At|=0,qt===void 0&&(qt="utf8")):(qt=At,At=void 0)}var Pt=this.length-xt;if((At===void 0||At>Pt)&&(At=Pt),wt.length>0&&(At<0||xt<0)||xt>this.length)throw new RangeError("Attempt to write outside buffer bounds");qt||(qt="utf8");for(var Zt=!1;;)switch(qt){case"hex":return pt(this,wt,xt,At);case"utf8":case"utf-8":return it(this,wt,xt,At);case"ascii":return yt(this,wt,xt,At);case"latin1":case"binary":return ft(this,wt,xt,At);case"base64":return bt(this,wt,xt,At);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Tt(this,wt,xt,At);default:if(Zt)throw new TypeError("Unknown encoding: "+qt);qt=(""+qt).toLowerCase(),Zt=!0}},_.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function Ot(wt,xt,At){var qt="";At=Math.min(wt.length,At);for(var Pt=xt;Pt<At;++Pt)qt+=String.fromCharCode(127&wt[Pt]);return qt}function kt(wt,xt,At){var qt="";At=Math.min(wt.length,At);for(var Pt=xt;Pt<At;++Pt)qt+=String.fromCharCode(wt[Pt]);return qt}function Rt(wt,xt,At){var qt=wt.length;(!xt||xt<0)&&(xt=0),(!At||At<0||At>qt)&&(At=qt);for(var Pt="",Zt=xt;Zt<At;++Zt)Pt+=an(wt[Zt]);return Pt}function jt(wt,xt,At){for(var qt=wt.slice(xt,At),Pt="",Zt=0;Zt<qt.length;Zt+=2)Pt+=String.fromCharCode(qt[Zt]+256*qt[Zt+1]);return Pt}function Gt(wt,xt,At){if(wt%1!=0||wt<0)throw new RangeError("offset is not uint");if(wt+xt>At)throw new RangeError("Trying to access beyond buffer length")}function Bt(wt,xt,At,qt,Pt,Zt){if(!_.isBuffer(wt))throw new TypeError('"buffer" argument must be a Buffer instance');if(xt>Pt||xt<Zt)throw new RangeError('"value" argument is out of bounds');if(At+qt>wt.length)throw new RangeError("Index out of range")}function zt(wt,xt,At,qt){xt<0&&(xt=65535+xt+1);for(var Pt=0,Zt=Math.min(wt.length-At,2);Pt<Zt;++Pt)wt[At+Pt]=(xt&255<<8*(qt?Pt:1-Pt))>>>8*(qt?Pt:1-Pt)}function Ut(wt,xt,At,qt){xt<0&&(xt=4294967295+xt+1);for(var Pt=0,Zt=Math.min(wt.length-At,4);Pt<Zt;++Pt)wt[At+Pt]=xt>>>8*(qt?Pt:3-Pt)&255}function Qt(wt,xt,At,qt,Pt,Zt){if(At+qt>wt.length)throw new RangeError("Index out of range");if(At<0)throw new RangeError("Index out of range")}function tn(wt,xt,At,qt,Pt){return Pt||Qt(wt,0,At,4),d.write(wt,xt,At,qt,23,4),At+4}function sn(wt,xt,At,qt,Pt){return Pt||Qt(wt,0,At,8),d.write(wt,xt,At,qt,52,8),At+8}_.prototype.slice=function(wt,xt){var At,qt=this.length;if((wt=~~wt)<0?(wt+=qt)<0&&(wt=0):wt>qt&&(wt=qt),(xt=xt===void 0?qt:~~xt)<0?(xt+=qt)<0&&(xt=0):xt>qt&&(xt=qt),xt<wt&&(xt=wt),_.TYPED_ARRAY_SUPPORT)(At=this.subarray(wt,xt)).__proto__=_.prototype;else{var Pt=xt-wt;At=new _(Pt,void 0);for(var Zt=0;Zt<Pt;++Zt)At[Zt]=this[Zt+wt]}return At},_.prototype.readUIntLE=function(wt,xt,At){wt|=0,xt|=0,At||Gt(wt,xt,this.length);for(var qt=this[wt],Pt=1,Zt=0;++Zt<xt&&(Pt*=256);)qt+=this[wt+Zt]*Pt;return qt},_.prototype.readUIntBE=function(wt,xt,At){wt|=0,xt|=0,At||Gt(wt,xt,this.length);for(var qt=this[wt+--xt],Pt=1;xt>0&&(Pt*=256);)qt+=this[wt+--xt]*Pt;return qt},_.prototype.readUInt8=function(wt,xt){return xt||Gt(wt,1,this.length),this[wt]},_.prototype.readUInt16LE=function(wt,xt){return xt||Gt(wt,2,this.length),this[wt]|this[wt+1]<<8},_.prototype.readUInt16BE=function(wt,xt){return xt||Gt(wt,2,this.length),this[wt]<<8|this[wt+1]},_.prototype.readUInt32LE=function(wt,xt){return xt||Gt(wt,4,this.length),(this[wt]|this[wt+1]<<8|this[wt+2]<<16)+16777216*this[wt+3]},_.prototype.readUInt32BE=function(wt,xt){return xt||Gt(wt,4,this.length),16777216*this[wt]+(this[wt+1]<<16|this[wt+2]<<8|this[wt+3])},_.prototype.readIntLE=function(wt,xt,At){wt|=0,xt|=0,At||Gt(wt,xt,this.length);for(var qt=this[wt],Pt=1,Zt=0;++Zt<xt&&(Pt*=256);)qt+=this[wt+Zt]*Pt;return qt>=(Pt*=128)&&(qt-=Math.pow(2,8*xt)),qt},_.prototype.readIntBE=function(wt,xt,At){wt|=0,xt|=0,At||Gt(wt,xt,this.length);for(var qt=xt,Pt=1,Zt=this[wt+--qt];qt>0&&(Pt*=256);)Zt+=this[wt+--qt]*Pt;return Zt>=(Pt*=128)&&(Zt-=Math.pow(2,8*xt)),Zt},_.prototype.readInt8=function(wt,xt){return xt||Gt(wt,1,this.length),128&this[wt]?-1*(255-this[wt]+1):this[wt]},_.prototype.readInt16LE=function(wt,xt){xt||Gt(wt,2,this.length);var At=this[wt]|this[wt+1]<<8;return 32768&At?4294901760|At:At},_.prototype.readInt16BE=function(wt,xt){xt||Gt(wt,2,this.length);var At=this[wt+1]|this[wt]<<8;return 32768&At?4294901760|At:At},_.prototype.readInt32LE=function(wt,xt){return xt||Gt(wt,4,this.length),this[wt]|this[wt+1]<<8|this[wt+2]<<16|this[wt+3]<<24},_.prototype.readInt32BE=function(wt,xt){return xt||Gt(wt,4,this.length),this[wt]<<24|this[wt+1]<<16|this[wt+2]<<8|this[wt+3]},_.prototype.readFloatLE=function(wt,xt){return xt||Gt(wt,4,this.length),d.read(this,wt,!0,23,4)},_.prototype.readFloatBE=function(wt,xt){return xt||Gt(wt,4,this.length),d.read(this,wt,!1,23,4)},_.prototype.readDoubleLE=function(wt,xt){return xt||Gt(wt,8,this.length),d.read(this,wt,!0,52,8)},_.prototype.readDoubleBE=function(wt,xt){return xt||Gt(wt,8,this.length),d.read(this,wt,!1,52,8)},_.prototype.writeUIntLE=function(wt,xt,At,qt){wt=+wt,xt|=0,At|=0,qt||Bt(this,wt,xt,At,Math.pow(2,8*At)-1,0);var Pt=1,Zt=0;for(this[xt]=255&wt;++Zt<At&&(Pt*=256);)this[xt+Zt]=wt/Pt&255;return xt+At},_.prototype.writeUIntBE=function(wt,xt,At,qt){wt=+wt,xt|=0,At|=0,qt||Bt(this,wt,xt,At,Math.pow(2,8*At)-1,0);var Pt=At-1,Zt=1;for(this[xt+Pt]=255&wt;--Pt>=0&&(Zt*=256);)this[xt+Pt]=wt/Zt&255;return xt+At},_.prototype.writeUInt8=function(wt,xt,At){return wt=+wt,xt|=0,At||Bt(this,wt,xt,1,255,0),_.TYPED_ARRAY_SUPPORT||(wt=Math.floor(wt)),this[xt]=255&wt,xt+1},_.prototype.writeUInt16LE=function(wt,xt,At){return wt=+wt,xt|=0,At||Bt(this,wt,xt,2,65535,0),_.TYPED_ARRAY_SUPPORT?(this[xt]=255&wt,this[xt+1]=wt>>>8):zt(this,wt,xt,!0),xt+2},_.prototype.writeUInt16BE=function(wt,xt,At){return wt=+wt,xt|=0,At||Bt(this,wt,xt,2,65535,0),_.TYPED_ARRAY_SUPPORT?(this[xt]=wt>>>8,this[xt+1]=255&wt):zt(this,wt,xt,!1),xt+2},_.prototype.writeUInt32LE=function(wt,xt,At){return wt=+wt,xt|=0,At||Bt(this,wt,xt,4,4294967295,0),_.TYPED_ARRAY_SUPPORT?(this[xt+3]=wt>>>24,this[xt+2]=wt>>>16,this[xt+1]=wt>>>8,this[xt]=255&wt):Ut(this,wt,xt,!0),xt+4},_.prototype.writeUInt32BE=function(wt,xt,At){return wt=+wt,xt|=0,At||Bt(this,wt,xt,4,4294967295,0),_.TYPED_ARRAY_SUPPORT?(this[xt]=wt>>>24,this[xt+1]=wt>>>16,this[xt+2]=wt>>>8,this[xt+3]=255&wt):Ut(this,wt,xt,!1),xt+4},_.prototype.writeIntLE=function(wt,xt,At,qt){if(wt=+wt,xt|=0,!qt){var Pt=Math.pow(2,8*At-1);Bt(this,wt,xt,At,Pt-1,-Pt)}var Zt=0,nn=1,dn=0;for(this[xt]=255&wt;++Zt<At&&(nn*=256);)wt<0&&dn===0&&this[xt+Zt-1]!==0&&(dn=1),this[xt+Zt]=(wt/nn>>0)-dn&255;return xt+At},_.prototype.writeIntBE=function(wt,xt,At,qt){if(wt=+wt,xt|=0,!qt){var Pt=Math.pow(2,8*At-1);Bt(this,wt,xt,At,Pt-1,-Pt)}var Zt=At-1,nn=1,dn=0;for(this[xt+Zt]=255&wt;--Zt>=0&&(nn*=256);)wt<0&&dn===0&&this[xt+Zt+1]!==0&&(dn=1),this[xt+Zt]=(wt/nn>>0)-dn&255;return xt+At},_.prototype.writeInt8=function(wt,xt,At){return wt=+wt,xt|=0,At||Bt(this,wt,xt,1,127,-128),_.TYPED_ARRAY_SUPPORT||(wt=Math.floor(wt)),wt<0&&(wt=255+wt+1),this[xt]=255&wt,xt+1},_.prototype.writeInt16LE=function(wt,xt,At){return wt=+wt,xt|=0,At||Bt(this,wt,xt,2,32767,-32768),_.TYPED_ARRAY_SUPPORT?(this[xt]=255&wt,this[xt+1]=wt>>>8):zt(this,wt,xt,!0),xt+2},_.prototype.writeInt16BE=function(wt,xt,At){return wt=+wt,xt|=0,At||Bt(this,wt,xt,2,32767,-32768),_.TYPED_ARRAY_SUPPORT?(this[xt]=wt>>>8,this[xt+1]=255&wt):zt(this,wt,xt,!1),xt+2},_.prototype.writeInt32LE=function(wt,xt,At){return wt=+wt,xt|=0,At||Bt(this,wt,xt,4,2147483647,-2147483648),_.TYPED_ARRAY_SUPPORT?(this[xt]=255&wt,this[xt+1]=wt>>>8,this[xt+2]=wt>>>16,this[xt+3]=wt>>>24):Ut(this,wt,xt,!0),xt+4},_.prototype.writeInt32BE=function(wt,xt,At){return wt=+wt,xt|=0,At||Bt(this,wt,xt,4,2147483647,-2147483648),wt<0&&(wt=4294967295+wt+1),_.TYPED_ARRAY_SUPPORT?(this[xt]=wt>>>24,this[xt+1]=wt>>>16,this[xt+2]=wt>>>8,this[xt+3]=255&wt):Ut(this,wt,xt,!1),xt+4},_.prototype.writeFloatLE=function(wt,xt,At){return tn(this,wt,xt,!0,At)},_.prototype.writeFloatBE=function(wt,xt,At){return tn(this,wt,xt,!1,At)},_.prototype.writeDoubleLE=function(wt,xt,At){return sn(this,wt,xt,!0,At)},_.prototype.writeDoubleBE=function(wt,xt,At){return sn(this,wt,xt,!1,At)},_.prototype.copy=function(wt,xt,At,qt){if(At||(At=0),qt||qt===0||(qt=this.length),xt>=wt.length&&(xt=wt.length),xt||(xt=0),qt>0&&qt<At&&(qt=At),qt===At||wt.length===0||this.length===0)return 0;if(xt<0)throw new RangeError("targetStart out of bounds");if(At<0||At>=this.length)throw new RangeError("sourceStart out of bounds");if(qt<0)throw new RangeError("sourceEnd out of bounds");qt>this.length&&(qt=this.length),wt.length-xt<qt-At&&(qt=wt.length-xt+At);var Pt,Zt=qt-At;if(this===wt&&At<xt&&xt<qt)for(Pt=Zt-1;Pt>=0;--Pt)wt[Pt+xt]=this[Pt+At];else if(Zt<1e3||!_.TYPED_ARRAY_SUPPORT)for(Pt=0;Pt<Zt;++Pt)wt[Pt+xt]=this[Pt+At];else Uint8Array.prototype.set.call(wt,this.subarray(At,At+Zt),xt);return Zt},_.prototype.fill=function(wt,xt,At,qt){if(typeof wt=="string"){if(typeof xt=="string"?(qt=xt,xt=0,At=this.length):typeof At=="string"&&(qt=At,At=this.length),wt.length===1){var Pt=wt.charCodeAt(0);Pt<256&&(wt=Pt)}if(qt!==void 0&&typeof qt!="string")throw new TypeError("encoding must be a string");if(typeof qt=="string"&&!_.isEncoding(qt))throw new TypeError("Unknown encoding: "+qt)}else typeof wt=="number"&&(wt&=255);if(xt<0||this.length<xt||this.length<At)throw new RangeError("Out of range index");if(At<=xt)return this;var Zt;if(xt>>>=0,At=At===void 0?this.length:At>>>0,wt||(wt=0),typeof wt=="number")for(Zt=xt;Zt<At;++Zt)this[Zt]=wt;else{var nn=_.isBuffer(wt)?wt:Yt(new _(wt,qt).toString()),dn=nn.length;for(Zt=0;Zt<At-xt;++Zt)this[Zt+xt]=nn[Zt%dn]}return this};var ln=/[^+\/0-9A-Za-z-_]/g;function an(wt){return wt<16?"0"+wt.toString(16):wt.toString(16)}function Yt(wt,xt){var At;xt=xt||1/0;for(var qt=wt.length,Pt=null,Zt=[],nn=0;nn<qt;++nn){if((At=wt.charCodeAt(nn))>55295&&At<57344){if(!Pt){if(At>56319){(xt-=3)>-1&&Zt.push(239,191,189);continue}if(nn+1===qt){(xt-=3)>-1&&Zt.push(239,191,189);continue}Pt=At;continue}if(At<56320){(xt-=3)>-1&&Zt.push(239,191,189),Pt=At;continue}At=65536+(Pt-55296<<10|At-56320)}else Pt&&(xt-=3)>-1&&Zt.push(239,191,189);if(Pt=null,At<128){if((xt-=1)<0)break;Zt.push(At)}else if(At<2048){if((xt-=2)<0)break;Zt.push(At>>6|192,63&At|128)}else if(At<65536){if((xt-=3)<0)break;Zt.push(At>>12|224,At>>6&63|128,63&At|128)}else{if(!(At<1114112))throw new Error("Invalid code point");if((xt-=4)<0)break;Zt.push(At>>18|240,At>>12&63|128,At>>6&63|128,63&At|128)}}return Zt}function cn(wt){return c.toByteArray(function(xt){if((xt=function(At){return At.trim?At.trim():At.replace(/^\s+|\s+$/g,"")}(xt).replace(ln,"")).length<2)return"";for(;xt.length%4!=0;)xt+="=";return xt}(wt))}function Wt(wt,xt,At,qt){for(var Pt=0;Pt<qt&&!(Pt+At>=xt.length||Pt>=wt.length);++Pt)xt[Pt+At]=wt[Pt];return Pt}}).call(this,o(21))},function(i,s,o){var a=o(87);function c(){this.argTypes=[],this.shimArgs=[],this.arrayArgs=[],this.arrayBlockIndices=[],this.scalarArgs=[],this.offsetArgs=[],this.offsetArgIndex=[],this.indexArgs=[],this.shapeArgs=[],this.funcName="",this.pre=null,this.body=null,this.post=null,this.debug=!1}i.exports=function(d){var g=new c;g.pre=d.pre,g.body=d.body,g.post=d.post;var b=d.args.slice(0);g.argTypes=b;for(var $=0;$<b.length;++$){var _=b[$];if(_==="array"||typeof _=="object"&&_.blockIndices){if(g.argTypes[$]="array",g.arrayArgs.push($),g.arrayBlockIndices.push(_.blockIndices?_.blockIndices:0),g.shimArgs.push("array"+$),$<g.pre.args.length&&g.pre.args[$].count>0)throw new Error("cwise: pre() block may not reference array args");if($<g.post.args.length&&g.post.args[$].count>0)throw new Error("cwise: post() block may not reference array args")}else if(_==="scalar")g.scalarArgs.push($),g.shimArgs.push("scalar"+$);else if(_==="index"){if(g.indexArgs.push($),$<g.pre.args.length&&g.pre.args[$].count>0)throw new Error("cwise: pre() block may not reference array index");if($<g.body.args.length&&g.body.args[$].lvalue)throw new Error("cwise: body() block may not write to array index");if($<g.post.args.length&&g.post.args[$].count>0)throw new Error("cwise: post() block may not reference array index")}else if(_==="shape"){if(g.shapeArgs.push($),$<g.pre.args.length&&g.pre.args[$].lvalue)throw new Error("cwise: pre() block may not write to array shape");if($<g.body.args.length&&g.body.args[$].lvalue)throw new Error("cwise: body() block may not write to array shape");if($<g.post.args.length&&g.post.args[$].lvalue)throw new Error("cwise: post() block may not write to array shape")}else{if(typeof _!="object"||!_.offset)throw new Error("cwise: Unknown argument type "+b[$]);g.argTypes[$]="offset",g.offsetArgs.push({array:_.array,offset:_.offset}),g.offsetArgIndex.push($)}}if(g.arrayArgs.length<=0)throw new Error("cwise: No array arguments specified");if(g.pre.args.length>b.length)throw new Error("cwise: Too many arguments in pre() block");if(g.body.args.length>b.length)throw new Error("cwise: Too many arguments in body() block");if(g.post.args.length>b.length)throw new Error("cwise: Too many arguments in post() block");return g.debug=!!d.printCode||!!d.debug,g.funcName=d.funcName||"cwise",g.blockSize=d.blockSize||64,a(g)}},function(i,s,o){i.exports=function(a,c,d){return a.length===0?a:c?(d||a.sort(c),function(g,b){for(var $=1,_=g.length,_e=g[0],et=g[0],rt=1;rt<_;++rt)if(et=_e,b(_e=g[rt],et)){if(rt===$){$++;continue}g[$++]=_e}return g.length=$,g}(a,c)):(d||a.sort(),function(g){for(var b=1,$=g.length,_=g[0],_e=g[0],et=1;et<$;++et,_e=_)if(_e=_,(_=g[et])!==_e){if(et===b){b++;continue}g[b++]=_}return g.length=b,g}(a))}},function(i,s,o){(function(a){var c=o(72),d=o(89),g=o(68).Buffer;a.__TYPEDARRAY_POOL||(a.__TYPEDARRAY_POOL={UINT8:d([32,0]),UINT16:d([32,0]),UINT32:d([32,0]),BIGUINT64:d([32,0]),INT8:d([32,0]),INT16:d([32,0]),INT32:d([32,0]),BIGINT64:d([32,0]),FLOAT:d([32,0]),DOUBLE:d([32,0]),DATA:d([32,0]),UINT8C:d([32,0]),BUFFER:d([32,0])});var b=typeof Uint8ClampedArray<"u",$=typeof BigUint64Array<"u",_=typeof BigInt64Array<"u",_e=a.__TYPEDARRAY_POOL;_e.UINT8C||(_e.UINT8C=d([32,0])),_e.BIGUINT64||(_e.BIGUINT64=d([32,0])),_e.BIGINT64||(_e.BIGINT64=d([32,0])),_e.BUFFER||(_e.BUFFER=d([32,0]));var et=_e.DATA,rt=_e.BUFFER;function tt(Ot){if(Ot){var kt=Ot.length||Ot.byteLength,Rt=c.log2(kt);et[Rt].push(Ot)}}function j(Ot){Ot=c.nextPow2(Ot);var kt=c.log2(Ot),Rt=et[kt];return Rt.length>0?Rt.pop():new ArrayBuffer(Ot)}function nt(Ot){return new Uint8Array(j(Ot),0,Ot)}function st(Ot){return new Uint16Array(j(2*Ot),0,Ot)}function ot(Ot){return new Uint32Array(j(4*Ot),0,Ot)}function ut(Ot){return new Int8Array(j(Ot),0,Ot)}function ht(Ot){return new Int16Array(j(2*Ot),0,Ot)}function pt(Ot){return new Int32Array(j(4*Ot),0,Ot)}function it(Ot){return new Float32Array(j(4*Ot),0,Ot)}function yt(Ot){return new Float64Array(j(8*Ot),0,Ot)}function ft(Ot){return b?new Uint8ClampedArray(j(Ot),0,Ot):nt(Ot)}function bt(Ot){return $?new BigUint64Array(j(8*Ot),0,Ot):null}function Tt(Ot){return _?new BigInt64Array(j(8*Ot),0,Ot):null}function Ct(Ot){return new DataView(j(Ot),0,Ot)}function _t(Ot){Ot=c.nextPow2(Ot);var kt=c.log2(Ot),Rt=rt[kt];return Rt.length>0?Rt.pop():new g(Ot)}s.free=function(Ot){if(g.isBuffer(Ot))rt[c.log2(Ot.length)].push(Ot);else{if(Object.prototype.toString.call(Ot)!=="[object ArrayBuffer]"&&(Ot=Ot.buffer),!Ot)return;var kt=Ot.length||Ot.byteLength,Rt=0|c.log2(kt);et[Rt].push(Ot)}},s.freeUint8=s.freeUint16=s.freeUint32=s.freeBigUint64=s.freeInt8=s.freeInt16=s.freeInt32=s.freeBigInt64=s.freeFloat32=s.freeFloat=s.freeFloat64=s.freeDouble=s.freeUint8Clamped=s.freeDataView=function(Ot){tt(Ot.buffer)},s.freeArrayBuffer=tt,s.freeBuffer=function(Ot){rt[c.log2(Ot.length)].push(Ot)},s.malloc=function(Ot,kt){if(kt===void 0||kt==="arraybuffer")return j(Ot);switch(kt){case"uint8":return nt(Ot);case"uint16":return st(Ot);case"uint32":return ot(Ot);case"int8":return ut(Ot);case"int16":return ht(Ot);case"int32":return pt(Ot);case"float":case"float32":return it(Ot);case"double":case"float64":return yt(Ot);case"uint8_clamped":return ft(Ot);case"bigint64":return Tt(Ot);case"biguint64":return bt(Ot);case"buffer":return _t(Ot);case"data":case"dataview":return Ct(Ot);default:return null}return null},s.mallocArrayBuffer=j,s.mallocUint8=nt,s.mallocUint16=st,s.mallocUint32=ot,s.mallocInt8=ut,s.mallocInt16=ht,s.mallocInt32=pt,s.mallocFloat32=s.mallocFloat=it,s.mallocFloat64=s.mallocDouble=yt,s.mallocUint8Clamped=ft,s.mallocBigUint64=bt,s.mallocBigInt64=Tt,s.mallocDataView=Ct,s.mallocBuffer=_t,s.clearCache=function(){for(var Ot=0;Ot<32;++Ot)_e.UINT8[Ot].length=0,_e.UINT16[Ot].length=0,_e.UINT32[Ot].length=0,_e.INT8[Ot].length=0,_e.INT16[Ot].length=0,_e.INT32[Ot].length=0,_e.FLOAT[Ot].length=0,_e.DOUBLE[Ot].length=0,_e.BIGUINT64[Ot].length=0,_e.BIGINT64[Ot].length=0,_e.UINT8C[Ot].length=0,et[Ot].length=0,rt[Ot].length=0}}).call(this,o(21))},function(i,s,o){function a(d){var g=32;return(d&=-d)&&g--,65535&d&&(g-=16),16711935&d&&(g-=8),252645135&d&&(g-=4),858993459&d&&(g-=2),1431655765&d&&(g-=1),g}s.INT_BITS=32,s.INT_MAX=2147483647,s.INT_MIN=-1<<31,s.sign=function(d){return(d>0)-(d<0)},s.abs=function(d){var g=d>>31;return(d^g)-g},s.min=function(d,g){return g^(d^g)&-(d<g)},s.max=function(d,g){return d^(d^g)&-(d<g)},s.isPow2=function(d){return!(d&d-1||!d)},s.log2=function(d){var g,b;return g=(d>65535)<<4,g|=b=((d>>>=g)>255)<<3,g|=b=((d>>>=b)>15)<<2,(g|=b=((d>>>=b)>3)<<1)|(d>>>=b)>>1},s.log10=function(d){return d>=1e9?9:d>=1e8?8:d>=1e7?7:d>=1e6?6:d>=1e5?5:d>=1e4?4:d>=1e3?3:d>=100?2:d>=10?1:0},s.popCount=function(d){return 16843009*((d=(858993459&(d-=d>>>1&1431655765))+(d>>>2&858993459))+(d>>>4)&252645135)>>>24},s.countTrailingZeros=a,s.nextPow2=function(d){return d+=d===0,--d,d|=d>>>1,d|=d>>>2,d|=d>>>4,d|=d>>>8,(d|=d>>>16)+1},s.prevPow2=function(d){return d|=d>>>1,d|=d>>>2,d|=d>>>4,d|=d>>>8,(d|=d>>>16)-(d>>>1)},s.parity=function(d){return d^=d>>>16,d^=d>>>8,d^=d>>>4,27030>>>(d&=15)&1};var c=new Array(256);(function(d){for(var g=0;g<256;++g){var b=g,$=g,_=7;for(b>>>=1;b;b>>>=1)$<<=1,$|=1&b,--_;d[g]=$<<_&255}})(c),s.reverse=function(d){return c[255&d]<<24|c[d>>>8&255]<<16|c[d>>>16&255]<<8|c[d>>>24&255]},s.interleave2=function(d,g){return(d=1431655765&((d=858993459&((d=252645135&((d=16711935&((d&=65535)|d<<8))|d<<4))|d<<2))|d<<1))|(g=1431655765&((g=858993459&((g=252645135&((g=16711935&((g&=65535)|g<<8))|g<<4))|g<<2))|g<<1))<<1},s.deinterleave2=function(d,g){return(d=65535&((d=16711935&((d=252645135&((d=858993459&((d=d>>>g&1431655765)|d>>>1))|d>>>2))|d>>>4))|d>>>16))<<16>>16},s.interleave3=function(d,g,b){return d=1227133513&((d=3272356035&((d=251719695&((d=4278190335&((d&=1023)|d<<16))|d<<8))|d<<4))|d<<2),(d|=(g=1227133513&((g=3272356035&((g=251719695&((g=4278190335&((g&=1023)|g<<16))|g<<8))|g<<4))|g<<2))<<1)|(b=1227133513&((b=3272356035&((b=251719695&((b=4278190335&((b&=1023)|b<<16))|b<<8))|b<<4))|b<<2))<<2},s.deinterleave3=function(d,g){return(d=1023&((d=4278190335&((d=251719695&((d=3272356035&((d=d>>>g&1227133513)|d>>>2))|d>>>4))|d>>>8))|d>>>16))<<22>>22},s.nextCombination=function(d){var g=d|d-1;return g+1|(~g&-~g)-1>>>a(d)+1}},function(i,s,o){o.r(s),o.d(s,"aux_inputs",function(){return a}),o.d(s,"chords",function(){return c}),o.d(s,"constants",function(){return d}),o.d(s,"data",function(){return g}),o.d(s,"logging",function(){return b}),o.d(s,"melodies",function(){return $}),o.d(s,"performance",function(){return _}),o.d(s,"sequences",function(){return _e}),o.d(s,"MetronomeCallbackObject",function(){return rt}),o.d(s,"Metronome",function(){return tt}),o.d(s,"MidiConversionError",function(){return ot}),o.d(s,"midiToSequenceProto",function(){return ut}),o.d(s,"sequenceProtoToMidi",function(){return ht}),o.d(s,"urlToBlob",function(){return pt}),o.d(s,"blobToNoteSequence",function(){return it}),o.d(s,"urlToNoteSequence",function(){return yt}),o.d(s,"BasePlayerCallback",function(){return Ct}),o.d(s,"BasePlayer",function(){return _t}),o.d(s,"Player",function(){return kt}),o.d(s,"SoundFontPlayer",function(){return Rt}),o.d(s,"PlayerWithClick",function(){return jt}),o.d(s,"MIDIPlayer",function(){return Gt}),o.d(s,"BaseRecorderCallback",function(){return Bt}),o.d(s,"Recorder",function(){return zt}),o.d(s,"BaseVisualizer",function(){return Qt}),o.d(s,"PianoRollCanvasVisualizer",function(){return tn}),o.d(s,"Visualizer",function(){return sn}),o.d(s,"BaseSVGVisualizer",function(){return ln}),o.d(s,"PianoRollSVGVisualizer",function(){return an}),o.d(s,"WaterfallSVGVisualizer",function(){return Yt}),o.d(s,"ScrollType",function(){return cn}),o.d(s,"StaffSVGVisualizer",function(){return Wt});var a=o(48),c=o(37),d=o(8),g=o(36),b=o(12),$=o(23),_=o(29),_e=o(13),et=o(9);class rt{}class tt{constructor(xt,At=1){this.clicksPerQuarter=1,this.muted=!1,this.loClick=new et.MembraneSynth({pitchDecay:.008,envelope:{attack:.001,decay:.3,sustain:0}}).toDestination(),this.hiClick=new et.MembraneSynth({pitchDecay:.008,envelope:{attack:.001,decay:.3,sustain:0}}).toDestination(),this.loClickNote="c5",this.hiClickNote="g5",this.ticking=!1,this.startedAt=null,this.step=-1,this.reset(),this.callbackObject=xt,this.clicksPerQuarter=At}isTicking(){return this.ticking}getStartedAt(){return this.startedAt}getOffsetTime(){return et.immediate()-this.startedAt}start(xt=120){this.reset(),this.ticking=!0,this.callbackObject.click||(this.callbackObject.click=()=>{}),this.callbackObject.quarter||(this.callbackObject.quarter=()=>{}),this.callbackObject.bar||(this.callbackObject.bar=()=>{});let At=0;const qt=4*this.clicksPerQuarter;et.Transport.scheduleRepeat(Pt=>{this.startedAt||(this.startedAt=Pt);const Zt=Pt-this.startedAt;this.step++;const nn=this.step%qt,dn=Math.floor(nn/this.clicksPerQuarter),wn=nn%this.clicksPerQuarter;this.callbackObject.click(Zt,nn),wn===0&&this.callbackObject.quarter(Zt,dn),this.muted||(nn===0?this.hiClick.triggerAttack(this.hiClickNote,Pt,.1):this.loClick.triggerAttack(this.loClickNote,Pt,.1)),nn===0&&(this.callbackObject.bar(Zt,At),At++)},qt+"n"),et.Transport.bpm.value=xt,et.Transport.start()}stop(){this.ticking=!1,et.Transport.cancel(),et.Transport.stop()}reset(){this.muted=!1,this.ticking=!1,this.step=-1,this.startedAt=null}}var j=o(67),nt=o(15),st=o(10);class ot extends Error{constructor(xt){super(xt),Object.setPrototypeOf(this,new.target.prototype)}}function ut(wt){const xt=new j.Midi(wt),At=st.a.create();At.ticksPerQuarter=xt.header.ppq,At.sourceInfo=st.a.SourceInfo.create({parser:st.a.SourceInfo.Parser.TONEJS_MIDI_CONVERT,encodingType:st.a.SourceInfo.EncodingType.MIDI});for(const Pt of xt.header.timeSignatures)At.timeSignatures.push(st.a.TimeSignature.create({time:xt.header.ticksToSeconds(Pt.ticks),numerator:Pt.timeSignature[0],denominator:Pt.timeSignature[1]}));At.timeSignatures.length||At.timeSignatures.push(st.a.TimeSignature.create({time:0,numerator:4,denominator:4}));for(const Pt of xt.header.tempos)At.tempos.push(st.a.Tempo.create({time:Pt.time,qpm:Pt.bpm}));let qt=-1;for(const Pt of xt.tracks){Pt.notes.length>0&&(qt+=1);for(const dn of Pt.notes){const wn=dn.time,kn=wn+dn.duration;At.notes.push(st.a.Note.create({instrument:qt,program:Pt.instrument.number,startTime:wn,endTime:kn,pitch:dn.midi,velocity:Math.floor(dn.velocity*d.MIDI_VELOCITIES),isDrum:Pt.instrument.percussion})),kn>At.totalTime&&(At.totalTime=kn)}const Zt=Object.values(Pt.controlChanges),nn=[].concat.apply([],Zt);for(const dn of nn)At.controlChanges.push(st.a.ControlChange.create({time:dn.time,controlNumber:dn.number,controlValue:Math.floor(dn.value*(d.MIDI_VELOCITIES-1)),instrument:qt,program:Pt.instrument.number,isDrum:Pt.instrument.percussion}))}return At}function ht(wt){_e.isQuantizedSequence(wt)&&(wt=_e.unquantizeSequence(wt));const xt=new j.Midi;xt.fromJSON({header:{name:"",ppq:wt.ticksPerQuarter||d.DEFAULT_TICKS_PER_QUARTER,tempos:[],timeSignatures:[],keySignatures:[],meta:[]},tracks:[]});const At=Array.from(wt.tempos||[]);At.length===0&&At.push({time:0,qpm:d.DEFAULT_QUARTERS_PER_MINUTE}),At.sort((Pt,Zt)=>Pt.time-Zt.time);for(const Pt of At)xt.header.tempos.push({ticks:xt.header.secondsToTicks(Pt.time),bpm:Pt.qpm}),xt.header.update();if(wt.timeSignatures&&wt.timeSignatures.length!==0)for(const Pt of wt.timeSignatures)xt.header.timeSignatures.push({ticks:xt.header.secondsToTicks(Pt.time),timeSignature:[Pt.numerator,Pt.denominator]});else xt.header.timeSignatures.push({ticks:0,timeSignature:[4,4]});xt.header.update();const qt=new Map;for(const Pt of wt.notes){const Zt=Pt.instrument?Pt.instrument:0,nn=Pt.program===void 0?d.DEFAULT_PROGRAM:Pt.program,dn=!!Pt.isDrum,wn=JSON.stringify([Zt,nn,dn]);qt.has(wn)||qt.set(wn,{notes:[],controlChanges:[]}),qt.get(wn).notes.push(Pt)}for(const Pt of wt.controlChanges){const Zt=Pt.instrument?Pt.instrument:0,nn=Pt.program===void 0?d.DEFAULT_PROGRAM:Pt.program,dn=!!Pt.isDrum,wn=JSON.stringify([Zt,nn,dn]);qt.has(wn)||qt.set(wn,{notes:[],controlChanges:[]}),qt.get(wn).controlChanges.push(Pt)}return qt.forEach((Pt,Zt)=>{const[nn,dn]=JSON.parse(Zt).slice(1),wn=xt.addTrack();wn.channel=dn?d.DRUM_CHANNEL:d.NON_DRUM_CHANNELS[(xt.tracks.length-1)%d.NON_DRUM_CHANNELS.length],wn.instrument.number=nn;for(const kn of Pt.notes){const Pn=kn.velocity===void 0?d.DEFAULT_VELOCITY:kn.velocity;wn.addNote({midi:kn.pitch,time:kn.startTime,duration:kn.endTime-kn.startTime,velocity:(Pn+1)/d.MIDI_VELOCITIES})}for(const kn of Pt.controlChanges)wn.addCC({number:kn.controlNumber,value:kn.controlValue,time:kn.time})}),xt.toArray()}function pt(wt){return new Promise((xt,At)=>{Object(nt.a)(wt).then(qt=>qt.blob()).then(qt=>{xt(qt)}).catch(qt=>At(qt))})}function it(wt){return new Promise((xt,At)=>{const qt=new FileReader;qt.onload=Pt=>{try{const Zt=ut(qt.result);xt(Zt)}catch(Zt){At(Zt)}},qt.onerror=Pt=>At(Pt),qt.readAsArrayBuffer(wt)})}function yt(wt){return pt(wt).then(it)}class ft{constructor(xt){this.FADE_SECONDS=.1,this.baseURL=xt,this.buffers=new et.ToneAudioBuffers,this.sourceMap=new Map,this.initialized=!1}async initialize(){await Object(nt.a)(this.baseURL+"/instrument.json").then(xt=>xt.json()).then(xt=>{this.name=xt.name,this.minPitch=xt.minPitch,this.maxPitch=xt.maxPitch,this.durationSeconds=xt.durationSeconds,this.releaseSeconds=xt.releaseSeconds,this.percussive=xt.percussive,this.velocities=xt.velocities,this.initialized=!0})}sampleInfoToName(xt){return this.velocities?`p${xt.pitch}_v${xt.velocity}`:"p"+xt.pitch}sampleNameToURL(xt){return`${this.baseURL}/${xt}.mp3`}nearestVelocity(xt){if(!this.velocities)return xt;xt||(xt=d.DEFAULT_VELOCITY);let At,qt=d.MIDI_VELOCITIES;return this.velocities.forEach(Pt=>{const Zt=Math.abs(Pt-xt);Zt<qt&&(At=Pt,qt=Zt)}),At}async loadSamples(xt){this.initialized||await this.initialize();const At=xt.filter(Pt=>!(Pt.pitch<this.minPitch||Pt.pitch>this.maxPitch)||(b.log(`Pitch ${Pt.pitch} is outside the valid range for ${this.name}, ignoring.`,"SoundFont"),!1)).map(Pt=>this.sampleInfoToName({pitch:Pt.pitch,velocity:this.nearestVelocity(Pt.velocity)})),qt=Array.from(new Set(At)).filter(Pt=>!this.buffers.has(Pt)).map(Pt=>({name:Pt,url:this.sampleNameToURL(Pt)}));qt.length>0&&(qt.forEach(Pt=>this.buffers.add(Pt.name,Pt.url)),await et.loaded(),b.log(`Loaded samples for ${this.name}.`,"SoundFont"))}playNote(xt,At,qt,Pt,Zt){const nn=this.getBuffer(xt,At);if(!nn)return;Pt>this.durationSeconds&&b.log(`Requested note duration longer than sample duration: ${Pt} > ${this.durationSeconds}`,"SoundFont");const dn=new et.ToneBufferSource({url:nn,fadeOut:this.FADE_SECONDS}).connect(Zt);if(dn.start(qt,0,void 0,1),!this.percussive&&Pt<this.durationSeconds){const wn=new et.ToneBufferSource({url:nn,fadeOut:this.FADE_SECONDS}).connect(Zt);dn.stop(qt+Pt+this.FADE_SECONDS),wn.start(qt+Pt,this.durationSeconds,void 0,1)}}playNoteDown(xt,At,qt){const Pt=this.getBuffer(xt,At);if(!Pt)return;const Zt=new et.ToneBufferSource(Pt).connect(qt);Zt.start(0,0,void 0,1),this.sourceMap.has(xt)&&this.sourceMap.get(xt).stop(et.now()+this.FADE_SECONDS,this.FADE_SECONDS),this.sourceMap.set(xt,Zt)}playNoteUp(xt,At,qt){if(!this.sourceMap.has(xt))return;const Pt=this.getBuffer(xt,At);Pt&&(new et.ToneBufferSource({url:Pt,fadeOut:this.FADE_SECONDS}).connect(qt).start(0,this.durationSeconds,void 0,1),this.sourceMap.get(xt).stop(et.now()+this.FADE_SECONDS,this.FADE_SECONDS),this.sourceMap.delete(xt))}getBuffer(xt,At){if(!this.initialized)throw new Error("Instrument is not initialized.");if(xt<this.minPitch||xt>this.maxPitch)return void b.log(`Pitch ${xt} is outside the valid range for ${this.name} (${this.minPitch}-${this.maxPitch})`,"SoundFont");const qt=this.sampleInfoToName({pitch:xt,velocity:this.nearestVelocity(At)});if(!this.buffers.has(qt))throw new Error(`Buffer not found for ${this.name}: ${qt}`);const Pt=this.buffers.get(qt);if(!Pt.loaded)throw new Error(`Buffer not loaded for ${this.name}: ${qt}`);return Pt}}class bt{constructor(xt){this.baseURL=xt,this.instruments=new Map,this.initialized=!1}async initialize(){await Object(nt.a)(this.baseURL+"/soundfont.json").then(xt=>xt.json()).then(xt=>{this.name=xt.name;for(const At in xt.instruments){const qt=`${this.baseURL}/${xt.instruments[At]}`;this.instruments.set(At==="drums"?"drums":+At,new ft(qt))}this.initialized=!0})}async loadSamples(xt){this.initialized||await this.initialize();const At=new Map;xt.forEach(qt=>{qt.isDrum=qt.isDrum||!1,qt.program=qt.program||0;const Pt=qt.isDrum?"drums":qt.program,Zt={pitch:qt.pitch,velocity:qt.velocity};At.has(Pt)?At.get(Pt).push(Zt):this.instruments.has(Pt)?At.set(Pt,[Zt]):b.log(`No instrument in ${this.name} for: program=${qt.program}, isDrum=${qt.isDrum}`,"SoundFont")}),await Promise.all(Array.from(At.keys()).map(qt=>this.instruments.get(qt).loadSamples(At.get(qt))))}playNote(xt,At,qt,Pt,Zt=0,nn=!1,dn){const wn=nn?"drums":Zt;if(!this.initialized)throw new Error("SoundFont is not initialized.");this.instruments.has(wn)?this.instruments.get(wn).playNote(xt,At,qt,Pt,dn):b.log(`No instrument in ${this.name} for: program=${Zt}, isDrum=${nn}`,"SoundFont")}playNoteDown(xt,At,qt=0,Pt=!1,Zt){const nn=Pt?"drums":qt;if(!this.initialized)throw new Error("SoundFont is not initialized.");this.instruments.has(nn)?this.instruments.get(nn).playNoteDown(xt,At,Zt):b.log(`No instrument in ${this.name} for: program=${qt}, isDrum=${Pt}`,"SoundFont")}playNoteUp(xt,At,qt=0,Pt=!1,Zt){const nn=Pt?"drums":qt;if(!this.initialized)throw new Error("SoundFont is not initialized.");this.instruments.has(nn)?this.instruments.get(nn).playNoteUp(xt,At,Zt):b.log(`No instrument in ${this.name} for: program=${qt}, isDrum=${Pt}`,"SoundFont")}}function Tt(wt,xt){return wt.quantizedStartStep<xt.quantizedStartStep?-1:wt.quantizedStartStep>xt.quantizedStartStep?1:wt.pitch<xt.pitch?-1:1}class Ct{}class _t{constructor(xt=!1,At){this.playClick=xt,this.callbackObject=At,this.desiredQPM=void 0}setTempo(xt){this.desiredQPM=xt,et.Transport.state==="started"&&(et.Transport.bpm.value=xt)}makeClickSequence(xt){const At=_e.clone(xt),qt=At.notes.map(Zt=>Zt.quantizedEndStep),Pt=Math.max(...qt);for(let Zt=0;Zt<Pt;Zt+=4){const nn={pitch:Zt%16==0?d.LO_CLICK_PITCH:d.HI_CLICK_PITCH,quantizedStartStep:Zt,isDrum:!0,quantizedEndStep:Zt+1};At.notes.push(nn)}return At.notes.sort(Tt),At}resumeContext(){et.context.resume()}start(xt,At,qt=0){if(this.getPlayState()==="started")throw new Error("Cannot start playback; player is already playing.");if(this.getPlayState()==="paused")throw new Error("Cannot `start()` a paused player; use `resume()`.");if(et.Transport.state!=="stopped")throw new Error("Cannot start playback while `Tone.Transport` is in use.");this.resumeContext();const Pt=_e.isQuantizedSequence(xt);if(this.playClick&&Pt&&(xt=this.makeClickSequence(xt)),At?et.Transport.bpm.value=At:xt.tempos&&xt.tempos.length>0&&xt.tempos[0].qpm>0?et.Transport.bpm.value=xt.tempos[0].qpm:et.Transport.bpm.value=d.DEFAULT_QUARTERS_PER_MINUTE,Pt)xt=_e.unquantizeSequence(xt,At);else if(At)throw new Error("Cannot specify a `qpm` for a non-quantized sequence.");const Zt=new et.Part((nn,dn)=>{this.currentPart===Zt&&(this.playNote(nn,dn),this.callbackObject&&et.Draw.schedule(()=>{this.callbackObject.run(dn,nn)},nn))},xt.notes.map(nn=>[nn.startTime,nn]));return this.currentPart=Zt,this.desiredQPM&&(et.Transport.bpm.value=this.desiredQPM),this.currentPart.start(void 0,qt),et.Transport.state!=="started"&&et.Transport.start(),new Promise(nn=>{this.scheduledStop=et.Transport.schedule(()=>{this.stop(),nn(),this.callbackObject&&this.callbackObject.stop()},"+"+xt.totalTime)})}stop(){this.isPlaying()&&(this.currentPart.stop(),et.Transport.stop(),this.currentPart=null),et.Transport.clear(this.scheduledStop),this.scheduledStop=void 0,this.desiredQPM=void 0}pause(){if(!this.isPlaying())throw new Error("Cannot pause playback while the player is stopped.");et.Transport.pause()}resume(){if(this.getPlayState()!=="paused")throw new Error(`Cannot resume playback while "${this.getPlayState()}".`);et.Transport.start()}seekTo(xt){if(!this.isPlaying())throw new Error("Cannot seek while the player is stopped.");et.Transport.seconds=xt}isPlaying(){return!!this.currentPart}getPlayState(){return this.isPlaying()?et.Transport.state:"stopped"}}class Ot{constructor(){this.DRUM_PITCH_TO_CLASS=new Map,this.kick=new et.MembraneSynth().toDestination(),this.tomLow=new et.MembraneSynth({pitchDecay:.008,envelope:{attack:.01,decay:.5,sustain:0}}).toDestination(),this.tomMid=new et.MembraneSynth({pitchDecay:.008,envelope:{attack:.01,decay:.5,sustain:0}}).toDestination(),this.tomHigh=new et.MembraneSynth({pitchDecay:.008,envelope:{attack:.01,decay:.5,sustain:0}}).toDestination(),this.closedHihat=new et.MetalSynth({frequency:400,envelope:{attack:.001,decay:.1,release:.8},harmonicity:5.1,modulationIndex:32,resonance:4e3,octaves:1}).toDestination(),this.openHihat=new et.MetalSynth({frequency:400,envelope:{attack:.001,decay:.5,release:.8,sustain:1},harmonicity:5.1,modulationIndex:32,resonance:4e3,octaves:1}).toDestination(),this.ride=new et.MetalSynth().toDestination(),this.crash=new et.MetalSynth({frequency:300,envelope:{attack:.001,decay:1,release:3},harmonicity:5.1,modulationIndex:64,resonance:4e3,octaves:1.5}).toDestination(),this.snare=new et.NoiseSynth({noise:{type:"white"},envelope:{attack:.005,decay:.05,sustain:.1,release:.4}}).toDestination(),this.loClick=new et.MembraneSynth({pitchDecay:.008,envelope:{attack:.001,decay:.3,sustain:0}}).toDestination(),this.hiClick=new et.MembraneSynth({pitchDecay:.008,envelope:{attack:.001,decay:.3,sustain:0}}).toDestination(),this.pitchPlayers=[(xt,At=1)=>this.kick.triggerAttackRelease("C2","8n",xt,At),(xt,At=1)=>this.snare.triggerAttackRelease("16n",xt,At),(xt,At=1)=>this.closedHihat.triggerAttack(xt,.3,At),(xt,At=1)=>this.openHihat.triggerAttack(xt,.3,At),(xt,At=.5)=>this.tomLow.triggerAttack("G3",xt,At),(xt,At=.5)=>this.tomMid.triggerAttack("C4",xt,At),(xt,At=.5)=>this.tomHigh.triggerAttack("F4",xt,At),(xt,At=1)=>this.crash.triggerAttack(xt,1,At),(xt,At=1)=>this.ride.triggerAttack(xt,.5,At),(xt,At=.5)=>this.loClick.triggerAttack("G5",xt,At),(xt,At=.5)=>this.hiClick.triggerAttack("C6",xt,At)];for(let xt=0;xt<d.DEFAULT_DRUM_PITCH_CLASSES.length;++xt)d.DEFAULT_DRUM_PITCH_CLASSES[xt].forEach(At=>{this.DRUM_PITCH_TO_CLASS.set(At,xt)});this.DRUM_PITCH_TO_CLASS.set(d.LO_CLICK_PITCH,d.LO_CLICK_CLASS),this.DRUM_PITCH_TO_CLASS.set(d.HI_CLICK_PITCH,d.HI_CLICK_CLASS)}static getInstance(){return Ot.instance||(Ot.instance=new Ot),Ot.instance}playNote(xt,At,qt){this.pitchPlayers[this.DRUM_PITCH_TO_CLASS.get(xt)](At,qt)}}class kt extends _t{constructor(){super(...arguments),this.drumKit=Ot.getInstance(),this.bassSynth=new et.Synth({volume:5,oscillator:{type:"triangle"}}).toDestination(),this.polySynth=new et.PolySynth().toDestination()}playNote(xt,At){const qt=At.hasOwnProperty("velocity")?At.velocity/d.MAX_MIDI_VELOCITY:void 0;if(At.isDrum)this.drumKit.playNote(At.pitch,xt,qt);else{const Pt=et.Frequency(At.pitch,"midi").toFrequency(),Zt=At.endTime-At.startTime;this.getSynth(At.instrument,At.program).triggerAttackRelease(Pt,Zt,xt,qt)}}getSynth(xt,At){return At!==void 0&&At>=32&&At<=39?this.bassSynth:this.polySynth}}kt.tone=et;class Rt extends _t{constructor(xt,At=et.Master,qt,Pt,Zt){super(!1,Zt),this.soundFont=new bt(xt),this.output=At,this.programOutputs=qt,this.drumOutputs=Pt}async loadSamples(xt){await this.soundFont.loadSamples(xt.notes.map(At=>({pitch:At.pitch,velocity:At.velocity,program:At.program||0,isDrum:At.isDrum||!1})))}async loadAllSamples(xt=0,At=!1){const qt=st.a.create(),Pt=At?d.MIN_DRUM_PITCH:d.MIN_PIANO_PITCH,Zt=At?d.MAX_DRUM_PITCH:d.MAX_PIANO_PITCH;for(let nn=Pt;nn<=Zt;nn++)for(let dn=d.MIN_MIDI_VELOCITY;dn<d.MAX_MIDI_VELOCITY;dn++)qt.notes.push({pitch:nn,velocity:dn,program:xt,isDrum:At});return this.loadSamples(qt)}resumeContext(){et.context.resume()}start(xt,At,qt=0){return this.resumeContext(),this.loadSamples(xt).then(()=>super.start(xt,At,qt))}playNote(xt,At){this.soundFont.playNote(At.pitch,At.velocity,xt,At.endTime-At.startTime,At.program,At.isDrum,this.getAudioNodeOutput(At))}playNoteDown(xt){this.soundFont.playNoteDown(xt.pitch,xt.velocity,xt.program,xt.isDrum,this.getAudioNodeOutput(xt))}playNoteUp(xt){this.soundFont.playNoteUp(xt.pitch,xt.velocity,xt.program,xt.isDrum,this.getAudioNodeOutput(xt))}getAudioNodeOutput(xt){let At=this.output;return this.programOutputs&&!xt.isDrum?this.programOutputs.has(xt.program)&&(At=this.programOutputs.get(xt.program)):this.drumOutputs&&xt.isDrum&&this.drumOutputs.has(xt.pitch)&&(At=this.drumOutputs.get(xt.pitch)),At}}class jt extends kt{constructor(xt){super(!0,xt)}}class Gt extends _t{constructor(xt){super(!1,xt),this.outputs=[],this.outputChannel=0,this.availableOutputs=[],this.NOTE_ON=144,this.NOTE_OFF=128}async requestMIDIAccess(){return navigator.requestMIDIAccess?new Promise((xt,At)=>{navigator.requestMIDIAccess().then(qt=>{qt.addEventListener("statechange",Pt=>this.initOutputs(qt)),xt(this.initOutputs(qt))},qt=>console.log("Something went wrong",At(qt)))}):null}initOutputs(xt){const At=xt.outputs.values();for(let qt=At.next();qt&&!qt.done;qt=At.next())this.availableOutputs.push(qt.value);return this.availableOutputs}playNote(xt,At){const qt=At.velocity||100,Pt=1e3*(At.endTime-At.startTime),Zt=[this.NOTE_ON+this.outputChannel,At.pitch,qt],nn=[this.NOTE_OFF+this.outputChannel,At.pitch,qt],dn=this.outputs?this.outputs:this.availableOutputs;for(let wn=0;wn<dn.length;wn++)this.sendMessageToOutput(dn[wn],Zt),this.sendMessageToOutput(dn[wn],nn,nt.d.now()+Pt)}sendMessageToOutput(xt,At,qt){xt&&xt.send(At,qt)}playNoteDown(xt){const At=[this.NOTE_ON,xt.pitch,xt.velocity],qt=this.outputs?this.outputs:this.availableOutputs;for(let Pt=0;Pt<qt.length;Pt++)this.sendMessageToOutput(qt[Pt],At)}playNoteUp(xt){const At=[this.NOTE_OFF,xt.pitch,xt.velocity],qt=this.outputs?this.outputs:this.availableOutputs;for(let Pt=0;Pt<qt.length;Pt++)this.sendMessageToOutput(qt[Pt],At,xt.endTime-xt.startTime)}}class Bt{}class zt{constructor(xt={},At){this.notes=[],this.midiInputs=[],this.loClick=new et.MembraneSynth({pitchDecay:.008,envelope:{attack:.001,decay:.3,sustain:0}}).toDestination(),this.hiClick=new et.MembraneSynth({pitchDecay:.008,envelope:{attack:.001,decay:.3,sustain:0}}).toDestination(),this.config={playClick:xt.playClick,qpm:xt.qpm||d.DEFAULT_QUARTERS_PER_MINUTE,playCountIn:xt.playCountIn,startRecordingAtFirstNote:xt.startRecordingAtFirstNote||!1},this.callbackObject=At,this.recording=!1,this.onNotes=new Map}async initialize(){await navigator.requestMIDIAccess().then(xt=>this.midiReady(xt),xt=>console.log("Something went wrong",xt))}midiReady(xt){b.log("Initialized Recorder","Recorder");const At=xt.inputs.values();for(let qt=At.next();qt&&!qt.done;qt=At.next())this.midiInputs.push(qt.value)}isRecording(){return this.recording}setTempo(xt){this.config.qpm=xt,et.Transport.state==="started"&&(et.Transport.bpm.value=xt)}enablePlayClick(xt){this.config.playClick=xt}enablePlayCountIn(xt){this.config.playCountIn=xt}initClickLoop(){let xt=0;this.clickLoop=new et.Loop(At=>{xt%4==0?this.loClick.triggerAttack("G5",At):this.hiClick.triggerAttack("C6",At),xt++,this.config.playCountIn&&xt===4&&(et.Transport.stop(),this.clickLoop.stop())},"4n")}getMIDIInputs(){return this.midiInputs}start(xt){const At=xt||this.midiInputs;for(const qt of At)qt.onmidimessage=Pt=>{this.midiMessageReceived(Pt)};if(this.config.playClick||this.config.playCountIn?(this.initClickLoop(),et.Transport.bpm.value=this.config.qpm,et.Transport.start(),this.clickLoop.start()):this.clickLoop=null,this.recording=!0,this.firstNoteTimestamp=void 0,this.notes=[],this.onNotes=new Map,!this.startRecordingAtFirstNote){const qt=Date.now();this.firstNoteTimestamp=qt}}stop(){this.recording=!1;const xt=Date.now();this.onNotes.forEach((At,qt)=>{this.noteOff(qt,xt)});for(const At of this.midiInputs)At.onmidimessage=null;return this.clickLoop&&(et.Transport.stop(),this.clickLoop.stop()),this.notes.length===0?null:this.getNoteSequence()}getNoteSequence(){return this.notes.length===0?null:st.a.create({notes:this.notes,totalTime:this.notes[this.notes.length-1].endTime})}reset(){const xt=this.stop();return this.firstNoteTimestamp=void 0,this.notes=[],this.onNotes=new Map,xt}midiMessageReceived(xt){if(!this.recording)return;let At;At=xt.timeStamp!==void 0&&xt.timeStamp!==0?xt.timeStamp:nt.d.now();const qt=At+nt.d.timing.navigationStart;this.firstNoteTimestamp===void 0&&(this.firstNoteTimestamp=qt);const Pt=xt.data[0]>>4,Zt=xt.data[1],nn=xt.data.length>2?xt.data[2]:1,dn=xt.srcElement;Pt===8||Pt===9&&nn===0?(this.callbackObject&&this.callbackObject.noteOff&&this.callbackObject.noteOff(Zt,nn,dn),this.noteOff(Zt,qt),this.callbackObject&&this.callbackObject.run&&this.callbackObject.run(this.getNoteSequence())):Pt===9&&(this.callbackObject&&this.callbackObject.noteOn&&this.callbackObject.noteOn(Zt,nn,dn),this.noteOn(Zt,nn,qt))}noteOn(xt,At,qt){const Pt=new st.a.Note;Pt.pitch=xt,Pt.startTime=(qt-this.firstNoteTimestamp)/1e3,Pt.velocity=At,this.onNotes.set(xt,Pt)}noteOff(xt,At){const qt=this.onNotes.get(xt);qt&&(qt.endTime=(At-this.firstNoteTimestamp)/1e3,this.notes.push(qt)),this.onNotes.delete(xt)}}var Ut=o(83);class Qt{constructor(xt,At={}){const qt=_e.isQuantizedSequence(xt),Pt=xt.tempos&&xt.tempos.length>0?xt.tempos[0].qpm:void 0;this.noteSequence=qt?_e.unquantizeSequence(xt,Pt):xt,this.config={noteHeight:At.noteHeight||6,noteSpacing:At.noteSpacing||1,pixelsPerTimeStep:At.pixelsPerTimeStep||30,noteRGB:At.noteRGB||"8, 41, 64",activeNoteRGB:At.activeNoteRGB||"240, 84, 119",minPitch:At.minPitch,maxPitch:At.maxPitch};const Zt=this.getSize();this.width=Zt.width,this.height=Zt.height}updateMinMaxPitches(xt=!1){if(!this.config.minPitch||!this.config.maxPitch){this.config.minPitch===void 0&&(this.config.minPitch=d.MAX_MIDI_PITCH),this.config.maxPitch===void 0&&(this.config.maxPitch=d.MIN_MIDI_PITCH);for(const At of this.noteSequence.notes)this.config.minPitch=Math.min(At.pitch,this.config.minPitch),this.config.maxPitch=Math.max(At.pitch,this.config.maxPitch);xt||(this.config.minPitch-=2,this.config.maxPitch+=2)}}getSize(){this.updateMinMaxPitches();const xt=(this.config.maxPitch-this.config.minPitch)*this.config.noteHeight,At=this.noteSequence.totalTime;if(!At)throw new Error("The sequence you are using with the visualizer does not have a totalQuantizedSteps or totalTime field set, so the visualizer can't be horizontally sized correctly.");return{width:At*this.config.pixelsPerTimeStep,height:xt}}getNotePosition(xt,At){const qt=this.getNoteEndTime(xt)-this.getNoteStartTime(xt),Pt=this.getNoteStartTime(xt)*this.config.pixelsPerTimeStep,Zt=Math.max(this.config.pixelsPerTimeStep*qt-this.config.noteSpacing,1);return{x:Pt,y:this.height-(xt.pitch-this.config.minPitch)*this.config.noteHeight,w:Zt,h:this.config.noteHeight}}scrollIntoViewIfNeeded(xt,At){if(xt&&this.parentElement){const qt=this.parentElement.getBoundingClientRect().width;At>this.parentElement.scrollLeft+qt&&(this.parentElement.scrollLeft=At-20)}}getNoteStartTime(xt){return Math.round(1e8*xt.startTime)/1e8}getNoteEndTime(xt){return Math.round(1e8*xt.endTime)/1e8}isPaintingActiveNote(xt,At){const qt=this.getNoteStartTime(xt)===this.getNoteStartTime(At),Pt=this.getNoteStartTime(xt)<=this.getNoteStartTime(At)&&this.getNoteEndTime(xt)>=this.getNoteEndTime(At);return qt||Pt}}class tn extends Qt{constructor(xt,At,qt={}){super(xt,qt),this.ctx=At.getContext("2d"),this.parentElement=At.parentElement;const Pt=window.devicePixelRatio||1;this.ctx&&(this.ctx.canvas.width=Pt*this.width,this.ctx.canvas.height=Pt*this.height,At.style.width=this.width+"px",At.style.height=this.height+"px",this.ctx.scale(Pt,Pt)),this.redraw()}redraw(xt,At){let qt;this.clear();for(let Pt=0;Pt<this.noteSequence.notes.length;Pt++){const Zt=this.noteSequence.notes[Pt],nn=this.getNotePosition(Zt,Pt),dn=.2,wn=Zt.velocity?Zt.velocity/100+dn:1,kn=xt&&this.isPaintingActiveNote(Zt,xt),Pn=`rgba(${kn?this.config.activeNoteRGB:this.config.noteRGB},
  ${wn})`;this.redrawNote(nn.x,nn.y,nn.w,nn.h,Pn),kn&&Zt===xt&&(qt=nn.x)}return this.scrollIntoViewIfNeeded(At,qt),qt}clear(){this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height)}clearActiveNotes(){this.redraw()}redrawNote(xt,At,qt,Pt,Zt){this.ctx.fillStyle=Zt,this.ctx.fillRect(Math.round(xt),Math.round(At),Math.round(qt),Math.round(Pt))}}class sn extends tn{constructor(xt,At,qt={}){super(xt,At,qt),b.log("mm.Visualizer is deprecated, and will be removed in a future          version. Please use mm.PianoRollCanvasVisualizer instead","mm.Visualizer",5)}}class ln extends Qt{constructor(xt,At={}){super(xt,At),this.drawn=!1}redraw(xt,At){if(this.drawn||this.draw(),!xt)return null;let qt;this.unfillActiveRect(this.svg);for(let Pt=0;Pt<this.noteSequence.notes.length;Pt++){const Zt=this.noteSequence.notes[Pt];if(!(xt&&this.isPaintingActiveNote(Zt,xt)))continue;const nn=this.svg.querySelector(`rect[data-index="${Pt}"]`);this.fillActiveRect(nn,Zt),Zt===xt&&(qt=parseFloat(nn.getAttribute("x")))}return this.scrollIntoViewIfNeeded(At,qt),qt}fillActiveRect(xt,At){xt.setAttribute("fill",this.getNoteFillColor(At,!0)),xt.classList.add("active")}unfillActiveRect(xt){const At=xt.querySelectorAll("rect.active");for(let qt=0;qt<At.length;++qt){const Pt=At[qt],Zt=this.getNoteFillColor(this.noteSequence.notes[parseInt(Pt.getAttribute("data-index"),10)],!1);Pt.setAttribute("fill",Zt),Pt.classList.remove("active")}}draw(){for(let xt=0;xt<this.noteSequence.notes.length;xt++){const At=this.noteSequence.notes[xt],qt=this.getNotePosition(At,xt),Pt=this.getNoteFillColor(At,!1),Zt=[["index",xt],["instrument",At.instrument],["program",At.program],["isDrum",At.isDrum===!0],["pitch",At.pitch]],nn=[["--midi-velocity",String(At.velocity!==void 0?At.velocity:127)]];this.drawNote(qt.x,qt.y,qt.w,qt.h,Pt,Zt,nn)}this.drawn=!0}getNoteFillColor(xt,At){const qt=xt.velocity?xt.velocity/100+.2:1;return`rgba(${At?this.config.activeNoteRGB:this.config.noteRGB},
  ${qt})`}drawNote(xt,At,qt,Pt,Zt,nn,dn){if(!this.svg)return;const wn=document.createElementNS("http://www.w3.org/2000/svg","rect");wn.classList.add("note"),wn.setAttribute("fill",Zt),wn.setAttribute("x",""+Math.round(xt)),wn.setAttribute("y",""+Math.round(At)),wn.setAttribute("width",""+Math.round(qt)),wn.setAttribute("height",""+Math.round(Pt)),nn.forEach(([kn,Pn])=>{Pn!==void 0&&(wn.dataset[kn]=""+Pn)}),dn.forEach(([kn,Pn])=>{wn.style.setProperty(kn,Pn)}),this.svg.appendChild(wn)}clear(){this.svg.innerHTML="",this.drawn=!1}clearActiveNotes(){this.unfillActiveRect(this.svg)}}class an extends ln{constructor(xt,At,qt={}){if(super(xt,qt),!(At instanceof SVGSVGElement))throw new Error("This visualizer requires an <svg> element to display the visualization");this.svg=At,this.parentElement=At.parentElement;const Pt=this.getSize();this.width=Pt.width,this.height=Pt.height,this.svg.style.width=this.width+"px",this.svg.style.height=this.height+"px",this.clear(),this.draw()}}class Yt extends ln{constructor(xt,At,qt={}){if(super(xt,qt),this.NOTES_PER_OCTAVE=12,this.WHITE_NOTES_PER_OCTAVE=7,this.LOW_C=24,this.firstDrawnOctave=0,this.lastDrawnOctave=6,!(At instanceof HTMLDivElement))throw new Error("This visualizer requires a <div> element to display the visualization");this.config.whiteNoteWidth=qt.whiteNoteWidth||20,this.config.blackNoteWidth=qt.blackNoteWidth||2*this.config.whiteNoteWidth/3,this.config.whiteNoteHeight=qt.whiteNoteHeight||70,this.config.blackNoteHeight=qt.blackNoteHeight||140/3,this.config.showOnlyOctavesUsed=qt.showOnlyOctavesUsed,this.setupDOM(At);const Pt=this.getSize();this.width=Pt.width,this.height=Pt.height,this.svg.style.width=this.width+"px",this.svg.style.height=this.height+"px",this.svgPiano.style.width=this.width+"px",this.svgPiano.style.height=this.config.whiteNoteHeight+"px",this.parentElement.style.width=this.width+this.config.whiteNoteWidth+"px",this.parentElement.scrollTop=this.parentElement.scrollHeight,this.clear(),this.drawPiano(),this.draw()}setupDOM(xt){this.parentElement=document.createElement("div"),this.parentElement.classList.add("waterfall-notes-container");const At=Math.max(xt.getBoundingClientRect().height,200);this.parentElement.style.paddingTop=At-this.config.whiteNoteHeight+"px",this.parentElement.style.height=At-this.config.whiteNoteHeight+"px",this.parentElement.style.boxSizing="border-box",this.parentElement.style.overflowX="hidden",this.parentElement.style.overflowY="auto",this.svg=document.createElementNS("http://www.w3.org/2000/svg","svg"),this.svgPiano=document.createElementNS("http://www.w3.org/2000/svg","svg"),this.svg.classList.add("waterfall-notes"),this.svgPiano.classList.add("waterfall-piano"),this.parentElement.appendChild(this.svg),xt.innerHTML="",xt.appendChild(this.parentElement),xt.appendChild(this.svgPiano)}redraw(xt,At){if(this.drawn||this.draw(),!xt)return null;this.clearActiveNotes(),this.parentElement.style.paddingTop=this.parentElement.style.height;for(let qt=0;qt<this.noteSequence.notes.length;qt++){const Pt=this.noteSequence.notes[qt];if(!(xt&&this.isPaintingActiveNote(Pt,xt)))continue;const Zt=this.svg.querySelector(`rect[data-index="${qt}"]`);this.fillActiveRect(Zt,Pt);const nn=this.svgPiano.querySelector(`rect[data-pitch="${Pt.pitch}"]`);if(this.fillActiveRect(nn,Pt),Pt===xt){const dn=parseFloat(Zt.getAttribute("y")),wn=parseFloat(Zt.getAttribute("height"));return dn<this.parentElement.scrollTop-wn&&(this.parentElement.scrollTop=dn+wn),dn}}return null}getSize(){this.updateMinMaxPitches(!0);let xt=52;if(this.config.showOnlyOctavesUsed){let Pt=!1,Zt=!1;for(let nn=1;nn<7;nn++){const dn=this.LOW_C+this.NOTES_PER_OCTAVE*nn;!Pt&&dn>this.config.minPitch&&(this.firstDrawnOctave=nn-1,Pt=!0),!Zt&&dn>this.config.maxPitch&&(this.lastDrawnOctave=nn-1,Zt=!0)}xt=(this.lastDrawnOctave-this.firstDrawnOctave+1)*this.WHITE_NOTES_PER_OCTAVE}const At=xt*this.config.whiteNoteWidth,qt=this.noteSequence.totalTime;if(!qt)throw new Error("The sequence you are using with the visualizer does not have a totalQuantizedSteps or totalTime field set, so the visualizer can't be horizontally sized correctly.");return{width:At,height:Math.max(qt*this.config.pixelsPerTimeStep,1)}}getNotePosition(xt,At){const qt=this.svgPiano.querySelector(`rect[data-pitch="${xt.pitch}"]`);if(!qt)return null;const Pt=this.getNoteEndTime(xt)-this.getNoteStartTime(xt),Zt=Number(qt.getAttribute("x")),nn=Number(qt.getAttribute("width")),dn=Math.max(this.config.pixelsPerTimeStep*Pt-this.config.noteSpacing,1);return{x:Zt,y:this.height-this.getNoteStartTime(xt)*this.config.pixelsPerTimeStep-dn,w:nn,h:dn}}drawPiano(){this.svgPiano.innerHTML="";const xt=this.config.whiteNoteWidth-this.config.blackNoteWidth/2,At=[1,3,6,8,10];let qt=0,Pt=0;this.config.showOnlyOctavesUsed?Pt=this.firstDrawnOctave*this.NOTES_PER_OCTAVE+this.LOW_C:(Pt=this.LOW_C-3,this.drawWhiteKey(Pt,qt),this.drawWhiteKey(Pt+2,this.config.whiteNoteWidth),Pt+=3,qt=2*this.config.whiteNoteWidth);for(let Zt=this.firstDrawnOctave;Zt<=this.lastDrawnOctave;Zt++)for(let nn=0;nn<this.NOTES_PER_OCTAVE;nn++)At.indexOf(nn)===-1&&(this.drawWhiteKey(Pt,qt),qt+=this.config.whiteNoteWidth),Pt++;this.config.showOnlyOctavesUsed?(Pt=this.firstDrawnOctave*this.NOTES_PER_OCTAVE+this.LOW_C,qt=-this.config.whiteNoteWidth):(this.drawWhiteKey(Pt,qt),Pt=this.LOW_C-3,this.drawBlackKey(Pt+1,xt),Pt+=3,qt=this.config.whiteNoteWidth);for(let Zt=this.firstDrawnOctave;Zt<=this.lastDrawnOctave;Zt++)for(let nn=0;nn<this.NOTES_PER_OCTAVE;nn++)At.indexOf(nn)!==-1?this.drawBlackKey(Pt,qt+xt):qt+=this.config.whiteNoteWidth,Pt++}drawWhiteKey(xt,At){const qt=document.createElementNS("http://www.w3.org/2000/svg","rect");return qt.dataset.pitch=String(xt),qt.setAttribute("x",String(At)),qt.setAttribute("y","0"),qt.setAttribute("width",String(this.config.whiteNoteWidth)),qt.setAttribute("height",String(this.config.whiteNoteHeight)),qt.setAttribute("fill","white"),qt.setAttribute("original-fill","white"),qt.setAttribute("stroke","black"),qt.setAttribute("stroke-width","3px"),qt.classList.add("white"),this.svgPiano.appendChild(qt),qt}drawBlackKey(xt,At){const qt=document.createElementNS("http://www.w3.org/2000/svg","rect");return qt.dataset.pitch=String(xt),qt.setAttribute("x",String(At)),qt.setAttribute("y","0"),qt.setAttribute("width",String(this.config.blackNoteWidth)),qt.setAttribute("height",String(this.config.blackNoteHeight)),qt.setAttribute("fill","black"),qt.setAttribute("original-fill","black"),qt.setAttribute("stroke","black"),qt.setAttribute("stroke-width","3px"),qt.classList.add("black"),this.svgPiano.appendChild(qt),qt}clearActiveNotes(){super.unfillActiveRect(this.svg);const xt=this.svgPiano.querySelectorAll("rect.active");for(let At=0;At<xt.length;++At){const qt=xt[At];qt.setAttribute("fill",qt.getAttribute("original-fill")),qt.classList.remove("active")}}}var cn;(function(wt){wt[wt.PAGE=0]="PAGE",wt[wt.NOTE=1]="NOTE",wt[wt.BAR=2]="BAR"})(cn||(cn={}));class Wt extends Qt{constructor(xt,At,qt={}){super(xt,qt),(qt.pixelsPerTimeStep===void 0||qt.pixelsPerTimeStep<=0)&&(this.config.pixelsPerTimeStep=0),this.instruments=qt.instruments||[],this.render=new Ut.StaffSVGRender(this.getScoreInfo(xt),{noteHeight:this.config.noteHeight,noteSpacing:this.config.noteSpacing,pixelsPerTimeStep:this.config.pixelsPerTimeStep,noteRGB:this.config.noteRGB,activeNoteRGB:this.config.activeNoteRGB,defaultKey:qt.defaultKey||0,scrollType:qt.scrollType||cn.PAGE},At),this.drawnNotes=xt.notes.length,this.clear(),this.redraw()}clear(){this.render.clear()}redraw(xt,At){this.drawnNotes!==this.noteSequence.notes.length&&(this.render.scoreInfo=this.getScoreInfo(this.noteSequence));const qt=xt?this.getNoteInfo(xt):void 0;return this.render.redraw(qt,At)}isNoteInInstruments(xt){return xt.instrument===void 0||this.instruments.length===0||this.instruments.indexOf(xt.instrument)>=0}timeToQuarters(xt){const At=xt*this.noteSequence.tempos[0].qpm/60;return Math.round(16*At)/16}getNoteInfo(xt){const At=this.timeToQuarters(xt.startTime);return{start:At,length:this.timeToQuarters(xt.endTime)-At,pitch:xt.pitch,intensity:xt.velocity}}getScoreInfo(xt){const At=[];return xt.notes.forEach(qt=>{this.isNoteInInstruments(qt)&&At.push(this.getNoteInfo(qt))}),{notes:At,tempos:xt.tempos?xt.tempos.map(qt=>({start:this.timeToQuarters(qt.time),qpm:qt.qpm})):[],keySignatures:xt.keySignatures?xt.keySignatures.map(qt=>({start:this.timeToQuarters(qt.time),key:qt.key})):[],timeSignatures:xt.timeSignatures?xt.timeSignatures.map(qt=>({start:this.timeToQuarters(qt.time),numerator:qt.numerator,denominator:qt.denominator})):[]}}clearActiveNotes(){this.redraw()}}},function(i,s,o){var a=o(86),c=o(91),d=o(45),g=o(92)({args:["array","array","scalar","scalar","scalar"],body:function(b,$,_,_e,et){}});i.exports=function(b,$,_,_e){_===void 0&&(_=-1/0),_e===void 0&&(_e=1/0);var et=$.shape,rt=b.shape;if($.shape.length!==b.shape.length)throw new Error("ndarray-resample: input and output arrays should have the same dimensions");var tt,j=et.map(function(){return 0});if(b.size===1)return(tt=d.sum($)/$.size)<_&&(tt=_),tt>_e&&(tt=_e),void b.set.apply(b,j.concat(tt));if($.size===1)return(tt=$.get.apply($,j))<_&&(tt=_),tt>_e&&(tt=_e),void d.assigns(b,tt);for(var nt=et.length,st=new Array(nt),ot=!1,ut=0;ut<nt;ut++)st[ut]=Math.min(rt[ut],et[ut]),rt[ut]>et[ut]&&(ot=!0);var ht=c.malloc(et),pt=c.malloc(et);d.assign(ht,$),d.assigns(pt,0),a(1,ht,pt);var it=ht.lo,yt=ht.hi,ft=c.malloc(rt),bt=c.malloc(rt);ot&&(d.assigns(ft,0),d.assigns(bt,0));var Tt=new Array(nt),Ct=new Array(nt),_t=new Array(nt),Ot=new Array(nt);for(ut=0;ut<1<<nt;++ut){for(var kt=0;kt<nt;++kt)if(ut&1<<kt){if(Tt[kt]=st[kt]-(st[kt]+1>>>1),Tt[kt]===0)continue;Ct[kt]=rt[kt]-Tt[kt],_t[kt]=et[kt]-Tt[kt],Ot[kt]=1&st[kt]?0:1}else Tt[kt]=st[kt]+1>>>1,Ct[kt]=0,_t[kt]=0,Ot[kt]=0;d.assign(yt.apply(it.apply(ft,Ct),Tt),yt.apply(it.apply(ht,_t),Tt)),d.assign(it.apply(yt.apply(it.apply(bt,Ct),Tt),Ot),it.apply(yt.apply(it.apply(pt,_t),Tt),Ot)),d.assigns(yt.apply(yt.apply(it.apply(bt,Ct),Tt),Ot),0)}a(-1,ft,bt),g(b,ft,b.size/$.size,_,_e),c.free(ht),c.free(pt),c.free(ft),c.free(bt)}},function(i,s,o){s.byteLength=function(et){var rt=_(et),tt=rt[0],j=rt[1];return 3*(tt+j)/4-j},s.toByteArray=function(et){var rt,tt,j=_(et),nt=j[0],st=j[1],ot=new d(function(pt,it,yt){return 3*(it+yt)/4-yt}(0,nt,st)),ut=0,ht=st>0?nt-4:nt;for(tt=0;tt<ht;tt+=4)rt=c[et.charCodeAt(tt)]<<18|c[et.charCodeAt(tt+1)]<<12|c[et.charCodeAt(tt+2)]<<6|c[et.charCodeAt(tt+3)],ot[ut++]=rt>>16&255,ot[ut++]=rt>>8&255,ot[ut++]=255&rt;return st===2&&(rt=c[et.charCodeAt(tt)]<<2|c[et.charCodeAt(tt+1)]>>4,ot[ut++]=255&rt),st===1&&(rt=c[et.charCodeAt(tt)]<<10|c[et.charCodeAt(tt+1)]<<4|c[et.charCodeAt(tt+2)]>>2,ot[ut++]=rt>>8&255,ot[ut++]=255&rt),ot},s.fromByteArray=function(et){for(var rt,tt=et.length,j=tt%3,nt=[],st=0,ot=tt-j;st<ot;st+=16383)nt.push(_e(et,st,st+16383>ot?ot:st+16383));return j===1?(rt=et[tt-1],nt.push(a[rt>>2]+a[rt<<4&63]+"==")):j===2&&(rt=(et[tt-2]<<8)+et[tt-1],nt.push(a[rt>>10]+a[rt>>4&63]+a[rt<<2&63]+"=")),nt.join("")};for(var a=[],c=[],d=typeof Uint8Array<"u"?Uint8Array:Array,g="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",b=0,$=g.length;b<$;++b)a[b]=g[b],c[g.charCodeAt(b)]=b;function _(et){var rt=et.length;if(rt%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var tt=et.indexOf("=");return tt===-1&&(tt=rt),[tt,tt===rt?0:4-tt%4]}function _e(et,rt,tt){for(var j,nt,st=[],ot=rt;ot<tt;ot+=3)j=(et[ot]<<16&16711680)+(et[ot+1]<<8&65280)+(255&et[ot+2]),st.push(a[(nt=j)>>18&63]+a[nt>>12&63]+a[nt>>6&63]+a[63&nt]);return st.join("")}c["-".charCodeAt(0)]=62,c["_".charCodeAt(0)]=63},function(i,s){/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */s.read=function(o,a,c,d,g){var b,$,_=8*g-d-1,_e=(1<<_)-1,et=_e>>1,rt=-7,tt=c?g-1:0,j=c?-1:1,nt=o[a+tt];for(tt+=j,b=nt&(1<<-rt)-1,nt>>=-rt,rt+=_;rt>0;b=256*b+o[a+tt],tt+=j,rt-=8);for($=b&(1<<-rt)-1,b>>=-rt,rt+=d;rt>0;$=256*$+o[a+tt],tt+=j,rt-=8);if(b===0)b=1-et;else{if(b===_e)return $?NaN:1/0*(nt?-1:1);$+=Math.pow(2,d),b-=et}return(nt?-1:1)*$*Math.pow(2,b-d)},s.write=function(o,a,c,d,g,b){var $,_,_e,et=8*b-g-1,rt=(1<<et)-1,tt=rt>>1,j=g===23?Math.pow(2,-24)-Math.pow(2,-77):0,nt=d?0:b-1,st=d?1:-1,ot=a<0||a===0&&1/a<0?1:0;for(a=Math.abs(a),isNaN(a)||a===1/0?(_=isNaN(a)?1:0,$=rt):($=Math.floor(Math.log(a)/Math.LN2),a*(_e=Math.pow(2,-$))<1&&($--,_e*=2),(a+=$+tt>=1?j/_e:j*Math.pow(2,1-tt))*_e>=2&&($++,_e/=2),$+tt>=rt?(_=0,$=rt):$+tt>=1?(_=(a*_e-1)*Math.pow(2,g),$+=tt):(_=a*Math.pow(2,tt-1)*Math.pow(2,g),$=0));g>=8;o[c+nt]=255&_,nt+=st,_/=256,g-=8);for($=$<<g|_,et+=g;et>0;o[c+nt]=255&$,nt+=st,$/=256,et-=8);o[c+nt-st]|=128*ot}},function(i,s){var o={}.toString;i.exports=Array.isArray||function(a){return o.call(a)=="[object Array]"}},function(i,s,o){(function(a){o.d(s,"a",function(){return d});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c=typeof requestAnimationFrame<"u"?requestAnimationFrame:a!==void 0?a:g=>g();function d(){return new Promise(g=>c(()=>g()))}}).call(this,o(170).setImmediate)},function(i,s,o){s.parseMidi=o(172),s.writeMidi=o(173)},function(i,s,o){function a(c,d,g){g===void 0&&(g="ticks");var b=0,$=c.length,_=$;if($>0&&c[$-1][g]<=d)return $-1;for(;b<_;){var _e=Math.floor(b+(_-b)/2),et=c[_e],rt=c[_e+1];if(et[g]===d){for(var tt=_e;tt<c.length;tt++)c[tt][g]===d&&(_e=tt);return _e}if(et[g]<d&&rt[g]>d)return _e;et[g]>d?_=_e:et[g]<d&&(b=_e+1)}return-1}Object.defineProperty(s,"__esModule",{value:!0}),s.search=a,s.insert=function(c,d,g){if(g===void 0&&(g="ticks"),c.length){var b=a(c,d[g],g);c.splice(b+1,0,d)}else c.push(d)}},function(i,s,o){Object.defineProperty(s,"__esModule",{value:!0});var a=o(80),c=o(82),d=o(176),g=o(177),b=o(178),$=o(180),_=new WeakMap,_e=function(){function et(rt,tt){var j=this;if(this.name="",this.notes=[],this.controlChanges=d.createControlChanges(),this.pitchBends=[],_.set(this,tt),rt){var nt=rt.find(function(pt){return pt.type==="trackName"});this.name=nt?nt.text:""}if(this.instrument=new b.Instrument(rt,this),this.channel=0,rt){for(var st=rt.filter(function(pt){return pt.type==="noteOn"}),ot=rt.filter(function(pt){return pt.type==="noteOff"}),ut=function(){var pt=st.shift();ht.channel=pt.channel;var it=ot.findIndex(function(ft){return ft.noteNumber===pt.noteNumber&&ft.absoluteTime>=pt.absoluteTime});if(it!==-1){var yt=ot.splice(it,1)[0];ht.addNote({durationTicks:yt.absoluteTime-pt.absoluteTime,midi:pt.noteNumber,noteOffVelocity:yt.velocity/127,ticks:pt.absoluteTime,velocity:pt.velocity/127})}},ht=this;st.length;)ut();rt.filter(function(pt){return pt.type==="controller"}).forEach(function(pt){j.addCC({number:pt.controllerType,ticks:pt.absoluteTime,value:pt.value/127})}),rt.filter(function(pt){return pt.type==="pitchBend"}).forEach(function(pt){j.addPitchBend({ticks:pt.absoluteTime,value:pt.value/Math.pow(2,13)})})}}return et.prototype.addNote=function(rt){var tt=_.get(this),j=new $.Note({midi:0,ticks:0,velocity:1},{ticks:0,velocity:0},tt);return Object.assign(j,rt),a.insert(this.notes,j,"ticks"),this},et.prototype.addCC=function(rt){var tt=_.get(this),j=new c.ControlChange({controllerType:rt.number},tt);return delete rt.number,Object.assign(j,rt),Array.isArray(this.controlChanges[j.number])||(this.controlChanges[j.number]=[]),a.insert(this.controlChanges[j.number],j,"ticks"),this},et.prototype.addPitchBend=function(rt){var tt=_.get(this),j=new g.PitchBend({},tt);return Object.assign(j,rt),a.insert(this.pitchBends,j,"ticks"),this},Object.defineProperty(et.prototype,"duration",{get:function(){if(!this.notes.length)return 0;for(var rt=this.notes[this.notes.length-1].time+this.notes[this.notes.length-1].duration,tt=0;tt<this.notes.length-1;tt++){var j=this.notes[tt].time+this.notes[tt].duration;rt<j&&(rt=j)}return rt},enumerable:!0,configurable:!0}),Object.defineProperty(et.prototype,"durationTicks",{get:function(){if(!this.notes.length)return 0;for(var rt=this.notes[this.notes.length-1].ticks+this.notes[this.notes.length-1].durationTicks,tt=0;tt<this.notes.length-1;tt++){var j=this.notes[tt].ticks+this.notes[tt].durationTicks;rt<j&&(rt=j)}return rt},enumerable:!0,configurable:!0}),et.prototype.fromJSON=function(rt){var tt=this;for(var j in this.name=rt.name,this.channel=rt.channel,this.instrument=new b.Instrument(void 0,this),this.instrument.fromJSON(rt.instrument),rt.controlChanges)rt.controlChanges[j]&&rt.controlChanges[j].forEach(function(nt){tt.addCC({number:nt.number,ticks:nt.ticks,value:nt.value})});rt.notes.forEach(function(nt){tt.addNote({durationTicks:nt.durationTicks,midi:nt.midi,ticks:nt.ticks,velocity:nt.velocity})})},et.prototype.toJSON=function(){for(var rt={},tt=0;tt<127;tt++)this.controlChanges.hasOwnProperty(tt)&&(rt[tt]=this.controlChanges[tt].map(function(j){return j.toJSON()}));return{channel:this.channel,controlChanges:rt,pitchBends:this.pitchBends.map(function(j){return j.toJSON()}),instrument:this.instrument.toJSON(),name:this.name,notes:this.notes.map(function(j){return j.toJSON()})}},et}();s.Track=_e},function(i,s,o){Object.defineProperty(s,"__esModule",{value:!0}),s.controlChangeNames={1:"modulationWheel",2:"breath",4:"footController",5:"portamentoTime",7:"volume",8:"balance",10:"pan",64:"sustain",65:"portamentoTime",66:"sostenuto",67:"softPedal",68:"legatoFootswitch",84:"portamentoControl"},s.controlChangeIds=Object.keys(s.controlChangeNames).reduce(function(g,b){return g[s.controlChangeNames[b]]=b,g},{});var a=new WeakMap,c=new WeakMap,d=function(){function g(b,$){a.set(this,$),c.set(this,b.controllerType),this.ticks=b.absoluteTime,this.value=b.value}return Object.defineProperty(g.prototype,"number",{get:function(){return c.get(this)},enumerable:!0,configurable:!0}),Object.defineProperty(g.prototype,"name",{get:function(){return s.controlChangeNames[this.number]?s.controlChangeNames[this.number]:null},enumerable:!0,configurable:!0}),Object.defineProperty(g.prototype,"time",{get:function(){return a.get(this).ticksToSeconds(this.ticks)},set:function(b){var $=a.get(this);this.ticks=$.secondsToTicks(b)},enumerable:!0,configurable:!0}),g.prototype.toJSON=function(){return{number:this.number,ticks:this.ticks,time:this.time,value:this.value}},g}();s.ControlChange=d},function(i,s,o){i.exports=function(a){var c={};function d(g){if(c[g])return c[g].exports;var b=c[g]={i:g,l:!1,exports:{}};return a[g].call(b.exports,b,b.exports,d),b.l=!0,b.exports}return d.m=a,d.c=c,d.d=function(g,b,$){d.o(g,b)||Object.defineProperty(g,b,{enumerable:!0,get:$})},d.r=function(g){typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(g,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(g,"__esModule",{value:!0})},d.t=function(g,b){if(1&b&&(g=d(g)),8&b||4&b&&typeof g=="object"&&g&&g.__esModule)return g;var $=Object.create(null);if(d.r($),Object.defineProperty($,"default",{enumerable:!0,value:g}),2&b&&typeof g!="string")for(var _ in g)d.d($,_,function(_e){return g[_e]}.bind(null,_));return $},d.n=function(g){var b=g&&g.__esModule?function(){return g.default}:function(){return g};return d.d(b,"a",b),b},d.o=function(g,b){return Object.prototype.hasOwnProperty.call(g,b)},d.p="",d(d.s=4)}([function(a,c,d){d.r(c),d.d(c,"SVGNS",function(){return g}),d.d(c,"drawSVGPath",function(){return b}),d.d(c,"drawSVGText",function(){return $}),d.d(c,"createSVGGroupChild",function(){return _}),d.d(c,"setFade",function(){return _e});const g="http://www.w3.org/2000/svg";function b(et,rt,tt,j,nt,st,ot=1){const ut=document.createElementNS(g,"path");return ut.setAttributeNS(null,"d",rt),ut.setAttributeNS(null,"transform",`translate(${tt}, ${j}) scale(${nt}, ${st})`),ut.setAttributeNS(null,"opacity",""+ot),et.appendChild(ut),ut}function $(et,rt,tt,j,nt,st=!1,ot=1,ut=1){const ht=document.createElementNS(g,"text");ht.setAttributeNS(null,"font-family","Times"),ht.setAttributeNS(null,"font-size",nt),st&&ht.setAttributeNS(null,"font-weight","bold"),ht.setAttributeNS(null,"transform",`translate(${tt}, ${j}) scale(${ot}, ${ut})`);const pt=document.createTextNode(rt);return ht.appendChild(pt),et.appendChild(ht),ht}function _(et,rt){const tt=document.createElementNS(g,"g");return tt.setAttribute("data-id",rt),et.appendChild(tt),tt}function _e(et,rt=!1,tt=1,j=0){let nt=et.querySelector("animate");if(!nt){(nt=document.createElementNS(g,"animate")).setAttributeNS(null,"attributeName","opacity"),nt.setAttributeNS(null,"dur","4s"),nt.setAttributeNS(null,"fill","freeze"),nt.setAttributeNS(null,"keyTimes","0; 0.25; 0.5; 0.75; 1");const st=(tt+3*j)/4;nt.setAttributeNS(null,"values",`${tt}; ${st}; ${j}; ${st}; ${tt}`)}return rt?nt.setAttributeNS(null,"repeatCount","indefinite"):nt.setAttributeNS(null,"repeatCount","1"),et.appendChild(nt),et}},function(a,c,d){d.r(c),d.d(c,"PATH_SCALE",function(){return g}),d.d(c,"staffLinePath",function(){return $}),d.d(c,"extraLinePath",function(){return _}),d.d(c,"barPath",function(){return _e}),d.d(c,"stemPath",function(){return et}),d.d(c,"singleFlagPath",function(){return rt}),d.d(c,"multiFlagPath",function(){return tt}),d.d(c,"tiePath",function(){return j}),d.d(c,"dotPath",function(){return nt}),d.d(c,"NOTE_PATHS",function(){return st}),d.d(c,"REST_PATHS",function(){return ot}),d.d(c,"CLEF_PATHS",function(){return ut}),d.d(c,"ACCIDENTAL_PATHS",function(){return ht});const g=100,b=`M 0,10 C 0,-15 35,-50 80,-50 110,-50 125,-35 125,-10 
125,15 90,50 45,50 15,50 0,35 0,10 Z`,$="m 0,0 h 100",_="m -25,0 h 175",_e="m 0,-200 v 400",et="m 0,0 v 100 h 15 v -100 z",rt=`M0,0 h 12 c 7,100 175,156 62,314 79,-177 -49,
-193 -61,-200 l -13,-5 z`,tt=`m 0,0 h 10 c 6,72 173,64 84,227 44,-120 -44,
-123 -94,-167 z`,j=`M 0,25 C 10,46 30,67 50,67 69,67 90,47 100,25 94,
65 73,89 50,89 26,89 5,63 0,25 Z`,nt="M 5 -20 a 20 20 0 1 0 0.00001 0 z",st={4:{path:`m 0,0 c 0,-37 49,-51 79,-51 31,0 83,13 83,51 0,39 
-55,51 -84,51 C 49,51 0,37 0,0 Z m 111,31 c 13,-19 0,-58 -22,-68 -33,-15 
-53,10 -39,49 9,27 48,39 61,19 z`,width:150,stemVSteps:0,stemAnchor:0,flags:0},2:{path:`m 0,10 c 0,-25 35,-60 80,-60 15,0 45,4 45,40 C 125,16 
89,50 45,50 17,50 0,36 0,10 Z m 71,7 c 17,-11 45,-34 38,-45 -7,-10 -39,1 
-57,12 -19,11 -42,31 -36,42 6,10 37,2 55,-9 z`,width:125,stemVSteps:7,stemAnchor:-10,flags:0},1:{path:b,width:125,stemVSteps:7,stemAnchor:-10,flags:0},.5:{path:b,width:125,stemVSteps:7,stemAnchor:-10,flags:1},.25:{path:b,width:125,stemVSteps:9,stemAnchor:-10,flags:2},.125:{path:b,width:125,stemVSteps:11,stemAnchor:-10,flags:3},.0625:{path:b,width:125,stemVSteps:13,stemAnchor:-10,flags:4}},ot={4:"m 0,-50 h 125 v -50 H 0 Z",2:"M 0,0 H 125 V -50 H 0 Z",1:`m 0,-25 c 39,-39 37,-75 8,-120 l 6,-5 61,103 C 
40,-13 31,4 73,71 l -5,5 C 14,52 16,125 67,144 l -4,6 C -37,102 -1,22 59,60 Z`,.5:`m 52,-47 c 26,-2 42,-21 48,-42 l 12,4 L 64,83 52,79 
88,-49 c 0,0 -17,22 -57,22 -16,0 -31,-13 -31,-27 0,-18 10,-31 27,-31 17,0 
33,15 25,38 z`,.25:`m 129,-191 c -6,21 -22,40 -48,42 8,-23 -8,-38 
-25,-38 -17,0 -27,13 -27,31 0,14 15,27 31,27 40,0 57,-22 57,-22 l -20,69 
c -7,18 -22,33 -45,35 8,-23 -8,-38 -25,-38 -17,0 -27,13 -27,31 0,14 15,27 
31,27 40,0 57,-22 57,-22 l -36,128 12,4 77,-270 z`,.125:`m 129,-191 c -6,21 -22,40 -48,42 8,-23 -8,-38 
-25,-38 -17,0 -27,13 -27,31 0,14 15,27 31,27 40,0 57,-22 57,-22 l -20,69 
c -7,18 -22,33 -45,35 8,-23 -8,-38 -25,-38 -17,0 -27,13 -27,31 0,14 15,27 
31,27 40,0 57,-22 57,-22 L 68,20 C 61,37 46,51 24,52 32,29 16,14 -1,14 c 
-17,0 -27,13 -27,31 0,14 15,27 31,27 38,0 55,-20 57,-22 l -36,128 12,4 
105,-369 z`,.0625:`m 158,-292 c -6,21 -22,40 -48,42 8,-23 -8,-38 
-25,-38 -17,0 -27,13 -27,31 0,14 15,27 31,27 40,0 57,-22 57,-22 l -17,61 
v 0 c -6,21 -22,40 -48,42 8,-23 -8,-38 -25,-38 -17,0 -27,13 -27,31 0,14 
15,27 31,27 40,0 57,-22 57,-22 l -20,69 c -7,18 -22,33 -45,35 8,-23 -8,-38 
-25,-38 -17,0 -27,13 -27,31 0,14 15,27 31,27 40,0 57,-22 57,-22 L 68,20 C 
61,37 46,51 24,52 32,29 16,14 -1,14 c -17,0 -27,13 -27,31 0,14 15,27 31,27 
38,0 55,-20 57,-22 l -36,128 12,4 134,-469 z`},ut={50:{path:`m 101,-199 c -49,0 -100,28 -100,83 0,39 58,57 82,26 15,-20 
-4,-47 -32,-47 -23,1 -25,0 -25,-8 0,-22 40,-46 71,-41 91,16 67,208 -105,302 
75,-27 198,-94 211,-201 6,-66 -42,-114 -102,-114 z m 143,33 c -13,0 -23,11 
-23,24 0,14 10,24 23,24 13,0 23,-11 23,-24 0,-13 -10,-24 -23,-24 z m 2,83 c 
-13,0 -23,11 -23,24 0,14 10,24 23,24 13,0 23,-11 23,-24 0,-13 -10,-24 -23,-24 
z`,upper:-4,lower:3},71:{path:`M 139,48 C 102,57 76,120 131,151 41,128 64,24 129,2 L 
117,-57 C -32,47 26,217 166,182 Z m 12,-1 27,131 C 242,153 216,46 151,47 
Z m -35,-177 c 34,-23 82,-117 50,-140 -23,-17 -71,33 -50,140 z m -10,10 c 
-23,-77 -20,-200 48,-213 19,-4 89,171 -26,266 l 13,66 c 120,-6 137,155 
39,191 l 12,58 c 30,131 -137,145 -138,47 0,-29 37,-59 63,-37 21,18 25,71 
-25,70 32,42 103,0 91,-65 L 167,193 C 56,232 -112,63 106,-120 Z`,upper:-7,lower:8}},ht=[null,`m -49,-121 v 52 l -29,9 v -48 h -8 v 51 l -20,6 v 29 l 
20,-6 v 70 l -20,6 v 30 l 20,-6 v 51 h 8 V 69 l 30,-8 v 50 h 8 V 58 l 20,-6 
V 23 l -20,6 v -71 l 20,-6 v -29 l -20,6 v -50 z m 1,82 v 71 l -29,9 v -71 z`,`M -106,-166 V 67 c 52,-42 85,-56 85,-94 0,-47 -46,-51 
-73,-22 v -117 z m 31,120 c 20,0 42,46 -20,91 V -7 c 0,-28 10,-39 20,-39 z`,`m -81,-58 v -48 H -92 V 73 l 60,-13 v 50 h 11 V -72 Z m 
50,24 v 58 l -50,11 v -58 z`]},function(a,c,d){d.r(c),d.d(c,"MIN_RESOLUTION",function(){return g}),d.d(c,"STEM_WIDTH",function(){return b}),d.d(c,"LINE_STROKE",function(){return $}),d.d(c,"COMPACT_SPACING",function(){return _});const g=.0625,b=15,$=1,_=150},function(a,c,d){d.r(c),d.d(c,"MAX_QUARTER_DIVISION",function(){return et}),d.d(c,"ScrollType",function(){return rt}),d.d(c,"StaffSVGRender",function(){return tt});var g=d(2),b=d(0),$=d(1);const _=[{steps:[0,0,-1,-1,-2,-3,-3,-4,-4,-5,-5,-6],accidental:[0,1,0,1,0,0,1,0,1,0,1,0]},{steps:[0,-1,-1,-2,-2,-3,-4,-4,-5,-5,-6,-6],accidental:[0,0,3,0,3,0,0,3,0,3,0,3]},{steps:[0,0,-1,-1,-2,-3,-3,-4,-4,-5,-5,-6],accidental:[3,0,0,1,0,3,0,0,1,0,1,0]},{steps:[0,-1,-1,-2,-2,-3,-4,-4,-5,-5,-6,-6],accidental:[0,2,0,0,3,0,2,0,0,3,0,3]},{steps:[0,0,-1,-1,-2,-3,-3,-4,-4,-5,-5,-6],accidental:[3,0,3,0,0,3,0,3,0,0,1,0]},{steps:[0,-1,-1,-2,-2,-3,-4,-4,-5,-5,-6,-6],accidental:[0,2,0,2,0,0,2,0,2,0,0,3]},{steps:[0,-1,-1,-2,-2,-3,-4,-4,-5,-5,-6,-7],accidental:[3,0,3,0,3,0,0,3,0,3,0,0]},{steps:[0,0,-1,-1,-2,-3,-3,-4,-4,-5,-5,-6],accidental:[0,1,0,1,0,3,0,0,1,0,1,0]},{steps:[0,-1,-1,-2,-2,-3,-4,-4,-5,-5,-6,-6],accidental:[0,0,3,0,3,0,2,0,0,3,0,3]},{steps:[0,0,-1,-1,-2,-3,-3,-4,-4,-5,-5,-6],accidental:[3,0,0,1,0,3,0,3,0,0,1,0]},{steps:[0,-1,-1,-2,-2,-3,-4,-4,-5,-5,-6,-6],accidental:[0,2,0,0,3,0,2,0,2,0,0,3]},{steps:[0,0,-1,-1,-2,-3,-3,-4,-4,-5,-5,-6],accidental:[3,0,3,0,0,3,0,3,0,3,0,0]}],_e=[{accidental:1,pitches:[]},{accidental:2,pitches:[70,75,68,73,66]},{accidental:1,pitches:[78,73]},{accidental:2,pitches:[70,75,68]},{accidental:1,pitches:[78,73,80,75]},{accidental:2,pitches:[70]},{accidental:2,pitches:[70,75,68,73,66,71]},{accidental:1,pitches:[78]},{accidental:2,pitches:[70,75,68,73]},{accidental:1,pitches:[78,73,80]},{accidental:2,pitches:[70,75]},{accidental:1,pitches:[78,73,80,75,70]}],et=16;var rt;(function(j){j[j.PAGE=0]="PAGE",j[j.NOTE=1]="NOTE",j[j.BAR=2]="BAR"})(rt||(rt={}));class tt{constructor(nt,st,ot){this.handleScrollEvent=ut=>{this.lastKnownScrollLeft=this.parentElement.scrollLeft,this.ticking||window.requestAnimationFrame(()=>{this.changeAndDrawSignaturesIfNeeded(this.lastKnownScrollLeft),this.ticking=!1}),this.ticking=!0},this.scoreInfo=nt,this.config={noteHeight:st.noteHeight||6,noteSpacing:st.noteSpacing||1,pixelsPerTimeStep:st.pixelsPerTimeStep||30,noteRGB:st.noteRGB||"8, 41, 64",activeNoteRGB:st.activeNoteRGB||"240, 84, 119"},this.div=ot,this.timeSignatureNumerator=4,this.timeSignatureDenominator=4,this.key=st.defaultKey||0,this.scrollType=st.scrollType||rt.PAGE,this.scale=this.config.noteHeight/$.PATH_SCALE,(st.pixelsPerTimeStep===void 0||st.pixelsPerTimeStep<=0)&&(this.config.pixelsPerTimeStep=0,this.config.noteSpacing=g.COMPACT_SPACING*this.scale),this.clear(),this.redraw()}clear(){for(;this.div.lastChild;)this.div.removeChild(this.div.lastChild);this.div.style.overflow="visible",this.div.style.position="relative",this.overlaySVG=document.createElementNS(b.SVGNS,"svg"),this.overlaySVG.style.position="absolute",this.div.appendChild(this.overlaySVG),this.overlayG=Object(b.createSVGGroupChild)(this.overlaySVG,"overlay"),this.signaturesBlinking=!1,this.signaturesQuarters=0,this.parentElement=document.createElement("div"),this.parentElement.style.overflow="auto",this.div.appendChild(this.parentElement),this.ticking=!1,this.lastKnownScrollLeft=0,this.parentElement.addEventListener("scroll",this.handleScrollEvent),this.staffSVG=document.createElementNS(b.SVGNS,"svg"),this.parentElement.appendChild(this.staffSVG),this.staffG=Object(b.createSVGGroupChild)(this.staffSVG,"staff"),this.linesG=Object(b.createSVGGroupChild)(this.staffSVG,"lines"),this.setStroke(this.linesG),this.staffG.appendChild(this.linesG),this.musicG=Object(b.createSVGGroupChild)(this.staffSVG,"music"),this.setFill(this.musicG),this.setStroke(this.musicG,0),this.staffG.appendChild(this.musicG),this.signaturesG=Object(b.createSVGGroupChild)(this.staffSVG,"signatures"),this.staffG.appendChild(this.signaturesG);let nt=0,st=0;this.scoreInfo.notes.forEach(ut=>{nt+=ut.pitch,++st});const ot=nt/st;this.clef=ot<60?50:71,this.signaturesList=[{x:0,q:0}],this.signatureCurrent=0,this.signatureNext=0,this.changeKeySignatureIfNeeded(0),this.changeTimeSignatureIfNeeded(0),this.vStepSize=this.config.noteHeight/2,this.hStepSize=this.config.pixelsPerTimeStep,this.staffOffset=0,this.height=0,this.width=0,this.musicBlockMap=new Map,this.playingNotes=[],this.lastBar=0,this.barAccidentals={},this.lastQ=-1}isPaintingActiveNote(nt,st){const ot=nt.start===st.start,ut=nt.start<=st.start&&nt.start+nt.length>=st.start+st.length;return ot||ut}redraw(nt,st){let ot=-1;const ut=this.config.pixelsPerTimeStep===0;if(nt){const ht=[];this.playingNotes.forEach(it=>{this.isPaintingActiveNote(it,nt)?ht.push(it):this.highlightElement(this.getGroup(it),!1)}),this.playingNotes=ht;const pt=this.getGroup(nt);if(pt){this.playingNotes.push(nt),this.highlightElement(pt,!0),ot=pt.getBoundingClientRect().left-this.staffSVG.getBoundingClientRect().left;const it=nt.start,yt=pt.getAttribute("data-is-bar-beginning");(this.scrollType!==rt.BAR||yt)&&this.scrollIntoViewIfNeeded(st,ot),!ut&&this.signaturesBlinking&&it>=this.signaturesQuarters&&(this.signaturesBlinking=!1,Object(b.setFade)(this.overlayG,this.signaturesBlinking))}}else{this.setDetails();const ht=this.lastQ===-1;let pt=0,it=0;ht?(it=this.drawSignatures(this.overlayG,pt,!0,!0,!0),ut&&(this.width=0,it+=this.config.noteSpacing),it+=this.drawRests(this.initialRest,pt+it)):pt=this.width,this.musicBlockMap.forEach((bt,Tt)=>{ut||(pt=this.quartersToTime(Tt)*this.hStepSize),Tt>this.lastQ?(it+=this.drawMusicBlock(bt,pt+it),this.lastQ=Tt):Tt===this.lastQ&&(it+=this.drawRests(bt,pt+it))});const yt=this.staffSVG.getBoundingClientRect(),ft=this.musicG.getBoundingClientRect();if(this.updateVerticalBoundaries(ft.top-yt.top,ft.bottom-yt.top),ut)this.width+=it;else{const bt=this.musicBlockMap.get(this.lastQ),Tt=this.quartersToTime(this.lastQ+bt.notes[0].length);this.width=Tt*this.config.pixelsPerTimeStep}this.staffSVG.setAttributeNS(null,"width",""+this.width),this.redrawStaff(this.linesG,0,this.width)}return ot}drawMusicBlock(nt,st){const ot=nt.notes[0].start;let ut=this.drawBarIfNeeded(ot,st);ut+=this.drawSignaturesIfNeeded(ot,st+ut);let ht=0;for(let yt=4;yt>=g.MIN_RESOLUTION&&!ht;yt/=2)yt<=nt.notes[0].length&&(ht=yt);if(ht===0){const yt=nt.notes[0].length===0?"[infinite]":""+4/nt.notes[0].length;console.warn(" StaffRender ","background:orange; color:white",`StaffRender does not handle notes shorther than 1/${4/g.MIN_RESOLUTION}th, and this score tries to draw a 1/${yt}th. Shortest possible note will be drawn instead.`),ht=g.MIN_RESOLUTION}const pt=$.NOTE_PATHS[ht];let it;if(pt.stemAnchor&&(it=Object(b.createSVGGroupChild)(this.musicG,"stem")),nt.notes.forEach(yt=>{const ft=yt.vSteps*this.vStepSize,bt=2*(yt.vSteps>0?Math.floor(yt.vSteps/2):Math.ceil(yt.vSteps/2)),Tt=yt.vSteps>0?-2:2;for(let Ct=bt;Math.abs(Ct)>4;Ct+=Tt)Object(b.drawSVGPath)(this.linesG,$.extraLinePath,st+ut,Ct*this.vStepSize,this.scale,1);if(yt.g=yt.tiedFrom?yt.tiedFrom.g:Object(b.createSVGGroupChild)(this.musicG,`${yt.start}-${yt.pitch}`),nt.isBarBeginning&&yt.g.setAttribute("data-is-bar-beginning","true"),yt.tiedFrom){const Ct=st+ut-yt.tiedFrom.xHeadRight;Object(b.drawSVGPath)(yt.g,$.tiePath,yt.tiedFrom.xHeadRight,ft,Ct/$.PATH_SCALE,this.scale*(yt.vSteps<0?-1:1),yt.opacity)}Object(b.drawSVGPath)(yt.g,pt.path,st+ut,ft,this.scale,this.scale,yt.opacity),yt.xHeadRight=st+ut+pt.width*this.scale,1.5*ht<=yt.length&&Object(b.drawSVGPath)(yt.g,$.dotPath,st+ut+pt.width*this.scale+this.vStepSize/2,ft-this.vStepSize/2,this.scale,this.scale,yt.opacity),yt.accidental!==0&&Object(b.drawSVGPath)(yt.g,$.ACCIDENTAL_PATHS[yt.accidental],st+ut,ft,this.scale,this.scale,yt.opacity)}),pt.stemAnchor){let yt,ft,bt=st+ut;const Tt=pt.stemAnchor*this.scale,Ct=nt.minVStep+nt.maxVStep<0,_t=pt.flags>2?2*(pt.flags-2):0;if(Ct?(yt=nt.maxVStep*this.vStepSize-Tt,ft=(nt.minVStep+7+_t)*this.vStepSize):(bt+=(pt.width-g.STEM_WIDTH)*this.scale,yt=nt.minVStep*this.vStepSize+Tt,ft=(nt.maxVStep-7-_t)*this.vStepSize),Object(b.drawSVGPath)(it,$.stemPath,bt,yt,this.scale,(ft-yt)/$.PATH_SCALE),pt.flags===1)Object(b.drawSVGPath)(it,$.singleFlagPath,bt,ft,this.scale,this.scale*(Ct?-1:1),1);else if(pt.flags>1)for(let Ot=0;Ot<pt.flags;++Ot)Object(b.drawSVGPath)(it,$.multiFlagPath,bt,ft,this.scale,this.scale*(Ct?-1:1),1),ft+=(Ct?-2:2)*this.vStepSize}return this.config.pixelsPerTimeStep===0&&(ut+=pt.width*this.scale,it&&(ut+=it.getBoundingClientRect().width),ut+=this.config.noteSpacing),ut+=this.drawRests(nt,st+ut)}drawBarIfNeeded(nt,st){let ot=0;const ut=this.lastBar+this.getBarLength();return nt!==0&&nt>=ut&&(this.config.pixelsPerTimeStep>0?st-=this.config.noteSpacing:ot=this.config.noteSpacing,Object(b.drawSVGPath)(this.linesG,$.barPath,st,0,1,this.scale),this.lastBar=ut),ot}drawRests(nt,st){let ot=0,ut=nt.restToNextLength;if(ut){this.config.pixelsPerTimeStep>0&&(st+=this.quartersToTime(nt.notes[0].length)*this.hStepSize);let ht=nt.notes[0].start+nt.notes[0].length,pt=0;const it=this.lastBar+this.getBarLength()-ht;let yt;for(ut>it&&(pt=ut-it,ut=it),yt=4;yt>this.getBarLength()&&yt>=g.MIN_RESOLUTION;yt/=2);let ft=yt;for(;(ut||pt)&&ft>=g.MIN_RESOLUTION;){if(ft<=ut){ot+=this.drawBarIfNeeded(ht,st+ot),ot+=this.drawSignaturesIfNeeded(ht,st+ot);const bt=Object(b.drawSVGPath)(this.musicG,$.REST_PATHS[ft],st+ot,0,this.scale,this.scale);this.config.pixelsPerTimeStep>0?st+=this.quartersToTime(ft)*this.hStepSize:(ot+=bt.getBoundingClientRect().width,ot+=this.config.noteSpacing),ht+=ft,ut-=ft}if(pt&&ut<=0){const bt=this.getBarLength();for(pt>bt?(ut=bt,pt-=bt):(ut=pt,pt=0),yt=4;yt>this.getBarLength()&&yt>=g.MIN_RESOLUTION;yt/=2);ft=yt}ut<ft&&(ft/=2)}}return ot}redrawStaff(nt,st,ot){let ut=nt.querySelector('g[data-id="staff-five-lines"]');if(ut)ut.setAttributeNS(null,"transform",`scale(${ot/$.PATH_SCALE}, 1)`);else{ut=Object(b.createSVGGroupChild)(nt,"staff-five-lines");const ht=0;for(let pt=-4;pt<=4;pt+=2)Object(b.drawSVGPath)(ut,$.staffLinePath,st,ht+pt*this.vStepSize,ot/$.PATH_SCALE,1)}return ut}clearSignatureOverlay(){for(;this.overlayG.lastChild;)this.overlayG.removeChild(this.overlayG.lastChild)}drawSignaturesIfNeeded(nt,st){let ot=0;const ut=this.changeKeySignatureIfNeeded(nt),ht=this.changeTimeSignatureIfNeeded(nt);if(ut||ht){const pt=g.COMPACT_SPACING*this.scale*(this.config.pixelsPerTimeStep>0?3:2);this.signaturesList.push({x:st-pt,q:nt}),this.signatureNext===null&&(this.signatureNext=st);const it=nt>0?Object(b.createSVGGroupChild)(this.signaturesG,"signatures"):this.overlayG;ot+=this.drawSignatures(it,st+ot,!1,ut,ht)}return this.config.pixelsPerTimeStep===0?ot:0}drawSignatures(nt,st,ot,ut,ht){const pt=g.COMPACT_SPACING*this.scale;let it,yt=pt;const ft=nt===this.overlayG||this.config.pixelsPerTimeStep>0;if(ft){(it=document.createElementNS(b.SVGNS,"rect")).setAttributeNS(null,"x",""+st),it.setAttributeNS(null,"y","0"),it.setAttributeNS(null,"width","1"),it.setAttributeNS(null,"height","1"),it.setAttribute("data-id","background"),nt.appendChild(it);const _t=document.defaultView.getComputedStyle(this.div.parentElement);it.setAttributeNS(null,"fill",_t.getPropertyValue("background-color"))}if(ot){const _t=Object(b.drawSVGPath)(nt,$.CLEF_PATHS[this.clef].path,st+yt,0,this.scale,this.scale);this.setFill(_t),yt+=3*pt}if(ut){const _t=_e[this.key].accidental,Ot=this.clef===71?0:14;_e[this.key].pitches.forEach(kt=>{const Rt=this.getPitchDetails(kt).vSteps,jt=Object(b.drawSVGPath)(nt,$.ACCIDENTAL_PATHS[_t],st+yt,(Ot+Rt)*this.vStepSize,this.scale,this.scale);this.setFill(jt),yt+=jt.getBoundingClientRect().width})}if(ht){const _t=Object(b.createSVGGroupChild)(nt,"time-key"),Ot=2.85*this.config.noteHeight+"px";Object(b.drawSVGText)(_t,""+this.timeSignatureNumerator,st+yt,-.5,Ot,!0),Object(b.drawSVGText)(_t,""+this.timeSignatureDenominator,st+yt,4*this.vStepSize-.5,Ot,!0),this.setFill(_t),yt+=_t.getBoundingClientRect().width+pt}const bt=this.redrawStaff(nt,st,yt);this.setStroke(bt);const Tt=this.div.getBoundingClientRect(),Ct=nt.getBoundingClientRect();if(this.updateVerticalBoundaries(Ct.top-Tt.top,Ct.bottom-Tt.top),ft&&(it.setAttributeNS(null,"y",""+-this.staffOffset),it.setAttributeNS(null,"height",""+this.height),it.setAttributeNS(null,"width",""+yt)),nt===this.overlayG){this.overlaySVG.setAttributeNS(null,"width",""+(yt+5));for(let _t=0;_t<5;++_t){const Ot=Object(b.drawSVGPath)(nt,$.stemPath,yt+_t,_t*_t-this.staffOffset,1/g.STEM_WIDTH,(this.height-2*_t*_t)/$.PATH_SCALE,(_t-5)*(_t-5)*2/$.PATH_SCALE);this.setFill(Ot)}}if(this.config.pixelsPerTimeStep>0){const _t=this.signaturesQuarters===0;return _t&&(this.signaturesQuarters=this.timeToQuarters(yt/this.hStepSize)),(_t||st>0)&&(this.signaturesBlinking=!0,Object(b.setFade)(nt,this.signaturesBlinking)),0}return yt}changeKeySignatureIfNeeded(nt){if(this.scoreInfo.keySignatures){let st=this.key;for(let ot=0;ot<this.scoreInfo.keySignatures.length&&this.scoreInfo.keySignatures[ot].start<=nt;++ot)st=this.scoreInfo.keySignatures[ot].key;if(st!==this.key)return this.key=st,!0}return!1}changeTimeSignatureIfNeeded(nt){if(this.scoreInfo.timeSignatures){let st=this.timeSignatureNumerator,ot=this.timeSignatureDenominator;for(let ut=0;ut<this.scoreInfo.timeSignatures.length&&this.scoreInfo.timeSignatures[ut].start<=nt;++ut)st=this.scoreInfo.timeSignatures[ut].numerator,ot=this.scoreInfo.timeSignatures[ut].denominator;if(st!==this.timeSignatureNumerator||ot!==this.timeSignatureDenominator)return this.timeSignatureNumerator=st,this.timeSignatureDenominator=ot,!0}return!1}changeAndDrawSignaturesIfNeeded(nt){let st;if(nt<this.signatureCurrent||this.signatureNext!==null&&this.signatureNext<=nt){st=this.signaturesList[0].q,this.signatureNext=null;for(let ot=0;ot<this.signaturesList.length;++ot){if(nt<this.signaturesList[ot].x){this.signatureNext=this.signaturesList[ot].x;break}this.signatureCurrent=this.signaturesList[ot].x,st=this.signaturesList[ot].q}}if(st!==void 0){const ot=this.key,ut=this.timeSignatureNumerator,ht=this.timeSignatureDenominator;this.changeKeySignatureIfNeeded(st),this.changeTimeSignatureIfNeeded(st),this.clearSignatureOverlay(),this.drawSignatures(this.overlayG,0,!0,!0,!0),this.key=ot,this.timeSignatureNumerator=ut,this.timeSignatureDenominator=ht}this.config.pixelsPerTimeStep>0&&nt===0&&(this.signatureNext=0,this.signaturesBlinking=!0,Object(b.setFade)(this.overlayG,this.signaturesBlinking))}getBarLength(){return 4*this.timeSignatureNumerator/this.timeSignatureDenominator}scrollIntoViewIfNeeded(nt,st){if(nt)if(this.scrollType===rt.PAGE){const ot=this.parentElement.getBoundingClientRect().width;st>this.parentElement.scrollLeft+ot&&(this.parentElement.scrollLeft=st-20)}else{const ot=this.parentElement.getBoundingClientRect().width;this.parentElement.scrollLeft=st-.5*ot}}updateVerticalBoundaries(nt,st){let ot=0;if(nt<0){this.staffOffset-=nt;const ut=`translate(0, ${this.staffOffset})`;this.overlayG.setAttributeNS(null,"transform",ut),this.staffG.setAttributeNS(null,"transform",ut),ot=this.height-nt}if((ot=Math.max(ot,st-nt))>this.height){this.height=ot,this.overlaySVG.setAttributeNS(null,"height",""+this.height),this.staffSVG.setAttributeNS(null,"height",""+this.height);const ut=this.div.querySelectorAll('rect[data-id="background"]');for(let ht=0;ht<ut.length;++ht){const pt=ut[ht];pt.setAttributeNS(null,"y",""+-this.staffOffset),pt.setAttributeNS(null,"height",""+this.height)}}}setFill(nt,st=!1){nt.setAttributeNS(null,"fill",this.getColor(st))}setStroke(nt,st=g.LINE_STROKE,ot=!1){nt.setAttributeNS(null,"stroke",this.getColor(ot)),nt.setAttributeNS(null,"stroke-width",""+st)}getColor(nt){return`rgb(${nt?this.config.activeNoteRGB:this.config.noteRGB})`}getOpacity(nt){return nt?nt/127*.8+.2:1}getGroup(nt){const st=nt.start,ot=nt.pitch;return this.staffSVG.querySelector(`g[data-id="${st}-${ot}"]`)}highlightElement(nt,st){nt.setAttribute("fill",this.getColor(st)),nt.setAttribute("stroke",this.getColor(st))}getBarBeginnings(){const nt=new Set;let st=0;this.scoreInfo.notes.forEach(ht=>{ht.start+ht.length>st&&(st=ht.start+ht.length)});const ot=this.scoreInfo.timeSignatures?this.scoreInfo.timeSignatures.slice(0):[{start:0,numerator:4,denominator:4}];ot.sort((ht,pt)=>ht.start-pt.start);let ut=0;for(let ht=0;ht<ot.length;++ht){const pt=ht===ot.length-1?st:ot[ht].start,it=4*ot[ht].numerator/ot[ht].denominator;for(;ut<pt;ut+=it)nt.add(ut)}return nt}quartersToTime(nt){return nt/this.scoreInfo.tempos[0].qpm*60}timeToQuarters(nt){return nt*this.scoreInfo.tempos[0].qpm/60}setDetails(){let nt=new Map;const st=this.getBarBeginnings(),ot=new Set(st);this.scoreInfo.notes.slice().sort((ft,bt)=>ft.start-bt.start).forEach(ft=>{const bt=this.getQNote(ft);ot.add(bt.start),ot.add(bt.start+bt.length),nt.has(bt.start)?nt.get(bt.start).push(bt):nt.set(bt.start,[bt])}),Array.from(ot).sort((ft,bt)=>ft-bt).forEach(ft=>{const bt=[];nt.forEach(Tt=>{Tt.forEach(Ct=>{const _t=this.splitQNote(Ct,ft);_t&&bt.push(_t)})}),bt.forEach(Tt=>{nt.has(Tt.start)?nt.get(Tt.start).push(Tt):nt.set(Tt.start,[Tt])})}),nt=new Map(Array.from(nt).sort((ft,bt)=>ft[0]-bt[0]));const ut=this.key;let ht=null,pt=0;const it=st[Symbol.iterator]();let yt=it.next();nt.forEach((ft,bt)=>{const Tt={maxVStep:Number.MAX_SAFE_INTEGER,minVStep:Number.MIN_SAFE_INTEGER,restToNextLength:0,isBarBeginning:!1,notes:[]};this.changeKeySignatureIfNeeded(bt);const Ct=yt.value+this.getBarLength();!yt.done&&bt>=Ct&&(yt=it.next(),this.barAccidentals={},Tt.isBarBeginning=!0),ft.forEach(_t=>{this.analyzePitch(_t,bt),Tt.minVStep=Math.max(_t.vSteps,Tt.minVStep),Tt.maxVStep=Math.min(_t.vSteps,Tt.maxVStep),Tt.notes.push(_t)}),ht&&(ht.restToNextLength=bt-pt),this.musicBlockMap.set(bt,Tt),ht=Tt,pt=bt+Tt.notes[0].length}),this.initialRest={maxVStep:0,minVStep:0,restToNextLength:this.musicBlockMap.values().next().value.notes[0].start,isBarBeginning:!0,notes:[{start:0,length:0,vSteps:0,accidental:0,opacity:0,pitch:0,xHeadRight:0}]},this.key=ut}getQNote(nt){return{start:nt.start,length:nt.length,vSteps:0,accidental:0,opacity:this.getOpacity(nt.intensity),pitch:nt.pitch,xHeadRight:0}}splitQNote(nt,st){const ot=nt.start+nt.length-st;return st>nt.start&&ot>0?(nt.length-=ot,{start:st,length:ot,vSteps:nt.vSteps,accidental:nt.accidental,opacity:nt.opacity,pitch:nt.pitch,xHeadRight:0,tiedFrom:nt}):null}analyzePitch(nt,st){const ot=this.getPitchDetails(nt.pitch);ot.vSteps in this.barAccidentals?ot.accidental===this.barAccidentals[ot.vSteps]?ot.accidental=0:(this.barAccidentals[ot.vSteps]===3?ot.accidental=ot.keyAccidental:ot.accidental===0&&(ot.accidental=3),this.barAccidentals[ot.vSteps]=ot.accidental):(nt.tiedFrom&&(ot.accidental=0),this.barAccidentals[ot.vSteps]=ot.accidental),nt.vSteps=ot.vSteps,nt.accidental=ot.accidental}getPitchDetails(nt){const st=nt-60,ot=Math.floor(st/12),ut=st-12*ot,ht=_[this.key].steps[ut],pt=this.clef===71?6:-6,it=_e[this.key].accidental===1?69+(ut+3)%12:64+(ut+8)%12;return{vSteps:pt-7*ot+ht,accidental:_[this.key].accidental[ut],keyAccidental:_e[this.key].pitches.indexOf(it)>-1?_e[this.key].accidental:0}}}},function(a,c,d){d.r(c);var g=d(3);d.d(c,"MAX_QUARTER_DIVISION",function(){return g.MAX_QUARTER_DIVISION}),d.d(c,"ScrollType",function(){return g.ScrollType}),d.d(c,"StaffSVGRender",function(){return g.StaffSVGRender})}])},function(i,s,o){i.exports=function(a){for(var c=new Array(a),d=0;d<a;++d)c[d]=d;return c}},function(i,s){function o(a){return!!a.constructor&&typeof a.constructor.isBuffer=="function"&&a.constructor.isBuffer(a)}/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */i.exports=function(a){return a!=null&&(o(a)||function(c){return typeof c.readFloatLE=="function"&&typeof c.slice=="function"&&o(c.slice(0,0))}(a)||!!a._isBuffer)}},function(i,s,o){var a=o(45),c=o(30),d=o(71),g=o(90);i.exports=function(b,$,_){var _e,et,rt=$.shape,tt=rt.length,j=1,nt=new Array(tt),st=0;for(_e=tt-1;_e>=0;--_e)if(nt[_e]=j,j*=rt[_e],st=Math.max(st,g.scratchMemory(rt[_e])),$.shape[_e]!==_.shape[_e])throw new Error("Shape mismatch, real and imaginary arrays must have same size");var ot,ut=4*j+st;ot=$.dtype==="array"||$.dtype==="float64"||$.dtype==="custom"?d.mallocDouble(ut):d.mallocFloat(ut);var ht,pt,it,yt,ft=c(ot,rt.slice(0),nt,0),bt=c(ot,rt.slice(0),nt.slice(0),j),Tt=c(ot,rt.slice(0),nt.slice(0),2*j),Ct=c(ot,rt.slice(0),nt.slice(0),3*j),_t=4*j;for(a.assign(ft,$),a.assign(bt,_),_e=tt-1;_e>=0&&(g(b,j/rt[_e],rt[_e],ot,ft.offset,bt.offset,_t),_e!==0);--_e){for(pt=1,it=Tt.stride,yt=Ct.stride,et=_e-1;et<tt;++et)yt[et]=it[et]=pt,pt*=rt[et];for(et=_e-2;et>=0;--et)yt[et]=it[et]=pt,pt*=rt[et];a.assign(Tt,ft),a.assign(Ct,bt),ht=ft,ft=Tt,Tt=ht,ht=bt,bt=Ct,Ct=ht}a.assign($,ft),a.assign(_,bt),d.free(ot)}},function(i,s,o){var a=o(88);i.exports=function(c){var d=["'use strict'","var CACHED={}"],g=[],b=c.funcName+"_cwise_thunk";d.push(["return function ",b,"(",c.shimArgs.join(","),"){"].join(""));for(var $=[],_=[],_e=[["array",c.arrayArgs[0],".shape.slice(",Math.max(0,c.arrayBlockIndices[0]),c.arrayBlockIndices[0]<0?","+c.arrayBlockIndices[0]+")":")"].join("")],et=[],rt=[],tt=0;tt<c.arrayArgs.length;++tt){var j=c.arrayArgs[tt];g.push(["t",j,"=array",j,".dtype,","r",j,"=array",j,".order"].join("")),$.push("t"+j),$.push("r"+j),_.push("t"+j),_.push("r"+j+".join()"),_e.push("array"+j+".data"),_e.push("array"+j+".stride"),_e.push("array"+j+".offset|0"),tt>0&&(et.push("array"+c.arrayArgs[0]+".shape.length===array"+j+".shape.length+"+(Math.abs(c.arrayBlockIndices[0])-Math.abs(c.arrayBlockIndices[tt]))),rt.push("array"+c.arrayArgs[0]+".shape[shapeIndex+"+Math.max(0,c.arrayBlockIndices[0])+"]===array"+j+".shape[shapeIndex+"+Math.max(0,c.arrayBlockIndices[tt])+"]"))}for(c.arrayArgs.length>1&&(d.push("if (!("+et.join(" && ")+")) throw new Error('cwise: Arrays do not all have the same dimensionality!')"),d.push("for(var shapeIndex=array"+c.arrayArgs[0]+".shape.length-"+Math.abs(c.arrayBlockIndices[0])+"; shapeIndex-->0;) {"),d.push("if (!("+rt.join(" && ")+")) throw new Error('cwise: Arrays do not all have the same shape!')"),d.push("}")),tt=0;tt<c.scalarArgs.length;++tt)_e.push("scalar"+c.scalarArgs[tt]);return g.push(["type=[",_.join(","),"].join()"].join("")),g.push("proc=CACHED[type]"),d.push("var "+g.join(",")),d.push(["if(!proc){","CACHED[type]=proc=compile([",$.join(","),"])}","return proc(",_e.join(","),")}"].join("")),c.debug&&console.log(`-----Generated thunk:
`+d.join(`
`)+`
----------`),new Function("compile",d.join(`
`))(a.bind(void 0,c))}},function(i,s,o){var a=o(70);function c(b,$,_){var _e,et,rt=b.length,tt=$.arrayArgs.length,j=$.indexArgs.length>0,nt=[],st=[],ot=0,ut=0;for(_e=0;_e<rt;++_e)st.push(["i",_e,"=0"].join(""));for(et=0;et<tt;++et)for(_e=0;_e<rt;++_e)ut=ot,ot=b[_e],_e===0?st.push(["d",et,"s",_e,"=t",et,"p",ot].join("")):st.push(["d",et,"s",_e,"=(t",et,"p",ot,"-s",ut,"*t",et,"p",ut,")"].join(""));for(st.length>0&&nt.push("var "+st.join(",")),_e=rt-1;_e>=0;--_e)ot=b[_e],nt.push(["for(i",_e,"=0;i",_e,"<s",ot,";++i",_e,"){"].join(""));for(nt.push(_),_e=0;_e<rt;++_e){for(ut=ot,ot=b[_e],et=0;et<tt;++et)nt.push(["p",et,"+=d",et,"s",_e].join(""));j&&(_e>0&&nt.push(["index[",ut,"]-=s",ut].join("")),nt.push(["++index[",ot,"]"].join(""))),nt.push("}")}return nt.join(`
`)}function d(b,$,_){for(var _e=b.body,et=[],rt=[],tt=0;tt<b.args.length;++tt){var j=b.args[tt];if(!(j.count<=0)){var nt=new RegExp(j.name,"g"),st="",ot=$.arrayArgs.indexOf(tt);switch($.argTypes[tt]){case"offset":var ut=$.offsetArgIndex.indexOf(tt);ot=$.offsetArgs[ut].array,st="+q"+ut;case"array":st="p"+ot+st;var ht="l"+tt,pt="a"+ot;if($.arrayBlockIndices[ot]===0)j.count===1?_[ot]==="generic"?j.lvalue?(et.push(["var ",ht,"=",pt,".get(",st,")"].join("")),_e=_e.replace(nt,ht),rt.push([pt,".set(",st,",",ht,")"].join(""))):_e=_e.replace(nt,[pt,".get(",st,")"].join("")):_e=_e.replace(nt,[pt,"[",st,"]"].join("")):_[ot]==="generic"?(et.push(["var ",ht,"=",pt,".get(",st,")"].join("")),_e=_e.replace(nt,ht),j.lvalue&&rt.push([pt,".set(",st,",",ht,")"].join(""))):(et.push(["var ",ht,"=",pt,"[",st,"]"].join("")),_e=_e.replace(nt,ht),j.lvalue&&rt.push([pt,"[",st,"]=",ht].join("")));else{for(var it=[j.name],yt=[st],ft=0;ft<Math.abs($.arrayBlockIndices[ot]);ft++)it.push("\\s*\\[([^\\]]+)\\]"),yt.push("$"+(ft+1)+"*t"+ot+"b"+ft);if(nt=new RegExp(it.join(""),"g"),st=yt.join("+"),_[ot]==="generic")throw new Error("cwise: Generic arrays not supported in combination with blocks!");_e=_e.replace(nt,[pt,"[",st,"]"].join(""))}break;case"scalar":_e=_e.replace(nt,"Y"+$.scalarArgs.indexOf(tt));break;case"index":_e=_e.replace(nt,"index");break;case"shape":_e=_e.replace(nt,"shape")}}}return[et.join(`
`),_e,rt.join(`
`)].join(`
`).trim()}function g(b){for(var $=new Array(b.length),_=!0,_e=0;_e<b.length;++_e){var et=b[_e],rt=et.match(/\d+/);rt=rt?rt[0]:"",et.charAt(0)===0?$[_e]="u"+et.charAt(1)+rt:$[_e]=et.charAt(0)+rt,_e>0&&(_=_&&$[_e]===$[_e-1])}return _?$[0]:$.join("")}i.exports=function(b,$){for(var _=$[1].length-Math.abs(b.arrayBlockIndices[0])|0,_e=new Array(b.arrayArgs.length),et=new Array(b.arrayArgs.length),rt=0;rt<b.arrayArgs.length;++rt)et[rt]=$[2*rt],_e[rt]=$[2*rt+1];var tt=[],j=[],nt=[],st=[],ot=[];for(rt=0;rt<b.arrayArgs.length;++rt){b.arrayBlockIndices[rt]<0?(nt.push(0),st.push(_),tt.push(_),j.push(_+b.arrayBlockIndices[rt])):(nt.push(b.arrayBlockIndices[rt]),st.push(b.arrayBlockIndices[rt]+_),tt.push(0),j.push(b.arrayBlockIndices[rt]));for(var ut=[],ht=0;ht<_e[rt].length;ht++)nt[rt]<=_e[rt][ht]&&_e[rt][ht]<st[rt]&&ut.push(_e[rt][ht]-nt[rt]);ot.push(ut)}var pt=["SS"],it=["'use strict'"],yt=[];for(ht=0;ht<_;++ht)yt.push(["s",ht,"=SS[",ht,"]"].join(""));for(rt=0;rt<b.arrayArgs.length;++rt){for(pt.push("a"+rt),pt.push("t"+rt),pt.push("p"+rt),ht=0;ht<_;++ht)yt.push(["t",rt,"p",ht,"=t",rt,"[",nt[rt]+ht,"]"].join(""));for(ht=0;ht<Math.abs(b.arrayBlockIndices[rt]);++ht)yt.push(["t",rt,"b",ht,"=t",rt,"[",tt[rt]+ht,"]"].join(""))}for(rt=0;rt<b.scalarArgs.length;++rt)pt.push("Y"+rt);if(b.shapeArgs.length>0&&yt.push("shape=SS.slice(0)"),b.indexArgs.length>0){var ft=new Array(_);for(rt=0;rt<_;++rt)ft[rt]="0";yt.push(["index=[",ft.join(","),"]"].join(""))}for(rt=0;rt<b.offsetArgs.length;++rt){var bt=b.offsetArgs[rt],Tt=[];for(ht=0;ht<bt.offset.length;++ht)bt.offset[ht]!==0&&(bt.offset[ht]===1?Tt.push(["t",bt.array,"p",ht].join("")):Tt.push([bt.offset[ht],"*t",bt.array,"p",ht].join("")));Tt.length===0?yt.push("q"+rt+"=0"):yt.push(["q",rt,"=",Tt.join("+")].join(""))}var Ct=a([].concat(b.pre.thisVars).concat(b.body.thisVars).concat(b.post.thisVars));for((yt=yt.concat(Ct)).length>0&&it.push("var "+yt.join(",")),rt=0;rt<b.arrayArgs.length;++rt)it.push("p"+rt+"|=0");b.pre.body.length>3&&it.push(d(b.pre,b,et));var _t=d(b.body,b,et),Ot=function(Rt){for(var jt=0,Gt=Rt[0].length;jt<Gt;){for(var Bt=1;Bt<Rt.length;++Bt)if(Rt[Bt][jt]!==Rt[0][jt])return jt;++jt}return jt}(ot);Ot<_?it.push(function(Rt,jt,Gt,Bt){for(var zt=jt.length,Ut=Gt.arrayArgs.length,Qt=Gt.blockSize,tn=Gt.indexArgs.length>0,sn=[],ln=0;ln<Ut;++ln)sn.push(["var offset",ln,"=p",ln].join(""));for(ln=Rt;ln<zt;++ln)sn.push(["for(var j"+ln+"=SS[",jt[ln],"]|0;j",ln,">0;){"].join("")),sn.push(["if(j",ln,"<",Qt,"){"].join("")),sn.push(["s",jt[ln],"=j",ln].join("")),sn.push(["j",ln,"=0"].join("")),sn.push(["}else{s",jt[ln],"=",Qt].join("")),sn.push(["j",ln,"-=",Qt,"}"].join("")),tn&&sn.push(["index[",jt[ln],"]=j",ln].join(""));for(ln=0;ln<Ut;++ln){for(var an=["offset"+ln],Yt=Rt;Yt<zt;++Yt)an.push(["j",Yt,"*t",ln,"p",jt[Yt]].join(""));sn.push(["p",ln,"=(",an.join("+"),")"].join(""))}for(sn.push(c(jt,Gt,Bt)),ln=Rt;ln<zt;++ln)sn.push("}");return sn.join(`
`)}(Ot,ot[0],b,_t)):it.push(c(ot[0],b,_t)),b.post.body.length>3&&it.push(d(b.post,b,et)),b.debug&&console.log("-----Generated cwise routine for ",$,`:
`+it.join(`
`)+`
----------`);var kt=[b.funcName||"unnamed","_cwise_loop_",_e[0].join("s"),"m",Ot,g(et)].join("");return new Function(["function ",kt,"(",pt.join(","),"){",it.join(`
`),"} return ",kt].join(""))()}},function(i,s,o){i.exports=function(a,c){switch(c===void 0&&(c=0),typeof a){case"number":if(a>0)return function(d,g){var b,$;for(b=new Array(d),$=0;$<d;++$)b[$]=g;return b}(0|a,c);break;case"object":if(typeof a.length=="number")return function d(g,b,$){var _=0|g[$];if(_<=0)return[];var _e,et=new Array(_);if($===g.length-1)for(_e=0;_e<_;++_e)et[_e]=b;else for(_e=0;_e<_;++_e)et[_e]=d(g,b,$+1);return et}(a,c,0)}return[]}},function(i,s,o){var a=o(72);function c(d,g,b,$,_,_e){var et,rt,tt,j,nt,st,ot,ut,ht,pt,it,yt,ft,bt,Tt,Ct,_t,Ot,kt,Rt,jt,Gt,Bt,zt;for(d|=0,g|=0,_|=0,_e|=0,et=b|=0,rt=a.log2(et),Ot=0;Ot<g;++Ot){for(ot=et>>1,nt=0,tt=0;tt<et-1;tt++){for(tt<nt&&(ft=$[_+tt],$[_+tt]=$[_+nt],$[_+nt]=ft,ft=$[_e+tt],$[_e+tt]=$[_e+nt],$[_e+nt]=ft),st=ot;st<=nt;)nt-=st,st>>=1;nt+=st}for(it=-1,yt=0,pt=1,ut=0;ut<rt;ut++){for(ht=pt,pt<<=1,Ct=1,_t=0,nt=0;nt<ht;nt++){for(tt=nt;tt<et;tt+=pt)kt=$[_+(j=tt+ht)],Rt=$[_e+j],jt=$[_+tt],Gt=$[_e+tt],bt=(Bt=Ct*(kt+Rt))-Rt*(Ct+_t),Tt=Bt+(zt=kt*(_t-Ct)),$[_+j]=jt-bt,$[_e+j]=Gt-Tt,$[_+tt]+=bt,$[_e+tt]+=Tt;zt=Ct*(yt-it),Ct=(Bt=it*(Ct+_t))-_t*(it+yt),_t=Bt+zt}yt=Math.sqrt((1-it)/2),d<0&&(yt=-yt),it=Math.sqrt((1+it)/2)}if(d<0){var Ut=1/et;for(tt=0;tt<et;tt++)$[_+tt]*=Ut,$[_e+tt]*=Ut}_+=b,_e+=b}}i.exports=function(d,g,b,$,_,_e,et){d|=0,g|=0,b|=0,_|=0,_e|=0,a.isPow2(b)?c(d,g,b,$,_,_e):function(rt,tt,j,nt,st,ot,ut){rt|=0,tt|=0,j|=0,st|=0,ot|=0,ut|=0;var ht,pt,it,yt,ft,bt,Tt,Ct,_t,Ot=a.nextPow2(2*j+1),kt=ut,Rt=kt+j,jt=Rt+j,Gt=jt+Ot,Bt=Gt+Ot,zt=Bt+Ot,Ut=-rt*Math.PI/j;for(_t=0;_t<j;++_t)pt=Ut*(_t*_t%(2*j)),yt=Math.cos(pt),ft=Math.sin(pt),nt[Bt+(Ot-_t)]=nt[Bt+_t]=nt[kt+_t]=yt,nt[zt+(Ot-_t)]=nt[zt+_t]=nt[Rt+_t]=ft;for(_t=j;_t<=Ot-j;++_t)nt[Bt+_t]=0;for(_t=j;_t<=Ot-j;++_t)nt[zt+_t]=0;for(c(1,1,Ot,nt,Bt,zt),Ut=rt<0?1/j:1,ht=0;ht<tt;++ht){for(_t=0;_t<j;++_t)pt=nt[st+_t],it=nt[ot+_t],yt=nt[kt+_t],ft=-nt[Rt+_t],bt=yt*(pt+it),Tt=pt*(ft-yt),Ct=it*(yt+ft),nt[jt+_t]=bt-Ct,nt[Gt+_t]=bt+Tt;for(_t=j;_t<Ot;++_t)nt[jt+_t]=0;for(_t=j;_t<Ot;++_t)nt[Gt+_t]=0;for(c(1,1,Ot,nt,jt,Gt),_t=0;_t<Ot;++_t)pt=nt[jt+_t],it=nt[Gt+_t],yt=nt[Bt+_t],ft=nt[zt+_t],bt=yt*(pt+it),Tt=pt*(ft-yt),Ct=it*(yt+ft),nt[jt+_t]=bt-Ct,nt[Gt+_t]=bt+Tt;for(c(-1,1,Ot,nt,jt,Gt),_t=0;_t<j;++_t)pt=nt[jt+_t],it=nt[Gt+_t],yt=nt[kt+_t],ft=-nt[Rt+_t],bt=yt*(pt+it),Tt=pt*(ft-yt),Ct=it*(yt+ft),nt[st+_t]=Ut*(bt-Ct),nt[ot+_t]=Ut*(bt+Tt);st+=j,ot+=j}}(d,g,b,$,_,_e,et)},i.exports.scratchMemory=function(d){return a.isPow2(d)?0:2*d+4*a.nextPow2(2*d+1)}},function(i,s,o){var a=o(30),c=o(45),d=o(71);s.clone=function(g){var b=g.dtype;b!=="generic"&&b!=="array"||(b="double");var $=d.malloc(g.size,b),_=a($,g.shape);return c.assign(_,g),_},s.malloc=function(g,b){b||(b="double");for(var $=1,_=new Array(g.length),_e=g.length-1;_e>=0;--_e)_[_e]=$,$*=g[_e];return a(d.malloc($,b),g,_,0)},s.free=function(g){g.dtype!=="generic"&&g.dtype!=="array"&&d.free(g.data)},s.zeros=function(g,b){b||(b="double");for(var $=1,_=new Array(g.length),_e=g.length-1;_e>=0;--_e)_[_e]=$,$*=g[_e];var et=d.malloc($,b);for(_e=0;_e<$;++_e)et[_e]=0;return a(et,g,_,0)},s.ones=function(g,b){b||(b="double");for(var $=1,_=new Array(g.length),_e=g.length-1;_e>=0;--_e)_[_e]=$,$*=g[_e];var et=d.malloc($,b);for(_e=0;_e<$;++_e)et[_e]=1;return a(et,g,_,0)},s.eye=function(g,b){var $,_;b||(b="double");var _e=1,et=new Array(g.length);for($=g.length-1;$>=0;--$)et[$]=_e,_e*=g[$];var rt=d.malloc(_e,b);for($=0;$<_e;++$)rt[$]=0;var tt=1/0,j=0;for($=g.length-1;$>=0;$--)j+=et[$],tt=Math.min(tt,g[$]);for($=0,_=0;$<tt;$++,_+=j)rt[_]=1;return a(rt,g,et,0)}},function(i,s,o){var a=o(93),c=o(69),d=["args","body"],g=["pre","post","printCode","funcName","blockSize"];i.exports=function(b){for(var $ in b)d.indexOf($)<0&&g.indexOf($)<0&&console.warn("cwise: Unknown argument '"+$+"' passed to expression compiler");for(var _=0;_<d.length;++_)if(!b[d[_]])throw new Error("cwise: Missing argument: "+d[_]);return c({args:b.args,pre:a(b.pre||function(){}),body:a(b.body),post:a(b.post||function(){}),debug:!!b.printCode,funcName:b.funcName||b.body.name||"cwise",blockSize:b.blockSize||64})}},function(i,s,o){(function(a){var c=o(94),d=o(70),g=0;function b(_,_e,et){this.name=_,this.lvalue=_e,this.rvalue=et,this.count=0}function $(_,_e,et,rt){this.body=_,this.args=_e,this.thisVars=et,this.localVars=rt}i.exports=function(_){for(var _e=["(",_,")()"].join(""),et=c.parse(_e,{range:!0}),rt="_inline_"+g+++"_",tt=function(yt){for(var ft=yt.body[0].expression.callee.params,bt=new Array(ft.length),Tt=0;Tt<ft.length;++Tt)bt[Tt]=ft[Tt].name;return bt}(et),j=new Array(tt.length),nt=0;nt<tt.length;++nt)j[nt]=new b([rt,"arg",nt,"_"].join(""),!1,!1);for(var st=new Array(_e.length),ot=(nt=0,_e.length);nt<ot;++nt)st[nt]=_e.charAt(nt);var ut,ht=[],pt=[];function it(yt,ft){for(var bt=yt.range[0],Tt=yt.range[1],Ct=bt+1;Ct<Tt;++Ct)st[Ct]="";st[bt]=ft}return function yt(ft,bt){if(ft.parent=bt,ft.type==="MemberExpression")ft.computed?(yt(ft.object,ft),yt(ft.property,ft)):ft.object.type==="ThisExpression"?it(ft,(zt=ft.property.name,Ut="this_"+zt.replace(/\_/g,"__"),pt.push(Ut),Ut)):yt(ft.object,ft);else{if(ft.type==="ThisExpression")throw new Error("cwise-parser: Computed this is not allowed");if(ft.type==="Identifier"){var Tt=ft.name,Ct=tt.indexOf(Tt);if(Ct>=0){var _t=j[Ct],Ot=function(Qt){return Qt.parent.type==="AssignmentExpression"&&Qt.parent.left===Qt?Qt.parent.operator==="="?1:3:Qt.parent.type==="UpdateExpression"?3:2}(ft);1&Ot&&(_t.lvalue=!0),2&Ot&&(_t.rvalue=!0),++_t.count,it(ft,_t.name)}else(function(Qt){if(Qt==="eval")throw new Error("cwise-parser: eval() not allowed");return typeof window<"u"?Qt in window:a!==void 0?Qt in a:typeof self<"u"&&Qt in self})(Tt)||it(ft,function(Qt){var tn=rt+Qt.replace(/\_/g,"__");return ht.push(tn),tn}(Tt))}else if(ft.type==="Literal")typeof ft.value=="string"&&it(ft,"'"+ft.value.replace(/\_/g,"\\_").replace(/\'/g,"'")+"'");else{if(ft.type==="WithStatement")throw new Error("cwise-parser: with() statements not allowed");for(var kt=Object.keys(ft),Rt=0,jt=kt.length;Rt<jt;++Rt)if(kt[Rt]!=="parent"){var Gt=ft[kt[Rt]];if(Gt)if(Gt instanceof Array)for(var Bt=0;Bt<Gt.length;++Bt)Gt[Bt]&&typeof Gt[Bt].type=="string"&&yt(Gt[Bt],ft);else typeof Gt.type=="string"&&yt(Gt,ft)}}}var zt,Ut}(et.body[0].expression.callee.body,void 0),d(ht),d(pt),new $((ut=et.body[0].expression.callee.body,st.slice(ut.range[0],ut.range[1]).join("")),j,pt,ht)}}).call(this,o(21))},function(i,s,o){var a,c,d;(function(g,b){c=[s],(d=typeof(a=function($){var _,_e,et,rt,tt,j,nt,st,ot,ut,ht,pt,it,yt,ft,bt,Tt,Ct;function _t(Kt,rn){if(!Kt)throw new Error("ASSERT: "+rn)}function Ot(Kt){return Kt>=48&&Kt<=57}function kt(Kt){return"0123456789abcdefABCDEF".indexOf(Kt)>=0}function Rt(Kt){return"01234567".indexOf(Kt)>=0}function jt(Kt){return Kt===32||Kt===9||Kt===11||Kt===12||Kt===160||Kt>=5760&&[5760,6158,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279].indexOf(Kt)>=0}function Gt(Kt){return Kt===10||Kt===13||Kt===8232||Kt===8233}function Bt(Kt){return Kt===36||Kt===95||Kt>=65&&Kt<=90||Kt>=97&&Kt<=122||Kt===92||Kt>=128&&nt.NonAsciiIdentifierStart.test(String.fromCharCode(Kt))}function zt(Kt){return Kt===36||Kt===95||Kt>=65&&Kt<=90||Kt>=97&&Kt<=122||Kt>=48&&Kt<=57||Kt===92||Kt>=128&&nt.NonAsciiIdentifierPart.test(String.fromCharCode(Kt))}function Ut(Kt){switch(Kt){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"yield":case"let":return!0;default:return!1}}function Qt(Kt){return Kt==="eval"||Kt==="arguments"}function tn(Kt,rn,hn,xn,An){var Fn;_t(typeof hn=="number","Comment must have valid position"),Tt.lastCommentStart>=hn||(Tt.lastCommentStart=hn,Fn={type:Kt,value:rn},Ct.range&&(Fn.range=[hn,xn]),Ct.loc&&(Fn.loc=An),Ct.comments.push(Fn),Ct.attachComment&&(Ct.leadingComments.push(Fn),Ct.trailingComments.push(Fn)))}function sn(Kt){var rn,hn,xn,An;for(rn=ht-Kt,hn={start:{line:pt,column:ht-it-Kt}};ht<yt;)if(xn=ot.charCodeAt(ht),++ht,Gt(xn))return Ct.comments&&(An=ot.slice(rn+Kt,ht-1),hn.end={line:pt,column:ht-it-1},tn("Line",An,rn,ht-1,hn)),xn===13&&ot.charCodeAt(ht)===10&&++ht,++pt,void(it=ht);Ct.comments&&(An=ot.slice(rn+Kt,ht),hn.end={line:pt,column:ht-it},tn("Line",An,rn,ht,hn))}function ln(){var Kt,rn,hn,xn;for(Ct.comments&&(Kt=ht-2,rn={start:{line:pt,column:ht-it-2}});ht<yt;)if(Gt(hn=ot.charCodeAt(ht)))hn===13&&ot.charCodeAt(ht+1)===10&&++ht,++pt,++ht,it=ht,ht>=yt&&On({},j.UnexpectedToken,"ILLEGAL");else if(hn===42){if(ot.charCodeAt(ht+1)===47)return++ht,++ht,void(Ct.comments&&(xn=ot.slice(Kt+2,ht-2),rn.end={line:pt,column:ht-it},tn("Block",xn,Kt,ht,rn)));++ht}else++ht;On({},j.UnexpectedToken,"ILLEGAL")}function an(){var Kt,rn;for(rn=ht===0;ht<yt;)if(jt(Kt=ot.charCodeAt(ht)))++ht;else if(Gt(Kt))++ht,Kt===13&&ot.charCodeAt(ht)===10&&++ht,++pt,it=ht,rn=!0;else if(Kt===47)if((Kt=ot.charCodeAt(ht+1))===47)++ht,++ht,sn(2),rn=!0;else{if(Kt!==42)break;++ht,++ht,ln()}else if(rn&&Kt===45){if(ot.charCodeAt(ht+1)!==45||ot.charCodeAt(ht+2)!==62)break;ht+=3,sn(3)}else{if(Kt!==60||ot.slice(ht+1,ht+4)!=="!--")break;++ht,++ht,++ht,++ht,sn(4)}}function Yt(Kt){var rn,hn,xn,An=0;for(hn=Kt==="u"?4:2,rn=0;rn<hn;++rn){if(!(ht<yt&&kt(ot[ht])))return"";xn=ot[ht++],An=16*An+"0123456789abcdef".indexOf(xn.toLowerCase())}return String.fromCharCode(An)}function cn(){var Kt,rn;for(Kt=ot.charCodeAt(ht++),rn=String.fromCharCode(Kt),Kt===92&&(ot.charCodeAt(ht)!==117&&On({},j.UnexpectedToken,"ILLEGAL"),++ht,(Kt=Yt("u"))&&Kt!=="\\"&&Bt(Kt.charCodeAt(0))||On({},j.UnexpectedToken,"ILLEGAL"),rn=Kt);ht<yt&&zt(Kt=ot.charCodeAt(ht));)++ht,rn+=String.fromCharCode(Kt),Kt===92&&(rn=rn.substr(0,rn.length-1),ot.charCodeAt(ht)!==117&&On({},j.UnexpectedToken,"ILLEGAL"),++ht,(Kt=Yt("u"))&&Kt!=="\\"&&zt(Kt.charCodeAt(0))||On({},j.UnexpectedToken,"ILLEGAL"),rn+=Kt);return rn}function Wt(){var Kt,rn;return Kt=ht,{type:(rn=ot.charCodeAt(ht)===92?cn():function(){var hn,xn;for(hn=ht++;ht<yt;){if((xn=ot.charCodeAt(ht))===92)return ht=hn,cn();if(!zt(xn))break;++ht}return ot.slice(hn,ht)}()).length===1?_.Identifier:function(hn){if(ut&&Ut(hn))return!0;switch(hn.length){case 2:return hn==="if"||hn==="in"||hn==="do";case 3:return hn==="var"||hn==="for"||hn==="new"||hn==="try"||hn==="let";case 4:return hn==="this"||hn==="else"||hn==="case"||hn==="void"||hn==="with"||hn==="enum";case 5:return hn==="while"||hn==="break"||hn==="catch"||hn==="throw"||hn==="const"||hn==="yield"||hn==="class"||hn==="super";case 6:return hn==="return"||hn==="typeof"||hn==="delete"||hn==="switch"||hn==="export"||hn==="import";case 7:return hn==="default"||hn==="finally"||hn==="extends";case 8:return hn==="function"||hn==="continue"||hn==="debugger";case 10:return hn==="instanceof";default:return!1}}(rn)?_.Keyword:rn==="null"?_.NullLiteral:rn==="true"||rn==="false"?_.BooleanLiteral:_.Identifier,value:rn,lineNumber:pt,lineStart:it,start:Kt,end:ht}}function wt(){var Kt,rn,hn,xn,An=ht,Fn=ot.charCodeAt(ht),Wn=ot[ht];switch(Fn){case 46:case 40:case 41:case 59:case 44:case 123:case 125:case 91:case 93:case 58:case 63:case 126:return++ht,Ct.tokenize&&(Fn===40?Ct.openParenToken=Ct.tokens.length:Fn===123&&(Ct.openCurlyToken=Ct.tokens.length)),{type:_.Punctuator,value:String.fromCharCode(Fn),lineNumber:pt,lineStart:it,start:An,end:ht};default:if((Kt=ot.charCodeAt(ht+1))===61)switch(Fn){case 43:case 45:case 47:case 60:case 62:case 94:case 124:case 37:case 38:case 42:return ht+=2,{type:_.Punctuator,value:String.fromCharCode(Fn)+String.fromCharCode(Kt),lineNumber:pt,lineStart:it,start:An,end:ht};case 33:case 61:return ht+=2,ot.charCodeAt(ht)===61&&++ht,{type:_.Punctuator,value:ot.slice(An,ht),lineNumber:pt,lineStart:it,start:An,end:ht}}}return(xn=ot.substr(ht,4))===">>>="?{type:_.Punctuator,value:xn,lineNumber:pt,lineStart:it,start:An,end:ht+=4}:(hn=xn.substr(0,3))===">>>"||hn==="<<="||hn===">>="?{type:_.Punctuator,value:hn,lineNumber:pt,lineStart:it,start:An,end:ht+=3}:Wn===(rn=hn.substr(0,2))[1]&&"+-<>&|".indexOf(Wn)>=0||rn==="=>"?{type:_.Punctuator,value:rn,lineNumber:pt,lineStart:it,start:An,end:ht+=2}:"<>=!+-*%&|^/".indexOf(Wn)>=0?(++ht,{type:_.Punctuator,value:Wn,lineNumber:pt,lineStart:it,start:An,end:ht}):void On({},j.UnexpectedToken,"ILLEGAL")}function xt(){var Kt,rn,hn;if(_t(Ot((hn=ot[ht]).charCodeAt(0))||hn===".","Numeric literal must start with a decimal digit or a decimal point"),rn=ht,Kt="",hn!=="."){if(Kt=ot[ht++],hn=ot[ht],Kt==="0"){if(hn==="x"||hn==="X")return++ht,function(xn){for(var An="";ht<yt&&kt(ot[ht]);)An+=ot[ht++];return An.length===0&&On({},j.UnexpectedToken,"ILLEGAL"),Bt(ot.charCodeAt(ht))&&On({},j.UnexpectedToken,"ILLEGAL"),{type:_.NumericLiteral,value:parseInt("0x"+An,16),lineNumber:pt,lineStart:it,start:xn,end:ht}}(rn);if(Rt(hn)&&function(){var xn,An;for(xn=ht+1;xn<yt;++xn){if((An=ot[xn])==="8"||An==="9")return!1;if(!Rt(An))return!0}return!0}())return function(xn){for(var An="0"+ot[ht++];ht<yt&&Rt(ot[ht]);)An+=ot[ht++];return(Bt(ot.charCodeAt(ht))||Ot(ot.charCodeAt(ht)))&&On({},j.UnexpectedToken,"ILLEGAL"),{type:_.NumericLiteral,value:parseInt(An,8),octal:!0,lineNumber:pt,lineStart:it,start:xn,end:ht}}(rn)}for(;Ot(ot.charCodeAt(ht));)Kt+=ot[ht++];hn=ot[ht]}if(hn==="."){for(Kt+=ot[ht++];Ot(ot.charCodeAt(ht));)Kt+=ot[ht++];hn=ot[ht]}if(hn==="e"||hn==="E")if(Kt+=ot[ht++],(hn=ot[ht])!=="+"&&hn!=="-"||(Kt+=ot[ht++]),Ot(ot.charCodeAt(ht)))for(;Ot(ot.charCodeAt(ht));)Kt+=ot[ht++];else On({},j.UnexpectedToken,"ILLEGAL");return Bt(ot.charCodeAt(ht))&&On({},j.UnexpectedToken,"ILLEGAL"),{type:_.NumericLiteral,value:parseFloat(Kt),lineNumber:pt,lineStart:it,start:rn,end:ht}}function At(){var Kt,rn,hn,xn;return bt=null,an(),Kt=ht,rn=function(){var An,Fn,Wn,Qn;for(_t((An=ot[ht])==="/","Regular expression literal must start with a slash"),Fn=ot[ht++],Wn=!1,Qn=!1;ht<yt;)if(Fn+=An=ot[ht++],An==="\\")Gt((An=ot[ht++]).charCodeAt(0))&&On({},j.UnterminatedRegExp),Fn+=An;else if(Gt(An.charCodeAt(0)))On({},j.UnterminatedRegExp);else if(Wn)An==="]"&&(Wn=!1);else{if(An==="/"){Qn=!0;break}An==="["&&(Wn=!0)}return Qn||On({},j.UnterminatedRegExp),{value:Fn.substr(1,Fn.length-2),literal:Fn}}(),hn=function(){var An,Fn,Wn,Qn;for(Fn="",Wn="";ht<yt&&zt((An=ot[ht]).charCodeAt(0));)if(++ht,An==="\\"&&ht<yt)if((An=ot[ht])==="u"){if(Qn=++ht,An=Yt("u"))for(Wn+=An,Fn+="\\u";Qn<ht;++Qn)Fn+=ot[Qn];else ht=Qn,Wn+="u",Fn+="\\u";Bn({},j.UnexpectedToken,"ILLEGAL")}else Fn+="\\",Bn({},j.UnexpectedToken,"ILLEGAL");else Wn+=An,Fn+=An;return{value:Wn,literal:Fn}}(),xn=function(An,Fn){var Wn;try{Wn=new RegExp(An,Fn)}catch{On({},j.InvalidRegExp)}return Wn}(rn.value,hn.value),Ct.tokenize?{type:_.RegularExpression,value:xn,lineNumber:pt,lineStart:it,start:Kt,end:ht}:{literal:rn.literal+hn.literal,value:xn,start:Kt,end:ht}}function qt(){var Kt,rn,hn,xn;return an(),Kt=ht,rn={start:{line:pt,column:ht-it}},hn=At(),rn.end={line:pt,column:ht-it},Ct.tokenize||(Ct.tokens.length>0&&(xn=Ct.tokens[Ct.tokens.length-1]).range[0]===Kt&&xn.type==="Punctuator"&&(xn.value!=="/"&&xn.value!=="/="||Ct.tokens.pop()),Ct.tokens.push({type:"RegularExpression",value:hn.literal,range:[Kt,ht],loc:rn})),hn}function Pt(){var Kt;return an(),ht>=yt?{type:_.EOF,lineNumber:pt,lineStart:it,start:ht,end:ht}:Bt(Kt=ot.charCodeAt(ht))?Wt():Kt===40||Kt===41||Kt===59?wt():Kt===39||Kt===34?function(){var rn,hn,xn,An,Fn,Wn,Qn,pr,nr="",Yn=!1;for(Qn=pt,pr=it,_t((rn=ot[ht])==="'"||rn==='"',"String literal must starts with a quote"),hn=ht,++ht;ht<yt;){if((xn=ot[ht++])===rn){rn="";break}if(xn==="\\")if((xn=ot[ht++])&&Gt(xn.charCodeAt(0)))++pt,xn==="\r"&&ot[ht]===`
`&&++ht,it=ht;else switch(xn){case"u":case"x":Wn=ht,(Fn=Yt(xn))?nr+=Fn:(ht=Wn,nr+=xn);break;case"n":nr+=`
`;break;case"r":nr+="\r";break;case"t":nr+="	";break;case"b":nr+="\b";break;case"f":nr+="\f";break;case"v":nr+="\v";break;default:Rt(xn)?((An="01234567".indexOf(xn))!==0&&(Yn=!0),ht<yt&&Rt(ot[ht])&&(Yn=!0,An=8*An+"01234567".indexOf(ot[ht++]),"0123".indexOf(xn)>=0&&ht<yt&&Rt(ot[ht])&&(An=8*An+"01234567".indexOf(ot[ht++]))),nr+=String.fromCharCode(An)):nr+=xn}else{if(Gt(xn.charCodeAt(0)))break;nr+=xn}}return rn!==""&&On({},j.UnexpectedToken,"ILLEGAL"),{type:_.StringLiteral,value:nr,octal:Yn,startLineNumber:Qn,startLineStart:pr,lineNumber:pt,lineStart:it,start:hn,end:ht}}():Kt===46?Ot(ot.charCodeAt(ht+1))?xt():wt():Ot(Kt)?xt():Ct.tokenize&&Kt===47?function(){var rn,hn;if(!(rn=Ct.tokens[Ct.tokens.length-1]))return qt();if(rn.type==="Punctuator"){if(rn.value==="]")return wt();if(rn.value===")")return!(hn=Ct.tokens[Ct.openParenToken-1])||hn.type!=="Keyword"||hn.value!=="if"&&hn.value!=="while"&&hn.value!=="for"&&hn.value!=="with"?wt():qt();if(rn.value==="}"){if(Ct.tokens[Ct.openCurlyToken-3]&&Ct.tokens[Ct.openCurlyToken-3].type==="Keyword"){if(!(hn=Ct.tokens[Ct.openCurlyToken-4]))return wt()}else{if(!Ct.tokens[Ct.openCurlyToken-4]||Ct.tokens[Ct.openCurlyToken-4].type!=="Keyword")return wt();if(!(hn=Ct.tokens[Ct.openCurlyToken-5]))return qt()}return et.indexOf(hn.value)>=0?wt():qt()}return qt()}return rn.type==="Keyword"&&rn.value!=="this"?qt():wt()}():wt()}function Zt(){var Kt,rn,hn;return an(),Kt={start:{line:pt,column:ht-it}},rn=Pt(),Kt.end={line:pt,column:ht-it},rn.type!==_.EOF&&(hn=ot.slice(rn.start,rn.end),Ct.tokens.push({type:_e[rn.type],value:hn,range:[rn.start,rn.end],loc:Kt})),rn}function nn(){var Kt;return ht=(Kt=bt).end,pt=Kt.lineNumber,it=Kt.lineStart,bt=Ct.tokens!==void 0?Zt():Pt(),ht=Kt.end,pt=Kt.lineNumber,it=Kt.lineStart,Kt}function dn(){var Kt,rn,hn;Kt=ht,rn=pt,hn=it,bt=Ct.tokens!==void 0?Zt():Pt(),ht=Kt,pt=rn,it=hn}function wn(Kt,rn){this.line=Kt,this.column=rn}function kn(Kt,rn,hn,xn){this.start=new wn(Kt,rn),this.end=new wn(hn,xn)}function Pn(){var Kt,rn,hn,xn;return Kt=ht,rn=pt,hn=it,an(),xn=pt!==rn,ht=Kt,pt=rn,it=hn,xn}function On(Kt,rn){var hn,xn=Array.prototype.slice.call(arguments,2),An=rn.replace(/%(\d)/g,function(Fn,Wn){return _t(Wn<xn.length,"Message reference must be in range"),xn[Wn]});throw typeof Kt.lineNumber=="number"?((hn=new Error("Line "+Kt.lineNumber+": "+An)).index=Kt.start,hn.lineNumber=Kt.lineNumber,hn.column=Kt.start-it+1):((hn=new Error("Line "+pt+": "+An)).index=ht,hn.lineNumber=pt,hn.column=ht-it+1),hn.description=An,hn}function Bn(){try{On.apply(null,arguments)}catch(Kt){if(!Ct.errors)throw Kt;Ct.errors.push(Kt)}}function Zn(Kt){if(Kt.type===_.EOF&&On(Kt,j.UnexpectedEOS),Kt.type===_.NumericLiteral&&On(Kt,j.UnexpectedNumber),Kt.type===_.StringLiteral&&On(Kt,j.UnexpectedString),Kt.type===_.Identifier&&On(Kt,j.UnexpectedIdentifier),Kt.type===_.Keyword){if(function(rn){switch(rn){case"class":case"enum":case"export":case"extends":case"import":case"super":return!0;default:return!1}}(Kt.value))On(Kt,j.UnexpectedReserved);else if(ut&&Ut(Kt.value))return void Bn(Kt,j.StrictReservedWord);On(Kt,j.UnexpectedToken,Kt.value)}On(Kt,j.UnexpectedToken,Kt.value)}function jn(Kt){var rn=nn();rn.type===_.Punctuator&&rn.value===Kt||Zn(rn)}function tr(Kt){var rn=nn();rn.type===_.Keyword&&rn.value===Kt||Zn(rn)}function Un(Kt){return bt.type===_.Punctuator&&bt.value===Kt}function or(Kt){return bt.type===_.Keyword&&bt.value===Kt}function Cr(){var Kt,rn=ht,hn=pt,xn=it,An=bt;if(ot.charCodeAt(ht)===59||Un(";"))nn();else{if(Kt=pt,an(),pt!==Kt)return ht=rn,pt=hn,it=xn,void(bt=An);bt.type===_.EOF||Un("}")||Zn(bt)}}function Rr(Kt){return Kt.type===rt.Identifier||Kt.type===rt.MemberExpression}function Er(Kt,rn){var hn,xn,An;return hn=ut,An=bt,xn=Gn(),rn&&ut&&Qt(Kt[0].name)&&Bn(rn,j.StrictParamName),ut=hn,ft.markEnd(ft.createFunctionExpression(null,Kt,[],xn),An)}function zr(){var Kt,rn;return rn=bt,(Kt=nn()).type===_.StringLiteral||Kt.type===_.NumericLiteral?(ut&&Kt.octal&&Bn(Kt,j.StrictOctalLiteral),ft.markEnd(ft.createLiteral(Kt),rn)):ft.markEnd(ft.createIdentifier(Kt.value),rn)}function bs(){var Kt,rn,hn,xn,An,Fn;return Fn=bt,(Kt=bt).type===_.Identifier?(hn=zr(),Kt.value!=="get"||Un(":")?Kt.value!=="set"||Un(":")?(jn(":"),xn=Pr(),ft.markEnd(ft.createProperty("init",hn,xn),Fn)):(rn=zr(),jn("("),(Kt=bt).type!==_.Identifier?(jn(")"),Bn(Kt,j.UnexpectedToken,Kt.value),xn=Er([])):(An=[ns()],jn(")"),xn=Er(An,Kt)),ft.markEnd(ft.createProperty("set",rn,xn),Fn)):(rn=zr(),jn("("),jn(")"),xn=Er([]),ft.markEnd(ft.createProperty("get",rn,xn),Fn))):Kt.type!==_.EOF&&Kt.type!==_.Punctuator?(rn=zr(),jn(":"),xn=Pr(),ft.markEnd(ft.createProperty("init",rn,xn),Fn)):void Zn(Kt)}function ms(){var Kt,rn,hn,xn;if(Un("("))return function(){var An;return jn("("),An=Nr(),jn(")"),An}();if(Un("["))return function(){var An,Fn=[];for(An=bt,jn("[");!Un("]");)Un(",")?(nn(),Fn.push(null)):(Fn.push(Pr()),Un("]")||jn(","));return nn(),ft.markEnd(ft.createArrayExpression(Fn),An)}();if(Un("{"))return function(){var An,Fn,Wn,Qn,pr,nr=[],Yn={},Hn=String;for(pr=bt,jn("{");!Un("}");)Fn=(An=bs()).key.type===rt.Identifier?An.key.name:Hn(An.key.value),Qn=An.kind==="init"?tt.Data:An.kind==="get"?tt.Get:tt.Set,Wn="$"+Fn,Object.prototype.hasOwnProperty.call(Yn,Wn)?(Yn[Wn]===tt.Data?ut&&Qn===tt.Data?Bn({},j.StrictDuplicateProperty):Qn!==tt.Data&&Bn({},j.AccessorDataProperty):Qn===tt.Data?Bn({},j.AccessorDataProperty):Yn[Wn]&Qn&&Bn({},j.AccessorGetSet),Yn[Wn]|=Qn):Yn[Wn]=Qn,nr.push(An),Un("}")||jn(",");return jn("}"),ft.markEnd(ft.createObjectExpression(nr),pr)}();if(Kt=bt.type,xn=bt,Kt===_.Identifier)hn=ft.createIdentifier(nn().value);else if(Kt===_.StringLiteral||Kt===_.NumericLiteral)ut&&bt.octal&&Bn(bt,j.StrictOctalLiteral),hn=ft.createLiteral(nn());else if(Kt===_.Keyword){if(or("function"))return function(){var An,Fn,Wn,Qn,pr,nr,Yn,Hn,$r,Fr=null;return $r=bt,tr("function"),Un("(")||(An=bt,Fr=ns(),ut?Qt(An.value)&&Bn(An,j.StrictFunctionName):Qt(An.value)?(Wn=An,Qn=j.StrictFunctionName):Ut(An.value)&&(Wn=An,Qn=j.StrictReservedWord)),pr=Jn(Wn),nr=pr.params,Fn=pr.stricted,Wn=pr.firstRestricted,pr.message&&(Qn=pr.message),Hn=ut,Yn=Gn(),ut&&Wn&&On(Wn,Qn),ut&&Fn&&Bn(Fn,Qn),ut=Hn,ft.markEnd(ft.createFunctionExpression(Fr,nr,[],Yn),$r)}();or("this")?(nn(),hn=ft.createThisExpression()):Zn(nn())}else Kt===_.BooleanLiteral?((rn=nn()).value=rn.value==="true",hn=ft.createLiteral(rn)):Kt===_.NullLiteral?((rn=nn()).value=null,hn=ft.createLiteral(rn)):Un("/")||Un("/=")?(hn=Ct.tokens!==void 0?ft.createLiteral(qt()):ft.createLiteral(At()),dn()):Zn(nn());return ft.markEnd(hn,xn)}function gs(){var Kt=[];if(jn("("),!Un(")"))for(;ht<yt&&(Kt.push(Pr()),!Un(")"));)jn(",");return jn(")"),Kt}function ys(){var Kt,rn;return rn=bt,function(hn){return hn.type===_.Identifier||hn.type===_.Keyword||hn.type===_.BooleanLiteral||hn.type===_.NullLiteral}(Kt=nn())||Zn(Kt),ft.markEnd(ft.createIdentifier(Kt.value),rn)}function $s(){return jn("."),ys()}function ls(){var Kt;return jn("["),Kt=Nr(),jn("]"),Kt}function Yr(){var Kt,rn,hn;return hn=bt,tr("new"),Kt=function(){var xn,An,Fn;for(_t(Tt.allowIn,"callee of new expression always allow in keyword."),Fn=bt,xn=or("new")?Yr():ms();Un(".")||Un("[");)Un("[")?(An=ls(),xn=ft.createMemberExpression("[",xn,An)):(An=$s(),xn=ft.createMemberExpression(".",xn,An)),ft.markEnd(xn,Fn);return xn}(),rn=Un("(")?gs():[],ft.markEnd(ft.createNewExpression(Kt,rn),hn)}function Ls(){var Kt,rn,hn=bt;return Kt=function(){var xn,An,Fn,Wn,Qn=Tt.allowIn;for(Wn=bt,Tt.allowIn=!0,xn=or("new")?Yr():ms();;){if(Un("."))Fn=$s(),xn=ft.createMemberExpression(".",xn,Fn);else if(Un("("))An=gs(),xn=ft.createCallExpression(xn,An);else{if(!Un("["))break;Fn=ls(),xn=ft.createMemberExpression("[",xn,Fn)}ft.markEnd(xn,Wn)}return Tt.allowIn=Qn,xn}(),bt.type===_.Punctuator&&(!Un("++")&&!Un("--")||Pn()||(ut&&Kt.type===rt.Identifier&&Qt(Kt.name)&&Bn({},j.StrictLHSPostfix),Rr(Kt)||Bn({},j.InvalidLHSInAssignment),rn=nn(),Kt=ft.markEnd(ft.createPostfixExpression(rn.value,Kt),hn))),Kt}function Jr(){var Kt,rn,hn;return bt.type!==_.Punctuator&&bt.type!==_.Keyword?rn=Ls():Un("++")||Un("--")?(hn=bt,Kt=nn(),rn=Jr(),ut&&rn.type===rt.Identifier&&Qt(rn.name)&&Bn({},j.StrictLHSPrefix),Rr(rn)||Bn({},j.InvalidLHSInAssignment),rn=ft.createUnaryExpression(Kt.value,rn),rn=ft.markEnd(rn,hn)):Un("+")||Un("-")||Un("~")||Un("!")?(hn=bt,Kt=nn(),rn=Jr(),rn=ft.createUnaryExpression(Kt.value,rn),rn=ft.markEnd(rn,hn)):or("delete")||or("void")||or("typeof")?(hn=bt,Kt=nn(),rn=Jr(),rn=ft.createUnaryExpression(Kt.value,rn),rn=ft.markEnd(rn,hn),ut&&rn.operator==="delete"&&rn.argument.type===rt.Identifier&&Bn({},j.StrictDelete)):rn=Ls(),rn}function vs(Kt,rn){var hn=0;if(Kt.type!==_.Punctuator&&Kt.type!==_.Keyword)return 0;switch(Kt.value){case"||":hn=1;break;case"&&":hn=2;break;case"|":hn=3;break;case"^":hn=4;break;case"&":hn=5;break;case"==":case"!=":case"===":case"!==":hn=6;break;case"<":case">":case"<=":case">=":case"instanceof":hn=7;break;case"in":hn=rn?7:0;break;case"<<":case">>":case">>>":hn=8;break;case"+":case"-":hn=9;break;case"*":case"/":case"%":hn=11}return hn}function Os(){var Kt,rn,hn,xn,An;return An=bt,Kt=function(){var Fn,Wn,Qn,pr,nr,Yn,Hn,$r,Fr,rs;if(Fn=bt,Fr=Jr(),(nr=vs(pr=bt,Tt.allowIn))===0)return Fr;for(pr.prec=nr,nn(),Wn=[Fn,bt],Yn=[Fr,pr,Hn=Jr()];(nr=vs(bt,Tt.allowIn))>0;){for(;Yn.length>2&&nr<=Yn[Yn.length-2].prec;)Hn=Yn.pop(),$r=Yn.pop().value,Fr=Yn.pop(),Qn=ft.createBinaryExpression($r,Fr,Hn),Wn.pop(),Fn=Wn[Wn.length-1],ft.markEnd(Qn,Fn),Yn.push(Qn);(pr=nn()).prec=nr,Yn.push(pr),Wn.push(bt),Qn=Jr(),Yn.push(Qn)}for(Qn=Yn[rs=Yn.length-1],Wn.pop();rs>1;)Qn=ft.createBinaryExpression(Yn[rs-1].value,Yn[rs-2],Qn),rs-=2,Fn=Wn.pop(),ft.markEnd(Qn,Fn);return Qn}(),Un("?")&&(nn(),rn=Tt.allowIn,Tt.allowIn=!0,hn=Pr(),Tt.allowIn=rn,jn(":"),xn=Pr(),Kt=ft.createConditionalExpression(Kt,hn,xn),ft.markEnd(Kt,An)),Kt}function Pr(){var Kt,rn,hn,xn,An,Fn;return Kt=bt,An=bt,xn=rn=Os(),bt.type!==_.Punctuator||(Fn=bt.value)!=="="&&Fn!=="*="&&Fn!=="/="&&Fn!=="%="&&Fn!=="+="&&Fn!=="-="&&Fn!=="<<="&&Fn!==">>="&&Fn!==">>>="&&Fn!=="&="&&Fn!=="^="&&Fn!=="|="||(Rr(rn)||Bn({},j.InvalidLHSInAssignment),ut&&rn.type===rt.Identifier&&Qt(rn.name)&&Bn(Kt,j.StrictLHSAssignment),Kt=nn(),hn=Pr(),xn=ft.markEnd(ft.createAssignmentExpression(Kt.value,rn,hn),An)),xn}function Nr(){var Kt,rn=bt;if(Kt=Pr(),Un(",")){for(Kt=ft.createSequenceExpression([Kt]);ht<yt&&Un(",");)nn(),Kt.expressions.push(Pr());ft.markEnd(Kt,rn)}return Kt}function Ds(){var Kt,rn;return rn=bt,jn("{"),Kt=function(){for(var hn,xn=[];ht<yt&&!Un("}")&&(hn=hr())!==void 0;)xn.push(hn);return xn}(),jn("}"),ft.markEnd(ft.createBlockStatement(Kt),rn)}function ns(){var Kt,rn;return rn=bt,(Kt=nn()).type!==_.Identifier&&Zn(Kt),ft.markEnd(ft.createIdentifier(Kt.value),rn)}function Rs(Kt){var rn,hn,xn=null;return hn=bt,rn=ns(),ut&&Qt(rn.name)&&Bn({},j.StrictVarName),Kt==="const"?(jn("="),xn=Pr()):Un("=")&&(nn(),xn=Pr()),ft.markEnd(ft.createVariableDeclarator(rn,xn),hn)}function xs(Kt){var rn=[];do{if(rn.push(Rs(Kt)),!Un(","))break;nn()}while(ht<yt);return rn}function $n(){var Kt,rn,hn,xn,An,Fn,Wn,Qn,pr,nr,Yn=Tt.allowIn;return Kt=rn=hn=null,tr("for"),jn("("),Un(";")?nn():(or("var")||or("let")?(Tt.allowIn=!1,nr=bt,Qn=nn(),pr=xs(),Kt=ft.markEnd(ft.createVariableDeclaration(pr,Qn.value),nr),Tt.allowIn=Yn,Kt.declarations.length===1&&or("in")&&(nn(),xn=Kt,An=Nr(),Kt=null)):(Tt.allowIn=!1,Kt=Nr(),Tt.allowIn=Yn,or("in")&&(Rr(Kt)||Bn({},j.InvalidLHSInForIn),nn(),xn=Kt,An=Nr(),Kt=null)),xn===void 0&&jn(";")),xn===void 0&&(Un(";")||(rn=Nr()),jn(";"),Un(")")||(hn=Nr())),jn(")"),Wn=Tt.inIteration,Tt.inIteration=!0,Fn=bn(),Tt.inIteration=Wn,xn===void 0?ft.createForStatement(Kt,rn,hn,Fn):ft.createForInStatement(xn,An,Fn)}function Tn(){var Kt,rn,hn,xn=[];for(hn=bt,or("default")?(nn(),Kt=null):(tr("case"),Kt=Nr()),jn(":");ht<yt&&!(Un("}")||or("default")||or("case"));)rn=bn(),xn.push(rn);return ft.markEnd(ft.createSwitchCase(Kt,xn),hn)}function Dn(){var Kt,rn,hn,xn,An=[],Fn=null;return tr("try"),Kt=Ds(),or("catch")&&An.push((xn=bt,tr("catch"),jn("("),Un(")")&&Zn(bt),rn=ns(),ut&&Qt(rn.name)&&Bn({},j.StrictCatchVariable),jn(")"),hn=Ds(),ft.markEnd(ft.createCatchClause(rn,hn),xn))),or("finally")&&(nn(),Fn=Ds()),An.length!==0||Fn||On({},j.NoCatchOrFinally),ft.createTryStatement(Kt,[],An,Fn)}function bn(){var Kt,rn,hn,xn,An,Fn,Wn,Qn,pr,nr=bt.type;if(nr===_.EOF&&Zn(bt),nr===_.Punctuator&&bt.value==="{")return Ds();if(xn=bt,nr===_.Punctuator)switch(bt.value){case";":return ft.markEnd((jn(";"),ft.createEmptyStatement()),xn);case"(":return ft.markEnd(function(){var Yn=Nr();return Cr(),ft.createExpressionStatement(Yn)}(),xn)}if(nr===_.Keyword)switch(bt.value){case"break":return ft.markEnd(function(){var Yn,Hn=null;return tr("break"),ot.charCodeAt(ht)===59?(nn(),Tt.inIteration||Tt.inSwitch||On({},j.IllegalBreak),ft.createBreakStatement(null)):Pn()?(Tt.inIteration||Tt.inSwitch||On({},j.IllegalBreak),ft.createBreakStatement(null)):(bt.type===_.Identifier&&(Yn="$"+(Hn=ns()).name,Object.prototype.hasOwnProperty.call(Tt.labelSet,Yn)||On({},j.UnknownLabel,Hn.name)),Cr(),Hn!==null||Tt.inIteration||Tt.inSwitch||On({},j.IllegalBreak),ft.createBreakStatement(Hn))}(),xn);case"continue":return ft.markEnd(function(){var Yn,Hn=null;return tr("continue"),ot.charCodeAt(ht)===59?(nn(),Tt.inIteration||On({},j.IllegalContinue),ft.createContinueStatement(null)):Pn()?(Tt.inIteration||On({},j.IllegalContinue),ft.createContinueStatement(null)):(bt.type===_.Identifier&&(Yn="$"+(Hn=ns()).name,Object.prototype.hasOwnProperty.call(Tt.labelSet,Yn)||On({},j.UnknownLabel,Hn.name)),Cr(),Hn!==null||Tt.inIteration||On({},j.IllegalContinue),ft.createContinueStatement(Hn))}(),xn);case"debugger":return ft.markEnd((tr("debugger"),Cr(),ft.createDebuggerStatement()),xn);case"do":return ft.markEnd((tr("do"),pr=Tt.inIteration,Tt.inIteration=!0,Wn=bn(),Tt.inIteration=pr,tr("while"),jn("("),Qn=Nr(),jn(")"),Un(";")&&nn(),ft.createDoWhileStatement(Wn,Qn)),xn);case"for":return ft.markEnd($n(),xn);case"function":return ft.markEnd(rr(),xn);case"if":return ft.markEnd(function(){var Yn,Hn,$r;return tr("if"),jn("("),Yn=Nr(),jn(")"),Hn=bn(),or("else")?(nn(),$r=bn()):$r=null,ft.createIfStatement(Yn,Hn,$r)}(),xn);case"return":return ft.markEnd((Fn=null,tr("return"),Tt.inFunctionBody||Bn({},j.IllegalReturn),ot.charCodeAt(ht)===32&&Bt(ot.charCodeAt(ht+1))?(Fn=Nr(),Cr(),ft.createReturnStatement(Fn)):Pn()?ft.createReturnStatement(null):(Un(";")||Un("}")||bt.type===_.EOF||(Fn=Nr()),Cr(),ft.createReturnStatement(Fn))),xn);case"switch":return ft.markEnd(function(){var Yn,Hn,$r,Fr,rs;if(tr("switch"),jn("("),Yn=Nr(),jn(")"),jn("{"),Hn=[],Un("}"))return nn(),ft.createSwitchStatement(Yn,Hn);for(Fr=Tt.inSwitch,Tt.inSwitch=!0,rs=!1;ht<yt&&!Un("}");)($r=Tn()).test===null&&(rs&&On({},j.MultipleDefaultsInSwitch),rs=!0),Hn.push($r);return Tt.inSwitch=Fr,jn("}"),ft.createSwitchStatement(Yn,Hn)}(),xn);case"throw":return ft.markEnd(function(){var Yn;return tr("throw"),Pn()&&On({},j.NewlineAfterThrow),Yn=Nr(),Cr(),ft.createThrowStatement(Yn)}(),xn);case"try":return ft.markEnd(Dn(),xn);case"var":return ft.markEnd((tr("var"),An=xs(),Cr(),ft.createVariableDeclaration(An,"var")),xn);case"while":return ft.markEnd(function(){var Yn,Hn,$r;return tr("while"),jn("("),Yn=Nr(),jn(")"),$r=Tt.inIteration,Tt.inIteration=!0,Hn=bn(),Tt.inIteration=$r,ft.createWhileStatement(Yn,Hn)}(),xn);case"with":return ft.markEnd(function(){var Yn,Hn;return ut&&(an(),Bn({},j.StrictModeWith)),tr("with"),jn("("),Yn=Nr(),jn(")"),Hn=bn(),ft.createWithStatement(Yn,Hn)}(),xn)}return(Kt=Nr()).type===rt.Identifier&&Un(":")?(nn(),hn="$"+Kt.name,Object.prototype.hasOwnProperty.call(Tt.labelSet,hn)&&On({},j.Redeclaration,"Label",Kt.name),Tt.labelSet[hn]=!0,rn=bn(),delete Tt.labelSet[hn],ft.markEnd(ft.createLabeledStatement(Kt,rn),xn)):(Cr(),ft.markEnd(ft.createExpressionStatement(Kt),xn))}function Gn(){var Kt,rn,hn,xn,An,Fn,Wn,Qn,pr=[];for(Qn=bt,jn("{");ht<yt&&bt.type===_.StringLiteral&&(rn=bt,Kt=hr(),pr.push(Kt),Kt.expression.type===rt.Literal);)ot.slice(rn.start+1,rn.end-1)==="use strict"?(ut=!0,hn&&Bn(hn,j.StrictOctalLiteral)):!hn&&rn.octal&&(hn=rn);for(xn=Tt.labelSet,An=Tt.inIteration,Fn=Tt.inSwitch,Wn=Tt.inFunctionBody,Tt.labelSet={},Tt.inIteration=!1,Tt.inSwitch=!1,Tt.inFunctionBody=!0;ht<yt&&!Un("}")&&(Kt=hr())!==void 0;)pr.push(Kt);return jn("}"),Tt.labelSet=xn,Tt.inIteration=An,Tt.inSwitch=Fn,Tt.inFunctionBody=Wn,ft.markEnd(ft.createBlockStatement(pr),Qn)}function Jn(Kt){var rn,hn,xn,An,Fn,Wn,Qn=[];if(jn("("),!Un(")"))for(An={};ht<yt&&(hn=bt,rn=ns(),Fn="$"+hn.value,ut?(Qt(hn.value)&&(xn=hn,Wn=j.StrictParamName),Object.prototype.hasOwnProperty.call(An,Fn)&&(xn=hn,Wn=j.StrictParamDupe)):Kt||(Qt(hn.value)?(Kt=hn,Wn=j.StrictParamName):Ut(hn.value)?(Kt=hn,Wn=j.StrictReservedWord):Object.prototype.hasOwnProperty.call(An,Fn)&&(Kt=hn,Wn=j.StrictParamDupe)),Qn.push(rn),An[Fn]=!0,!Un(")"));)jn(",");return jn(")"),{params:Qn,stricted:xn,firstRestricted:Kt,message:Wn}}function rr(){var Kt,rn,hn,xn,An,Fn,Wn,Qn,pr,nr;return nr=bt,tr("function"),xn=bt,Kt=ns(),ut?Qt(xn.value)&&Bn(xn,j.StrictFunctionName):Qt(xn.value)?(Wn=xn,Qn=j.StrictFunctionName):Ut(xn.value)&&(Wn=xn,Qn=j.StrictReservedWord),rn=(Fn=Jn(Wn)).params,An=Fn.stricted,Wn=Fn.firstRestricted,Fn.message&&(Qn=Fn.message),pr=ut,hn=Gn(),ut&&Wn&&On(Wn,Qn),ut&&An&&Bn(An,Qn),ut=pr,ft.markEnd(ft.createFunctionDeclaration(Kt,rn,[],hn),nr)}function hr(){if(bt.type===_.Keyword)switch(bt.value){case"const":case"let":return Kt=bt.value,hn=bt,tr(Kt),rn=xs(Kt),Cr(),ft.markEnd(ft.createVariableDeclaration(rn,Kt),hn);case"function":return rr();default:return bn()}var Kt,rn,hn;if(bt.type!==_.EOF)return bn()}function Gr(){var Kt,rn;return an(),dn(),rn=bt,ut=!1,Kt=function(){for(var hn,xn,An,Fn=[];ht<yt&&(xn=bt).type===_.StringLiteral&&(hn=hr(),Fn.push(hn),hn.expression.type===rt.Literal);)ot.slice(xn.start+1,xn.end-1)==="use strict"?(ut=!0,An&&Bn(An,j.StrictOctalLiteral)):!An&&xn.octal&&(An=xn);for(;ht<yt&&(hn=hr())!==void 0;)Fn.push(hn);return Fn}(),ft.markEnd(ft.createProgram(Kt),rn)}function Ar(){var Kt,rn,hn,xn=[];for(Kt=0;Kt<Ct.tokens.length;++Kt)hn={type:(rn=Ct.tokens[Kt]).type,value:rn.value},Ct.range&&(hn.range=rn.range),Ct.loc&&(hn.loc=rn.loc),xn.push(hn);Ct.tokens=xn}(_e={})[(_={BooleanLiteral:1,EOF:2,Identifier:3,Keyword:4,NullLiteral:5,NumericLiteral:6,Punctuator:7,StringLiteral:8,RegularExpression:9}).BooleanLiteral]="Boolean",_e[_.EOF]="<end>",_e[_.Identifier]="Identifier",_e[_.Keyword]="Keyword",_e[_.NullLiteral]="Null",_e[_.NumericLiteral]="Numeric",_e[_.Punctuator]="Punctuator",_e[_.StringLiteral]="String",_e[_.RegularExpression]="RegularExpression",et=["(","{","[","in","typeof","instanceof","new","return","case","delete","throw","void","=","+=","-=","*=","/=","%=","<<=",">>=",">>>=","&=","|=","^=",",","+","-","*","/","%","++","--","<<",">>",">>>","&","|","^","!","~","&&","||","?",":","===","==",">=","<=","<",">","!=","!=="],rt={AssignmentExpression:"AssignmentExpression",ArrayExpression:"ArrayExpression",BlockStatement:"BlockStatement",BinaryExpression:"BinaryExpression",BreakStatement:"BreakStatement",CallExpression:"CallExpression",CatchClause:"CatchClause",ConditionalExpression:"ConditionalExpression",ContinueStatement:"ContinueStatement",DoWhileStatement:"DoWhileStatement",DebuggerStatement:"DebuggerStatement",EmptyStatement:"EmptyStatement",ExpressionStatement:"ExpressionStatement",ForStatement:"ForStatement",ForInStatement:"ForInStatement",FunctionDeclaration:"FunctionDeclaration",FunctionExpression:"FunctionExpression",Identifier:"Identifier",IfStatement:"IfStatement",Literal:"Literal",LabeledStatement:"LabeledStatement",LogicalExpression:"LogicalExpression",MemberExpression:"MemberExpression",NewExpression:"NewExpression",ObjectExpression:"ObjectExpression",Program:"Program",Property:"Property",ReturnStatement:"ReturnStatement",SequenceExpression:"SequenceExpression",SwitchStatement:"SwitchStatement",SwitchCase:"SwitchCase",ThisExpression:"ThisExpression",ThrowStatement:"ThrowStatement",TryStatement:"TryStatement",UnaryExpression:"UnaryExpression",UpdateExpression:"UpdateExpression",VariableDeclaration:"VariableDeclaration",VariableDeclarator:"VariableDeclarator",WhileStatement:"WhileStatement",WithStatement:"WithStatement"},tt={Data:1,Get:2,Set:4},j={UnexpectedToken:"Unexpected token %0",UnexpectedNumber:"Unexpected number",UnexpectedString:"Unexpected string",UnexpectedIdentifier:"Unexpected identifier",UnexpectedReserved:"Unexpected reserved word",UnexpectedEOS:"Unexpected end of input",NewlineAfterThrow:"Illegal newline after throw",InvalidRegExp:"Invalid regular expression",UnterminatedRegExp:"Invalid regular expression: missing /",InvalidLHSInAssignment:"Invalid left-hand side in assignment",InvalidLHSInForIn:"Invalid left-hand side in for-in",MultipleDefaultsInSwitch:"More than one default clause in switch statement",NoCatchOrFinally:"Missing catch or finally after try",UnknownLabel:"Undefined label '%0'",Redeclaration:"%0 '%1' has already been declared",IllegalContinue:"Illegal continue statement",IllegalBreak:"Illegal break statement",IllegalReturn:"Illegal return statement",StrictModeWith:"Strict mode code may not include a with statement",StrictCatchVariable:"Catch variable may not be eval or arguments in strict mode",StrictVarName:"Variable name may not be eval or arguments in strict mode",StrictParamName:"Parameter name eval or arguments is not allowed in strict mode",StrictParamDupe:"Strict mode function may not have duplicate parameter names",StrictFunctionName:"Function name may not be eval or arguments in strict mode",StrictOctalLiteral:"Octal literals are not allowed in strict mode.",StrictDelete:"Delete of an unqualified identifier in strict mode.",StrictDuplicateProperty:"Duplicate data property in object literal not allowed in strict mode",AccessorDataProperty:"Object literal may not have data and accessor property with the same name",AccessorGetSet:"Object literal may not have multiple get/set accessors with the same name",StrictLHSAssignment:"Assignment to eval or arguments is not allowed in strict mode",StrictLHSPostfix:"Postfix increment/decrement may not have eval or arguments operand in strict mode",StrictLHSPrefix:"Prefix increment/decrement may not have eval or arguments operand in strict mode",StrictReservedWord:"Use of future reserved word in strict mode"},nt={NonAsciiIdentifierStart:new RegExp("[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԧԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠࢢ-ࢬऄ-हऽॐक़-ॡॱ-ॷॹ-ॿঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚗꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꪀ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]"),NonAsciiIdentifierPart:new RegExp("[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮ̀-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁ҃-҇Ҋ-ԧԱ-Ֆՙա-և֑-ׇֽֿׁׂׅׄא-תװ-ײؐ-ؚؠ-٩ٮ-ۓە-ۜ۟-۪ۨ-ۼۿܐ-݊ݍ-ޱ߀-ߵߺࠀ-࠭ࡀ-࡛ࢠࢢ-ࢬࣤ-ࣾऀ-ॣ०-९ॱ-ॷॹ-ॿঁ-ঃঅ-ঌএঐও-নপ-রলশ-হ়-ৄেৈো-ৎৗড়ঢ়য়-ৣ০-ৱਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹ਼ਾ-ੂੇੈੋ-੍ੑਖ਼-ੜਫ਼੦-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૯ଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହ଼-ୄେୈୋ-୍ୖୗଡ଼ଢ଼ୟ-ୣ୦-୯ୱஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௯ఁ-ఃఅ-ఌఎ-ఐఒ-నప-ళవ-హఽ-ౄె-ైొ-్ౕౖౘౙౠ-ౣ౦-౯ಂಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕೖೞೠ-ೣ೦-೯ೱೲംഃഅ-ഌഎ-ഐഒ-ഺഽ-ൄെ-ൈൊ-ൎൗൠ-ൣ൦-൯ൺ-ൿංඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟෲෳก-ฺเ-๎๐-๙ກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟༀ༘༙༠-༩༹༵༷༾-ཇཉ-ཬཱ-྄྆-ྗྙ-ྼ࿆က-၉ၐ-ႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፟ᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-᜔ᜠ-᜴ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲᝳក-៓ៗៜ៝០-៩᠋-᠍᠐-᠙ᠠ-ᡷᢀ-ᢪᢰ-ᣵᤀ-ᤜᤠ-ᤫᤰ-᤻᥆-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧙ᨀ-ᨛᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙ᪧᬀ-ᭋ᭐-᭙᭫-᭳ᮀ-᯳ᰀ-᰷᱀-᱉ᱍ-ᱽ᳐-᳔᳒-ᳶᴀ-ᷦ᷼-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼ‌‍‿⁀⁔ⁱⁿₐ-ₜ⃐-⃥⃜⃡-⃰ℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯ⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿⸯ々-〇〡-〯〱-〵〸-〼ぁ-ゖ゙゚ゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘫꙀ-꙯ꙴ-꙽ꙿ-ꚗꚟ-꛱ꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠧꡀ-ꡳꢀ-꣄꣐-꣙꣠-ꣷꣻ꤀-꤭ꤰ-꥓ꥠ-ꥼꦀ-꧀ꧏ-꧙ꨀ-ꨶꩀ-ꩍ꩐-꩙ꩠ-ꩶꩺꩻꪀ-ꫂꫛ-ꫝꫠ-ꫯꫲ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯪ꯬꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻ︀-️︠-︦︳︴﹍-﹏ﹰ-ﹴﹶ-ﻼ０-９Ａ-Ｚ＿ａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]")},st={name:"SyntaxTree",processComment:function(Kt){var rn,hn;if(!(Kt.type===rt.Program&&Kt.body.length>0)){for(Ct.trailingComments.length>0?Ct.trailingComments[0].range[0]>=Kt.range[1]?(hn=Ct.trailingComments,Ct.trailingComments=[]):Ct.trailingComments.length=0:Ct.bottomRightStack.length>0&&Ct.bottomRightStack[Ct.bottomRightStack.length-1].trailingComments&&Ct.bottomRightStack[Ct.bottomRightStack.length-1].trailingComments[0].range[0]>=Kt.range[1]&&(hn=Ct.bottomRightStack[Ct.bottomRightStack.length-1].trailingComments,delete Ct.bottomRightStack[Ct.bottomRightStack.length-1].trailingComments);Ct.bottomRightStack.length>0&&Ct.bottomRightStack[Ct.bottomRightStack.length-1].range[0]>=Kt.range[0];)rn=Ct.bottomRightStack.pop();rn?rn.leadingComments&&rn.leadingComments[rn.leadingComments.length-1].range[1]<=Kt.range[0]&&(Kt.leadingComments=rn.leadingComments,delete rn.leadingComments):Ct.leadingComments.length>0&&Ct.leadingComments[Ct.leadingComments.length-1].range[1]<=Kt.range[0]&&(Kt.leadingComments=Ct.leadingComments,Ct.leadingComments=[]),hn&&(Kt.trailingComments=hn),Ct.bottomRightStack.push(Kt)}},markEnd:function(Kt,rn){return Ct.range&&(Kt.range=[rn.start,ht]),Ct.loc&&(Kt.loc=new kn(rn.startLineNumber===void 0?rn.lineNumber:rn.startLineNumber,rn.start-(rn.startLineStart===void 0?rn.lineStart:rn.startLineStart),pt,ht-it),this.postProcess(Kt)),Ct.attachComment&&this.processComment(Kt),Kt},postProcess:function(Kt){return Ct.source&&(Kt.loc.source=Ct.source),Kt},createArrayExpression:function(Kt){return{type:rt.ArrayExpression,elements:Kt}},createAssignmentExpression:function(Kt,rn,hn){return{type:rt.AssignmentExpression,operator:Kt,left:rn,right:hn}},createBinaryExpression:function(Kt,rn,hn){return{type:Kt==="||"||Kt==="&&"?rt.LogicalExpression:rt.BinaryExpression,operator:Kt,left:rn,right:hn}},createBlockStatement:function(Kt){return{type:rt.BlockStatement,body:Kt}},createBreakStatement:function(Kt){return{type:rt.BreakStatement,label:Kt}},createCallExpression:function(Kt,rn){return{type:rt.CallExpression,callee:Kt,arguments:rn}},createCatchClause:function(Kt,rn){return{type:rt.CatchClause,param:Kt,body:rn}},createConditionalExpression:function(Kt,rn,hn){return{type:rt.ConditionalExpression,test:Kt,consequent:rn,alternate:hn}},createContinueStatement:function(Kt){return{type:rt.ContinueStatement,label:Kt}},createDebuggerStatement:function(){return{type:rt.DebuggerStatement}},createDoWhileStatement:function(Kt,rn){return{type:rt.DoWhileStatement,body:Kt,test:rn}},createEmptyStatement:function(){return{type:rt.EmptyStatement}},createExpressionStatement:function(Kt){return{type:rt.ExpressionStatement,expression:Kt}},createForStatement:function(Kt,rn,hn,xn){return{type:rt.ForStatement,init:Kt,test:rn,update:hn,body:xn}},createForInStatement:function(Kt,rn,hn){return{type:rt.ForInStatement,left:Kt,right:rn,body:hn,each:!1}},createFunctionDeclaration:function(Kt,rn,hn,xn){return{type:rt.FunctionDeclaration,id:Kt,params:rn,defaults:hn,body:xn,rest:null,generator:!1,expression:!1}},createFunctionExpression:function(Kt,rn,hn,xn){return{type:rt.FunctionExpression,id:Kt,params:rn,defaults:hn,body:xn,rest:null,generator:!1,expression:!1}},createIdentifier:function(Kt){return{type:rt.Identifier,name:Kt}},createIfStatement:function(Kt,rn,hn){return{type:rt.IfStatement,test:Kt,consequent:rn,alternate:hn}},createLabeledStatement:function(Kt,rn){return{type:rt.LabeledStatement,label:Kt,body:rn}},createLiteral:function(Kt){return{type:rt.Literal,value:Kt.value,raw:ot.slice(Kt.start,Kt.end)}},createMemberExpression:function(Kt,rn,hn){return{type:rt.MemberExpression,computed:Kt==="[",object:rn,property:hn}},createNewExpression:function(Kt,rn){return{type:rt.NewExpression,callee:Kt,arguments:rn}},createObjectExpression:function(Kt){return{type:rt.ObjectExpression,properties:Kt}},createPostfixExpression:function(Kt,rn){return{type:rt.UpdateExpression,operator:Kt,argument:rn,prefix:!1}},createProgram:function(Kt){return{type:rt.Program,body:Kt}},createProperty:function(Kt,rn,hn){return{type:rt.Property,key:rn,value:hn,kind:Kt}},createReturnStatement:function(Kt){return{type:rt.ReturnStatement,argument:Kt}},createSequenceExpression:function(Kt){return{type:rt.SequenceExpression,expressions:Kt}},createSwitchCase:function(Kt,rn){return{type:rt.SwitchCase,test:Kt,consequent:rn}},createSwitchStatement:function(Kt,rn){return{type:rt.SwitchStatement,discriminant:Kt,cases:rn}},createThisExpression:function(){return{type:rt.ThisExpression}},createThrowStatement:function(Kt){return{type:rt.ThrowStatement,argument:Kt}},createTryStatement:function(Kt,rn,hn,xn){return{type:rt.TryStatement,block:Kt,guardedHandlers:rn,handlers:hn,finalizer:xn}},createUnaryExpression:function(Kt,rn){return Kt==="++"||Kt==="--"?{type:rt.UpdateExpression,operator:Kt,argument:rn,prefix:!0}:{type:rt.UnaryExpression,operator:Kt,argument:rn,prefix:!0}},createVariableDeclaration:function(Kt,rn){return{type:rt.VariableDeclaration,declarations:Kt,kind:rn}},createVariableDeclarator:function(Kt,rn){return{type:rt.VariableDeclarator,id:Kt,init:rn}},createWhileStatement:function(Kt,rn){return{type:rt.WhileStatement,test:Kt,body:rn}},createWithStatement:function(Kt,rn){return{type:rt.WithStatement,object:Kt,body:rn}}},$.version="1.2.5",$.tokenize=function(Kt,rn){var hn;typeof Kt=="string"||Kt instanceof String||(Kt=String(Kt)),ft=st,ht=0,pt=(ot=Kt).length>0?1:0,it=0,yt=ot.length,bt=null,Tt={allowIn:!0,labelSet:{},inFunctionBody:!1,inIteration:!1,inSwitch:!1,lastCommentStart:-1},Ct={},(rn=rn||{}).tokens=!0,Ct.tokens=[],Ct.tokenize=!0,Ct.openParenToken=-1,Ct.openCurlyToken=-1,Ct.range=typeof rn.range=="boolean"&&rn.range,Ct.loc=typeof rn.loc=="boolean"&&rn.loc,typeof rn.comment=="boolean"&&rn.comment&&(Ct.comments=[]),typeof rn.tolerant=="boolean"&&rn.tolerant&&(Ct.errors=[]);try{if(dn(),bt.type===_.EOF)return Ct.tokens;for(nn();bt.type!==_.EOF;)try{nn()}catch(xn){if(Ct.errors){Ct.errors.push(xn);break}throw xn}Ar(),hn=Ct.tokens,Ct.comments!==void 0&&(hn.comments=Ct.comments),Ct.errors!==void 0&&(hn.errors=Ct.errors)}catch(xn){throw xn}finally{Ct={}}return hn},$.parse=function(Kt,rn){var hn,xn;xn=String,typeof Kt=="string"||Kt instanceof String||(Kt=xn(Kt)),ft=st,ht=0,pt=(ot=Kt).length>0?1:0,it=0,yt=ot.length,bt=null,Tt={allowIn:!0,labelSet:{},inFunctionBody:!1,inIteration:!1,inSwitch:!1,lastCommentStart:-1},Ct={},rn!==void 0&&(Ct.range=typeof rn.range=="boolean"&&rn.range,Ct.loc=typeof rn.loc=="boolean"&&rn.loc,Ct.attachComment=typeof rn.attachComment=="boolean"&&rn.attachComment,Ct.loc&&rn.source!==null&&rn.source!==void 0&&(Ct.source=xn(rn.source)),typeof rn.tokens=="boolean"&&rn.tokens&&(Ct.tokens=[]),typeof rn.comment=="boolean"&&rn.comment&&(Ct.comments=[]),typeof rn.tolerant=="boolean"&&rn.tolerant&&(Ct.errors=[]),Ct.attachComment&&(Ct.range=!0,Ct.comments=[],Ct.bottomRightStack=[],Ct.trailingComments=[],Ct.leadingComments=[]));try{hn=Gr(),Ct.comments!==void 0&&(hn.comments=Ct.comments),Ct.tokens!==void 0&&(Ar(),hn.tokens=Ct.tokens),Ct.errors!==void 0&&(hn.errors=Ct.errors)}catch(An){throw An}finally{Ct={}}return hn},$.Syntax=function(){var Kt,rn={};for(Kt in typeof Object.create=="function"&&(rn=Object.create(null)),rt)rt.hasOwnProperty(Kt)&&(rn[Kt]=rt[Kt]);return typeof Object.freeze=="function"&&Object.freeze(rn),rn}()})=="function"?a.apply(s,c):a)===void 0||(i.exports=d)})()},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(i,s,o){(function(a){var c=o(11);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d=()=>o(160);let g;class b{constructor(){this.util=o(161),this.textEncoder=new this.util.TextEncoder}fetch(_,_e){return Object(c.b)().global.fetch!=null?Object(c.b)().global.fetch(_,_e):(g==null&&(g=d()),g(_,_e))}now(){const _=a.hrtime();return 1e3*_[0]+_[1]/1e6}encode(_,_e){if(_e!=="utf-8"&&_e!=="utf8")throw new Error("Node built-in encoder only supports utf-8, but got "+_e);return this.textEncoder.encode(_)}decode(_,_e){return _.length===0?"":new this.util.TextDecoder(_e).decode(_)}}Object(c.b)().get("IS_NODE")&&Object(c.b)().setPlatform("node",new b)}).call(this,o(44))},function(i,s){},function(i,s){},function(i,s,o){(function(a){var c;(function(d,g,b){function $(et){var rt,tt=this,j=(rt=4022871197,function(nt){nt=nt.toString();for(var st=0;st<nt.length;st++){var ot=.02519603282416938*(rt+=nt.charCodeAt(st));ot-=rt=ot>>>0,rt=(ot*=rt)>>>0,rt+=4294967296*(ot-=rt)}return 23283064365386963e-26*(rt>>>0)});tt.next=function(){var nt=2091639*tt.s0+23283064365386963e-26*tt.c;return tt.s0=tt.s1,tt.s1=tt.s2,tt.s2=nt-(tt.c=0|nt)},tt.c=1,tt.s0=j(" "),tt.s1=j(" "),tt.s2=j(" "),tt.s0-=j(et),tt.s0<0&&(tt.s0+=1),tt.s1-=j(et),tt.s1<0&&(tt.s1+=1),tt.s2-=j(et),tt.s2<0&&(tt.s2+=1),j=null}function _(et,rt){return rt.c=et.c,rt.s0=et.s0,rt.s1=et.s1,rt.s2=et.s2,rt}function _e(et,rt){var tt=new $(et),j=rt&&rt.state,nt=tt.next;return nt.int32=function(){return 4294967296*tt.next()|0},nt.double=function(){return nt()+11102230246251565e-32*(2097152*nt()|0)},nt.quick=nt,j&&(typeof j=="object"&&_(j,tt),nt.state=function(){return _(tt,{})}),nt}g&&g.exports?g.exports=_e:o(22)&&o(32)?(c=function(){return _e}.call(s,o,s,g))===void 0||(g.exports=c):this.alea=_e})(0,a,o(22))}).call(this,o(31)(i))},function(i,s,o){(function(a){var c;(function(d,g,b){function $(et){var rt=this,tt="";rt.x=0,rt.y=0,rt.z=0,rt.w=0,rt.next=function(){var nt=rt.x^rt.x<<11;return rt.x=rt.y,rt.y=rt.z,rt.z=rt.w,rt.w^=rt.w>>>19^nt^nt>>>8},et===(0|et)?rt.x=et:tt+=et;for(var j=0;j<tt.length+64;j++)rt.x^=0|tt.charCodeAt(j),rt.next()}function _(et,rt){return rt.x=et.x,rt.y=et.y,rt.z=et.z,rt.w=et.w,rt}function _e(et,rt){var tt=new $(et),j=rt&&rt.state,nt=function(){return(tt.next()>>>0)/4294967296};return nt.double=function(){do var st=((tt.next()>>>11)+(tt.next()>>>0)/4294967296)/2097152;while(st===0);return st},nt.int32=tt.next,nt.quick=nt,j&&(typeof j=="object"&&_(j,tt),nt.state=function(){return _(tt,{})}),nt}g&&g.exports?g.exports=_e:o(22)&&o(32)?(c=function(){return _e}.call(s,o,s,g))===void 0||(g.exports=c):this.xor128=_e})(0,a,o(22))}).call(this,o(31)(i))},function(i,s,o){(function(a){var c;(function(d,g,b){function $(et){var rt=this,tt="";rt.next=function(){var nt=rt.x^rt.x>>>2;return rt.x=rt.y,rt.y=rt.z,rt.z=rt.w,rt.w=rt.v,(rt.d=rt.d+362437|0)+(rt.v=rt.v^rt.v<<4^nt^nt<<1)|0},rt.x=0,rt.y=0,rt.z=0,rt.w=0,rt.v=0,et===(0|et)?rt.x=et:tt+=et;for(var j=0;j<tt.length+64;j++)rt.x^=0|tt.charCodeAt(j),j==tt.length&&(rt.d=rt.x<<10^rt.x>>>4),rt.next()}function _(et,rt){return rt.x=et.x,rt.y=et.y,rt.z=et.z,rt.w=et.w,rt.v=et.v,rt.d=et.d,rt}function _e(et,rt){var tt=new $(et),j=rt&&rt.state,nt=function(){return(tt.next()>>>0)/4294967296};return nt.double=function(){do var st=((tt.next()>>>11)+(tt.next()>>>0)/4294967296)/2097152;while(st===0);return st},nt.int32=tt.next,nt.quick=nt,j&&(typeof j=="object"&&_(j,tt),nt.state=function(){return _(tt,{})}),nt}g&&g.exports?g.exports=_e:o(22)&&o(32)?(c=function(){return _e}.call(s,o,s,g))===void 0||(g.exports=c):this.xorwow=_e})(0,a,o(22))}).call(this,o(31)(i))},function(i,s,o){(function(a){var c;(function(d,g,b){function $(et){var rt=this;rt.next=function(){var tt,j,nt=rt.x,st=rt.i;return tt=nt[st],j=(tt^=tt>>>7)^tt<<24,j^=(tt=nt[st+1&7])^tt>>>10,j^=(tt=nt[st+3&7])^tt>>>3,j^=(tt=nt[st+4&7])^tt<<7,tt=nt[st+7&7],j^=(tt^=tt<<13)^tt<<9,nt[st]=j,rt.i=st+1&7,j},function(tt,j){var nt,st=[];if(j===(0|j))st[0]=j;else for(j=""+j,nt=0;nt<j.length;++nt)st[7&nt]=st[7&nt]<<15^j.charCodeAt(nt)+st[nt+1&7]<<13;for(;st.length<8;)st.push(0);for(nt=0;nt<8&&st[nt]===0;++nt);for(nt==8?st[7]=-1:st[nt],tt.x=st,tt.i=0,nt=256;nt>0;--nt)tt.next()}(rt,et)}function _(et,rt){return rt.x=et.x.slice(),rt.i=et.i,rt}function _e(et,rt){et==null&&(et=+new Date);var tt=new $(et),j=rt&&rt.state,nt=function(){return(tt.next()>>>0)/4294967296};return nt.double=function(){do var st=((tt.next()>>>11)+(tt.next()>>>0)/4294967296)/2097152;while(st===0);return st},nt.int32=tt.next,nt.quick=nt,j&&(j.x&&_(j,tt),nt.state=function(){return _(tt,{})}),nt}g&&g.exports?g.exports=_e:o(22)&&o(32)?(c=function(){return _e}.call(s,o,s,g))===void 0||(g.exports=c):this.xorshift7=_e})(0,a,o(22))}).call(this,o(31)(i))},function(i,s,o){(function(a){var c;(function(d,g,b){function $(et){var rt=this;rt.next=function(){var tt,j,nt=rt.w,st=rt.X,ot=rt.i;return rt.w=nt=nt+1640531527|0,j=st[ot+34&127],tt=st[ot=ot+1&127],j^=j<<13,tt^=tt<<17,j^=j>>>15,tt^=tt>>>12,j=st[ot]=j^tt,rt.i=ot,j+(nt^nt>>>16)|0},function(tt,j){var nt,st,ot,ut,ht,pt=[],it=128;for(j===(0|j)?(st=j,j=null):(j+="\0",st=0,it=Math.max(it,j.length)),ot=0,ut=-32;ut<it;++ut)j&&(st^=j.charCodeAt((ut+32)%j.length)),ut===0&&(ht=st),st^=st<<10,st^=st>>>15,st^=st<<4,st^=st>>>13,ut>=0&&(ht=ht+1640531527|0,ot=(nt=pt[127&ut]^=st+ht)==0?ot+1:0);for(ot>=128&&(pt[127&(j&&j.length||0)]=-1),ot=127,ut=512;ut>0;--ut)st=pt[ot+34&127],nt=pt[ot=ot+1&127],st^=st<<13,nt^=nt<<17,st^=st>>>15,nt^=nt>>>12,pt[ot]=st^nt;tt.w=ht,tt.X=pt,tt.i=ot}(rt,et)}function _(et,rt){return rt.i=et.i,rt.w=et.w,rt.X=et.X.slice(),rt}function _e(et,rt){et==null&&(et=+new Date);var tt=new $(et),j=rt&&rt.state,nt=function(){return(tt.next()>>>0)/4294967296};return nt.double=function(){do var st=((tt.next()>>>11)+(tt.next()>>>0)/4294967296)/2097152;while(st===0);return st},nt.int32=tt.next,nt.quick=nt,j&&(j.X&&_(j,tt),nt.state=function(){return _(tt,{})}),nt}g&&g.exports?g.exports=_e:o(22)&&o(32)?(c=function(){return _e}.call(s,o,s,g))===void 0||(g.exports=c):this.xor4096=_e})(0,a,o(22))}).call(this,o(31)(i))},function(i,s,o){(function(a){var c;(function(d,g,b){function $(et){var rt=this,tt="";rt.next=function(){var nt=rt.b,st=rt.c,ot=rt.d,ut=rt.a;return nt=nt<<25^nt>>>7^st,st=st-ot|0,ot=ot<<24^ot>>>8^ut,ut=ut-nt|0,rt.b=nt=nt<<20^nt>>>12^st,rt.c=st=st-ot|0,rt.d=ot<<16^st>>>16^ut,rt.a=ut-nt|0},rt.a=0,rt.b=0,rt.c=-1640531527,rt.d=1367130551,et===Math.floor(et)?(rt.a=et/4294967296|0,rt.b=0|et):tt+=et;for(var j=0;j<tt.length+20;j++)rt.b^=0|tt.charCodeAt(j),rt.next()}function _(et,rt){return rt.a=et.a,rt.b=et.b,rt.c=et.c,rt.d=et.d,rt}function _e(et,rt){var tt=new $(et),j=rt&&rt.state,nt=function(){return(tt.next()>>>0)/4294967296};return nt.double=function(){do var st=((tt.next()>>>11)+(tt.next()>>>0)/4294967296)/2097152;while(st===0);return st},nt.int32=tt.next,nt.quick=nt,j&&(typeof j=="object"&&_(j,tt),nt.state=function(){return _(tt,{})}),nt}g&&g.exports?g.exports=_e:o(22)&&o(32)?(c=function(){return _e}.call(s,o,s,g))===void 0||(g.exports=c):this.tychei=_e})(0,a,o(22))}).call(this,o(31)(i))},function(i,s,o){var a;(function(c,d){var g,b=this,$=d.pow(256,6),_=d.pow(2,52),_e=2*_;function et(st,ot,ut){var ht=[],pt=j(function ft(bt,Tt){var Ct,_t=[],Ot=typeof bt;if(Tt&&Ot=="object")for(Ct in bt)try{_t.push(ft(bt[Ct],Tt-1))}catch{}return _t.length?_t:Ot=="string"?bt:bt+"\0"}((ot=ot==1?{entropy:!0}:ot||{}).entropy?[st,nt(c)]:st??function(){try{var ft;return g&&(ft=g.randomBytes)?ft=ft(256):(ft=new Uint8Array(256),(b.crypto||b.msCrypto).getRandomValues(ft)),nt(ft)}catch{var bt=b.navigator,Tt=bt&&bt.plugins;return[+new Date,b,Tt,b.screen,nt(c)]}}(),3),ht),it=new rt(ht),yt=function(){for(var ft=it.g(6),bt=$,Tt=0;ft<_;)ft=256*(ft+Tt),bt*=256,Tt=it.g(1);for(;ft>=_e;)ft/=2,bt/=2,Tt>>>=1;return(ft+Tt)/bt};return yt.int32=function(){return 0|it.g(4)},yt.quick=function(){return it.g(4)/4294967296},yt.double=yt,j(nt(it.S),c),(ot.pass||ut||function(ft,bt,Tt,Ct){return Ct&&(Ct.S&&tt(Ct,it),ft.state=function(){return tt(it,{})}),Tt?(d.random=ft,bt):ft})(yt,pt,"global"in ot?ot.global:this==d,ot.state)}function rt(st){var ot,ut=st.length,ht=this,pt=0,it=ht.i=ht.j=0,yt=ht.S=[];for(ut||(st=[ut++]);pt<256;)yt[pt]=pt++;for(pt=0;pt<256;pt++)yt[pt]=yt[it=255&it+st[pt%ut]+(ot=yt[pt])],yt[it]=ot;(ht.g=function(ft){for(var bt,Tt=0,Ct=ht.i,_t=ht.j,Ot=ht.S;ft--;)bt=Ot[Ct=255&Ct+1],Tt=256*Tt+Ot[255&(Ot[Ct]=Ot[_t=255&_t+bt])+(Ot[_t]=bt)];return ht.i=Ct,ht.j=_t,Tt})(256)}function tt(st,ot){return ot.i=st.i,ot.j=st.j,ot.S=st.S.slice(),ot}function j(st,ot){for(var ut,ht=st+"",pt=0;pt<ht.length;)ot[255&pt]=255&(ut^=19*ot[255&pt])+ht.charCodeAt(pt++);return nt(ot)}function nt(st){return String.fromCharCode.apply(0,st)}if(d.seedrandom=et,j(d.random(),c),i.exports){i.exports=et;try{g=o(169)}catch{}}else(a=function(){return et}.call(s,o,s,i))===void 0||(i.exports=a)})([],Math)},function(i,s){},function(i,s,o){(function(a){var c=a!==void 0&&a||typeof self<"u"&&self||window,d=Function.prototype.apply;function g(b,$){this._id=b,this._clearFn=$}s.setTimeout=function(){return new g(d.call(setTimeout,c,arguments),clearTimeout)},s.setInterval=function(){return new g(d.call(setInterval,c,arguments),clearInterval)},s.clearTimeout=s.clearInterval=function(b){b&&b.close()},g.prototype.unref=g.prototype.ref=function(){},g.prototype.close=function(){this._clearFn.call(c,this._id)},s.enroll=function(b,$){clearTimeout(b._idleTimeoutId),b._idleTimeout=$},s.unenroll=function(b){clearTimeout(b._idleTimeoutId),b._idleTimeout=-1},s._unrefActive=s.active=function(b){clearTimeout(b._idleTimeoutId);var $=b._idleTimeout;$>=0&&(b._idleTimeoutId=setTimeout(function(){b._onTimeout&&b._onTimeout()},$))},o(171),s.setImmediate=typeof self<"u"&&self.setImmediate||a!==void 0&&a.setImmediate||this&&this.setImmediate,s.clearImmediate=typeof self<"u"&&self.clearImmediate||a!==void 0&&a.clearImmediate||this&&this.clearImmediate}).call(this,o(21))},function(i,s,o){(function(a,c){(function(d,g){if(!d.setImmediate){var b,$,_,_e,et,rt=1,tt={},j=!1,nt=d.document,st=Object.getPrototypeOf&&Object.getPrototypeOf(d);st=st&&st.setTimeout?st:d,{}.toString.call(d.process)==="[object process]"?b=function(ht){c.nextTick(function(){ut(ht)})}:function(){if(d.postMessage&&!d.importScripts){var ht=!0,pt=d.onmessage;return d.onmessage=function(){ht=!1},d.postMessage("","*"),d.onmessage=pt,ht}}()?(_e="setImmediate$"+Math.random()+"$",et=function(ht){ht.source===d&&typeof ht.data=="string"&&ht.data.indexOf(_e)===0&&ut(+ht.data.slice(_e.length))},d.addEventListener?d.addEventListener("message",et,!1):d.attachEvent("onmessage",et),b=function(ht){d.postMessage(_e+ht,"*")}):d.MessageChannel?((_=new MessageChannel).port1.onmessage=function(ht){ut(ht.data)},b=function(ht){_.port2.postMessage(ht)}):nt&&"onreadystatechange"in nt.createElement("script")?($=nt.documentElement,b=function(ht){var pt=nt.createElement("script");pt.onreadystatechange=function(){ut(ht),pt.onreadystatechange=null,$.removeChild(pt),pt=null},$.appendChild(pt)}):b=function(ht){setTimeout(ut,0,ht)},st.setImmediate=function(ht){typeof ht!="function"&&(ht=new Function(""+ht));for(var pt=new Array(arguments.length-1),it=0;it<pt.length;it++)pt[it]=arguments[it+1];var yt={callback:ht,args:pt};return tt[rt]=yt,b(rt),rt++},st.clearImmediate=ot}function ot(ht){delete tt[ht]}function ut(ht){if(j)setTimeout(ut,0,ht);else{var pt=tt[ht];if(pt){j=!0;try{(function(it){var yt=it.callback,ft=it.args;switch(ft.length){case 0:yt();break;case 1:yt(ft[0]);break;case 2:yt(ft[0],ft[1]);break;case 3:yt(ft[0],ft[1],ft[2]);break;default:yt.apply(void 0,ft)}})(pt)}finally{ot(ht),j=!1}}}}})(typeof self>"u"?a===void 0?this:a:self)}).call(this,o(21),o(44))},function(i,s){function o(c){for(var d,g=new a(c),b=[];!g.eof();){var $=_();b.push($)}return b;function _(){var _e={};_e.deltaTime=g.readVarInt();var et=g.readUInt8();if((240&et)==240){if(et!==255){if(et==240)return _e.type="sysEx",tt=g.readVarInt(),_e.data=g.readBytes(tt),_e;if(et==247)return _e.type="endSysEx",tt=g.readVarInt(),_e.data=g.readBytes(tt),_e;throw"Unrecognised MIDI event type byte: "+et}_e.meta=!0;var rt=g.readUInt8(),tt=g.readVarInt();switch(rt){case 0:if(_e.type="sequenceNumber",tt!==2)throw"Expected length for sequenceNumber event is 2, got "+tt;return _e.number=g.readUInt16(),_e;case 1:return _e.type="text",_e.text=g.readString(tt),_e;case 2:return _e.type="copyrightNotice",_e.text=g.readString(tt),_e;case 3:return _e.type="trackName",_e.text=g.readString(tt),_e;case 4:return _e.type="instrumentName",_e.text=g.readString(tt),_e;case 5:return _e.type="lyrics",_e.text=g.readString(tt),_e;case 6:return _e.type="marker",_e.text=g.readString(tt),_e;case 7:return _e.type="cuePoint",_e.text=g.readString(tt),_e;case 32:if(_e.type="channelPrefix",tt!=1)throw"Expected length for channelPrefix event is 1, got "+tt;return _e.channel=g.readUInt8(),_e;case 33:if(_e.type="portPrefix",tt!=1)throw"Expected length for portPrefix event is 1, got "+tt;return _e.port=g.readUInt8(),_e;case 47:if(_e.type="endOfTrack",tt!=0)throw"Expected length for endOfTrack event is 0, got "+tt;return _e;case 81:if(_e.type="setTempo",tt!=3)throw"Expected length for setTempo event is 3, got "+tt;return _e.microsecondsPerBeat=g.readUInt24(),_e;case 84:if(_e.type="smpteOffset",tt!=5)throw"Expected length for smpteOffset event is 5, got "+tt;var j=g.readUInt8();return _e.frameRate={0:24,32:25,64:29,96:30}[96&j],_e.hour=31&j,_e.min=g.readUInt8(),_e.sec=g.readUInt8(),_e.frame=g.readUInt8(),_e.subFrame=g.readUInt8(),_e;case 88:if(_e.type="timeSignature",tt!=4)throw"Expected length for timeSignature event is 4, got "+tt;return _e.numerator=g.readUInt8(),_e.denominator=1<<g.readUInt8(),_e.metronome=g.readUInt8(),_e.thirtyseconds=g.readUInt8(),_e;case 89:if(_e.type="keySignature",tt!=2)throw"Expected length for keySignature event is 2, got "+tt;return _e.key=g.readInt8(),_e.scale=g.readUInt8(),_e;case 127:return _e.type="sequencerSpecific",_e.data=g.readBytes(tt),_e;default:return _e.type="unknownMeta",_e.data=g.readBytes(tt),_e.metatypeByte=rt,_e}}else{var nt;if(128&et)nt=g.readUInt8(),d=et;else{if(d===null)throw"Running status byte encountered before status byte";nt=et,et=d,_e.running=!0}var st=et>>4;switch(_e.channel=15&et,st){case 8:return _e.type="noteOff",_e.noteNumber=nt,_e.velocity=g.readUInt8(),_e;case 9:var ot=g.readUInt8();return _e.type=ot===0?"noteOff":"noteOn",_e.noteNumber=nt,_e.velocity=ot,ot===0&&(_e.byte9=!0),_e;case 10:return _e.type="noteAftertouch",_e.noteNumber=nt,_e.amount=g.readUInt8(),_e;case 11:return _e.type="controller",_e.controllerType=nt,_e.value=g.readUInt8(),_e;case 12:return _e.type="programChange",_e.programNumber=nt,_e;case 13:return _e.type="channelAftertouch",_e.amount=nt,_e;case 14:return _e.type="pitchBend",_e.value=nt+(g.readUInt8()<<7)-8192,_e;default:throw"Unrecognised MIDI event type: "+st}}}}function a(c){this.buffer=c,this.bufferLen=this.buffer.length,this.pos=0}a.prototype.eof=function(){return this.pos>=this.bufferLen},a.prototype.readUInt8=function(){var c=this.buffer[this.pos];return this.pos+=1,c},a.prototype.readInt8=function(){var c=this.readUInt8();return 128&c?c-256:c},a.prototype.readUInt16=function(){return(this.readUInt8()<<8)+this.readUInt8()},a.prototype.readInt16=function(){var c=this.readUInt16();return 32768&c?c-65536:c},a.prototype.readUInt24=function(){return(this.readUInt8()<<16)+(this.readUInt8()<<8)+this.readUInt8()},a.prototype.readInt24=function(){var c=this.readUInt24();return 8388608&c?c-16777216:c},a.prototype.readUInt32=function(){return(this.readUInt8()<<24)+(this.readUInt8()<<16)+(this.readUInt8()<<8)+this.readUInt8()},a.prototype.readBytes=function(c){var d=this.buffer.slice(this.pos,this.pos+c);return this.pos+=c,d},a.prototype.readString=function(c){var d=this.readBytes(c);return String.fromCharCode.apply(null,d)},a.prototype.readVarInt=function(){for(var c=0;!this.eof();){var d=this.readUInt8();if(!(128&d))return c+d;c+=127&d,c<<=7}return c},a.prototype.readChunk=function(){var c=this.readString(4),d=this.readUInt32();return{id:c,length:d,data:this.readBytes(d)}},i.exports=function(c){var d=new a(c),g=d.readChunk();if(g.id!="MThd")throw"Bad MIDI file.  Expected 'MHdr', got: '"+g.id+"'";for(var b=function(rt){var tt=new a(rt),j=tt.readUInt16(),nt=tt.readUInt16(),st={format:j,numTracks:nt},ot=tt.readUInt16();return 32768&ot?(st.framesPerSecond=256-(ot>>8),st.ticksPerFrame=255&ot):st.ticksPerBeat=ot,st}(g.data),$=[],_=0;!d.eof()&&_<b.numTracks;_++){var _e=d.readChunk();if(_e.id!="MTrk")throw"Bad MIDI file.  Expected 'MTrk', got: '"+_e.id+"'";var et=o(_e.data);$.push(et)}return{header:b,tracks:$}}},function(i,s){function o(d,g,b){var $,_=new c,_e=g.length,et=null;for($=0;$<_e;$++)b.running!==!1&&(b.running||g[$].running)||(et=null),et=a(_,g[$],et,b.useByte9ForNoteOff);d.writeChunk("MTrk",_.buffer)}function a(d,g,b,$){var _=g.type,_e=g.deltaTime,et=g.text||"",rt=g.data||[],tt=null;switch(d.writeVarInt(_e),_){case"sequenceNumber":d.writeUInt8(255),d.writeUInt8(0),d.writeVarInt(2),d.writeUInt16(g.number);break;case"text":d.writeUInt8(255),d.writeUInt8(1),d.writeVarInt(et.length),d.writeString(et);break;case"copyrightNotice":d.writeUInt8(255),d.writeUInt8(2),d.writeVarInt(et.length),d.writeString(et);break;case"trackName":d.writeUInt8(255),d.writeUInt8(3),d.writeVarInt(et.length),d.writeString(et);break;case"instrumentName":d.writeUInt8(255),d.writeUInt8(4),d.writeVarInt(et.length),d.writeString(et);break;case"lyrics":d.writeUInt8(255),d.writeUInt8(5),d.writeVarInt(et.length),d.writeString(et);break;case"marker":d.writeUInt8(255),d.writeUInt8(6),d.writeVarInt(et.length),d.writeString(et);break;case"cuePoint":d.writeUInt8(255),d.writeUInt8(7),d.writeVarInt(et.length),d.writeString(et);break;case"channelPrefix":d.writeUInt8(255),d.writeUInt8(32),d.writeVarInt(1),d.writeUInt8(g.channel);break;case"portPrefix":d.writeUInt8(255),d.writeUInt8(33),d.writeVarInt(1),d.writeUInt8(g.port);break;case"endOfTrack":d.writeUInt8(255),d.writeUInt8(47),d.writeVarInt(0);break;case"setTempo":d.writeUInt8(255),d.writeUInt8(81),d.writeVarInt(3),d.writeUInt24(g.microsecondsPerBeat);break;case"smpteOffset":d.writeUInt8(255),d.writeUInt8(84),d.writeVarInt(5);var j=31&g.hour|{24:0,25:32,29:64,30:96}[g.frameRate];d.writeUInt8(j),d.writeUInt8(g.min),d.writeUInt8(g.sec),d.writeUInt8(g.frame),d.writeUInt8(g.subFrame);break;case"timeSignature":d.writeUInt8(255),d.writeUInt8(88),d.writeVarInt(4),d.writeUInt8(g.numerator);var nt=255&Math.floor(Math.log(g.denominator)/Math.LN2);d.writeUInt8(nt),d.writeUInt8(g.metronome),d.writeUInt8(g.thirtyseconds||8);break;case"keySignature":d.writeUInt8(255),d.writeUInt8(89),d.writeVarInt(2),d.writeInt8(g.key),d.writeUInt8(g.scale);break;case"sequencerSpecific":d.writeUInt8(255),d.writeUInt8(127),d.writeVarInt(rt.length),d.writeBytes(rt);break;case"unknownMeta":g.metatypeByte!=null&&(d.writeUInt8(255),d.writeUInt8(g.metatypeByte),d.writeVarInt(rt.length),d.writeBytes(rt));break;case"sysEx":d.writeUInt8(240),d.writeVarInt(rt.length),d.writeBytes(rt);break;case"endSysEx":d.writeUInt8(247),d.writeVarInt(rt.length),d.writeBytes(rt);break;case"noteOff":(tt=($!==!1&&g.byte9||$&&g.velocity==0?144:128)|g.channel)!==b&&d.writeUInt8(tt),d.writeUInt8(g.noteNumber),d.writeUInt8(g.velocity);break;case"noteOn":(tt=144|g.channel)!==b&&d.writeUInt8(tt),d.writeUInt8(g.noteNumber),d.writeUInt8(g.velocity);break;case"noteAftertouch":(tt=160|g.channel)!==b&&d.writeUInt8(tt),d.writeUInt8(g.noteNumber),d.writeUInt8(g.amount);break;case"controller":(tt=176|g.channel)!==b&&d.writeUInt8(tt),d.writeUInt8(g.controllerType),d.writeUInt8(g.value);break;case"programChange":(tt=192|g.channel)!==b&&d.writeUInt8(tt),d.writeUInt8(g.programNumber);break;case"channelAftertouch":(tt=208|g.channel)!==b&&d.writeUInt8(tt),d.writeUInt8(g.amount);break;case"pitchBend":(tt=224|g.channel)!==b&&d.writeUInt8(tt);var st=8192+g.value,ot=127&st,ut=st>>7&127;d.writeUInt8(ot),d.writeUInt8(ut);break;default:throw"Unrecognized event type: "+_}return tt}function c(){this.buffer=[]}c.prototype.writeUInt8=function(d){this.buffer.push(255&d)},c.prototype.writeInt8=c.prototype.writeUInt8,c.prototype.writeUInt16=function(d){var g=d>>8&255,b=255&d;this.writeUInt8(g),this.writeUInt8(b)},c.prototype.writeInt16=c.prototype.writeUInt16,c.prototype.writeUInt24=function(d){var g=d>>16&255,b=d>>8&255,$=255&d;this.writeUInt8(g),this.writeUInt8(b),this.writeUInt8($)},c.prototype.writeInt24=c.prototype.writeUInt24,c.prototype.writeUInt32=function(d){var g=d>>24&255,b=d>>16&255,$=d>>8&255,_=255&d;this.writeUInt8(g),this.writeUInt8(b),this.writeUInt8($),this.writeUInt8(_)},c.prototype.writeInt32=c.prototype.writeUInt32,c.prototype.writeBytes=function(d){this.buffer=this.buffer.concat(Array.prototype.slice.call(d,0))},c.prototype.writeString=function(d){var g,b=d.length,$=[];for(g=0;g<b;g++)$.push(d.codePointAt(g));this.writeBytes($)},c.prototype.writeVarInt=function(d){if(d<0)throw"Cannot write negative variable-length integer";if(d<=127)this.writeUInt8(d);else{var g=d,b=[];for(b.push(127&g),g>>=7;g;){var $=127&g|128;b.push($),g>>=7}this.writeBytes(b.reverse())}},c.prototype.writeChunk=function(d,g){this.writeString(d),this.writeUInt32(g.length),this.writeBytes(g)},i.exports=function(d,g){if(typeof d!="object")throw"Invalid MIDI data";g=g||{};var b,$=d.header||{},_=d.tracks||[],_e=_.length,et=new c;for(function(rt,tt,j){var nt=tt.format==null?1:tt.format,st=128;tt.timeDivision?st=tt.timeDivision:tt.ticksPerFrame&&tt.framesPerSecond?st=-(255&tt.framesPerSecond)<<8|255&tt.ticksPerFrame:tt.ticksPerBeat&&(st=32767&tt.ticksPerBeat);var ot=new c;ot.writeUInt16(nt),ot.writeUInt16(j),ot.writeUInt16(st),rt.writeChunk("MThd",ot.buffer)}(et,$,_e),b=0;b<_e;b++)o(et,_[b],g);return et.buffer}},function(i,s,o){var a=this&&this.__spreadArrays||function(){for(var et=0,rt=0,tt=arguments.length;rt<tt;rt++)et+=arguments[rt].length;var j=Array(et),nt=0;for(rt=0;rt<tt;rt++)for(var st=arguments[rt],ot=0,ut=st.length;ot<ut;ot++,nt++)j[nt]=st[ot];return j},c=this&&this.__importDefault||function(et){return et&&et.__esModule?et:{default:et}};Object.defineProperty(s,"__esModule",{value:!0});var d=o(79),g=o(66),b=c(o(175));function $(et){return b.default(et.notes.map(function(rt){return function(tt,j){return[{absoluteTime:tt.ticks,channel:j,deltaTime:0,noteNumber:tt.midi,type:"noteOn",velocity:Math.floor(127*tt.velocity)},{absoluteTime:tt.ticks+tt.durationTicks,channel:j,deltaTime:0,noteNumber:tt.midi,type:"noteOff",velocity:Math.floor(127*tt.noteOffVelocity)}]}(rt,et.channel)}))}function _(et,rt){return{absoluteTime:et.ticks,channel:rt,controllerType:et.number,deltaTime:0,type:"controller",value:et.value}}function _e(et){return{absoluteTime:0,channel:et.channel,deltaTime:0,programNumber:et.instrument.number,type:"programChange"}}s.encode=function(et){var rt={header:{format:1,numTracks:et.tracks.length+1,ticksPerBeat:et.header.ppq},tracks:a([a([{absoluteTime:0,deltaTime:0,meta:!0,text:et.header.name,type:"trackName"}],et.header.keySignatures.map(function(tt){return function(j){var nt=g.keySignatureKeys.indexOf(j.key);return{absoluteTime:j.ticks,deltaTime:0,key:nt+7,meta:!0,scale:j.scale==="major"?0:1,type:"keySignature"}}(tt)}),et.header.meta.map(function(tt){return{absoluteTime:(j=tt).ticks,deltaTime:0,meta:!0,text:j.text,type:j.type};var j}),et.header.tempos.map(function(tt){return function(j){return{absoluteTime:j.ticks,deltaTime:0,meta:!0,microsecondsPerBeat:Math.floor(6e7/j.bpm),type:"setTempo"}}(tt)}),et.header.timeSignatures.map(function(tt){return function(j){return{absoluteTime:j.ticks,deltaTime:0,denominator:j.timeSignature[1],meta:!0,metronome:24,numerator:j.timeSignature[0],thirtyseconds:8,type:"timeSignature"}}(tt)}))],et.tracks.map(function(tt){return a([(j=tt.name,{absoluteTime:0,deltaTime:0,meta:!0,text:j,type:"trackName"}),_e(tt)],$(tt),function(nt){for(var st=[],ot=0;ot<127;ot++)nt.controlChanges.hasOwnProperty(ot)&&nt.controlChanges[ot].forEach(function(ut){st.push(_(ut,nt.channel))});return st}(tt),function(nt){var st=[];return nt.pitchBends.forEach(function(ot){st.push(function(ut,ht){return{absoluteTime:ut.ticks,channel:ht,deltaTime:0,type:"pitchBend",value:ut.value}}(ot,nt.channel))}),st}(tt));var j}))};return rt.tracks=rt.tracks.map(function(tt){tt=tt.sort(function(nt,st){return nt.absoluteTime-st.absoluteTime});var j=0;return tt.forEach(function(nt){nt.deltaTime=nt.absoluteTime-j,j=nt.absoluteTime,delete nt.absoluteTime}),tt.push({deltaTime:0,meta:!0,type:"endOfTrack"}),tt}),new Uint8Array(d.writeMidi(rt))}},function(i,s,o){function a(d){return function g(b,$){for(var _=0;_<b.length;_++){var _e=b[_];Array.isArray(_e)?g(_e,$):$.push(_e)}return $}(d,[])}function c(d,g){if(typeof g!="number")throw new TypeError("Expected the depth to be a number");return function b($,_,_e){_e--;for(var et=0;et<$.length;et++){var rt=$[et];_e>-1&&Array.isArray(rt)?b(rt,_,_e):_.push(rt)}return _}(d,[],g)}i.exports=function(d){if(!Array.isArray(d))throw new TypeError("Expected value to be an array");return a(d)},i.exports.from=a,i.exports.depth=function(d,g){if(!Array.isArray(d))throw new TypeError("Expected value to be an array");return c(d,g)},i.exports.fromDepth=c},function(i,s,o){Object.defineProperty(s,"__esModule",{value:!0});var a=o(82);s.createControlChanges=function(){return new Proxy({},{get:function(c,d){return c[d]?c[d]:a.controlChangeIds.hasOwnProperty(d)?c[a.controlChangeIds[d]]:void 0},set:function(c,d,g){return a.controlChangeIds.hasOwnProperty(d)?c[a.controlChangeIds[d]]=g:c[d]=g,!0}})}},function(i,s,o){Object.defineProperty(s,"__esModule",{value:!0});var a=new WeakMap,c=function(){function d(g,b){a.set(this,b),this.ticks=g.absoluteTime,this.value=g.value}return Object.defineProperty(d.prototype,"time",{get:function(){return a.get(this).ticksToSeconds(this.ticks)},set:function(g){var b=a.get(this);this.ticks=b.secondsToTicks(g)},enumerable:!0,configurable:!0}),d.prototype.toJSON=function(){return{ticks:this.ticks,time:this.time,value:this.value}},d}();s.PitchBend=c},function(i,s,o){Object.defineProperty(s,"__esModule",{value:!0});var a=o(179),c=new WeakMap,d=function(){function g(b,$){if(this.number=0,c.set(this,$),this.number=0,b){var _=b.find(function(_e){return _e.type==="programChange"});_&&(this.number=_.programNumber)}}return Object.defineProperty(g.prototype,"name",{get:function(){return this.percussion?a.DrumKitByPatchID[this.number]:a.instrumentByPatchID[this.number]},set:function(b){var $=a.instrumentByPatchID.indexOf(b);$!==-1&&(this.number=$)},enumerable:!0,configurable:!0}),Object.defineProperty(g.prototype,"family",{get:function(){return this.percussion?"drums":a.InstrumentFamilyByID[Math.floor(this.number/8)]},enumerable:!0,configurable:!0}),Object.defineProperty(g.prototype,"percussion",{get:function(){return c.get(this).channel===9},enumerable:!0,configurable:!0}),g.prototype.toJSON=function(){return{family:this.family,name:this.name,number:this.number}},g.prototype.fromJSON=function(b){this.number=b.number},g}();s.Instrument=d},function(i,s,o){Object.defineProperty(s,"__esModule",{value:!0}),s.instrumentByPatchID=["acoustic grand piano","bright acoustic piano","electric grand piano","honky-tonk piano","electric piano 1","electric piano 2","harpsichord","clavi","celesta","glockenspiel","music box","vibraphone","marimba","xylophone","tubular bells","dulcimer","drawbar organ","percussive organ","rock organ","church organ","reed organ","accordion","harmonica","tango accordion","acoustic guitar (nylon)","acoustic guitar (steel)","electric guitar (jazz)","electric guitar (clean)","electric guitar (muted)","overdriven guitar","distortion guitar","guitar harmonics","acoustic bass","electric bass (finger)","electric bass (pick)","fretless bass","slap bass 1","slap bass 2","synth bass 1","synth bass 2","violin","viola","cello","contrabass","tremolo strings","pizzicato strings","orchestral harp","timpani","string ensemble 1","string ensemble 2","synthstrings 1","synthstrings 2","choir aahs","voice oohs","synth voice","orchestra hit","trumpet","trombone","tuba","muted trumpet","french horn","brass section","synthbrass 1","synthbrass 2","soprano sax","alto sax","tenor sax","baritone sax","oboe","english horn","bassoon","clarinet","piccolo","flute","recorder","pan flute","blown bottle","shakuhachi","whistle","ocarina","lead 1 (square)","lead 2 (sawtooth)","lead 3 (calliope)","lead 4 (chiff)","lead 5 (charang)","lead 6 (voice)","lead 7 (fifths)","lead 8 (bass + lead)","pad 1 (new age)","pad 2 (warm)","pad 3 (polysynth)","pad 4 (choir)","pad 5 (bowed)","pad 6 (metallic)","pad 7 (halo)","pad 8 (sweep)","fx 1 (rain)","fx 2 (soundtrack)","fx 3 (crystal)","fx 4 (atmosphere)","fx 5 (brightness)","fx 6 (goblins)","fx 7 (echoes)","fx 8 (sci-fi)","sitar","banjo","shamisen","koto","kalimba","bag pipe","fiddle","shanai","tinkle bell","agogo","steel drums","woodblock","taiko drum","melodic tom","synth drum","reverse cymbal","guitar fret noise","breath noise","seashore","bird tweet","telephone ring","helicopter","applause","gunshot"],s.InstrumentFamilyByID=["piano","chromatic percussion","organ","guitar","bass","strings","ensemble","brass","reed","pipe","synth lead","synth pad","synth effects","world","percussive","sound effects"],s.DrumKitByPatchID={0:"standard kit",8:"room kit",16:"power kit",24:"electronic kit",25:"tr-808 kit",32:"jazz kit",40:"brush kit",48:"orchestra kit",56:"sound fx kit"}},function(i,s,o){function a(_){return["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"][_%12]}Object.defineProperty(s,"__esModule",{value:!0});var c,d,g=(c=/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,d={cbb:-2,cb:-1,c:0,"c#":1,cx:2,dbb:0,db:1,d:2,"d#":3,dx:4,ebb:2,eb:3,e:4,"e#":5,ex:6,fbb:3,fb:4,f:5,"f#":6,fx:7,gbb:5,gb:6,g:7,"g#":8,gx:9,abb:7,ab:8,a:9,"a#":10,ax:11,bbb:9,bb:10,b:11,"b#":12,bx:13},function(_){var _e=c.exec(_),et=_e[1],rt=_e[2];return d[et.toLowerCase()]+12*(parseInt(rt,10)+1)}),b=new WeakMap,$=function(){function _(_e,et,rt){b.set(this,rt),this.midi=_e.midi,this.velocity=_e.velocity,this.noteOffVelocity=et.velocity,this.ticks=_e.ticks,this.durationTicks=et.ticks-_e.ticks}return Object.defineProperty(_.prototype,"name",{get:function(){return _e=this.midi,et=Math.floor(_e/12)-1,a(_e)+et.toString();var _e,et},set:function(_e){this.midi=g(_e)},enumerable:!0,configurable:!0}),Object.defineProperty(_.prototype,"octave",{get:function(){return Math.floor(this.midi/12)-1},set:function(_e){var et=_e-this.octave;this.midi+=12*et},enumerable:!0,configurable:!0}),Object.defineProperty(_.prototype,"pitch",{get:function(){return a(this.midi)},set:function(_e){this.midi=12*(this.octave+1)+["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"].indexOf(_e)},enumerable:!0,configurable:!0}),Object.defineProperty(_.prototype,"duration",{get:function(){var _e=b.get(this);return _e.ticksToSeconds(this.ticks+this.durationTicks)-_e.ticksToSeconds(this.ticks)},set:function(_e){var et=b.get(this).secondsToTicks(this.time+_e);this.durationTicks=et-this.ticks},enumerable:!0,configurable:!0}),Object.defineProperty(_.prototype,"time",{get:function(){return b.get(this).ticksToSeconds(this.ticks)},set:function(_e){var et=b.get(this);this.ticks=et.secondsToTicks(_e)},enumerable:!0,configurable:!0}),Object.defineProperty(_.prototype,"bars",{get:function(){return b.get(this).ticksToMeasures(this.ticks)},enumerable:!0,configurable:!0}),_.prototype.toJSON=function(){return{duration:this.duration,durationTicks:this.durationTicks,midi:this.midi,name:this.name,ticks:this.ticks,time:this.time,velocity:this.velocity}},_}();s.Note=$},function(i,s,o){o.r(s);var a=o(10);o.d(s,"NoteSequence",function(){return a.a})},function(i,s,o){o.r(s),o.d(s,"DDSP",function(){return kp});var a={};o.r(a),o.d(a,"simpleAbsImpl",function(){return Yt}),o.d(a,"addImpl",function(){return nn}),o.d(a,"ceilImpl",function(){return Pn}),o.d(a,"expImpl",function(){return On}),o.d(a,"expm1Impl",function(){return Bn}),o.d(a,"floorImpl",function(){return Zn}),o.d(a,"logImpl",function(){return jn}),o.d(a,"maxImpl",function(){return tr}),o.d(a,"multiplyImpl",function(){return Un}),o.d(a,"notEqualImpl",function(){return Cr}),o.d(a,"rsqrtImpl",function(){return Rr}),o.d(a,"sliceImpl",function(){return Er}),o.d(a,"squaredDifferenceImpl",function(){return zr}),o.d(a,"subImpl",function(){return bs}),o.d(a,"transposeImpl",function(){return gs}),o.d(a,"uniqueImpl",function(){return ys});var c=o(0);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d={},g={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function b(Ft){if(!(Ft in d)){const gt=function(vt){if(vt!==1&&vt!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const Nt=function(It){if(typeof OffscreenCanvas<"u"&&It===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(vt);return Nt.addEventListener("webglcontextlost",It=>{It.preventDefault(),delete d[vt]},!1),vt===1?Nt.getContext("webgl",g)||Nt.getContext("experimental-webgl",g):Nt.getContext("webgl2",g)}(Ft);if(gt===null)return console.log("Could not get context for WebGL version",Ft),null;d[Ft]=gt}const at=d[Ft];return at.isContextLost()?(delete d[Ft],b(Ft)):(at.disable(at.DEPTH_TEST),at.disable(at.STENCIL_TEST),at.disable(at.BLEND),at.disable(at.DITHER),at.disable(at.POLYGON_OFFSET_FILL),at.disable(at.SAMPLE_COVERAGE),at.enable(at.SCISSOR_TEST),at.enable(at.CULL_FACE),at.cullFace(at.BACK),d[Ft])}var $,_,_e;function et(Ft,at){return[at,Ft]}function rt(Ft){const at=c.Lb.sizeFromShape(Ft),gt=Math.ceil(at/4);return c.Lb.sizeToSquarishShape(gt)}function tt(Ft,at){return[Math.max(1,Math.ceil(at/2)),Math.max(1,Math.ceil(Ft/2))]}function j(Ft,at){const gt=Ft;let vt,Nt,It,Et,Lt,Vt,Ht,Jt,un,on;return Object(c.jb)().getNumber("WEBGL_VERSION")===2?(vt=gt.R32F,Nt=gt.R16F,It=gt.RGBA16F,Et=gt.RGBA32F,Lt=gt.RED,Ht=4,Jt=1,un=gt.HALF_FLOAT,on=gt.FLOAT):(vt=Ft.RGBA,Nt=Ft.RGBA,It=Ft.RGBA,Et=gt.RGBA,Lt=Ft.RGBA,Ht=4,Jt=4,un=at!=null?at.HALF_FLOAT_OES:null,on=Ft.FLOAT),Vt=Ft.RGBA,{internalFormatFloat:vt,internalFormatHalfFloat:Nt,internalFormatPackedHalfFloat:It,internalFormatPackedFloat:Et,textureFormatFloat:Lt,downloadTextureFormat:Vt,downloadUnpackNumChannels:Ht,defaultNumChannels:Jt,textureTypeHalfFloat:un,textureTypeFloat:on}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nt(Ft,at){const gt=at();return Object(c.jb)().getBool("DEBUG")&&function(vt){const Nt=vt.getError();if(Nt!==vt.NO_ERROR)throw new Error("WebGL Error: "+function(It,Et){switch(Et){case It.NO_ERROR:return"NO_ERROR";case It.INVALID_ENUM:return"INVALID_ENUM";case It.INVALID_VALUE:return"INVALID_VALUE";case It.INVALID_OPERATION:return"INVALID_OPERATION";case It.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case It.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case It.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+Et}}(vt,Nt))}(Ft),gt}(function(Ft){Ft[Ft.DENSE=0]="DENSE",Ft[Ft.SHARED_BATCH=1]="SHARED_BATCH"})($||($={})),function(Ft){Ft[Ft.RENDER=0]="RENDER",Ft[Ft.UPLOAD=1]="UPLOAD",Ft[Ft.PIXELS=2]="PIXELS",Ft[Ft.DOWNLOAD=3]="DOWNLOAD"}(_||(_={})),function(Ft){Ft[Ft.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",Ft[Ft.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",Ft[Ft.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",Ft[Ft.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",Ft[Ft.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(_e||(_e={}));function st(Ft){return!!(Object(c.jb)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||Ft===0||596e-10<Math.abs(Ft)&&Math.abs(Ft)<65504)}function ot(Ft,at){return Ct(Ft,()=>Ft.getExtension(at),'Extension "'+at+'" not supported on this browser.')}function ut(Ft,at){const gt=Ct(Ft,()=>Ft.createShader(Ft.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(nt(Ft,()=>Ft.shaderSource(gt,at)),nt(Ft,()=>Ft.compileShader(gt)),Ft.getShaderParameter(gt,Ft.COMPILE_STATUS)===!1)throw function(vt,Nt){const It=ht.exec(Nt);if(It==null)return console.log("Couldn't parse line number in error: "+Nt),void console.log(vt);const Et=+It[1],Lt=vt.split(`
`),Vt=Lt.length.toString().length+2,Ht=Lt.map((gn,fn)=>c.Lb.rightPad((fn+1).toString(),Vt)+gn);let Jt=0;for(let gn=0;gn<Ht.length;gn++)Jt=Math.max(Ht[gn].length,Jt);const un=Ht.slice(0,Et-1),on=Ht.slice(Et-1,Et),mn=Ht.slice(Et);console.log(un.join(`
`)),console.log(Nt.split(`
`)[0]),console.log("%c "+c.Lb.rightPad(on[0],Jt),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(mn.join(`
`))}(at,Ft.getShaderInfoLog(gt)),new Error("Failed to compile fragment shader.");return gt}const ht=/ERROR: [0-9]+:([0-9]+):/g;function pt(Ft,at){if(nt(Ft,()=>Ft.validateProgram(at)),Ft.getProgramParameter(at,Ft.VALIDATE_STATUS)===!1)throw console.log(Ft.getProgramInfoLog(at)),new Error("Shader program validation failed.")}function it(Ft,at,gt,vt,Nt,It,Et){const Lt=Ft.getAttribLocation(at,gt);return Lt!==-1&&(nt(Ft,()=>Ft.bindBuffer(Ft.ARRAY_BUFFER,vt)),nt(Ft,()=>Ft.vertexAttribPointer(Lt,Nt,Ft.FLOAT,!1,It,Et)),nt(Ft,()=>Ft.enableVertexAttribArray(Lt)),!0)}function yt(Ft,at,gt,vt){nt(Ft,()=>function(Nt,It,Et){_t(Nt,Et),nt(Nt,()=>Nt.activeTexture(Nt.TEXTURE0+Et)),nt(Nt,()=>Nt.bindTexture(Nt.TEXTURE_2D,It))}(Ft,at,vt)),nt(Ft,()=>Ft.uniform1i(gt,vt))}function ft(Ft,at,gt){nt(Ft,()=>Ft.bindFramebuffer(Ft.FRAMEBUFFER,gt)),nt(Ft,()=>Ft.framebufferTexture2D(Ft.FRAMEBUFFER,Ft.COLOR_ATTACHMENT0,Ft.TEXTURE_2D,at,0))}function bt(Ft,at){nt(Ft,()=>Ft.bindFramebuffer(Ft.FRAMEBUFFER,at)),nt(Ft,()=>Ft.framebufferTexture2D(Ft.FRAMEBUFFER,Ft.COLOR_ATTACHMENT0,Ft.TEXTURE_2D,null,0))}function Tt(Ft){const at=Ft.checkFramebufferStatus(Ft.FRAMEBUFFER);if(at!==Ft.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(gt,vt){switch(vt){case gt.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case gt.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case gt.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case gt.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+vt}}(Ft,at))}function Ct(Ft,at,gt){const vt=nt(Ft,()=>at());if(vt==null)throw new Error(gt);return vt}function _t(Ft,at){const gt=Ft.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,vt=at+Ft.TEXTURE0;if(vt<Ft.TEXTURE0||vt>gt)throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${gt}]`}.`)}function Ot(Ft,at=2){return c.Lb.sizeFromShape(Ft.slice(0,Ft.length-at))}function kt(Ft){if(Ft.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[Ft.length>1?Ft[Ft.length-2]:1,Ft[Ft.length-1]]}function Rt(Ft){let at=[1,1,1];return Ft.length===0||Ft.length===1&&Ft[0]===1||(at=[Ot(Ft),...kt(Ft)]),at}function jt(Ft){return Ft%2==0}function Gt(Ft,at){if(Ft=Ft.slice(-2),at=at.slice(-2),c.Lb.arraysEqual(Ft,at)||!Ft.length||!at.length||Ft[0]===0||Ft[1]===0||at[0]===0||at[1]===0)return!0;if(Ft.length!==at.length){const gt=Ft.slice(-1)[0],vt=at.slice(-1)[0];if(gt===vt||jt(gt)&&jt(vt)&&(Ft[0]===1||at[0]===1))return!0}return Ft[1]===at[1]&&jt(Ft[0])&&jt(at[0])}let Bt,zt;function Ut(Ft,at){return Ft.getExtension(at)!=null}function Qt(Ft){try{if(b(Ft)!=null)return!0}catch(at){return console.log("Error when getting WebGL context: ",at),!1}return!1}function tn(Ft){if(Ft===0)return!1;const at=b(Ft);if(Ft!==1){if(Ut(at,"EXT_color_buffer_float"))return sn(at);const gt="EXT_color_buffer_half_float";if(Ut(at,gt)){const vt=at.getExtension(gt);return function(Nt,It){const Et=j(Nt,It),Lt=Nt.createTexture();Nt.bindTexture(Nt.TEXTURE_2D,Lt),Nt.texImage2D(Nt.TEXTURE_2D,0,Et.internalFormatHalfFloat,1,1,0,Et.textureFormatFloat,Et.textureTypeHalfFloat,null);const Vt=Nt.createFramebuffer();Nt.bindFramebuffer(Nt.FRAMEBUFFER,Vt),Nt.framebufferTexture2D(Nt.FRAMEBUFFER,Nt.COLOR_ATTACHMENT0,Nt.TEXTURE_2D,Lt,0);const Ht=Nt.checkFramebufferStatus(Nt.FRAMEBUFFER)===Nt.FRAMEBUFFER_COMPLETE;return Nt.bindTexture(Nt.TEXTURE_2D,null),Nt.bindFramebuffer(Nt.FRAMEBUFFER,null),Nt.deleteTexture(Lt),Nt.deleteFramebuffer(Vt),Ht}(at,vt)}return!1}return!Ut(at,"OES_texture_float")||!Ut(at,"WEBGL_color_buffer_float")?!1:sn(at)}function sn(Ft){const at=j(Ft),gt=Ft.createTexture();Ft.bindTexture(Ft.TEXTURE_2D,gt),Ft.texImage2D(Ft.TEXTURE_2D,0,at.internalFormatFloat,1,1,0,at.textureFormatFloat,at.textureTypeFloat,null);const vt=Ft.createFramebuffer();Ft.bindFramebuffer(Ft.FRAMEBUFFER,vt),Ft.framebufferTexture2D(Ft.FRAMEBUFFER,Ft.COLOR_ATTACHMENT0,Ft.TEXTURE_2D,gt,0);const Nt=Ft.checkFramebufferStatus(Ft.FRAMEBUFFER)===Ft.FRAMEBUFFER_COMPLETE;return Ft.bindTexture(Ft.TEXTURE_2D,null),Ft.bindFramebuffer(Ft.FRAMEBUFFER,null),Ft.deleteTexture(gt),Ft.deleteFramebuffer(vt),Nt}function ln(Ft,at){Array.isArray(Ft)||(Ft=[Ft]),Ft.forEach(gt=>{gt!=null&&c.Lb.assert(gt.dtype!=="complex64",()=>at+" does not support complex64 tensors in the WebGL backend.")})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const an=Object(c.jb)();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yt(Ft){const at=new Float32Array(Ft.length);for(let gt=0;gt<Ft.length;++gt)at[gt]=Math.abs(Ft[gt]);return at}an.registerFlag("HAS_WEBGL",()=>an.getNumber("WEBGL_VERSION")>0),an.registerFlag("WEBGL_VERSION",()=>Qt(2)?2:Qt(1)?1:0),an.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),an.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>an.get("WEBGL_VERSION")===2),an.registerFlag("WEBGL_CPU_FORWARD",()=>!0),an.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),an.registerFlag("WEBGL_PACK",()=>an.getBool("HAS_WEBGL")),an.registerFlag("WEBGL_PACK_NORMALIZATION",()=>an.getBool("WEBGL_PACK")),an.registerFlag("WEBGL_PACK_CLIP",()=>an.getBool("WEBGL_PACK")),an.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1),an.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>an.getBool("WEBGL_PACK")),an.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>an.getBool("WEBGL_PACK")),an.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>an.getBool("WEBGL_PACK")),an.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>an.getBool("WEBGL_PACK")),an.registerFlag("WEBGL_PACK_REDUCE",()=>an.getBool("WEBGL_PACK")),an.registerFlag("WEBGL_LAZILY_UNPACK",()=>an.getBool("WEBGL_PACK")),an.registerFlag("WEBGL_CONV_IM2COL",()=>an.getBool("WEBGL_PACK")),an.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(Ft){if(Bt==null){const at=b(Ft);Bt=at.getParameter(at.MAX_TEXTURE_SIZE)}return Bt}(an.getNumber("WEBGL_VERSION"))),an.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(Ft){if(zt==null){const at=b(Ft);zt=at.getParameter(at.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,zt)}(an.getNumber("WEBGL_VERSION"))),an.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const Ft=an.getNumber("WEBGL_VERSION");return Ft===0?0:function(at){if(at===0)return 0;let gt;const vt=b(at);return gt=Ut(vt,"EXT_disjoint_timer_query_webgl2")&&at===2?2:Ut(vt,"EXT_disjoint_timer_query")?1:0,gt}(Ft)}),an.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>an.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!c.fb.isMobile()),an.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(Ft){if(Ft===0)return!1;const at=b(Ft);if(Ft===1){if(!Ut(at,"OES_texture_float"))return!1}else if(!Ut(at,"EXT_color_buffer_float"))return!1;return sn(at)}(an.getNumber("WEBGL_VERSION"))),an.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!an.getBool("WEBGL_FORCE_F16_TEXTURES")&&an.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),an.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>tn(an.getNumber("WEBGL_VERSION"))),an.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return(Ft=an.getNumber("WEBGL_VERSION"))===2&&b(Ft).fenceSync!=null;var Ft}),an.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>an.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),an.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,Ft=>{if(Ft<0&&Ft!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${Ft}.`)}),c.a;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cn(Ft){return(at,gt,vt,Nt,It)=>{const Et=c.X.assertAndGetBroadcastShape(at,gt),Lt=Et.length,Vt=c.Lb.computeStrides(Et),Ht=c.Lb.sizeFromShape(Et),Jt=c.Lb.getTypedArrayFromDType(It,Ht),un=at.length,on=gt.length,mn=c.Lb.computeStrides(at),gn=c.Lb.computeStrides(gt),fn=c.X.getBroadcastDims(at,Et),yn=c.X.getBroadcastDims(gt,Et);if(fn.length+yn.length===0)for(let In=0;In<Jt.length;++In)Jt[In]=Ft(vt[In%vt.length],Nt[In%Nt.length]);else for(let In=0;In<Jt.length;++In){const Ln=c.Lb.indexToLoc(In,Lt,Vt),Vn=Ln.slice(-un);fn.forEach(Kn=>Vn[Kn]=0);const Sn=c.Lb.locToIndex(Vn,un,mn),En=Ln.slice(-on);yn.forEach(Kn=>En[Kn]=0);const _n=c.Lb.locToIndex(En,on,gn);Jt[In]=Ft(vt[Sn],Nt[_n])}return[Jt,Et]}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wt(Ft,at){Array.isArray(Ft)||(Ft=[Ft]),Ft.forEach(gt=>{gt!=null&&c.Lb.assert(gt.dtype!=="complex64",()=>at+" does not support complex64 tensors in the CPU backend.")})}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wt(Ft){const{inputs:at,backend:gt}=Ft,{real:vt,imag:Nt}=at,It=gt.data.get(vt.dataId).values,Et=gt.data.get(Nt.dataId).values,Lt=gt.makeTensorInfo(vt.shape,"complex64");return gt.data.get(Lt.dataId).complexTensorInfos={real:gt.makeTensorInfo(vt.shape,"float32",It),imag:gt.makeTensorInfo(Nt.shape,"float32",Et)},Lt}c.h;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xt(Ft){const{inputs:at,backend:gt}=Ft,{x:vt}=at;return gt.incRef(vt.dataId),{dataId:vt.dataId,shape:vt.shape,dtype:vt.dtype}}c.u;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function At(Ft){const{inputs:at,backend:gt}=Ft,{input:vt}=at,Nt=gt.data.get(vt.dataId).complexTensorInfos.real,It=gt.data.get(Nt.dataId).values;return gt.makeTensorInfo(Nt.shape,Nt.dtype,It)}c.J;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qt(Ft){const{inputs:at,backend:gt,attrs:vt}=Ft,{x:Nt}=at,{dtype:It}=vt;if(It==="complex64"){if(Nt.dtype==="complex64")return xt({inputs:{x:Nt},backend:gt});const Et=c.Nb(Nt.shape),Lt=qt({inputs:{x:Nt},backend:gt,attrs:{dtype:"float32"}}),Vt=wt({inputs:{real:Lt,imag:Et},backend:gt});return Et.dispose(),gt.disposeIntermediateTensorInfo(Lt),Vt}if(Nt.dtype==="complex64"){const Et=At({inputs:{input:Nt},backend:gt}),Lt=qt({inputs:{x:Et},backend:gt,attrs:{dtype:It}});return gt.disposeIntermediateTensorInfo(Et),Lt}if(!c.Lb.hasEncodingLoss(Nt.dtype,It)){const Et=xt({inputs:{x:Nt},backend:gt});return{dataId:Et.dataId,shape:Et.shape,dtype:It}}if(It==="int32"){const Et=gt.data.get(Nt.dataId).values,Lt=Int32Array.from(Et);return gt.makeTensorInfo(Nt.shape,"int32",Lt)}if(It==="bool"){const Et=gt.data.get(Nt.dataId).values,Lt=c.Lb.toTypedArray([0],Nt.dtype),[Vt,Ht]=cn((Jt,un)=>Jt!==un?1:0)(Nt.shape,[],Et,Lt,"bool");return gt.makeTensorInfo(Ht,"bool",Vt)}throw new Error(`Error in Cast: failed to cast ${Nt.dtype} to ${It}`)}c.f;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pt(Ft,at,gt,vt){return gt==null?({inputs:Nt,backend:It})=>{const{a:Et,b:Lt}=Nt,Vt=It;Wt([Et,Lt],Ft);const Ht=Vt.data.get(Et.dataId).values,Jt=Vt.data.get(Lt.dataId).values,un=vt||Et.dtype,[on,mn]=at(Et.shape,Lt.shape,Ht,Jt,un);return Vt.makeTensorInfo(mn,un,on)}:({inputs:Nt,backend:It})=>{const{a:Et,b:Lt}=Nt,Vt=It;if(Et.dtype==="complex64"||Lt.dtype==="complex64"){const Ht=qt({inputs:{x:Et},backend:Vt,attrs:{dtype:"complex64"}}),Jt=Vt.data.get(Ht.dataId),un=Jt.complexTensorInfos.real,on=Jt.complexTensorInfos.imag,mn=Vt.data.get(un.dataId).values,gn=Vt.data.get(on.dataId).values,fn=qt({inputs:{x:Lt},backend:Vt,attrs:{dtype:"complex64"}}),yn=Vt.data.get(fn.dataId),In=yn.complexTensorInfos.real,Ln=yn.complexTensorInfos.imag,Vn=Vt.data.get(In.dataId).values,Sn=Vt.data.get(Ln.dataId).values,[En,_n,Kn]=gt(Et.shape,Lt.shape,mn,gn,Vn,Sn),Xn=Vt.makeTensorInfo(Kn,"float32",En),ur=Vt.makeTensorInfo(Kn,"float32",_n),br=wt({inputs:{real:Xn,imag:ur},backend:Vt});return Vt.disposeIntermediateTensorInfo(Ht),Vt.disposeIntermediateTensorInfo(fn),Vt.disposeIntermediateTensorInfo(Xn),Vt.disposeIntermediateTensorInfo(ur),br}{const Ht=Vt.data.get(Et.dataId).values,Jt=Vt.data.get(Lt.dataId).values,un=vt||Et.dtype,[on,mn]=at(Et.shape,Lt.shape,Ht,Jt,un);return Vt.makeTensorInfo(mn,un,on)}}}function Zt(Ft){return(at,gt,vt,Nt,It,Et)=>{const Lt=c.X.assertAndGetBroadcastShape(at,gt),Vt=c.Lb.sizeFromShape(Lt),Ht=Lt.length,Jt=c.Lb.computeStrides(Lt),un=c.Lb.getTypedArrayFromDType("float32",Vt),on=c.Lb.getTypedArrayFromDType("float32",Vt),mn=c.X.getBroadcastDims(at,Lt),gn=c.X.getBroadcastDims(gt,Lt),fn=c.X.mergeRealAndImagArrays(vt,Nt),yn=c.X.mergeRealAndImagArrays(It,Et),In=at.length,Ln=c.Lb.computeStrides(at),Vn=gt.length,Sn=c.Lb.computeStrides(gt);if(mn.length+gn.length===0)for(let En=0;En<un.length;En++){const _n=En%fn.length,Kn=En%yn.length,Xn=Ft(fn[2*_n],fn[2*_n+1],yn[2*Kn],yn[2*Kn+1]);un[En]=Xn.real,on[En]=Xn.imag}else for(let En=0;En<un.length;En++){const _n=c.Lb.indexToLoc(En,Ht,Jt),Kn=_n.slice(-In);mn.forEach(fr=>Kn[fr]=0);const Xn=c.Lb.locToIndex(Kn,In,Ln),ur=_n.slice(-Vn);gn.forEach(fr=>ur[fr]=0);const br=c.Lb.locToIndex(ur,Vn,Sn),vr=Ft(fn[2*Xn],fn[2*Xn+1],yn[2*br],yn[2*br+1]);un[En]=vr.real,on[En]=vr.imag}return[un,on,Lt]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nn=cn((Ft,at)=>Ft+at),dn=Zt((Ft,at,gt,vt)=>({real:Ft+gt,imag:at+vt}));Pt(c.b,nn,dn),c.b;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wn(Ft){return(at,gt,vt)=>{const Nt=c.Lb.getTypedArrayFromDType(gt,at.length);for(let It=0;It<at.length;++It)Nt[It]=Ft(at[It],vt);return Nt}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kn(Ft,at,gt){return({inputs:vt,attrs:Nt,backend:It})=>{const{x:Et}=vt;if(Wt(Et,Ft),Et.dtype==="string"||gt==="string")throw new Error("unaryKernelFunc does not support string input/output");const Lt=It,Vt=Lt.data.get(Et.dataId).values,Ht=gt||Et.dtype,Jt=at(Vt,Ht,Nt);return Lt.makeTensorInfo(Et.shape,Ht,Jt)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pn=wn(Ft=>Math.ceil(Ft)),On=(kn(c.g,Pn),c.g,wn(Ft=>Math.exp(Ft))),Bn=(kn(c.m,On),c.m,wn(Ft=>Math.expm1(Ft))),Zn=(kn(c.n,Bn),c.n,wn(Ft=>Math.floor(Ft))),jn=(kn(c.q,Zn),c.q,wn(Ft=>Math.log(Ft)));kn(c.x,jn),c.x;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tr(Ft,at,gt,vt){const Nt=c.Lb.getTypedArrayFromDType(vt,c.Lb.sizeFromShape(gt));for(let It=0;It<Nt.length;++It){const Et=It*at;let Lt=Ft[Et];for(let Vt=0;Vt<at;++Vt){const Ht=Ft[Et+Vt];Ht>Lt&&(Lt=Ht)}Nt[It]=Lt}return Nt}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Un=cn((Ft,at)=>Ft*at),or=Zt((Ft,at,gt,vt)=>({real:Ft*gt-at*vt,imag:Ft*vt+at*gt})),Cr=(Pt(c.E,Un,or),c.E,cn((Ft,at)=>Ft!==at?1:0)),Rr=(Pt(c.I,Cr,null,"bool"),c.I,wn(Ft=>1/Math.sqrt(Ft)));kn(c.M,Rr),c.M;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Er(Ft,at,gt,vt,Nt){const It=c.Ab.isSliceContinous(vt,at,gt),Et=c.Lb.sizeFromShape(gt),Lt=c.Lb.computeStrides(vt);if(It){const Ht=c.Ab.computeFlatOffset(at,Lt);return Ft.subarray(Ht,Ht+Et)}const Vt=c.Lb.getTypedArrayFromDType(Nt,Et);for(let Ht=0;Ht<Et;++Ht){const Jt=gt.length,un=c.Lb.computeStrides(gt),on=c.Lb.indexToLoc(Ht,Jt,un).map((gn,fn)=>gn+at[fn]),mn=c.Lb.locToIndex(on,vt.length,Lt);Vt[Ht]=Ft[mn]}return Vt}c.O;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zr=cn((Ft,at)=>{const gt=Ft-at;return gt*gt}),bs=(Pt(c.Q,zr),c.Q,cn((Ft,at)=>Ft-at)),ms=Zt((Ft,at,gt,vt)=>({real:Ft-gt,imag:at-vt}));Pt(c.R,bs,ms),c.R;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gs(Ft,at,gt,vt,Nt){const It=at.length,Et=c.Lb.sizeFromShape(at),Lt=c.Lb.computeStrides(at),Vt=c.Lb.computeStrides(Nt),Ht=c.Lb.getTypedArrayFromDType(gt,c.Lb.sizeFromShape(Nt));for(let Jt=0;Jt<Et;++Jt){const un=c.Lb.indexToLoc(Jt,It,Lt),on=new Array(un.length);for(let mn=0;mn<on.length;mn++)on[mn]=un[vt[mn]];Ht[c.Lb.locToIndex(on,It,Vt)]=Ft[Jt]}return Ht}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ys(Ft,at,gt,vt){const Nt=c.Lb.parseAxisParam(at,gt)[0],It=[1,gt[0],1];for(let gn=0;gn<Nt;gn++)It[0]*=gt[gn];It[1]=gt[Nt];for(let gn=Nt+1;gn<gt.length;gn++)It[2]*=gt[gn];const Et={},Lt=new Int32Array(gt[Nt]),Vt=new c.T(It,vt,Ft),Ht=[],Jt=It[0]===1&&It[2]===1;for(let gn=0;gn<gt[Nt];gn++){let fn;if(Jt)fn=Ft[gn].toString();else{const yn=[];for(let In=0;In<It[0];In++)for(let Ln=0;Ln<It[2];Ln++)yn.push(Vt.get(In,gn,Ln));fn=yn.join(",")}if(Et[fn]!==void 0)Lt[gn]=Et[fn];else{const yn=Object.keys(Et).length;Et[fn]=yn,Lt[gn]=yn,Ht.push(gn)}}const un=It.slice();un[1]=Object.keys(Et).length;const on=new c.T(un,vt);Ht.forEach((gn,fn)=>{for(let yn=0;yn<It[0];yn++)for(let In=0;In<It[2];In++)on.set(Vt.get(yn,gn,In),yn,fn,In)});const mn=gt.slice();return mn[Nt]=un[1],{outputValues:on.values,outputShape:mn,indices:Lt}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{simpleAbsImpl:$s,addImpl:ls,ceilImpl:Yr,expImpl:Ls,expm1Impl:Jr,floorImpl:vs,logImpl:Os,maxImpl:Pr,multiplyImpl:Nr,rsqrtImpl:Ds,sliceImpl:ns,subImpl:Rs,transposeImpl:xs,uniqueImpl:$n}=a;/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tn{constructor(at,gt){this.outputShape=[],this.outputShape=at,this.variableNames=gt.map((It,Et)=>"T"+Et);const vt=[];this.variableNames.forEach(It=>{vt.push(`float v${It} = get${It}AtOutCoords();`)});const Nt=this.variableNames.map(It=>"v"+It).join(" + ");this.userCode=`
      void main() {
        ${vt.join(`
        `)}

        float result = ${Nt};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dn{constructor(at,gt){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=at,this.variableNames=gt.map((It,Et)=>"T"+Et);const vt=[];this.variableNames.forEach(It=>{vt.push(`vec4 v${It} = get${It}AtOutCoords();`)});const Nt=this.variableNames.map(It=>"v"+It).join(" + ");this.userCode=`
      void main() {
        ${vt.join(`
        `)}

        vec4 result = ${Nt};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bn{constructor(at,gt,vt){this.variableNames=["A"];const{windowSize:Nt,batchSize:It,outSize:Et}=at;vt||this.variableNames.push("bestIndicesA"),this.outputShape=[It,Et];const Lt=gt==="max"?">":"<",Vt=vt?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${Nt};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${Nt}; i++) {
          int inIdx = ${Vt};
          float candidate = getA(batch, inIdx);
          if (candidate ${Lt} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gn(Ft,at){return["x","y","z","w","u","v"].slice(0,at).map(gt=>`${Ft}.${gt}`)}function Jn(Ft,at){return at===1?[Ft]:Gn(Ft,at)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rr(){let Ft,at,gt,vt,Nt,It,Et,Lt,Vt,Ht;return Object(c.jb)().getNumber("WEBGL_VERSION")===2?(Ft="#version 300 es",at="in",gt="out",vt="in",Nt="texture",It="outputColor",Et="out vec4 outputColor;",Lt=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,Vt="",Ht=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(Ft="",at="attribute",gt="varying",vt="varying",Nt="texture2D",It="gl_FragColor",Et="",Lt=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,Vt=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,Ht=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:Ft,attribute:at,varyingVs:gt,varyingFs:vt,texture2D:Nt,output:It,defineOutput:Et,defineSpecialNaN:Lt,defineSpecialInf:Vt,defineRound:Ht}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hr(Ft,at,gt="index"){const vt=c.Lb.computeStrides(at);return vt.map((Nt,It)=>`${`int ${Ft[It]} = ${gt} / ${Nt}`}; ${It===vt.length-1?`int ${Ft[It+1]} = ${gt} - ${Ft[It]} * ${Nt}`:`index -= ${Ft[It]} * ${Nt}`};`).join("")}function Gr(Ft){const at=c.Lb.computeStrides(Ft).map(gt=>gt.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${at[0]} + coords.y * ${at[1]} + coords.z;
  }
`}const Ar=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:Kt}=c.X;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rn(Ft,at,gt,vt){const Nt=[];Ft.forEach(mn=>{const gn=c.Lb.sizeFromShape(mn.shapeInfo.logicalShape);mn.shapeInfo.isUniform?Nt.push(`uniform float ${mn.name}${gn>1?`[${gn}]`:""};`):(Nt.push(`uniform sampler2D ${mn.name};`),Nt.push(`uniform int offset${mn.name};`))});const It=Nt.join(`
`),Et=Ft.map(mn=>function(gn,fn,yn=!1){let In="";In+=yn?xn(gn):hn(gn);const Ln=gn.shapeInfo.logicalShape,Vn=fn.logicalShape;return Ln.length<=Vn.length&&(In+=yn?function(Sn,En){const _n=Sn.name,Kn=_n.charAt(0).toUpperCase()+_n.slice(1),Xn="get"+Kn+"AtOutCoords",ur=Sn.shapeInfo.logicalShape.length,br=En.logicalShape.length,vr=Kt(Sn.shapeInfo.logicalShape,En.logicalShape),fr=Hn(br),xr=br-ur;let Mr;const ds=["x","y","z","w","u","v"];Mr=ur===0?"":br<2&&vr.length>=1?"coords = 0;":vr.map(Zr=>`coords.${ds[Zr+xr]} = 0;`).join(`
`);let is="";is=br<2&&ur>0?"coords":Sn.shapeInfo.logicalShape.map((Zr,As)=>"coords."+ds[As+xr]).join(", ");let Kr="return outputValue;";const es=c.Lb.sizeFromShape(Sn.shapeInfo.logicalShape)===1,as=c.Lb.sizeFromShape(En.logicalShape)===1;if(ur!==1||es||as){if(es&&!as)Kr=br===1?`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:`
        return vec4(outputValue.x);
      `;else if(vr.length){const Zr=ur-2,As=ur-1;vr.indexOf(Zr)>-1&&vr.indexOf(As)>-1?Kr="return vec4(outputValue.x);":vr.indexOf(Zr)>-1?Kr="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":vr.indexOf(As)>-1&&(Kr="return vec4(outputValue.xx, outputValue.zz);")}}else Kr=`
      return vec4(outputValue.xy, outputValue.xy);
    `;return`
    vec4 ${Xn}() {
      ${fr} coords = getOutputCoords();
      ${Mr}
      vec4 outputValue = get${Kn}(${is});
      ${Kr}
    }
  `}(gn,fn):function(Sn,En){const _n=Sn.name,Kn=_n.charAt(0).toUpperCase()+_n.slice(1),Xn="get"+Kn+"AtOutCoords",ur=En.texShape,br=Sn.shapeInfo.texShape,vr=Sn.shapeInfo.logicalShape.length,fr=En.logicalShape.length;if(!Sn.shapeInfo.isUniform&&vr===fr&&Sn.shapeInfo.flatOffset==null&&c.Lb.arraysEqual(br,ur))return`
      float ${Xn}() {
        return sampleTexture(${_n}, resultUV);
      }
    `;const xr=Hn(fr),Mr=Kt(Sn.shapeInfo.logicalShape,En.logicalShape),ds=fr-vr;let is;const Kr=["x","y","z","w","u","v"];is=vr===0?"":fr<2&&Mr.length>=1?"coords = 0;":Mr.map(as=>`coords.${Kr[as+ds]} = 0;`).join(`
`);let es="";return es=fr<2&&vr>0?"coords":Sn.shapeInfo.logicalShape.map((as,Zr)=>"coords."+Kr[Zr+ds]).join(", "),`
    float ${Xn}() {
      ${xr} coords = getOutputCoords();
      ${is}
      return get${Kn}(${es});
    }
  `}(gn,fn)),In}(mn,at,vt)).join(`
`),Lt=at.texShape,Vt=rr(),Ht=function(mn){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${mn.texture2D}(textureSampler, uv).r;
    }
  `}(Vt);let Jt,un,on=function(mn){return`${mn.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${mn.varyingFs} vec2 resultUV;
    ${mn.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${mn.defineSpecialNaN}
    ${mn.defineSpecialInf}
    ${mn.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${An}
    ${Fn}
    ${Wn}
  `}(Vt);return at.isPacked?(Jt=function(mn,gn){switch(mn.length){case 0:return pr();case 1:return function(fn,yn){const In=[Math.ceil(yn[0]/2),Math.ceil(yn[1]/2)];return In[0]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${In[1]}.0);
      }
    `:In[1]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${In[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${In[0]}, ${In[1]}));
      return 2 * (resTexRC.x * ${In[1]} + resTexRC.y);
    }
  `}(0,gn);case 2:return function(fn,yn){const In=[Math.ceil(yn[0]/2),Math.ceil(yn[1]/2)];if(c.Lb.arraysEqual(fn,yn))return`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${In[0]}, ${In[1]}));
      }
    `;const Ln=Math.ceil(fn[1]/2);return`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${In[0]}, ${In[1]}));

      int index = resTexRC.x * ${In[1]} + resTexRC.y;
      int r = 2 * (index / ${Ln});
      int c = imod(index, ${Ln}) * 2;

      return ivec2(r, c);
    }
  `}(mn,gn);case 3:return function(fn,yn){const In=[Math.ceil(yn[0]/2),Math.ceil(yn[1]/2)],Ln=Math.ceil(fn[2]/2),Vn=Ln*Math.ceil(fn[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${In[0]}, ${In[1]}));
      int index = resTexRC.x * ${In[1]} + resTexRC.y;

      int b = index / ${Vn};
      index -= b * ${Vn};

      int r = 2 * (index / ${Ln});
      int c = imod(index, ${Ln}) * 2;

      return ivec3(b, r, c);
    }
  `}(mn,gn);default:return function(fn,yn){const In=[Math.ceil(yn[0]/2),Math.ceil(yn[1]/2)],Ln=Math.ceil(fn[fn.length-1]/2),Vn=Ln*Math.ceil(fn[fn.length-2]/2);let Sn=Vn,En="",_n="b, r, c";for(let Kn=2;Kn<fn.length-1;Kn++)Sn*=fn[fn.length-Kn-1],En=`
      int b${Kn} = index / ${Sn};
      index -= b${Kn} * ${Sn};
    `+En,_n=`b${Kn}, `+_n;return`
    ivec${fn.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${In[0]}, ${In[1]}));
      int index = resTexRC.x * ${In[1]} + resTexRC.y;

      ${En}

      int b = index / ${Vn};
      index -= b * ${Vn};

      int r = 2 * (index / ${Ln});
      int c = imod(index, ${Ln}) * 2;

      return ivec${fn.length}(${_n});
    }
  `}(mn,gn)}}(at.logicalShape,Lt),un=function(mn){return`
    void setOutput(vec4 val) {
      ${mn.output} = val;
    }
  `}(Vt)):(Jt=function(mn,gn){switch(mn.length){case 0:return pr();case 1:return function(fn,yn){return yn[0]===1?`
      int getOutputCoords() {
        return int(resultUV.x * ${yn[1]}.0);
      }
    `:yn[1]===1?`
      int getOutputCoords() {
        return int(resultUV.y * ${yn[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${yn[0]}, ${yn[1]}));
      return resTexRC.x * ${yn[1]} + resTexRC.y;
    }
  `}(0,gn);case 2:return function(fn,yn){return c.Lb.arraysEqual(fn,yn)?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${yn[0]}, ${yn[1]}));
      }
    `:fn[1]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${yn[0]}, ${yn[1]}));
        int index = resTexRC.x * ${yn[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:fn[0]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${yn[0]}, ${yn[1]}));
        int index = resTexRC.x * ${yn[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${yn[0]}, ${yn[1]}));
      int index = resTexRC.x * ${yn[1]} + resTexRC.y;
      int r = index / ${fn[1]};
      int c = index - r * ${fn[1]};
      return ivec2(r, c);
    }
  `}(mn,gn);case 3:return function(fn,yn){const In=hr(["r","c","d"],fn);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${yn[0]}, ${yn[1]}));
      int index = resTexRC.x * ${yn[1]} + resTexRC.y;
      ${In}
      return ivec3(r, c, d);
    }
  `}(mn,gn);case 4:return function(fn,yn){const In=hr(["r","c","d","d2"],fn);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${yn[0]}, ${yn[1]}));
      int index = resTexRC.x * ${yn[1]} + resTexRC.y;
      ${In}
      return ivec4(r, c, d, d2);
    }
  `}(mn,gn);case 5:return function(fn,yn){const In=hr(["r","c","d","d2","d3"],fn);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${yn[0]},
                             ${yn[1]}));

      int index = resTexRC.x * ${yn[1]} + resTexRC.y;

      ${In}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}(mn,gn);case 6:return function(fn,yn){const In=hr(["r","c","d","d2","d3","d4"],fn);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${yn[0]}, ${yn[1]}));
      int index = resTexRC.x * ${yn[1]} + resTexRC.y;

      ${In}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}(mn,gn);default:throw new Error(mn.length+"-D output sampling is not yet supported")}}(at.logicalShape,Lt),un=function(mn){return`
    void setOutput(float val) {
      ${mn.output} = vec4(val, 0, 0, 0);
    }
  `}(Vt)),vt&&(on+=Qn),[on,Ht,un,It,Jt,Et,gt].join(`
`)}function hn(Ft){const at=Ft.shapeInfo.logicalShape;switch(at.length){case 0:return function(gt){const vt=gt.name,Nt="get"+vt.charAt(0).toUpperCase()+vt.slice(1);if(gt.shapeInfo.isUniform)return`float ${Nt}() {return ${vt};}`;const[It,Et]=gt.shapeInfo.texShape;if(It===1&&Et===1)return`
      float ${Nt}() {
        return sampleTexture(${vt}, halfCR);
      }
    `;const[Lt,Vt]=gt.shapeInfo.texShape,Ht=nr(vt);return`
    float ${Nt}() {
      vec2 uv = uvFromFlat(${Lt}, ${Vt}, ${Ht});
      return sampleTexture(${vt}, uv);
    }
  `}(Ft);case 1:return function(gt){const vt=gt.name,Nt="get"+vt.charAt(0).toUpperCase()+vt.slice(1);if(gt.shapeInfo.isUniform)return`
      float ${Nt}(int index) {
        ${Yn(gt)}
      }
    `;const It=gt.shapeInfo.texShape,Et=It[0],Lt=It[1];if(Lt===1&&Et===1)return`
      float ${Nt}(int index) {
        return sampleTexture(${vt}, halfCR);
      }
    `;const Vt=nr(vt);return Lt===1?`
      float ${Nt}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${Vt}) + 0.5) / ${Et}.0);
        return sampleTexture(${vt}, uv);
      }
    `:Et===1?`
      float ${Nt}(int index) {
        vec2 uv = vec2((float(index + ${Vt}) + 0.5) / ${Lt}.0, 0.5);
        return sampleTexture(${vt}, uv);
      }
    `:`
    float ${Nt}(int index) {
      vec2 uv = uvFromFlat(${Et}, ${Lt}, index + ${Vt});
      return sampleTexture(${vt}, uv);
    }
  `}(Ft);case 2:return function(gt){const vt=gt.shapeInfo.logicalShape,Nt=gt.name,It="get"+Nt.charAt(0).toUpperCase()+Nt.slice(1),Et=gt.shapeInfo.texShape;if(Et!=null&&c.Lb.arraysEqual(vt,Et)){const mn=Et[0],gn=Et[1];return`
    float ${It}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${gn}.0, ${mn}.0);
      return sampleTexture(${Nt}, uv);
    }
  `}const{newShape:Lt,keptDims:Vt}=c.Lb.squeezeShape(vt),Ht=Lt;if(Ht.length<vt.length){const mn=$r(gt,Ht),gn=["row","col"];return`
      ${hn(mn)}
      float ${It}(int row, int col) {
        return ${It}(${Fr(gn,Vt)});
      }
    `}if(gt.shapeInfo.isUniform)return`
      float ${It}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${vt[1]}, 1)));
        ${Yn(gt)}
      }
    `;const Jt=Et[0],un=Et[1],on=nr(Nt);return un===1?`
    float ${It}(int row, int col) {
      float index = dot(vec3(row, col, ${on}), vec3(${vt[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${Jt}.0);
      return sampleTexture(${Nt}, uv);
    }
  `:Jt===1?`
    float ${It}(int row, int col) {
      float index = dot(vec3(row, col, ${on}), vec3(${vt[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${un}.0, 0.5);
      return sampleTexture(${Nt}, uv);
    }
  `:`
  float ${It}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${vt[1]} + col + ${on};
    vec2 uv = uvFromFlat(${Jt}, ${un}, index);
    return sampleTexture(${Nt}, uv);
  }
`}(Ft);case 3:return function(gt){const vt=gt.shapeInfo.logicalShape,Nt=gt.name,It="get"+Nt.charAt(0).toUpperCase()+Nt.slice(1),Et=vt[1]*vt[2],Lt=vt[2],{newShape:Vt,keptDims:Ht}=c.Lb.squeezeShape(vt),Jt=Vt;if(Jt.length<vt.length){const yn=$r(gt,Jt),In=["row","col","depth"];return`
        ${hn(yn)}
        float ${It}(int row, int col, int depth) {
          return ${It}(${Fr(In,Ht)});
        }
      `}if(gt.shapeInfo.isUniform)return`
      float ${It}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${Et}, ${Lt}, 1)));
        ${Yn(gt)}
      }
    `;const un=gt.shapeInfo.texShape,on=un[0],mn=un[1],gn=gt.shapeInfo.flatOffset;if(mn===Et&&gn==null)return`
        float ${It}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${Lt}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${mn}.0, ${on}.0);
          return sampleTexture(${Nt}, uv);
        }
      `;if(mn===Lt&&gn==null)return`
    float ${It}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${vt[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${mn}.0, ${on}.0);
      return sampleTexture(${Nt}, uv);
    }
  `;const fn=nr(Nt);return`
      float ${It}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${Et} + col * ${Lt} + depth + ${fn};
        vec2 uv = uvFromFlat(${on}, ${mn}, index);
        return sampleTexture(${Nt}, uv);
      }
  `}(Ft);case 4:return function(gt){const vt=gt.shapeInfo.logicalShape,Nt=gt.name,It="get"+Nt.charAt(0).toUpperCase()+Nt.slice(1),Et=vt[3],Lt=vt[2]*Et,Vt=vt[1]*Lt,{newShape:Ht,keptDims:Jt}=c.Lb.squeezeShape(vt);if(Ht.length<vt.length){const yn=$r(gt,Ht),In=["row","col","depth","depth2"];return`
      ${hn(yn)}
      float ${It}(int row, int col, int depth, int depth2) {
        return ${It}(${Fr(In,Jt)});
      }
    `}if(gt.shapeInfo.isUniform)return`
      float ${It}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${Vt}, ${Lt}, ${Et}, 1)));
        ${Yn(gt)}
      }
    `;const un=gt.shapeInfo.flatOffset,on=gt.shapeInfo.texShape,mn=on[0],gn=on[1];if(gn===Vt&&un==null)return`
      float ${It}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${Lt}, ${Et}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${gn}.0, ${mn}.0);
        return sampleTexture(${Nt}, uv);
      }
    `;if(gn===Et&&un==null)return`
      float ${It}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${vt[1]*vt[2]}, ${vt[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${gn}.0, ${mn}.0);
        return sampleTexture(${Nt}, uv);
      }
    `;const fn=nr(Nt);return`
    float ${It}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${Vt} + col * ${Lt} +
          depth * ${Et} + depth2;
      vec2 uv = uvFromFlat(${mn}, ${gn}, index + ${fn});
      return sampleTexture(${Nt}, uv);
    }
  `}(Ft);case 5:return function(gt){const vt=gt.shapeInfo.logicalShape,Nt=gt.name,It="get"+Nt.charAt(0).toUpperCase()+Nt.slice(1),Et=vt[4],Lt=vt[3]*Et,Vt=vt[2]*Lt,Ht=vt[1]*Vt,{newShape:Jt,keptDims:un}=c.Lb.squeezeShape(vt);if(Jt.length<vt.length){const In=$r(gt,Jt),Ln=["row","col","depth","depth2","depth3"];return`
      ${hn(In)}
      float ${It}(int row, int col, int depth, int depth2, int depth3) {
        return ${It}(${Fr(Ln,un)});
      }
    `}if(gt.shapeInfo.isUniform)return`
      float ${It}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${Ht}, ${Vt}, ${Lt}, ${Et})) +
          depth3;
        ${Yn(gt)}
      }
    `;const on=gt.shapeInfo.flatOffset,mn=gt.shapeInfo.texShape,gn=mn[0],fn=mn[1];if(fn===Ht&&on==null)return`
      float ${It}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${Vt}, ${Lt}, ${Et}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${fn}.0, ${gn}.0);
        return sampleTexture(${Nt}, uv);
      }
    `;if(fn===Et&&on==null)return`
      float ${It}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${vt[1]*vt[2]*vt[3]},
               ${vt[2]*vt[3]}, ${vt[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${fn}.0, ${gn}.0);
        return sampleTexture(${Nt}, uv);
      }
    `;const yn=nr(Nt);return`
    float ${It}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${Ht} + col * ${Vt} + depth * ${Lt} +
          depth2 * ${Et} + depth3 + ${yn};
      vec2 uv = uvFromFlat(${gn}, ${fn}, index);
      return sampleTexture(${Nt}, uv);
    }
  `}(Ft);case 6:return function(gt){const vt=gt.shapeInfo.logicalShape,Nt=gt.name,It="get"+Nt.charAt(0).toUpperCase()+Nt.slice(1),{newShape:Et,keptDims:Lt}=c.Lb.squeezeShape(vt);if(Et.length<vt.length){const Ln=$r(gt,Et),Vn=["row","col","depth","depth2","depth3","depth4"];return`
      ${hn(Ln)}
      float ${It}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${It}(${Fr(Vn,Lt)});
      }
    `}const Vt=vt[5],Ht=vt[4]*Vt,Jt=vt[3]*Ht,un=vt[2]*Jt,on=vt[1]*un;if(gt.shapeInfo.isUniform)return`
      float ${It}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${on}, ${un}, ${Jt}, ${Ht})) +
          dot(
            vec2(depth3, depth4),
            vec2(${Vt}, 1)));
        ${Yn(gt)}
      }
    `;const mn=gt.shapeInfo.flatOffset,gn=gt.shapeInfo.texShape,fn=gn[0],yn=gn[1];if(yn===on&&mn==null)return`
      float ${It}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${un}, ${Jt}, ${Ht}, ${Vt})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${yn}.0, ${fn}.0);
        return sampleTexture(${Nt}, uv);
      }
    `;if(yn===Vt&&mn==null)return`
      float ${It}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${vt[1]*vt[2]*vt[3]*vt[4]},
               ${vt[2]*vt[3]*vt[4]},
               ${vt[3]*vt[4]},
               ${vt[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${yn}.0, ${fn}.0);
        return sampleTexture(${Nt}, uv);
      }
    `;const In=nr(Nt);return`
    float ${It}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${on} + col * ${un} + depth * ${Jt} +
          depth2 * ${Ht} + depth3 * ${Vt} + depth4 + ${In};
      vec2 uv = uvFromFlat(${fn}, ${yn}, index);
      return sampleTexture(${Nt}, uv);
    }
  `}(Ft);default:throw new Error(at.length+"-D input sampling is not yet supported")}}function xn(Ft){switch(Ft.shapeInfo.logicalShape.length){case 0:return function(at){const gt=at.name,vt="get"+gt.charAt(0).toUpperCase()+gt.slice(1),Nt=rr();return`
    vec4 ${vt}() {
      return ${Nt.texture2D}(${gt}, halfCR);
    }
  `}(Ft);case 1:return function(at){const gt=at.name,vt="get"+gt.charAt(0).toUpperCase()+gt.slice(1),Nt=at.shapeInfo.texShape,It=[Math.ceil(Nt[0]/2),Math.ceil(Nt[1]/2)],Et=rr();return`
    vec4 ${vt}(int index) {
      vec2 uv = packedUVfrom1D(
        ${It[0]}, ${It[1]}, index);
      return ${Et.texture2D}(${gt}, uv);
    }
  `}(Ft);case 2:return function(at){const gt=at.shapeInfo.logicalShape,vt=at.name,Nt="get"+vt.charAt(0).toUpperCase()+vt.slice(1),It=at.shapeInfo.texShape,Et=It[0],Lt=It[1],Vt=rr();if(It!=null&&c.Lb.arraysEqual(gt,It))return`
      vec4 ${Nt}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${Lt}.0, ${Et}.0);

        return ${Vt.texture2D}(${vt}, uv);
      }
    `;const Ht=[Math.ceil(It[0]/2),Math.ceil(It[1]/2)],Jt=Math.ceil(gt[1]/2);return`
    vec4 ${Nt}(int row, int col) {
      vec2 uv = packedUVfrom2D(${Jt}, ${Ht[0]}, ${Ht[1]}, row, col);
      return ${Vt.texture2D}(${vt}, uv);
    }
  `}(Ft);case 3:return function(at){const gt=at.shapeInfo.logicalShape,vt=at.name,Nt="get"+vt.charAt(0).toUpperCase()+vt.slice(1),It=at.shapeInfo.texShape,Et=[Math.ceil(It[0]/2),Math.ceil(It[1]/2)];if(gt[0]===1){const on=gt.slice(1),mn=[1,2],gn=$r(at,on),fn=["b","row","col"];return`
        ${xn(gn)}
        vec4 ${Nt}(int b, int row, int col) {
          return ${Nt}(${Fr(fn,mn)});
        }
      `}const Lt=Et[0],Vt=Et[1],Ht=Math.ceil(gt[2]/2),Jt=Ht*Math.ceil(gt[1]/2),un=rr();return`
    vec4 ${Nt}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${Lt}, ${Vt}, ${Jt}, ${Ht}, b, row, col);
      return ${un.texture2D}(${vt}, uv);
    }
  `}(Ft);default:return function(at){const gt=at.shapeInfo.logicalShape,vt=gt.length,Nt=at.name,It="get"+Nt.charAt(0).toUpperCase()+Nt.slice(1),Et=at.shapeInfo.texShape,Lt=[Math.ceil(Et[0]/2),Math.ceil(Et[1]/2)],Vt=Lt[0],Ht=Lt[1],Jt=Math.ceil(gt[vt-1]/2);let un=Jt*Math.ceil(gt[vt-2]/2),on="int b, int row, int col",mn=`b * ${un} + (row / 2) * ${Jt} + (col / 2)`;for(let fn=2;fn<vt-1;fn++)on=`int b${fn}, `+on,un*=gt[vt-fn-1],mn=`b${fn} * ${un} + `+mn;const gn=rr();return`
    vec4 ${It}(${on}) {
      int index = ${mn};
      int texR = index / ${Ht};
      int texC = index - texR * ${Ht};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${Ht}, ${Vt});
      return ${gn.texture2D}(${Nt}, uv);
    }
  `}(Ft)}}const An=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Fn=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Wn=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Qn=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function pr(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function nr(Ft){return"offset"+Ft}function Yn(Ft){const at=Ft.name,gt=c.Lb.sizeFromShape(Ft.shapeInfo.logicalShape);return gt<2?`return ${at};`:`
    for (int i = 0; i < ${gt}; i++) {
      if (i == index) {
        return ${at}[i];
      }
    }
  `}function Hn(Ft){if(Ft<=1)return"int";if(Ft===2)return"ivec2";if(Ft===3)return"ivec3";if(Ft===4)return"ivec4";if(Ft===5)return"ivec5";if(Ft===6)return"ivec6";throw Error(`GPU for rank ${Ft} is not yet supported`)}function $r(Ft,at){const gt=JSON.parse(JSON.stringify(Ft));return gt.shapeInfo.logicalShape=at,gt}function Fr(Ft,at){return at.map(gt=>Ft[gt]).join(", ")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rs{constructor(at,gt,vt,Nt){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,c.Lb.assert(at.length>2,()=>`Packed arg${vt.charAt(0).toUpperCase()+vt.slice(1)} supports only inputs with rank above 2.`);const It=at[at.length-1],Et=Math.ceil(It/gt);this.outputShape=at.slice(0,-1),Et>1&&this.outputShape.push(Et),Nt||this.variableNames.push("bestIndicesA");const Lt=this.outputShape,Vt=Lt.length,Ht=Hn(Vt),Jt=Jn("coords",Vt);let un,on;if(Et===1){on=Vt+1;const Xn=Hn(on);un=`
        ${Xn} sourceLocR = ${Xn}(${Jt.join()}, 0);
        ++${Jt[Vt-1]};
        ${Xn} sourceLocG = ${Xn}(${Jt.join()}, 0);
        ++${Jt[Vt-2]};
        ${Xn} sourceLocA = ${Xn}(${Jt.join()}, 0);
        --${Jt[Vt-1]};
        ${Xn} sourceLocB = ${Xn}(${Jt.join()}, 0);
        --${Jt[Vt-2]};`}else on=Vt,un=`
        ${Ht} sourceLocR = coords;
        ++${Jt[Vt-1]};
        ${Ht} sourceLocG = coords;
        ++${Jt[Vt-2]};
        ${Ht} sourceLocA = coords;
        --${Jt[Vt-1]};
        ${Ht} sourceLocB = coords;
        --${Jt[Vt-2]};`;const mn=["x","y","z","w","u","v"].slice(0,on),gn="."+mn[on-1],fn=mn.map(Xn=>"int "+Xn),yn=Jn("sourceLocR",on-1).concat("inIdx.r"),In=Jn("sourceLocG",on-1).concat("inIdx.g"),Ln=Jn("sourceLocB",on-1).concat("inIdx.b"),Vn=Jn("sourceLocA",on-1).concat("inIdx.a"),Sn=vt==="max"?"greaterThan":"lessThan",En=Nt?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${yn.join()}),
                             getBestIndicesAChannel(${In.join()}),
                             getBestIndicesAChannel(${Ln.join()}),
                             getBestIndicesAChannel(${Vn.join()})));`,_n=`vec4(
            getAChannel(${yn.join()}),
            hasNextCol ? getAChannel(${In.join()}) : 0.,
            hasNextRow ? getAChannel(${Ln.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${Vn.join()}) : 0.)`,Kn=Nt?"":`
      float getBestIndicesAChannel(${fn.join()}) {
        return getChannel(getBestIndicesA(${mn.join()}),
                                          vec2(${mn.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${fn.join()}) {
        return getChannel(getA(${mn.join()}),
                               vec2(${mn.slice(-2).join()}));
      }
      ${Kn}
      void main() {
        ${Ht} coords = getOutputCoords();
        bool hasNextCol = ${Jt[Vt-1]} < ${Lt[Vt-1]-1};
        bool hasNextRow = ${Jt[Vt-2]} < ${Lt[Vt-2]-1};
        ${un}
        ivec4 srcIdx = ivec4(sourceLocR${gn}, sourceLocG${gn},
          sourceLocB${gn}, sourceLocA${gn}) * ${gt};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${_n};

        for (int i = 0; i < ${gt}; i++) {
          inIdx = srcIdx;
          ${En}
          vec4 candidate = ${_n};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${Sn}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lo{constructor(at){this.variableNames=["dy"],this.outputShape=at.inShape;const gt=at.filterHeight,vt=at.filterWidth,Nt=at.strideHeight,It=at.strideWidth,Et=at.dilationHeight,Lt=at.dilationWidth,Vt=at.effectiveFilterHeight,Ht=at.effectiveFilterWidth,Jt=Vt-1-at.padInfo.top,un=Ht-1-at.padInfo.left,on=1/(gt*vt);this.userCode=`
      const ivec2 pads = ivec2(${Jt}, ${un});
      const float avgMultiplier = float(${on});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${Vt};
            wR += ${Et}) {
          float dyR = float(dyRCorner + wR) / ${Nt}.0;

          if (dyR < 0.0 || dyR >= ${at.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${Ht};
            wC+= ${Lt}) {
            float dyC = float(dyCCorner + wC) / ${It}.0;

            if (dyC < 0.0 || dyC >= ${at.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class zo{constructor(at){this.variableNames=["dy"],this.outputShape=at.inShape;const gt=at.filterDepth,vt=at.filterHeight,Nt=at.filterWidth,It=at.strideDepth,Et=at.strideHeight,Lt=at.strideWidth,Vt=at.dilationDepth,Ht=at.dilationHeight,Jt=at.dilationWidth,un=at.effectiveFilterDepth,on=at.effectiveFilterHeight,mn=at.effectiveFilterWidth,gn=un-1-at.padInfo.front,fn=on-1-at.padInfo.top,yn=mn-1-at.padInfo.left,In=1/(gt*vt*Nt);this.userCode=`
      const ivec3 pads = ivec3(${gn}, ${fn}, ${yn});
      const float avgMultiplier = float(${In});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${un};
            wD += ${Vt}) {
          float dyD = float(dyDCorner + wD) / ${It}.0;

          if (dyD < 0.0 || dyD >= ${at.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${on};
              wR += ${Ht}) {
            float dyR = float(dyRCorner + wR) / ${Et}.0;

            if (dyR < 0.0 || dyR >= ${at.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${mn};
                wC += ${Jt}) {
              float dyC = float(dyCCorner + wC) / ${Lt}.0;

              if (dyC < 0.0 || dyC >= ${at.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ss="return (a < 0.) ? b * a : a;";class Wr{constructor(at,gt,vt){this.variableNames=["A","B"],this.outputShape=c.X.assertAndGetBroadcastShape(gt,vt),this.userCode=`
      float binaryOperation(float a, float b) {
        ${at}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cs=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;class hs{constructor(at,gt,vt,Nt=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=c.X.assertAndGetBroadcastShape(gt,vt);const It=this.outputShape.length;let Et="";if(Nt)if(It===0||c.Lb.sizeFromShape(this.outputShape)===1)Et=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(Et=`
          ${Hn(It)} coords = getOutputCoords();
        `,It===1)Et+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const Lt=Jn("coords",It);Et+=`
            bool nextRowOutOfBounds =
              (${Lt[It-2]} + 1) >= ${this.outputShape[It-2]};
            bool nextColOutOfBounds =
              (${Lt[It-1]} + 1) >= ${this.outputShape[It-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${at}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${Et}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ws{constructor(at){this.variableNames=["A"],this.outputShape=at,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}getCustomSetupFunc(at,gt){return(vt,Nt)=>{this.minLoc==null&&(this.minLoc=vt.getUniformLocationNoThrow(Nt,"minVal"),this.maxLoc=vt.getUniformLocationNoThrow(Nt,"maxVal")),vt.gl.uniform1f(this.minLoc,at),vt.gl.uniform1f(this.maxLoc,gt)}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vr{constructor(at){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=at,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}getCustomSetupFunc(at,gt){return(vt,Nt)=>{this.minLoc==null&&(this.minLoc=vt.getUniformLocationNoThrow(Nt,"minVal"),this.maxLoc=vt.getUniformLocationNoThrow(Nt,"maxVal")),vt.gl.uniform1f(this.minLoc,at),vt.gl.uniform1f(this.maxLoc,gt)}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class No{constructor(at){this.variableNames=["real","imag"],this.outputShape=at,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ho{constructor(at){this.variableNames=["x","dy"],this.outputShape=at.filterShape;const gt=at.strideHeight,vt=at.strideWidth,Nt=at.padInfo.top,It=at.padInfo.left,Et=at.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${at.batchSize}; b++) {
          for (int yR = 0; yR < ${at.outHeight}; yR++) {
            int xR = wR + yR * ${gt} - ${Nt};

            if (xR < 0 || xR >= ${at.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${at.outWidth}; yC++) {
              int xC = wC + yC * ${vt} - ${It};

              if (xC < 0 || xC >= ${at.inWidth}) {
                continue;
              }

              if (${Et}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Vo{constructor(at){this.variableNames=["dy","W"],this.outputShape=at.inShape;const gt=at.filterHeight,vt=at.filterWidth,Nt=at.strideHeight,It=at.strideWidth,Et=at.dataFormat==="channelsLast",Lt=gt-1-at.padInfo.top,Vt=vt-1-at.padInfo.left,Ht=Et?1:2,Jt=Et?2:3,un=Et?3:1;this.userCode=`
      const ivec2 pads = ivec2(${Lt}, ${Vt});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${un}];

        ivec2 dyCorner = ivec2(coords[${Ht}], coords[${Jt}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${gt}; wR++) {
          float dyR = float(dyRCorner + wR) / ${Nt}.0;

          if (dyR < 0.0 || dyR >= ${at.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${gt} - 1 - wR;

          for (int wC = 0; wC < ${vt}; wC++) {
            float dyC = float(dyCCorner + wC) / ${It}.0;

            if (dyC < 0.0 || dyC >= ${at.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${vt} - 1 - wC;

            for (int d2 = 0; d2 < ${at.outChannels}; d2++) {

              if (${Et}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class yr{constructor(at){this.variableNames=["x","dy"],this.outputShape=at.filterShape;const gt=at.strideDepth,vt=at.strideHeight,Nt=at.strideWidth,It=at.padInfo.front,Et=at.padInfo.top,Lt=at.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${at.batchSize}; b++) {
          for (int yF = 0; yF < ${at.outDepth}; yF++) {
            int xF = wF + yF * ${gt} - ${It};

            if (xF < 0 || xF >= ${at.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${at.outHeight}; yR++) {
              int xR = wR + yR * ${vt} - ${Et};

              if (xR < 0 || xR >= ${at.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${at.outWidth}; yC++) {
                int xC = wC + yC * ${Nt} - ${Lt};

                if (xC < 0 || xC >= ${at.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Or{constructor(at){this.variableNames=["dy","W"],this.outputShape=at.inShape;const gt=at.filterDepth,vt=at.filterHeight,Nt=at.filterWidth,It=at.strideDepth,Et=at.strideHeight,Lt=at.strideWidth,Vt=gt-1-at.padInfo.front,Ht=vt-1-at.padInfo.top,Jt=Nt-1-at.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${Vt}, ${Ht}, ${Jt});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${gt}; wF++) {
          float dyF = float(dyFCorner + wF) / ${It}.0;

          if (dyF < 0.0 || dyF >= ${at.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${gt} - 1 - wF;

          for (int wR = 0; wR < ${vt}; wR++) {
            float dyR = float(dyRCorner + wR) / ${Et}.0;

            if (dyR < 0.0 || dyR >= ${at.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${vt} - 1 - wR;

            for (int wC = 0; wC < ${Nt}; wC++) {
              float dyC = float(dyCCorner + wC) / ${Lt}.0;

              if (dyC < 0.0 || dyC >= ${at.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${Nt} - 1 - wC;

              for (int d2 = 0; d2 < ${at.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zs{constructor(at){this.variableNames=["x","dy"],this.outputShape=at.filterShape;const gt=at.strideHeight,vt=at.strideWidth,Nt=at.padInfo.top,It=at.padInfo.left,Et=at.outChannels/at.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${Et} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${at.batchSize}; b++) {
          for (int yR = 0; yR < ${at.outHeight}; yR++) {
            int xR = wR + yR * ${gt} - ${Nt};

            if (xR < 0 || xR >= ${at.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${at.outWidth}; yC++) {
              int xC = wC + yC * ${vt} - ${It};

              if (xC < 0 || xC >= ${at.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class $o{constructor(at){this.variableNames=["dy","W"],this.outputShape=at.inShape;const gt=at.filterHeight,vt=at.filterWidth,Nt=at.strideHeight,It=at.strideWidth,Et=gt-1-at.padInfo.top,Lt=vt-1-at.padInfo.left,Vt=at.outChannels/at.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${Et}, ${Lt});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${gt}; wR++) {
          float dyR = float(dyRCorner + wR) / ${Nt}.0;

          if (dyR < 0.0 || dyR >= ${at.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${gt} - 1 - wR;

          for (int wC = 0; wC < ${vt}; wC++) {
            float dyC = float(dyCCorner + wC) / ${It}.0;

            if (dyC < 0.0 || dyC >= ${at.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${vt} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${Vt}; dm++) {
              int d2 = d1 * ${Vt} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zn{constructor(at,gt=!1,vt=null,Nt=!1){this.variableNames=["x","W"],this.outputShape=at.outShape;const It=at.padInfo.top,Et=at.padInfo.left,Lt=at.strideHeight,Vt=at.strideWidth,Ht=at.dilationHeight,Jt=at.dilationWidth,un=at.filterHeight,on=at.filterWidth,mn=4*Math.floor(at.inChannels/4),gn=at.inChannels%4,fn=at.dataFormat==="channelsLast",yn=fn?1:2,In=fn?2:3,Ln=fn?3:1;let Vn="",Sn="";vt&&(Vn=Nt?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${vt}
        }`:`
          float activation(float x) {
            ${vt}
          }
        `,Sn="result = activation(result);");const En=gt?"result += getBiasAtOutCoords();":"";gt&&this.variableNames.push("bias"),Nt&&this.variableNames.push("preluActivationWeights"),this.userCode=`
      ${Vn}

      const ivec2 strides = ivec2(${Lt}, ${Vt});
      const ivec2 pads = ivec2(${It}, ${Et});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${Ln}];

        ivec2 xRCCorner =
            ivec2(coords[${yn}], coords[${In}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${un}; wR++) {
          int xR = xRCorner + wR * ${Ht};

          if (xR < 0 || xR >= ${at.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${on}; wC++) {
            int xC = xCCorner + wC * ${Jt};

            if (xC < 0 || xC >= ${at.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${mn}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${fn}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${gn===1}) {

              if (${fn}) {
                dotProd +=
                    getX(batch, xR, xC, ${mn}) *
                    getW(wR, wC, ${mn}, d2);
              } else {
                dotProd +=
                    getX(batch, ${mn}, xR, xC) *
                    getW(wR, wC, ${mn}, d2);
              }

            } else if (${gn===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${mn}, d2),
                getW(wR, wC, ${mn} + 1, d2)
              );

              if (${fn}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${mn}),
                  getX(batch, xR, xC, ${mn} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${mn}, xR, xC),
                  getX(batch, ${mn} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${gn===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${mn}, d2),
                getW(wR, wC, ${mn} + 1, d2),
                getW(wR, wC, ${mn} + 2, d2)
              );

              if (${fn}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${mn}),
                  getX(batch, xR, xC, ${mn} + 1),
                  getX(batch, xR, xC, ${mn} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${mn}, xR, xC),
                  getX(batch, ${mn} + 1, xR, xC),
                  getX(batch, ${mn} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${En}
        ${Sn}
        setOutput(result);
      }
    `}}class Bo{constructor(at){this.variableNames=["x","W"],this.outputShape=at.outShape;const gt=at.padInfo.front,vt=at.padInfo.top,Nt=at.padInfo.left,It=at.strideDepth,Et=at.strideHeight,Lt=at.strideWidth,Vt=at.dilationDepth,Ht=at.dilationHeight,Jt=at.dilationWidth,un=at.filterDepth,on=at.filterHeight,mn=at.filterWidth,gn=4*Math.floor(at.inChannels/4),fn=at.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${It}, ${Et}, ${Lt});
      const ivec3 pads = ivec3(${gt}, ${vt}, ${Nt});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${un}; wF++) {
          int xF = xFCorner + wF * ${Vt};

          if (xF < 0 || xF >= ${at.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${on}; wR++) {
            int xR = xRCorner + wR * ${Ht};

            if (xR < 0 || xR >= ${at.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${mn}; wC++) {
              int xC = xCCorner + wC * ${Jt};

              if (xC < 0 || xC >= ${at.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${gn}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${fn===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${gn}) *
                  getW(wF, wR, wC, ${gn}, d2);
              } else if (${fn===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${gn}),
                  getX(batch, xF, xR, xC, ${gn} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${gn}, d2),
                  getW(wF, wR, wC, ${gn} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${fn===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${gn}),
                  getX(batch, xF, xR, xC, ${gn} + 1),
                  getX(batch, xF, xR, xC, ${gn} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${gn}, d2),
                  getW(wF, wR, wC, ${gn} + 1, d2),
                  getW(wF, wR, wC, ${gn} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vs{constructor(at,gt=!1,vt=null,Nt=!1){this.variableNames=["x","W"],this.outputShape=at.outShape;const It=at.inHeight,Et=at.inWidth,Lt=at.padInfo.top,Vt=at.padInfo.left,Ht=at.strideHeight,Jt=at.strideWidth,un=at.dilationHeight,on=at.dilationWidth,mn=at.filterHeight,gn=at.filterWidth,fn=at.outChannels/at.inChannels;let yn="",In="";vt&&(yn=Nt?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${vt}
        }`:`
          float activation(float x) {
            ${vt}
          }
        `,In="result = activation(result);");const Ln=gt?"result += getBiasAtOutCoords();":"";gt&&this.variableNames.push("bias"),Nt&&this.variableNames.push("preluActivationWeights"),this.userCode=`
      ${yn}

      const ivec2 strides = ivec2(${Ht}, ${Jt});
      const ivec2 pads = ivec2(${Lt}, ${Vt});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${fn};
        int q = d2 - d1 * ${fn};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${mn}; wR++) {
          int xR = xRCorner + wR * ${un};

          if (xR < 0 || xR >= ${It}) {
            continue;
          }

          for (int wC = 0; wC < ${gn}; wC++) {
            int xC = xCCorner + wC * ${on};

            if (xC < 0 || xC >= ${Et}) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${Ln}
        ${In}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jo{constructor(at,gt=!1,vt=null,Nt=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=at.outShape;const It=at.inHeight,Et=at.inWidth,Lt=at.padInfo.top,Vt=at.padInfo.left,Ht=at.strideHeight,Jt=at.strideWidth,un=at.dilationHeight,on=at.dilationWidth,mn=at.filterHeight,gn=at.filterWidth,fn=gn;let yn="int xR; int xC; int xCOffset;";for(let Sn=0;Sn<mn;Sn++)for(let En=0;En<gn;En++)yn+=`
          vec4 xTexelR${Sn}C${2*En} = vec4(0.);
          vec4 wR${Sn}C${En} = vec4(0.);
          vec4 xR${Sn}C${En} = vec4(0.);`;for(let Sn=0;Sn<mn;Sn++)for(let En=0;En<fn;En++){const _n=2*En;if(yn+=`
          xR = xRCorner + ${Sn*un};
          xC = xCCorner + ${_n*on};
        `,Jt===1){if(_n<gn&&(yn+=Vt%2==1?`
                xCOffset = xC + 1;
                if(xR >= 0 && xR < ${It} && xCOffset >= 0 && xCOffset < ${Et}) {
                  xTexelR${Sn}C${_n} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${Et}) {
                    xTexelR${Sn}C${_n}.zw = vec2(0.);
                  }
                } else {
                  xTexelR${Sn}C${_n} = vec4(0.);
                }

                xCOffset = xC + 1 - 2;
                if(xR >= 0 && xR < ${It} && xCOffset >= 0 && xCOffset < ${Et}) {
                  vec4 previous = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${Et}) {
                    previous.zw = vec2(0.);
                  }

                  xR${Sn}C${_n} = vec4(previous.zw, xTexelR${Sn}C${_n}.xy);
                } else {
                  xR${Sn}C${_n} = vec4(0, 0, xTexelR${Sn}C${_n}.xy);
                }
              `:`
                if(xR >= 0 && xR < ${It} && xC >= 0 && xC < ${Et}) {
                  xTexelR${Sn}C${_n} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${Sn}C${_n} = vec4(0.);
                }

                xR${Sn}C${_n} = xTexelR${Sn}C${_n};
              `,_n+1<gn)){const Kn=Vt%2==0?c.Lb.nearestLargerEven(on):on;on%2==0&&Vt%2==1||on%2!=0&&Vt%2!=1?(yn+=`
                  xCOffset = xC + ${Vt%2} + ${Kn};

                  if(xR >= 0 && xR < ${It} &&
                    xCOffset >= 0 && xCOffset < ${Et}) {
                    xTexelR${Sn}C${_n+2} = getX(batch, xR, xCOffset, d1);
                  }
                `,on>1&&(yn+=`
                    xCOffset -= 2;
                    if(xR >= 0 && xR < ${It} &&
                      xCOffset >= 0 && xCOffset < ${Et}) {
                      xTexelR${Sn}C${_n} = getX(batch, xR, xCOffset, d1);
                    } else {
                      xTexelR${Sn}C${_n} = vec4(0.);
                    }
                  `),yn+=`
                  xR${Sn}C${_n+1} = vec4(
                    xTexelR${Sn}C${_n}.zw, xTexelR${Sn}C${_n+2}.xy);
                `):yn+=`
                  xCOffset = xC + ${Kn};

                  if(xR >= 0 && xR < ${It} &&
                    xCOffset >= 0 && xCOffset < ${Et}) {
                    xTexelR${Sn}C${_n+2} = getX(batch, xR, xCOffset, d1);
                  }

                  xR${Sn}C${_n+1} = xTexelR${Sn}C${_n+2};
                `}}else _n<gn&&(yn+=`
              if(xR >= 0 && xR < ${It}) {
            `,Vt%2==1?(yn+=`
                xCOffset = xC + 1 - ${Jt};
                if(xCOffset >= 0 && xCOffset < ${Et}) {
                  xTexelR${Sn}C${_n} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${Sn}C${_n} = vec4(0.);
                }

                if(xC + 1 >= 0 && xC + 1 < ${Et}) {
                  xTexelR${Sn}C${_n+2} = getX(batch, xR, xC + 1, d1);
                } else {
                  xTexelR${Sn}C${_n+2} = vec4(0.);
                }

                xR${Sn}C${_n} = vec4(
                  xTexelR${Sn}C${_n}.zw, xTexelR${Sn}C${_n+2}.zw);
              `,_n+1<gn&&(yn+=`
                  vec4 final = vec4(0.);
                  xCOffset = xC + 1 + ${Jt};
                  if(xCOffset >= 0 && xCOffset < ${Et}) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xR${Sn}C${_n+1} = vec4(xTexelR${Sn}C${_n+2}.xy, final.xy);
                `)):(yn+=`
                if(xC >= 0 && xC < ${Et}) {
                  xTexelR${Sn}C${_n} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${Sn}C${_n} = vec4(0.);
                }

                xCOffset = xC + ${Jt};
                if(xCOffset >= 0 && xCOffset < ${Et}) {
                  xTexelR${Sn}C${_n+2} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${Sn}C${_n+2} = vec4(0.);
                }

                xR${Sn}C${_n} = vec4(
                  xTexelR${Sn}C${_n}.xy, xTexelR${Sn}C${_n+2}.xy);
              `,_n+1<gn&&(yn+=`
                  xR${Sn}C${_n+1} = vec4(
                    xTexelR${Sn}C${_n}.zw, xTexelR${Sn}C${_n+2}.zw);
                `)),yn+="}");_n<gn&&(yn+=`
            vec4 wTexelR${Sn}C${_n} = getW(${Sn}, ${_n}, d1, q);
            wR${Sn}C${_n} = vec4(wTexelR${Sn}C${_n}.xz, wTexelR${Sn}C${_n}.xz);
          `,_n+1<gn&&(yn+=`
              vec4 wTexelR${Sn}C${_n+1} = getW(${Sn}, ${_n+1}, d1, q);
              wR${Sn}C${_n+1} =
                vec4(wTexelR${Sn}C${_n+1}.xz, wTexelR${Sn}C${_n+1}.xz);`))}for(let Sn=0;Sn<mn;Sn++)for(let En=0;En<gn;En++)yn+=`dotProd += xR${Sn}C${En} * wR${Sn}C${En};`;let In="",Ln="";vt&&(In=Nt?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${vt}
        }`:`vec4 activation(vec4 x) {
          ${vt}
        }`,Ln="result = activation(result);");const Vn=gt?"result += getBiasAtOutCoords();":"";gt&&this.variableNames.push("bias"),Nt&&this.variableNames.push("preluActivationWeights"),this.userCode=`
      ${In}

      const ivec2 strides = ivec2(${Ht}, ${Jt});
      const ivec2 pads = ivec2(${Lt}, ${Vt});

      void main() {

        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2;
        int q = 0;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        vec4 dotProd = vec4(0.);

        ${yn}

        vec4 result = dotProd;
        ${Vn}
        ${Ln}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eu{constructor(at,gt,vt,Nt,It){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[Et,Lt,Vt,Ht]=at,[Jt]=gt,[un,on]=vt;this.outputShape=[Jt,un,on,Ht];const mn=Nt==="bilinear"?1:0,[gn,fn]=[Lt-1+".0",Vt-1+".0"],[yn,In,Ln]=un>1?[""+(Lt-1)/(un-1),"(y2-y1) * height_ratio",`y1*${gn} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+gn],[Vn,Sn,En]=on>1?[""+(Vt-1)/(on-1),"(x2-x1) * width_ratio",`x1*${fn} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+fn];this.userCode=`
      const float height_ratio = float(${yn});
      const float width_ratio = float(${Vn});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${Et}) {
          return;
        }

        float height_scale = ${In};
        float width_scale = ${Sn};

        float in_y = ${Ln};
        if( in_y < 0.0 || in_y > ${gn} ) {
          setOutput(float(${It}));
          return;
        }
        float in_x = ${En};
        if( in_x < 0.0 || in_x > ${fn} ) {
          setOutput(float(${It}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${mn} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}class Uo{constructor(at,gt,vt){this.variableNames=["x"],this.outputShape=at;const Nt=at.length,It=gt?"0.0":`getX(${po(Nt,"coords")})`,Et=at[at.length-1];let Lt="",Vt="";gt?(Lt=vt?"end != "+(Et-1):"end != 0",Vt=vt?"end + 1":"end - 1"):(Lt=vt?"end + pow2 < "+Et:"end >= pow2",Vt=vt?"end + pow2":"end - pow2"),this.userCode=`
      uniform float index;
      void main() {
        ${Hn(Nt)} coords = getOutputCoords();
        int end = ${Ks(Nt,"coords")};
        float val = ${It};
        int pow2 = int(pow(2.0, index));
        if (${Lt}) {
          int idx = ${Vt};
          ${Ks(Nt,"coords")} = idx;
          val += getX(${po(Nt,"coords")});
        }
        setOutput(val);
      }
    `}getCustomSetupFunc(at){return(gt,vt)=>{this.index==null&&(this.index=gt.getUniformLocation(vt,"index")),gt.gl.uniform1f(this.index,at)}}}function po(Ft,at){if(Ft===1)return""+at;if(Ft===2)return`${at}.x, ${at}.y`;if(Ft===3)return`${at}.x, ${at}.y, ${at}.z`;if(Ft===4)return`${at}.x, ${at}.y, ${at}.z, ${at}.w`;throw Error(`Cumulative sum for rank ${Ft} is not yet supported`)}function Ks(Ft,at){if(Ft===1)return""+at;if(Ft===2)return at+".y";if(Ft===3)return at+".z";if(Ft===4)return at+".w";throw Error(`Cumulative sum for rank ${Ft} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xs{constructor(at){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=$.DENSE;const gt=rt(at),vt=rr();this.outputShape=at,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${hr(["r","c","d"],at)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${gt[0]}, ${gt[1]}));
        int index = 4 * (resTexRC.x * ${gt[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${vt.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _s{constructor(at){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=$.DENSE;const gt=rt(at),vt=rr();this.outputShape=at,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${hr(["r","c","d"],at)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${gt[0]}, ${gt[1]}));
        int index = 4 * (resTexRC.x * ${gt[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${vt.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _o{constructor(at,gt,vt){this.variableNames=["x"],this.outputShape=[],this.outputShape=at,this.blockSize=gt,this.dataFormat=vt,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${gt};
      int offset_h = imod(h, ${gt});
      int in_w = w / ${gt};
      int offset_w = imod(w, ${gt});
      int offset_d = (offset_h * ${gt} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cr{constructor(at){this.variableNames=["X"],this.outputShape=[at,at],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Go{constructor(at){this.variableNames=["A"],this.outTexUsage=_.DOWNLOAD;const gt=rr();this.outputShape=at,this.userCode=`
      ${Ar}

      void main() {
        float x = getAAtOutCoords();
        ${gt.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qo{constructor(at){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=_.DOWNLOAD;const gt=rr();this.outputShape=at,this.userCode=`
      ${Ar}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${gt.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wo{constructor(at,gt,vt=!1){this.variableNames=["A"];const Nt=rr(),[It,Et]=gt;this.outputShape=at;let Lt="result";vt&&(Lt="floor(result * 255. + 0.5)"),this.userCode=`
      ${Gr(at)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / ${Et};
        int c = imod(flatIndex, ${Et});
        vec2 uv = (vec2(c, r) + halfCR) / vec2(${Et}.0, ${It}.0);
        vec4 values = ${Nt.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${Nt.output} = vec4(${Lt}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ys{constructor(at,gt,vt=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const Nt=rr(),[It,Et]=gt;this.outputShape=at;let Lt="",Vt="result";vt&&(Vt="floor(result * 255. + 0.5)");for(let Ht=0;Ht<=1;Ht++)for(let Jt=0;Jt<=1;Jt++){const un=2*Ht+Jt;Lt+=`
          localCoords = coords;
          if(localCoords[2] + ${Jt} < ${at[2]}) {
            localCoords[2] += ${Jt};
            if(localCoords[1] + ${Ht} < ${at[1]}) {
              localCoords[1] += ${Ht};

              flatIndex = getFlatIndex(localCoords);
              offset = imod(flatIndex, 4);

              flatIndex = idiv(flatIndex, 4, 1.);

              r = flatIndex / ${Et};
              c = imod(flatIndex, ${Et});
              uv = (vec2(c, r) + halfCR) / vec2(${Et}.0, ${It}.0);
              values = ${Nt.texture2D}(A, uv);

              if(offset == 0) {
                result[${un}] = values[0];
              } else if(offset == 1) {
                result[${un}] = values[1];
              } else if(offset == 2) {
                result[${un}] = values[2];
              } else {
                result[${un}] = values[3];
              }
            }
          }
        `}this.userCode=`
      ${Gr(at)}

      void main() {
        ivec3 coords = getOutputCoords();

        vec4 result = vec4(0.);
        int flatIndex, r, c, offset;
        ivec3 localCoords;
        vec2 uv;
        vec4 values;

        ${Lt}

        ${Nt.output} = ${Vt};
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Io{constructor(at,gt){this.outputShape=[],this.variableNames=["x"],this.outputShape=at,this.userCode=`
      uniform float value;
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}getCustomSetupFunc(at){return(gt,vt)=>{this.valueLoc==null&&(this.valueLoc=gt.getUniformLocationNoThrow(vt,"value")),gt.gl.uniform1f(this.valueLoc,at)}}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dr{constructor(at,gt,vt){this.variableNames=["A","indices"];const Nt=at.slice();Nt[vt]=gt,this.outputShape=Nt,this.rank=Nt.length;const It=Hn(this.rank),Et=function(Lt,Vt){const Ht=Lt.length;if(Ht>4)throw Error(`Gather for rank ${Ht} is not yet supported`);if(Ht===1)return"int(getIndices(resRC))";const Jt=["resRC.x","resRC.y","resRC.z","resRC.w"],un=[];for(let on=0;on<Lt.length;on++)on===Vt?un.push(`int(getIndices(${Jt[on]}))`):un.push(""+Jt[on]);return un.join()}(at,vt);this.userCode=`
      void main() {
        ${It} resRC = getOutputCoords();
        setOutput(getA(${Et}));
      }
    `}}class Qs{constructor(at,gt,vt){this.sliceDim=at,this.strides=gt,this.variableNames=["x","indices"],this.outputShape=vt;const Nt=Hn(gt.length),It=Hn(vt.length),Et=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${Nt} strides = ${Nt}(${this.strides});
         void main() {
          ${It} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${Et};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ao(Ft){const at=rr();return function(gt,vt){const Nt=Ct(gt,()=>gt.createShader(gt.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(nt(gt,()=>gt.shaderSource(Nt,vt)),nt(gt,()=>gt.compileShader(Nt)),gt.getShaderParameter(Nt,gt.COMPILE_STATUS)===!1)throw console.log(gt.getShaderInfoLog(Nt)),new Error("Failed to compile vertex shader.");return Nt}(Ft,`${at.version}
    precision highp float;
    ${at.attribute} vec3 clipSpacePos;
    ${at.attribute} vec2 uv;
    ${at.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`)}function tu(Ft){return function(at,gt){const vt=Ct(at,()=>at.createBuffer(),"Unable to create WebGLBuffer");return nt(at,()=>at.bindBuffer(at.ARRAY_BUFFER,vt)),nt(at,()=>at.bufferData(at.ARRAY_BUFFER,gt,at.STATIC_DRAW)),vt}(Ft,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Br(Ft){return function(at,gt){const vt=Ct(at,()=>at.createBuffer(),"Unable to create WebGLBuffer");return nt(at,()=>at.bindBuffer(at.ELEMENT_ARRAY_BUFFER,vt)),nt(at,()=>at.bufferData(at.ELEMENT_ARRAY_BUFFER,gt,at.STATIC_DRAW)),vt}(Ft,new Uint16Array([0,1,2,2,1,3]))}function kr(Ft,at,gt,vt,Nt,It){(function(Vt,Ht){const Jt=Object(c.jb)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(Vt<=0||Ht<=0)throw new Error(`Requested texture size [${Vt}x${Ht}] is invalid.`);if(Vt>Jt||Ht>Jt)throw new Error(`Requested texture size [${Vt}x${Ht}] greater than WebGL maximum on this browser / GPU [${Jt}x${Jt}].`)})(at,gt);const Et=function(Vt){return Ct(Vt,()=>Vt.createTexture(),"Unable to create WebGLTexture.")}(Ft),Lt=Ft.TEXTURE_2D;return nt(Ft,()=>Ft.bindTexture(Lt,Et)),nt(Ft,()=>Ft.texParameteri(Lt,Ft.TEXTURE_WRAP_S,Ft.CLAMP_TO_EDGE)),nt(Ft,()=>Ft.texParameteri(Lt,Ft.TEXTURE_WRAP_T,Ft.CLAMP_TO_EDGE)),nt(Ft,()=>Ft.texParameteri(Lt,Ft.TEXTURE_MIN_FILTER,Ft.NEAREST)),nt(Ft,()=>Ft.texParameteri(Lt,Ft.TEXTURE_MAG_FILTER,Ft.NEAREST)),nt(Ft,()=>Ft.texImage2D(Lt,0,vt,at,gt,0,Nt,It,null)),nt(Ft,()=>Ft.bindTexture(Ft.TEXTURE_2D,null)),Et}function Ss(Ft){return Ft.internalFormatFloat}function _r(Ft){return Ft.internalFormatHalfFloat}function Ho(Ft){return Ft.downloadTextureFormat}function ko(Ft){return Ft.internalFormatPackedFloat}function Dr(Ft){return Ft.internalFormatPackedHalfFloat}function yu(Ft,at,gt,vt,Nt,It,Et,Lt){const Vt=Ft,Ht=new Float32Array(function(Jt,un){const[on,mn]=tt(Jt,un);return on*mn*4}(It,Et));return Vt.bindBuffer(Vt.PIXEL_PACK_BUFFER,at),Vt.getBufferSubData(Vt.PIXEL_PACK_BUFFER,0,Ht),Vt.bindBuffer(Vt.PIXEL_PACK_BUFFER,null),Ht}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bu{constructor(at){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const gt=Object(c.jb)().getNumber("WEBGL_VERSION");at!=null?(this.gl=at,function(Nt,It){d[Nt]=It}(gt,at)):this.gl=b(gt);let vt="WEBGL_color_buffer_float";if(Object(c.jb)().getNumber("WEBGL_VERSION")===1){const Nt="OES_texture_float",It="OES_texture_half_float";if(this.textureFloatExtension=ot(this.gl,Nt),Ut(this.gl,It))this.textureHalfFloatExtension=ot(this.gl,It);else if(Object(c.jb)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(vt),Ut(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=ot(this.gl,"EXT_color_buffer_half_float");else if(Object(c.jb)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(vt="EXT_color_buffer_float",Ut(this.gl,vt))this.colorBufferFloatExtension=this.gl.getExtension(vt);else{if(!Ut(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=tu(this.gl),this.indexBuffer=Br(this.gl),this.framebuffer=function(Nt){return Ct(Nt,()=>Nt.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=j(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(c.jb)().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const at=this.gl;nt(at,()=>at.finish()),nt(at,()=>at.bindFramebuffer(at.FRAMEBUFFER,null)),nt(at,()=>at.deleteFramebuffer(this.framebuffer)),nt(at,()=>at.bindBuffer(at.ARRAY_BUFFER,null)),nt(at,()=>at.bindBuffer(at.ELEMENT_ARRAY_BUFFER,null)),nt(at,()=>at.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(at,gt){return this.throwIfDisposed(),function(vt,Nt,It,Et){const[Lt,Vt]=et(Nt,It);return kr(vt,Lt,Vt,Ss(Et),Et.textureFormatFloat,vt.FLOAT)}(this.gl,at,gt,this.textureConfig)}createFloat16MatrixTexture(at,gt){return this.throwIfDisposed(),function(vt,Nt,It,Et){const[Lt,Vt]=et(Nt,It);return kr(vt,Lt,Vt,_r(Et),Et.textureFormatFloat,Et.textureTypeHalfFloat)}(this.gl,at,gt,this.textureConfig)}createUnsignedBytesMatrixTexture(at,gt){return this.throwIfDisposed(),function(vt,Nt,It,Et){const[Lt,Vt]=et(Nt,It);return kr(vt,Lt,Vt,Ho(Et),vt.RGBA,vt.UNSIGNED_BYTE)}(this.gl,at,gt,this.textureConfig)}uploadPixelDataToTexture(at,gt){this.throwIfDisposed(),function(vt,Nt,It){nt(vt,()=>vt.bindTexture(vt.TEXTURE_2D,Nt)),It.data instanceof Uint8Array?nt(vt,()=>vt.texImage2D(vt.TEXTURE_2D,0,vt.RGBA,It.width,It.height,0,vt.RGBA,vt.UNSIGNED_BYTE,It.data)):nt(vt,()=>vt.texImage2D(vt.TEXTURE_2D,0,vt.RGBA,vt.RGBA,vt.UNSIGNED_BYTE,It)),nt(vt,()=>vt.bindTexture(vt.TEXTURE_2D,null))}(this.gl,at,gt)}uploadDenseMatrixToTexture(at,gt,vt,Nt){this.throwIfDisposed(),function(It,Et,Lt,Vt,Ht,Jt){let un,on,mn;nt(It,()=>It.bindTexture(It.TEXTURE_2D,Et)),Ht instanceof Uint8Array?(un=new Uint8Array(Lt*Vt*4),on=It.UNSIGNED_BYTE,mn=It.RGBA):(un=new Float32Array(Lt*Vt*4),on=It.FLOAT,mn=Jt.internalFormatPackedFloat),un.set(Ht),nt(It,()=>It.texImage2D(It.TEXTURE_2D,0,mn,Lt,Vt,0,It.RGBA,on,un)),nt(It,()=>It.bindTexture(It.TEXTURE_2D,null))}(this.gl,at,gt,vt,Nt,this.textureConfig)}createFloat16PackedMatrixTexture(at,gt){return this.throwIfDisposed(),function(vt,Nt,It,Et){const[Lt,Vt]=tt(Nt,It);return kr(vt,Lt,Vt,Dr(Et),vt.RGBA,Et.textureTypeHalfFloat)}(this.gl,at,gt,this.textureConfig)}createPackedMatrixTexture(at,gt){return this.throwIfDisposed(),function(vt,Nt,It,Et){const[Lt,Vt]=tt(Nt,It);return kr(vt,Lt,Vt,ko(Et),vt.RGBA,vt.FLOAT)}(this.gl,at,gt,this.textureConfig)}deleteMatrixTexture(at){this.throwIfDisposed(),this.outputTexture===at&&(bt(this.gl,this.framebuffer),this.outputTexture=null),nt(this.gl,()=>this.gl.deleteTexture(at))}downloadByteEncodedFloatMatrixFromOutputTexture(at,gt,vt){return this.downloadMatrixDriver(at,()=>function(Nt,It,Et,Lt){const[Vt,Ht]=et(It,Et),Jt=new Uint8Array(It*Et*4);return nt(Nt,()=>Nt.readPixels(0,0,Vt,Ht,Lt.downloadTextureFormat,Nt.UNSIGNED_BYTE,Jt)),new Float32Array(Jt.buffer)}(this.gl,gt,vt,this.textureConfig))}downloadPackedMatrixFromBuffer(at,gt,vt,Nt,It,Et){return yu(this.gl,at,0,0,0,It,Et,this.textureConfig)}downloadFloat32MatrixFromBuffer(at,gt){return function(vt,Nt,It){const Et=vt,Lt=new Float32Array(It);return Et.bindBuffer(Et.PIXEL_PACK_BUFFER,Nt),Et.getBufferSubData(Et.PIXEL_PACK_BUFFER,0,Lt),Et.bindBuffer(Et.PIXEL_PACK_BUFFER,null),Lt}(this.gl,at,gt)}createBufferFromTexture(at,gt,vt){this.bindTextureToFrameBuffer(at);const Nt=function(It,Et,Lt,Vt){const Ht=It.createBuffer();nt(It,()=>It.bindBuffer(It.PIXEL_PACK_BUFFER,Ht));const Jt=16*Et*Lt;return nt(It,()=>It.bufferData(It.PIXEL_PACK_BUFFER,Jt,It.STREAM_READ)),nt(It,()=>It.readPixels(0,0,Lt,Et,It.RGBA,It.FLOAT,0)),nt(It,()=>It.bindBuffer(It.PIXEL_PACK_BUFFER,null)),Ht}(this.gl,gt,vt,this.textureConfig);return this.unbindTextureToFrameBuffer(),Nt}createAndWaitForFence(){const at=this.createFence(this.gl);return this.pollFence(at)}createFence(at){let gt,vt;if(Object(c.jb)().getBool("WEBGL_FENCE_API_ENABLED")){const Nt=at,It=Nt.fenceSync(Nt.SYNC_GPU_COMMANDS_COMPLETE,0);at.flush(),vt=()=>{const Et=Nt.clientWaitSync(It,0,0);return Et===Nt.ALREADY_SIGNALED||Et===Nt.CONDITION_SATISFIED},gt=It}else Object(c.jb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(gt=this.beginQuery(),this.endQuery(),vt=()=>this.isQueryAvailable(gt,Object(c.jb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):vt=()=>!0;return{query:gt,isFencePassed:vt}}downloadMatrixFromPackedTexture(at,gt,vt){return this.downloadMatrixDriver(at,()=>function(Nt,It,Et){const Lt=new Float32Array(It*Et*4);return nt(Nt,()=>Nt.readPixels(0,0,Et,It,Nt.RGBA,Nt.FLOAT,Lt)),Lt}(this.gl,gt,vt))}createProgram(at){this.throwIfDisposed();const gt=this.gl,vt=ut(gt,at),Nt=Ao(gt),It=function(Et){return Ct(Et,()=>Et.createProgram(),"Unable to create WebGLProgram.")}(gt);return nt(gt,()=>gt.attachShader(It,Nt)),nt(gt,()=>gt.attachShader(It,vt)),function(Et,Lt){if(nt(Et,()=>Et.linkProgram(Lt)),Et.getProgramParameter(Lt,Et.LINK_STATUS)===!1)throw console.log(Et.getProgramInfoLog(Lt)),new Error("Failed to link vertex and fragment shaders.")}(gt,It),this.debug&&pt(gt,It),this.vertexAttrsAreBound||(this.setProgram(It),this.vertexAttrsAreBound=function(Et,Lt,Vt){return nt(Et,()=>Et.bindBuffer(Et.ARRAY_BUFFER,Vt)),it(Et,Lt,"clipSpacePos",Vt,3,20,0)&&it(Et,Lt,"uv",Vt,2,20,12)}(gt,this.program,this.vertexBuffer)),It}deleteProgram(at){this.throwIfDisposed(),at===this.program&&(this.program=null),at!=null&&nt(this.gl,()=>this.gl.deleteProgram(at))}setProgram(at){this.throwIfDisposed(),this.program=at,this.program!=null&&this.debug&&pt(this.gl,this.program),nt(this.gl,()=>this.gl.useProgram(at))}getUniformLocation(at,gt,vt=!0){return this.throwIfDisposed(),vt?function(Nt,It,Et){return Ct(Nt,()=>Nt.getUniformLocation(It,Et),'uniform "'+Et+'" not present in program.')}(this.gl,at,gt):function(Nt,It,Et){return Nt.getUniformLocation(It,Et)}(this.gl,at,gt)}getAttributeLocation(at,gt){return this.throwIfDisposed(),nt(this.gl,()=>this.gl.getAttribLocation(at,gt))}getUniformLocationNoThrow(at,gt){return this.throwIfDisposed(),this.gl.getUniformLocation(at,gt)}setInputMatrixTexture(at,gt,vt){this.throwIfDisposed(),this.throwIfNoProgram(),yt(this.gl,at,gt,vt)}setOutputMatrixTexture(at,gt,vt){this.setOutputMatrixTextureDriver(at,vt,gt)}setOutputPackedMatrixTexture(at,gt,vt){this.throwIfDisposed();const[Nt,It]=tt(gt,vt);this.setOutputMatrixTextureDriver(at,Nt,It)}setOutputMatrixWriteRegion(at,gt,vt,Nt){this.setOutputMatrixWriteRegionDriver(vt,at,Nt,gt)}setOutputPackedMatrixWriteRegion(at,gt,vt,Nt){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&pt(this.gl,this.program),Tt(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const at=this.gl;this.debug&&this.debugValidate(),nt(at,()=>at.drawElements(at.TRIANGLES,6,at.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),nt(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=ot(this.gl,Object(c.jb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(Object(c.jb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const vt=this.gl,Nt=this.getQueryTimerExtensionWebGL2(),It=vt.createQuery();return vt.beginQuery(Nt.TIME_ELAPSED_EXT,It),It}const at=this.getQueryTimerExtensionWebGL1(),gt=at.createQueryEXT();return at.beginQueryEXT(at.TIME_ELAPSED_EXT,gt),gt}endQuery(){if(Object(c.jb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const gt=this.gl,vt=this.getQueryTimerExtensionWebGL2();return void gt.endQuery(vt.TIME_ELAPSED_EXT)}const at=this.getQueryTimerExtensionWebGL1();at.endQueryEXT(at.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(at){return await c.Lb.repeatedTry(()=>this.disposed||this.isQueryAvailable(at,Object(c.jb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(at,Object(c.jb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(at,gt){if(gt===0)return null;if(gt===2){const vt=this.gl;return vt.getQueryParameter(at,vt.QUERY_RESULT)/1e6}{const vt=this.getQueryTimerExtensionWebGL1();return vt.getQueryObjectEXT(at,vt.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(at,gt){if(gt===0)return!0;if(gt===2){const vt=this.gl,Nt=this.getQueryTimerExtensionWebGL2(),It=vt.getQueryParameter(at,vt.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(Nt.GPU_DISJOINT_EXT)),It&&!this.disjoint}{const vt=this.getQueryTimerExtensionWebGL1(),Nt=vt.getQueryObjectEXT(at,vt.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(vt.GPU_DISJOINT_EXT)),Nt&&!this.disjoint}}pollFence(at){return new Promise(gt=>{this.addItemToPoll(()=>at.isFencePassed(),()=>gt())})}pollItems(){const at=function(gt){let vt=0;for(;vt<gt.length&&gt[vt]();++vt);return vt-1}(this.itemsToPoll.map(gt=>gt.isDoneFn));for(let gt=0;gt<=at;++gt){const{resolveFn:vt}=this.itemsToPoll[gt];vt()}this.itemsToPoll=this.itemsToPoll.slice(at+1)}addItemToPoll(at,gt){this.itemsToPoll.push({isDoneFn:at,resolveFn:gt}),this.itemsToPoll.length>1||c.Lb.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(at){this.throwIfDisposed(),ft(this.gl,at,this.framebuffer),this.debug&&Tt(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(ft(this.gl,this.outputTexture,this.framebuffer),this.debug&&Tt(this.gl)):bt(this.gl,this.framebuffer)}downloadMatrixDriver(at,gt){this.bindTextureToFrameBuffer(at);const vt=gt();return this.unbindTextureToFrameBuffer(),vt}setOutputMatrixTextureDriver(at,gt,vt){this.throwIfDisposed();const Nt=this.gl;ft(Nt,at,this.framebuffer),this.debug&&Tt(Nt),this.outputTexture=at,nt(Nt,()=>Nt.viewport(0,0,gt,vt)),nt(Nt,()=>Nt.scissor(0,0,gt,vt))}setOutputMatrixWriteRegionDriver(at,gt,vt,Nt){this.throwIfDisposed(),nt(this.gl,()=>this.gl.scissor(at,gt,vt,Nt))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function Ko(Ft,at){if(Ft.length!==at.length)throw Error(`Binary was compiled with ${Ft.length} inputs, but was executed with ${at.length} inputs`);Ft.forEach((gt,vt)=>{const Nt=gt.logicalShape,It=at[vt],Et=It.shape;if(!c.Lb.arraysEqual(Nt,Et))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${Nt} and ${Et} must match`);if(gt.isUniform&&It.isUniform)return;const Lt=gt.texShape,Vt=It.isUniform?null:It.texData.texShape;if(!c.Lb.arraysEqual(Lt,Vt))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${Lt} and ${Vt} must match`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xo{constructor(at,gt,vt){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=at;const{filterWidth:Nt,inChannels:It,strideWidth:Et,strideHeight:Lt,padInfo:Vt,outWidth:Ht,dilationWidth:Jt,dilationHeight:un,dataFormat:on}=vt,{left:mn,top:gn}=Vt,fn=It*Nt,yn=rr(),In=on==="channelsLast",Ln=In?0:1,Vn=In?1:2;let Sn="";for(let En=0;En<=1;En++)for(let _n=0;_n<=1;_n++)Sn+=`
          blockIndex = rc.y + ${_n};
          pos = rc.x + ${En};

          if(blockIndex < ${at[1]} && pos < ${at[0]}) {
            offsetY = int(blockIndex / (${Ht})) * ${Lt} - ${gn};
            d0 = offsetY + ${un} * (pos / ${fn});

            if(d0 < ${gt[Ln]} && d0 >= 0) {

              offsetX = int(mod(float(blockIndex), ${Ht}.) * ${Et}. - ${mn}.);
              d1 = offsetX + ${Jt} * (int(mod(float(pos), ${fn}.) / ${It}.));

              if(d1 < ${gt[Vn]} && d1 >= 0) {

                ch = int(mod(float(pos), ${It}.));

                if (${In}) {
                  innerDims = vec2(d1, ch);
                  result[${2*En+_n}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${2*En+_n}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${Sn}

        ${yn.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ju{constructor(at,gt,vt,Nt,It){this.variableNames=["x"],this.outputShape=[];const Et=gt,Lt=at[3]-1;let Vt;this.outputShape=at;const Ht=`float(${vt}) + float(${Nt}) * sum`;Vt=It===.5?`inversesqrt(${Ht})`:It===1?`1.0/(${Ht})`:`exp(log(${Ht}) * float(-${It}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${Et}; j <= ${Et}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${Lt}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${Vt};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vu{constructor(at,gt,vt,Nt,It){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=at,this.depth=at[3],this.depthRadius=gt,this.bias=vt,this.alpha=Nt,this.beta=It,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${gt})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${gt} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${Nt}) * norm + float(${vt});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${Nt})
                * float(${It})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${It});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yl{constructor(at,gt,vt,Nt,It){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const Et=gt,Lt=at[3]-1;let Vt;this.outputShape=at;const Ht=`float(${vt}) + float(${Nt}) * sum`;Vt=It===.5?`inversesqrt(${Ht})`:It===1?`1.0/(${Ht})`:`exp(log(${Ht}) * float(-${It}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${Et};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${Et}; j <= ${Et}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${Lt}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${Vt};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xl{constructor(at){this.variableNames=["dy","maxPos"],this.outputShape=at.inShape;const gt=at.strideHeight,vt=at.strideWidth,Nt=at.dilationHeight,It=at.effectiveFilterHeight,Et=at.effectiveFilterWidth,Lt=It-1-at.padInfo.top,Vt=Et-1-at.padInfo.left,Ht=It*Et-1;this.userCode=`
      const ivec2 pads = ivec2(${Lt}, ${Vt});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${It};
          wR += ${Nt}) {
          float dyR = float(dyRCorner + wR) / ${gt}.0;

          if (dyR < 0.0 || dyR >= ${at.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${Et}; wC++) {
            float dyC = float(dyCCorner + wC) / ${vt}.0;

            if (dyC < 0.0 || dyC >= ${at.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${Ht} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${Et} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class Yo{constructor(at){this.variableNames=["dy","maxPos"],this.outputShape=at.inShape;const gt=at.strideDepth,vt=at.strideHeight,Nt=at.strideWidth,It=at.dilationDepth,Et=at.dilationHeight,Lt=at.dilationWidth,Vt=at.effectiveFilterDepth,Ht=at.effectiveFilterHeight,Jt=at.effectiveFilterWidth,un=Vt-1-at.padInfo.front,on=Ht-1-at.padInfo.top,mn=Jt-1-at.padInfo.left,gn=Vt*Ht*Jt-1;this.userCode=`
      const ivec3 pads = ivec3(${un}, ${on}, ${mn});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${Vt};
           wD += ${It}) {
          float dyD = float(dyDCorner + wD) / ${gt}.0;

          if (dyD < 0.0 || dyD >= ${at.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${Ht};
              wR += ${Et}) {
            float dyR = float(dyRCorner + wR) / ${vt}.0;

            if (dyR < 0.0 || dyR >= ${at.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${Jt};
                wC += ${Lt}) {
              float dyC = float(dyCCorner + wC) / ${Nt}.0;

              if (dyC < 0.0 || dyC >= ${at.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${gn} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${Ht} * ${Jt} +
                  wR * ${Jt} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nu{constructor(at,gt,vt,Nt=!1,It=!1,Et=!1,Lt=null,Vt=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=vt;const Ht=Nt?at[1]:at[2],Jt=Math.ceil(Ht/2),un=Nt?"i * 2, rc.y":"rc.y, i * 2",on=It?"rc.z, i * 2":"i * 2, rc.z",mn=Nt?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],gn=It?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let fn="",yn="";Lt&&(fn=Vt?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${Lt}
        }`:`vec4 activation(vec4 x) {
          ${Lt}
        }`,yn="result = activation(result);");const In=Et?"result += getBiasAtOutCoords();":"";Et&&this.variableNames.push("bias"),Vt&&this.variableNames.push("preluActivationWeights");let Ln="rc.x",Vn="rc.x";at[0]<gt[0]?Ln=`int(min(float(rc.x), ${at[0]-1}.))`:gt[0]<at[0]&&(Vn=`int(min(float(rc.x), ${gt[0]-1}.))`),this.userCode=`
      ${fn}

      const float sharedDimension = ${Jt}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${Jt}; i++) {
          int batchA = ${Ln};
          int batchB = ${Vn};
          vec4 a = getMatrixA(batchA, ${un});
          vec4 b = getMatrixB(batchB, ${on});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${mn[0]} * ${gn[0]});
          result += (${mn[1]} * ${gn[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${In}

        ${yn}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ru{constructor(at,gt,vt){this.variableNames=["probs"],this.outputShape=[at,vt],this.userCode=`
      uniform float seed;

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${gt-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${gt-1}));
      }
    `}getCustomSetupFunc(at){return(gt,vt)=>{this.seedLoc==null&&(this.seedLoc=gt.getUniformLocation(vt,"seed")),gt.gl.uniform1f(this.seedLoc,at)}}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sl{constructor(at,gt,vt,Nt){this.variableNames=["indices"],this.outputShape=[at,gt],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${Nt}), float(${vt}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cl{constructor(at){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=at;const gt=at.length;if(gt===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const vt=Jn("rc",gt),Nt=Hn(gt),It=function(Vt,Ht,Jt){if(Vt===1)return"rc > "+Ht[0];let un="";for(let on=Vt-2;on<Vt;on++)un+=`${Jt[on]} >= ${Ht[on]}`,on<Vt-1&&(un+="||");return un}(gt,at,vt),Et=function(Vt,Ht,Jt,un){if(Vt===1)return"";const on=un.slice(-2);return`
    int r = ${on[0]};
    int c = ${on[1]};
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= ${Ht};
    bool rEdge = rp1 >= ${Jt};
  `}(gt,at[at.length-1],at[at.length-2],vt),Lt=function(Vt,Ht){const Jt=Vt.length,un=function(on,mn){const gn=[];for(let fn=0;fn<=1;fn++)for(let yn=0;yn<=1;yn++){let In=`${fn===0?"r":"rp1"}, ${yn===0?"c":"cp1"}`;for(let Ln=2;Ln<on;Ln++)In=mn[mn.length-1-Ln]+","+In;gn.push(In)}return gn}(Jt,Ht);return Jt===1?`getA(rc),
            rc + 1 >= ${Vt[0]} ? 0. : getA(rc + 1),
            0, 0`:`getA(${un[0]}),
          cEdge ? 0. : getA(${un[1]}),
          rEdge ? 0. : getA(${un[2]}),
          rEdge || cEdge ? 0. : getA(${un[3]})`}(at,vt);this.userCode=`
        void main() {
          ${Nt} rc = getOutputCoords();

          if(${It}) {
            setOutput(vec4(0));
          } else {
            ${Et}

            setOutput(vec4(${Lt}));
          }
        }
      `}}}class Tl{constructor(at,gt,vt){this.variableNames=["x"],this.outputShape=gt.map((Ht,Jt)=>Ht[0]+at[Jt]+Ht[1]);const Nt=at.length,It=Hn(Nt),Et=gt.map(Ht=>Ht[0]).join(","),Lt=gt.map((Ht,Jt)=>Ht[0]+at[Jt]).join(","),Vt=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,Nt);this.userCode=Nt!==1?`
      ${It} start = ${It}(${Et});
      ${It} end = ${It}(${Lt});

      void main() {
        ${It} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(float(${vt}));
        } else {
          ${It} coords = outC - start;
          setOutput(getX(${Vt}));
        }
      }
    `:`
        int start = ${Et};
        int end = ${Lt};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(float(${vt}));
          } else {
            setOutput(getX(outC - start));
          }
        }
      `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nl{constructor(at,gt,vt){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=gt.map((fn,yn)=>fn[0]+at[yn]+fn[1]);const Nt=at.length,It=Hn(Nt),Et=gt.map(fn=>fn[0]).join(","),Lt=gt.map((fn,yn)=>fn[0]+at[yn]).join(","),Vt=Jn("rc",Nt),Ht=Jn("source",Nt),Jt=`${Vt[Nt-1]} < ${this.outputShape[Nt-1]}`,un=Nt===1?"source":`vec2(${Ht.slice(-2).join()})`,on=[It+" rc = outputLoc;",`${Vt[Nt-1]} += 1;
       if(${Jt}) {
      `,Nt===1?"":`}
       rc = outputLoc;
       ${Vt[Nt-2]} += 1;
       if(${Vt[Nt-2]} < ${this.outputShape[Nt-2]}) {`,Nt===1?"":`  ${Vt[Nt-1]} += 1;
         if(${Jt}) {`],mn=Nt===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let gn="";for(let fn=0,yn=Nt===1?2:4;fn<yn;fn++)gn+=`
        ${on[fn]}
        if (${mn}) {
          result[${fn}] = float(${vt});
        } else {
          ${It} source = rc - start;
          result[${fn}] = getChannel(getX(${Ht.join()}), ${un});
        }
      `;gn+=Nt===1?"} ":"}}",this.userCode=`
      const ${It} start = ${It}(${Et});
      const ${It} end = ${It}(${Lt});

      void main() {
        ${It} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${gn}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Eo{constructor(at,gt,vt,Nt=!1,It=!1){if(this.variableNames=["x"],gt==="avg"&&vt)throw new Error("Cannot compute positions for average pool.");const Et=at.filterWidth,Lt=at.strideHeight,Vt=at.strideWidth,Ht=at.dilationHeight,Jt=at.dilationWidth,un=at.effectiveFilterHeight,on=at.effectiveFilterWidth,mn=at.padInfo.top,gn=at.padInfo.left;this.outputShape=at.outShape;const fn=gt==="avg",yn=`((batch  * ${at.inHeight} + xR) * ${at.inWidth} + xC) * ${at.inChannels} + d`,In=`(xR * ${at.inWidth} + xC) * ${at.inChannels} + d`;let Ln="0.0";if(fn||(Ln="-1.0 / 1e-20"),vt){const Kn=">=";return void(this.userCode=`
        const ivec2 strides = ivec2(${Lt}, ${Vt});
        const ivec2 pads = ivec2(${mn}, ${gn});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${un};
              wR += ${Ht}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${at.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${on};
                wC += ${Jt}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${at.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${Kn} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${Nt?It?yn:In:`wR * ${on} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `)}let Vn=`${gt}(${gt}(${gt}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;gt==="avg"&&(Vn="avgValue / count");const Sn=4*Math.floor(Et/4),En=Et%4,_n=`
      if (${fn}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${Lt}, ${Vt});
      const ivec2 pads = ivec2(${mn}, ${gn});
      const float initializationValue = ${Ln};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${at.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${Ln});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${un};
            wR += ${Ht}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${at.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${Sn}; wC += 4) {
            int xC = xCCorner + wC * ${Jt};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${Jt}, d),
              getValue(batch, xR, xC + 2 * ${Jt}, d),
              getValue(batch, xR, xC + 3 * ${Jt}, d)
            );

            ${_n}
          }

          int xC = xCCorner + ${Sn};
          if (${En===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${_n}
          } else if (${En===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${Jt}, d),
              initializationValue,
              initializationValue
            );

            ${_n}
          } else if (${En===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${Jt}, d),
              getValue(batch, xR, xC + 2 * ${Jt}, d),
              initializationValue
            );

            ${_n}
          }
        }
        setOutput(${Vn});
      }
    `}}class Oo{constructor(at,gt,vt,Nt=!1,It=!1){if(this.variableNames=["x"],gt==="avg"&&vt)throw new Error("Cannot compute positions for average pool.");const Et=at.filterWidth,Lt=at.strideDepth,Vt=at.strideHeight,Ht=at.strideWidth,Jt=at.dilationDepth,un=at.dilationHeight,on=at.dilationWidth,mn=at.effectiveFilterDepth,gn=at.effectiveFilterHeight,fn=at.effectiveFilterWidth,yn=at.padInfo.front,In=at.padInfo.top,Ln=at.padInfo.left;this.outputShape=at.outShape;const Vn=gt==="avg";let Sn="0.0";if(Vn||(Sn="-1.0 / 1e-20"),vt){const ur=">=";return void(this.userCode=`
        const ivec3 strides =
            ivec3(${Lt}, ${Vt}, ${Ht});
        const ivec3 pads = ivec3(${yn}, ${In}, ${Ln});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${mn};
              wD += ${Jt}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${at.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${gn};
                wR += ${un}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${at.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${fn};
                  wC += ${on}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${at.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${ur} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${Nt?It?`(((batch * ${at.inDepth} + xD) * ${at.inHeight} + xR) * ${at.inWidth} + xC) * ${at.inChannels} + ch`:`((xD * ${at.inHeight} + xR) * ${at.inWidth} + xC) * ${at.inChannels} + ch`:`wD * ${gn} * ${fn} +
                      wR * ${fn} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `)}let En=`${gt}(${gt}(${gt}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;gt==="avg"&&(En="avgValue / count");const _n=4*Math.floor(Et/4),Kn=Et%4,Xn=`
      if (${Vn}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${Lt}, ${Vt}, ${Ht});
      const ivec3 pads = ivec3(${yn}, ${In}, ${Ln});
      const float initializationValue = ${Sn};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${at.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${Sn});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${mn};
            wD += ${Jt}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${at.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${gn};
            wR += ${un}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${at.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${_n}; wC += 4) {
              int xC = xCCorner + wC * ${on};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${on}, ch),
                getValue(batch, xD, xR, xC + 2 * ${on}, ch),
                getValue(batch, xD, xR, xC + 3 * ${on}, ch)
              );

              ${Xn}
            }

            int xC = xCCorner + ${_n};
            if (${Kn===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${Xn}
            } else if (${Kn===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${on}, ch),
                initializationValue,
                initializationValue
              );

              ${Xn}
            } else if (${Kn===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${on}, ch),
                getValue(batch, xD, xR, xC + 2 * ${on}, ch),
                initializationValue
              );

              ${Xn}
            }
          }
          setOutput(${En});
        }
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xu{constructor(at,gt){this.variableNames=["x"];const{windowSize:vt,batchSize:Nt,inSize:It,outSize:Et}=at;this.outputShape=[Nt,Et];let Lt="0.0",Vt="";gt==="prod"?Lt="1.0":gt==="min"?(Lt="1.0 / 1e-20",Vt="min"):gt==="max"&&(Lt="-1.0 / 1e-20",Vt="max");let Ht=`${gt}(${gt}(${gt}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;gt==="sum"?Ht="sumValue":gt==="prod"?Ht="prodValue":gt==="all"?Ht="allValue":gt==="any"&&(Ht="anyValue");const Jt=4*Math.floor(vt/4),un=vt%4;let on=`
      if (${gt==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${gt==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${Vt}(values, minMaxValue);
      }
    `,mn="vec4";gt==="all"?(Lt="1.0",on=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,mn="bvec4"):gt==="any"&&(Lt="0.0",on=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,mn="bvec4");let gn="";It%vt>0&&(gn=`
        if (inIdx < 0 || inIdx >= ${It}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${Lt};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${gn}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${vt};

        vec4 minMaxValue = vec4(${Lt});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${Jt}; i += 4) {
          int inIdx = inOffset + i;
          ${mn} values = ${mn}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${on}
        }

        int inIdx = inOffset + ${Jt};
        if (${un===1}) {
          ${mn} values = ${mn}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${on}
        } else if (${un===2}) {
          ${mn} values = ${mn}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${on}
        } else if (${un===3}) {
          ${mn} values = ${mn}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${on}
        }
        setOutput(${Ht});
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wu{constructor(at,gt){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=at;let vt="";for(let It=0;It<4;It++){let Et="thisRC = rc;";It%2==1&&(Et+="thisRC.z += 1;"),It>1&&(Et+="thisRC.y += 1;"),vt+=`
        ${Et}
        ${It>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${It}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${It>0?"}":""}
      `}var Nt;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */this.userCode=`
      ${Nt=gt,`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${hr(["r","c","d"],Nt)}
      return ivec3(r, c, d);
    }
  `}
      ${Gr(at)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${at[1]};
        int cols = ${at[2]};

        ${vt}

        setOutput(result);
      }
    `}}class Su{constructor(at,gt,vt){this.variableNames=["dy"],this.outputShape=[],this.outputShape=gt.shape;const[,Nt,It]=gt.shape,[,Et,Lt]=at.shape,Vt=[vt&&Et>1?Nt-1:Nt,vt&&Lt>1?It-1:It],Ht=[vt&&Et>1?Et-1:Et,vt&&Lt>1?Lt-1:Lt],Jt=Vt[0]/Ht[0],un=Vt[1]/Ht[1],on=1/Jt,mn=1/un,gn=2*Math.ceil(on)+2,fn=2*Math.ceil(mn)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${Jt});
        const float widthScale = float(${un});

        const float invHeightScale = float(${on});
        const float invWidthScale = float(${mn});

        const int winHeight = int(${gn});
        const int winWidth = int(${fn});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${Et}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${Lt}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${Nt-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${It-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $l{constructor(at,gt,vt,Nt){this.variableNames=["A"],this.outputShape=[];const[It,Et,Lt,Vt]=at;this.outputShape=[It,gt,vt,Vt];const Ht=[Nt&&gt>1?Et-1:Et,Nt&&vt>1?Lt-1:Lt],Jt=[Nt&&gt>1?gt-1:gt,Nt&&vt>1?vt-1:vt];this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${Ht[0]/Jt[0]},
          ${Ht[1]/Jt[1]});
      const vec2 inputShapeRC = vec2(${Et}.0, ${Lt}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _l{constructor(at,gt,vt,Nt){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[It,Et,Lt,Vt]=at;this.outputShape=[It,gt,vt,Vt];const Ht=[Nt&&gt>1?Et-1:Et,Nt&&vt>1?Lt-1:Lt],Jt=[Nt&&gt>1?gt-1:gt,Nt&&vt>1?vt-1:vt];this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${Ht[0]/Jt[0]},
          ${Ht[1]/Jt[1]},
          ${Ht[1]/Jt[1]});
      const vec3 inputShapeRC = vec3(${Et}.0, ${Lt}.0,
                                     ${Lt}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${Vt-1};
        bool hasNextRow = coords.z < ${vt-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fo{constructor(at,gt,vt){this.variableNames=["dy"],this.outputShape=[],this.outputShape=gt.shape;const[,Nt,It]=gt.shape,[,Et,Lt]=at.shape,Vt=[vt&&Et>1?Nt-1:Nt,vt&&Lt>1?It-1:It],Ht=[vt&&Et>1?Et-1:Et,vt&&Lt>1?Lt-1:Lt],Jt=Vt[0]/Ht[0],un=Vt[1]/Ht[1],on=1/Jt,mn=1/un,gn=2*Math.ceil(on)+2,fn=2*Math.ceil(mn)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${Jt});
        const float widthScale = float(${un});

        const float invHeightScale = float(${on});
        const float invWidthScale = float(${mn});

        const int winHeight = int(${gn});
        const int winWidth = int(${fn});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${Et}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${Lt}) {
              continue;
            }

            float sourceFracRow =
              float(${Vt[0]}) *
                (float(dyR) / float(${Ht[0]}));

            float sourceFracCol =
                float(${Vt[1]}) *
                  (float(dyC) / float(${Ht[1]}));

            int sourceNearestRow = int(min(
                float(int(${Nt}) - 1),
                ${vt} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${It}) - 1),
                ${vt} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mo{constructor(at,gt,vt,Nt){this.variableNames=["A"],this.outputShape=[];const[It,Et,Lt,Vt]=at;this.outputShape=[It,gt,vt,Vt];const Ht=[Nt&&gt>1?Et-1:Et,Nt&&vt>1?Lt-1:Lt],Jt=[Nt&&gt>1?gt-1:gt,Nt&&vt>1?vt-1:vt],un=Nt?"0.5":"0.0";this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${Ht[0]/Jt[0]},
          ${Ht[1]/Jt[1]});
      const vec2 inputShapeRC = vec2(${Et}.0, ${Lt}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${un})));

        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class go{constructor(at,gt){this.variableNames=["x"];const vt=at.length;if(vt>4)throw new Error(`WebGL backend: Reverse of rank-${vt} tensor is not yet supported`);if(this.outputShape=at,vt===1)return void(this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${at[0]} - coord - 1));
        }
      `);const Nt=at.map((Et,Lt)=>(Vt=>gt.indexOf(Vt)!==-1&&at[Vt]!==1?`${at[Vt]} - coords[${Vt}] - 1`:`coords[${Vt}]`)(Lt)).join(","),It=Hn(vt);this.userCode=`
      void main() {
        ${It} coords = getOutputCoords();
        setOutput(getX(${Nt}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ps{constructor(at,gt){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const vt=at.length;if(vt>4)throw new Error(`WebGL backend: Reverse of rank-${vt} tensor is not yet supported`);this.outputShape=at;const Nt=Jn("rc",vt),It=`${Nt[vt-1]} + 1 < ${this.outputShape[vt-1]}`,Et=`${Nt[vt-2]} + 1 < ${this.outputShape[vt-2]}`,Lt=Hn(vt);function Vt(Ht){const Jt=at.map((un,on)=>function(mn,gn){return gt.indexOf(mn)!==-1&&at[mn]!==1?`${at[mn]} - ${gn[mn]} - 1`:""+gn[mn]}(on,Ht));return`getChannel(getX(${Jt.join(",")}), vec2(${Jt.slice(-2).join(",")}))`}this.userCode=vt===1?`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${at[0]} - rc - 1),
            ${at[0]} - rc - 1);
          if(${It}){
              result.g = getChannel(getX(${at[0]} - (rc  + 1) - 1),
                ${at[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:`
        void main() {
          ${Lt} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${function(Ht){return Vt(Ht)}(Nt.slice())};
          if(${It}){
            result.g = ${function(Ht){return Ht[vt-1]="("+Ht[vt-1]+" + 1)",Vt(Ht)}(Nt.slice())};
          }
          if(${Et}) {
            result.b = ${function(Ht){return Ht[vt-2]="("+Ht[vt-2]+" + 1)",Vt(Ht)}(Nt.slice())};
            if(${It}) {
              result.a = ${function(Ht){return Ht[vt-1]="("+Ht[vt-1]+" + 1)",Ht[vt-2]="("+Ht[vt-2]+" + 1)",Vt(Ht)}(Nt.slice())};
            }
          }
          setOutput(result);
        }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ro{constructor(at,gt,vt,Nt,It,Et,Lt=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=Et;const Vt=Hn(It.length),Ht=Hn(Et.length);let Jt="";vt===1?Jt="i":vt===2&&(Jt="i, j");const un=`getIndices(${Jt})`;let on="";Nt===1?on="i":Nt===2&&(on="i, coords[1]");const mn=`getUpdates(${on})`,gn=gt>1?"strides[j]":"strides";this.userCode=`
        ${Vt} strides = ${Vt}(${It});

        void main() {
          ${Ht} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${at}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${gt}; j++) {
              int index = round(${un});
              flattenedIndex += index * ${gn};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${mn};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class su{constructor(at,gt){this.variableNames=["x","segmentIds"];const vt=at.windowSize,Nt=at.batchSize,It=at.inSize,Et=at.numSegments,Lt=Et*Math.ceil(It/vt);this.outputShape=[Nt,Lt];const Vt=4*Math.floor(vt/4),Ht=vt%4,Jt=`
        sumValue += dot(values, segFilter);
    `;let un="";It%vt>0&&(un=`
        if (inIdx < 0 || inIdx >= ${It}) {
          return initializationValue;
        }
      `);let on="";It%vt>0&&(on=`
        if (inIdx < 0 || inIdx >= ${It}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = 0.0;

      float getValue(int batch, int inIdx) {
        ${un}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${on}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${Et})) * float(${vt}));
        int currentSeg = int(mod(float(outIdx), float(${Et})));

        float sumValue = 0.0;

        for (int i = 0; i < ${Vt}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${Jt}
        }

        int inIdx = inOffset + ${Vt};
        if (${Ht===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${Jt}
        } else if (${Ht===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${Jt}
        } else if (${Ht===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${Jt}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cs{constructor(at,gt,vt){let Nt,It;if(this.variableNames=["c","a","b"],this.outputShape=gt,vt>4)throw Error(`Where for rank ${vt} is not yet supported`);if(vt===1)It="resRC",Nt="resRC";else{const Lt=["resRC.x","resRC.y","resRC.z","resRC.w"],Vt=[],Ht=[];for(let Jt=0;Jt<gt.length;Jt++)Ht.push(""+Lt[Jt]),Jt<at&&Vt.push(""+Lt[Jt]);Nt=Vt.join(),It=Ht.join()}const Et=Hn(vt);this.userCode=`
      void main() {
        ${Et} resRC = getOutputCoords();
        float cVal = getC(${Nt});
        if (cVal >= 1.0) {
          setOutput(getA(${It}));
        } else {
          setOutput(getB(${It}));
        }
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ou{constructor(at){this.variableNames=["source"],this.outputShape=at,this.rank=at.length;const gt=Hn(this.rank),vt=`uniform int start[${this.rank}];`,Nt=function(Et){if(Et===1)return"sourceLoc";if(Et<=6)return Fs.slice(0,Et).map(Lt=>"sourceLoc."+Lt).join(",");throw Error(`Slicing for rank ${Et} is not yet supported`)}(this.rank);let It;It=`
        ${gt} sourceLoc;
        ${gt} coords = getOutputCoords();
        ${at.map((Et,Lt)=>`sourceLoc.${Fs[Lt]} = start[${Lt}] + coords.${Fs[Lt]};`).join(`
`)}
      `,this.userCode=`
      ${vt}
      void main() {
        ${It}
        setOutput(getSource(${Nt}));
      }
    `}getCustomSetupFunc(at){if(at.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${at.length})`);return(gt,vt)=>{this.startLoc==null&&(this.startLoc=gt.getUniformLocationNoThrow(vt,"start"),this.startLoc==null)||gt.gl.uniform1iv(this.startLoc,at)}}}const Fs=["x","y","z","w","u","v"];class Hr{constructor(at){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=at,this.rank=at.length;const gt=Hn(this.rank),vt=Jn("coords",this.rank),Nt=Jn("sourceLoc",this.rank),It=this.rank===1?"sourceLoc":`vec2(${Nt.slice(-2).join()})`,Et=`getChannel(getSource(${Nt.join()}), ${It})`,Lt=`
      result.x = ${Et};
      if (++${vt[this.rank-1]} < ${at[this.rank-1]}) {
        ++${Nt[this.rank-1]};
        result.y = ${Et};
        --${Nt[this.rank-1]};
      }
    `,Vt=this.rank===1?"":`
      --${vt[this.rank-1]};
      if (++${vt[this.rank-2]} < ${at[this.rank-2]}) {
        ++${Nt[this.rank-2]};
        result.z = ${Et};
        if (++${vt[this.rank-1]} < ${at[this.rank-1]}) {
          ++${Nt[this.rank-1]};
          result.w = ${Et};
        }
      }
    `,Ht=this.rank<=4?`sourceLoc = coords +
            ${gt}(${at.map((Jt,un)=>`start[${un}]`).join()});`:at.map((Jt,un)=>`${Nt[un]} = ${vt[un]} + start[${un}];`).join(`
`);this.userCode=`
      uniform int start[${this.rank}];
      void main() {
        ${gt} coords = getOutputCoords();
        ${gt} sourceLoc;
        ${Ht}
        vec4 result = vec4(0.);
        ${Lt}
        ${Vt}
        setOutput(result);
      }
    `}getCustomSetupFunc(at){if(at.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${at.length})`);return(gt,vt)=>{this.startLoc==null&&(this.startLoc=gt.getUniformLocationNoThrow(vt,"start"),this.startLoc==null)||gt.gl.uniform1iv(this.startLoc,at)}}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lr{constructor(at,gt,vt){this.variableNames=["x"],this.outputShape=vt;const Nt=vt.length,It=Hn(vt.length),Et=Hn(vt.length);let Lt="";if(Nt===1)Lt="coords * strides + begin";else{let Vt=0;Lt=vt.map((Ht,Jt)=>(Vt++,vt.length===1?`coords * strides[${Jt}] + begin[${Jt}]`:`coords[${Vt-1}] * strides[${Jt}] + begin[${Jt}]`)).join(",")}this.userCode=`
      ${It} begin = ${It}(${at});
      ${It} strides = ${It}(${gt});

      void main() {
        ${Et} coords = getOutputCoords();
        setOutput(getX(${Lt}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iu{constructor(at){this.gpgpu=at,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(at,gt,vt){const Nt=Cu(gt,vt),It=Tu(at,Nt,vt);It in this.freeTextures||(this.freeTextures[It]=[]),It in this.usedTextures||(this.usedTextures[It]=[]);const Et=Qr(at,Nt,this.gpgpu.gl,this.gpgpu.textureConfig,vt);if(this.freeTextures[It].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=Et,this.log();const Vt=this.freeTextures[It].shift();return this.usedTextures[It].push(Vt),Vt}let Lt;return Nt===_e.PACKED_2X2_FLOAT32?Lt=this.gpgpu.createPackedMatrixTexture(at[0],at[1]):Nt===_e.PACKED_2X2_FLOAT16?Lt=this.gpgpu.createFloat16PackedMatrixTexture(at[0],at[1]):Nt===_e.UNPACKED_FLOAT32?Lt=this.gpgpu.createFloat32MatrixTexture(at[0],at[1]):Nt===_e.UNPACKED_FLOAT16?Lt=this.gpgpu.createFloat16MatrixTexture(at[0],at[1]):Nt===_e.PACKED_4X1_UNSIGNED_BYTE&&(Lt=this.gpgpu.createUnsignedBytesMatrixTexture(at[0],at[1])),this.usedTextures[It].push(Lt),this.numUsedTextures++,this._numBytesAllocated+=Et,this.log(),Lt}releaseTexture(at,gt,vt,Nt){if(this.freeTextures==null)return;const It=Cu(vt,Nt),Et=Tu(gt,It,Nt);Et in this.freeTextures||(this.freeTextures[Et]=[]);const Lt=Qr(gt,It,this.gpgpu.gl,this.gpgpu.textureConfig,Nt),Vt=Object(c.jb)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");Vt!==-1&&this._numBytesAllocated>Vt?(this.gpgpu.deleteMatrixTexture(at),this._numBytesAllocated-=Lt):(this.freeTextures[Et].push(at),this.numFreeTextures++,this._numBytesFree+=Lt),this.numUsedTextures--;const Ht=this.usedTextures[Et],Jt=Ht.indexOf(at);if(Jt<0)throw new Error("Cannot release a texture that was never provided by this texture manager");Ht.splice(Jt,1),this.log()}log(){if(!this.logEnabled)return;const at=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${at})`);const gt=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*gt)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const at in this.freeTextures)this.freeTextures[at].forEach(gt=>{this.gpgpu.deleteMatrixTexture(gt)});for(const at in this.usedTextures)this.usedTextures[at].forEach(gt=>{this.gpgpu.deleteMatrixTexture(gt)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Qr(Ft,at,gt,vt,Nt){const It=function(Lt,Vt){switch(Lt){case _e.PACKED_2X2_FLOAT32:return ko(Vt);case _e.PACKED_2X2_FLOAT16:return Dr(Vt);case _e.UNPACKED_FLOAT32:return Ss(Vt);case _e.UNPACKED_FLOAT16:return _r(Vt);case _e.PACKED_4X1_UNSIGNED_BYTE:return Ho(Vt);default:throw new Error("Unknown physical texture type "+Lt)}}(at,vt);let Et;if(Nt){const[Lt,Vt]=tt(Ft[0],Ft[1]);Et=Lt*Vt}else{const[Lt,Vt]=et(Ft[0],Ft[1]);Et=Lt*Vt}return Et*function(Lt,Vt){const Ht=Lt;if(Vt===Ht.R32F)return 4;if(Vt===Ht.R16F)return 2;if(Vt===Ht.RGBA32F||Vt===Lt.RGBA)return 16;if(Vt===Ht.RGBA16F)return 8;throw new Error("Unknown internal format "+Vt)}(gt,It)}function Cu(Ft,at){if(Ft===_.UPLOAD)return _e.PACKED_2X2_FLOAT32;if(Ft===_.RENDER||Ft==null)return function(gt){return Object(c.jb)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?gt?_e.PACKED_2X2_FLOAT32:_e.UNPACKED_FLOAT32:gt?_e.PACKED_2X2_FLOAT16:_e.UNPACKED_FLOAT16}(at);if(Ft===_.DOWNLOAD||Ft===_.PIXELS)return _e.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+Ft)}function Tu(Ft,at,gt){return`${Ft[0]}_${Ft[1]}_${at}_${gt}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nu{constructor(at,gt){this.variableNames=["A"];const vt=new Array(at.length);for(let Et=0;Et<vt.length;Et++)vt[Et]=at[Et]*gt[Et];this.outputShape=vt,this.rank=vt.length;const Nt=Hn(this.rank),It=function(Et){const Lt=Et.length;if(Lt>5)throw Error(`Tile for rank ${Lt} is not yet supported`);if(Lt===1)return`imod(resRC, ${Et[0]})`;const Vt=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],Ht=[];for(let Jt=0;Jt<Et.length;Jt++)Ht.push(`imod(${Vt[Jt]}, ${Et[Jt]})`);return Ht.join()}(at);this.userCode=`
      void main() {
        ${Nt} resRC = getOutputCoords();
        setOutput(getA(${It}));
      }
    `}}class mr{constructor(at,gt){this.variableNames=["A"],this.outputShape=at,this.userCode=`
      float unaryOperation(float x) {
        ${gt}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const $u="return abs(x);",Zs=`if (isnan(x)) return x;
  return (x < 0.0) ? 0.0 : x;
`,jr=`if (isnan(x)) return x;
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,au="return (x >= 0.0) ? x : (exp(x) - 1.0);",os=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${c.X.SELU_SCALEALPHA};
  float scale = ${c.X.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Qo="return -x;",yo="return ceil(x);",uu="return floor(x);",Zo="return exp(x);",Bs="return exp(x) - 1.0;",Jo=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${c.X.ERF_P};
  float a1 = ${c.X.ERF_A1};
  float a2 = ${c.X.ERF_A2};
  float a3 = ${c.X.ERF_A3};
  float a4 = ${c.X.ERF_A4};
  float a5 = ${c.X.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,bo="return x;",so=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,_i=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Is=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`;class vo{constructor(at,gt){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=at,this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${gt}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _u{constructor(at){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=at;const gt=at.length,vt=Jn("rc",gt),Nt=Hn(gt),It=function(Vt,Ht){if(Vt===1)return"rc";let Jt="";for(let un=0;un<Vt;un++)Jt+=Ht[un],un<Vt-1&&(Jt+=",");return Jt}(gt,vt),Et=vt.slice(-2),Lt=gt<=1?"rc":`vec2(${Et.join(",")})`;this.userCode=`
      void main() {
        ${Nt} rc = getOutputCoords();
        vec4 packedInput = getA(${It});

        setOutput(getChannel(packedInput, ${Lt}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{segment_util:lu}=c.X,Il=c.lb.split,Iu=c.lb.tile,Au=c.lb.topkImpl,ku=c.lb.whereImpl,oo={};function na(Ft,at=!1){if(Ft==="linear")return"return x;";if(Ft==="relu")return at?so:Zs;if(Ft==="elu")return at?Is:au;if(Ft==="relu6")return at?_i:jr;if(Ft==="prelu")return at?cs:ss;throw new Error(`Activation ${Ft} has not been implemented for the WebGL backend.`)}class Al extends c.w{constructor(at){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Object(c.jb)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(at==null){const vt=b(Object(c.jb)().getNumber("WEBGL_VERSION"));this.binaryCache=((gt=Object(c.jb)().getNumber("WEBGL_VERSION"))in oo||(oo[gt]={}),oo[gt]),this.gpgpu=new bu(vt),this.canvas=vt.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=at,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=at.gl.canvas;var gt;this.textureManager=new iu(this.gpgpu),this.numMBBeforeWarning=Object(c.jb)().global.screen==null?1024:Object(c.jb)().global.screen.height*Object(c.jb)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new c.k(this,Object(c.ib)())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(at,gt,vt){if((Object(c.jb)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(c.jb)().getBool("DEBUG"))&&this.checkNumericalProblems(at),vt==="complex64"&&at!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const Nt={};return this.texData.set(Nt,{shape:gt,dtype:vt,values:at,usage:_.UPLOAD,refCount:1,complexParentRefCount:0}),Nt}incRef(at){this.texData.get(at).refCount++}decRef(at){this.texData.has(at)&&this.texData.get(at).refCount--}move(at,gt,vt,Nt){if(Object(c.jb)().getBool("DEBUG")&&this.checkNumericalProblems(gt),Nt==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(at,{shape:vt,dtype:Nt,values:gt,usage:_.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(at){const gt=at.dataId;if(this.texData.has(gt)){const vt=this.texData.get(gt);vt.refCount--,vt.refCount<1&&this.disposeData(gt)}}readSync(at){const gt=this.texData.get(at),{values:vt,dtype:Nt,complexTensorInfos:It,slice:Et,shape:Lt,isPacked:Vt}=gt;if(Et!=null){let on;on=Vt?new vo(Lt,bo):new mr(Lt,bo);const mn=this.runWebGLProgram(on,[{dataId:at,shape:Lt,dtype:Nt}],Nt),gn=this.readSync(mn.dataId);return this.disposeIntermediateTensorInfo(mn),gn}if(vt!=null)return this.convertAndCacheOnCPU(at);if(Nt==="string")return vt;const Ht=this.activeTimers!=null;let Jt,un;if(Ht&&(Jt=c.Lb.now()),Nt==="complex64"){const on=this.readSync(It.real.dataId),mn=this.readSync(It.imag.dataId);un=c.X.mergeRealAndImagArrays(on,mn)}else un=this.getValuesFromTexture(at);return Ht&&(this.downloadWaitMs+=c.Lb.now()-Jt),this.convertAndCacheOnCPU(at,un)}async read(at){if(this.pendingRead.has(at)){const gn=this.pendingRead.get(at);return new Promise(fn=>gn.push(fn))}const gt=this.texData.get(at),{values:vt,shape:Nt,slice:It,dtype:Et,complexTensorInfos:Lt,isPacked:Vt}=gt;if(It!=null){let gn;gn=Vt?new vo(Nt,bo):new mr(Nt,bo);const fn=this.runWebGLProgram(gn,[{dataId:at,shape:Nt,dtype:Et}],Et),yn=this.read(fn.dataId);return this.disposeIntermediateTensorInfo(fn),yn}if(vt!=null)return this.convertAndCacheOnCPU(at);if(!Object(c.jb)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&Object(c.jb)().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let Ht,Jt,un=null;if(Et!=="complex64"&&Object(c.jb)().get("WEBGL_BUFFER_SUPPORTED")){Ht=this.decode(at);const gn=this.texData.get(Ht.dataId);un=this.gpgpu.createBufferFromTexture(gn.texture,...rt(Nt))}if(this.pendingRead.set(at,[]),Et!=="complex64"&&await this.gpgpu.createAndWaitForFence(),Et==="complex64"){const gn=await Promise.all([this.read(Lt.real.dataId),this.read(Lt.imag.dataId)]),fn=gn[0],yn=gn[1];Jt=c.X.mergeRealAndImagArrays(fn,yn)}else if(un==null)Jt=this.getValuesFromTexture(at);else{const gn=c.Lb.sizeFromShape(Nt);Jt=this.gpgpu.downloadFloat32MatrixFromBuffer(un,gn)}Ht!=null&&this.disposeIntermediateTensorInfo(Ht);const on=this.convertAndCacheOnCPU(at,Jt),mn=this.pendingRead.get(at);return this.pendingRead.delete(at),mn.forEach(gn=>gn(on)),this.pendingDisposal.has(at)&&(this.pendingDisposal.delete(at),this.disposeData(at),this.pendingDeletes--),on}checkNumericalProblems(at){if(at!=null)for(let gt=0;gt<at.length;gt++){const vt=at[gt];if(!st(vt))throw Object(c.jb)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${vt} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${vt} cannot be represented on this device.`)}}getValuesFromTexture(at){const{shape:gt,dtype:vt,isPacked:Nt}=this.texData.get(at),It=c.Lb.sizeFromShape(gt);if(Object(c.jb)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const on=this.decode(at),mn=this.texData.get(on.dataId),gn=this.gpgpu.downloadMatrixFromPackedTexture(mn.texture,...rt(gt)).subarray(0,It);return this.disposeIntermediateTensorInfo(on),gn}const Et=Object(c.jb)().getBool("WEBGL_PACK")&&Nt===!0,Lt=Et?Rt(gt):gt,Vt=Et?new qo(Lt):new Go(Lt),Ht=this.runWebGLProgram(Vt,[{shape:Lt,dtype:vt,dataId:at}],"float32"),Jt=this.texData.get(Ht.dataId),un=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(Jt.texture,Jt.texShape[0],Jt.texShape[1]).subarray(0,It);return this.disposeIntermediateTensorInfo(Ht),un}async time(at){const gt=this.activeTimers,vt=[];let Nt=!1;this.programTimersStack==null?(this.programTimersStack=vt,Nt=!0):this.activeTimers.push(vt),this.activeTimers=vt,at();const It=c.Lb.flatten(this.activeTimers.map(Vt=>Vt.query)).filter(Vt=>Vt!=null),Et=c.Lb.flatten(this.activeTimers.map(Vt=>Vt.name)).filter(Vt=>Vt!=null);this.activeTimers=gt,Nt&&(this.programTimersStack=null);const Lt={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Object(c.jb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const Vt=await Promise.all(It);Lt.kernelMs=c.Lb.sum(Vt),Lt.getExtraProfileInfo=()=>Vt.map((Ht,Jt)=>({name:Et[Jt],ms:Ht})).map(Ht=>`${Ht.name}: ${Ht.ms}`).join(", ")}else Lt.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,Lt}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(c.jb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:c.Lb.now(),endMs:null}}endTimer(at){return Object(c.jb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),at):(at.endMs=c.Lb.now(),at)}async getQueryTime(at){if(Object(c.jb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(at);const gt=at;return gt.endMs-gt.startMs}disposeData(at){if(this.pendingDisposal.has(at))return;if(this.pendingRead.has(at))return this.pendingDisposal.add(at),void this.pendingDeletes++;if(!this.texData.has(at))return;if(this.texData.get(at).complexParentRefCount>0)return void this.texData.get(at).refCount--;this.releaseGPUData(at);const{complexTensorInfos:gt}=this.texData.get(at);gt!=null&&(this.texData.get(gt.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(gt.real),this.texData.get(gt.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(gt.imag)),this.texData.delete(at)}releaseGPUData(at){const{texture:gt,dtype:vt,texShape:Nt,usage:It,isPacked:Et,slice:Lt}=this.texData.get(at),Vt=Lt&&Lt.origDataId||at,Ht=this.dataRefCount.get(Vt);Ht>1?this.dataRefCount.set(Vt,Ht-1):(this.dataRefCount.delete(Vt),gt!=null&&(this.numBytesInGPU-=this.computeBytes(Nt,vt),this.textureManager.releaseTexture(gt,Nt,It,Et)));const Jt=this.texData.get(at);Jt.texture=null,Jt.texShape=null,Jt.isPacked=!1,Jt.slice=null}getTexture(at){return this.uploadToGPU(at),this.texData.get(at).texture}getDataInfo(at){return this.texData.get(at)}getCPUBackend(){return Object(c.jb)().getBool("WEBGL_CPU_FORWARD")?(this.cpuBackend==null&&(this.cpuBackend=Object(c.ib)().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(at,gt=128){const vt=this.getCPUBackend();return this.warnedAboutCPUBackend||vt!=null||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),vt!=null&&at.every(Nt=>this.texData.get(Nt.dataId).texture==null&&c.Lb.sizeFromShape(Nt.shape)<gt)}getGPGPUContext(){return this.gpgpu}slice(at,gt,vt){if(this.shouldExecuteOnCPU([at])){const Et=ns(this.texData.get(at.dataId).values,gt,vt,at.shape,at.dtype);return this.makeOutput(vt,at.dtype,Et)}if(c.Lb.sizeFromShape(vt)===0)return Object(c.Gb)([],vt,at.dtype);const{isPacked:Nt}=this.texData.get(at.dataId),It=c.Ab.isSliceContinous(at.shape,gt,vt);if(Nt||!It){const Et=Object(c.jb)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Hr(vt):new ou(vt),Lt=Et.getCustomSetupFunc(gt);return this.compileAndRun(Et,[at],null,Lt)}return this.uploadToGPU(at.dataId),this.shallowSlice(at,gt,vt)}shallowSlice(at,gt,vt){const Nt=this.texData.get(at.dataId),It=this.makeOutput(vt,at.dtype),Et=this.texData.get(It.dataId);Object.assign(Et,Nt),Et.shape=vt,Et.dtype=at.dtype;let Lt=c.Ab.computeFlatOffset(gt,at.strides);Nt.slice&&(Lt+=Nt.slice.flatOffset),Et.slice={flatOffset:Lt,origDataId:Nt.slice&&Nt.slice.origDataId||at.dataId};const Vt=this.dataRefCount.get(Et.slice.origDataId)||1;return this.dataRefCount.set(Et.slice.origDataId,Vt+1),It}stridedSlice(at,gt,vt,Nt){const It=this.tryRunOnCpuOrThrow([at],()=>this.cpuBackend.stridedSlice(at,gt,vt,Nt));if(It)return It;const Et=c.Ab.computeOutShape(gt,vt,Nt);if(Et.some(Vt=>Vt===0))return Object(c.Gb)([],Et);const Lt=new lr(gt,Nt,Et);return this.compileAndRun(Lt,[at])}reverse(at,gt){const vt=Object(c.jb)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ps(at.shape,gt):new go(at.shape,gt);return this.compileAndRun(vt,[at])}neg(at){const gt=this.tryRunOnCpuOrThrow([at],()=>this.cpuBackend.neg(at));if(gt)return gt;if(Object(c.jb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(at,Qo,at.dtype);const vt=new mr(at.shape,Qo);return this.compileAndRun(vt,[at])}batchMatMul(at,gt,vt,Nt){const It=vt?at.shape[2]:at.shape[1],Et=Nt?gt.shape[1]:gt.shape[2],Lt=vt?at.shape[1]:at.shape[2],Vt=Math.max(at.shape[0],gt.shape[0]);if((It===1||Et===1)&&Lt>1e3){vt&&(at=Object(c.Jb)(at,[0,2,1])),Nt&&(gt=Object(c.Jb)(gt,[0,2,1]));const un=Et===1?at:at.as3D(Vt,Lt,1),on=Et===1?2:1,mn=Et===1?gt.as3D(Vt,1,Lt):gt;return c.pb(un,mn).sum(on,!0)}const Ht=Object(c.Kb)(at.dtype,gt.dtype),Jt=new nu(at.shape,gt.shape,[Vt,It,Et],vt,Nt);return this.compileAndRun(Jt,[at,gt],Ht)}fusedBatchMatMul({a:at,b:gt,transposeA:vt,transposeB:Nt,bias:It,activation:Et,preluActivationWeights:Lt}){const Vt=vt?at.shape[2]:at.shape[1],Ht=Nt?gt.shape[1]:gt.shape[2],Jt=Math.max(at.shape[0],gt.shape[0]),un=Object(c.Kb)(at.dtype,gt.dtype),on=It!=null,mn=Lt!=null,gn=Et?na(Et,!0):null,fn=new nu(at.shape,gt.shape,[Jt,Vt,Ht],vt,Nt,on,gn,mn),yn=[at,gt];return It&&yn.push(It),Lt&&yn.push(Lt),this.compileAndRun(fn,yn,un)}localResponseNormalization4D(at,gt,vt,Nt,It){const Et=Object(c.jb)().getBool("WEBGL_PACK_NORMALIZATION")?new yl(at.shape,gt,vt,Nt,It):new Ju(at.shape,gt,vt,Nt,It);return this.compileAndRun(Et,[at])}LRNGrad(at,gt,vt,Nt,It,Et,Lt){const Vt=new vu(gt.shape,Nt,It,Et,Lt);return this.compileAndRun(Vt,[gt,vt,at])}tile(at,gt){if(at.dtype==="string"){const Nt=this.readSync(at.dataId).map(Et=>c.Lb.decodeString(Et)),It=Object(c.Z)(at.shape,at.dtype,Nt);return Iu(It,gt)}const vt=new Nu(at.shape,gt);return this.compileAndRun(vt,[at])}pad(at,gt,vt){const Nt=Object(c.jb)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Nl(at.shape,gt,vt):new Tl(at.shape,gt,vt);return this.compileAndRun(Nt,[at])}gather(at,gt,vt){const Nt=this.tryRunOnCpuOrThrow([at,gt],()=>this.cpuBackend.gather(at,gt,vt));if(Nt)return Nt;const It=new dr(at.shape,gt.size,vt);return this.compileAndRun(It,[at,gt])}batchToSpaceND(at,gt,vt){c.Lb.assert(at.rank<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const Nt=gt.reduce((Jt,un)=>Jt*un),It=c.X.getReshaped(at.shape,gt,Nt),Et=c.X.getPermuted(It.length,gt.length),Lt=c.X.getReshapedPermuted(at.shape,gt,Nt),Vt=c.X.getSliceBeginCoords(vt,gt.length),Ht=c.X.getSliceSize(Lt,vt,gt.length);return Object(c.Jb)(at.reshape(It),Et).reshape(Lt).slice(Vt,Ht)}spaceToBatchND(at,gt,vt){c.Lb.assert(at.rank<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const Nt=gt.reduce((un,on)=>un*on),It=[[0,0]];It.push(...vt);for(let un=1+gt.length;un<at.shape.length;++un)It.push([0,0]);const Et=at.pad(It),Lt=c.X.getReshaped(Et.shape,gt,Nt,!1),Vt=c.X.getPermuted(Lt.length,gt.length,!1),Ht=c.X.getReshapedPermuted(Et.shape,gt,Nt,!1),Jt=Object(c.Jb)(Et.reshape(Lt),Vt);return Object(c.xb)(Jt,Ht)}reduce(at,gt,vt){const Nt=at.shape[0],It=at.shape[1],Et=c.X.computeOptimalWindowSize(It),Lt=Math.ceil(It/Et),Vt=new xu({windowSize:Et,inSize:It,batchSize:Nt,outSize:Lt},gt),Ht=this.compileAndRun(Vt,[at],vt);return Ht.shape[1]===1?Ht:this.reduce(Ht,gt,vt)}argReduce(at,gt,vt=null){let Nt=at.shape[0],It=at.shape[1];vt!=null&&(Nt=vt.shape[0],It=vt.shape[1]);const Et=c.X.computeOptimalWindowSize(It),Lt={windowSize:Et,inSize:It,batchSize:Nt,outSize:Math.ceil(It/Et)},Vt=new bn(Lt,gt,vt==null),Ht=[at];vt!=null&&Ht.push(vt);const Jt=this.compileAndRun(Vt,Ht,"int32");return Jt.shape[1]===1?Jt:this.argReduce(at,gt,Jt)}argReducePacked(at,gt,vt=null){const Nt=vt!=null?vt.shape:at.shape,It=Nt[Nt.length-1],Et=c.X.computeOptimalWindowSize(It),Lt=new rs(Nt,Et,gt,vt==null),Vt=vt==null?[at]:[at,vt],Ht=this.compileAndRun(Lt,Vt,"int32");return Ht.rank===at.rank?this.argReducePacked(at,gt,Ht):Ht}sum(at,gt){c.X.assertAxesAreInnerMostDims("sum",gt,at.rank);const[vt,Nt]=c.X.computeOutAndReduceShapes(at.shape,gt),It=c.Lb.sizeFromShape(Nt),Et=at.as2D(-1,It),Lt=c.Fb(at.dtype);return this.reduce(Et,"sum",Lt).reshape(vt)}prod(at,gt){const vt=this.tryRunOnCpuOrThrow([at],()=>this.cpuBackend.prod(at,gt));if(vt)return vt;const[Nt,It]=c.X.computeOutAndReduceShapes(at.shape,gt),Et=c.Lb.sizeFromShape(It),Lt=at.as2D(-1,Et),Vt=c.Fb(at.dtype);return this.reduce(Lt,"prod",Vt).reshape(Nt)}unsortedSegmentSum(at,gt,vt){let Nt=0;const It=c.X.getAxesPermutation([Nt],at.rank);let Et=at;It!=null&&(Et=Object(c.Jb)(at,It),Nt=c.X.getInnerMostAxes(1,at.rank)[0]);const Lt=lu.computeOutShape(Et.shape,Nt,vt),Vt=c.Lb.sizeFromShape([Et.shape[Nt]]),Ht=Et.as2D(-1,Vt),Jt=c.Fb(at.dtype);let un=this.segOpCompute(Ht,"unsortedSegmentSum",gt,Jt,vt).reshape(Lt);return It!=null&&(un=Object(c.Jb)(un,c.X.getUndoAxesPermutation(It))),un}segOpCompute(at,gt,vt,Nt,It){const Et=at.shape[0],Lt=at.shape[1],Vt=lu.segOpComputeOptimalWindowSize(Lt,It),Ht=new su({windowSize:Vt,inSize:Lt,batchSize:Et,numSegments:It},gt),Jt=this.compileAndRun(Ht,[at,vt],Nt);return Jt.shape[1]===It?Jt:(vt=Object(c.ub)(0,It).tile([Lt/Vt]),this.segOpCompute(Jt,gt,vt,Nt,It))}argMinMaxReduce(at,gt,vt){const Nt=[gt];if(c.X.assertAxesAreInnerMostDims("arg"+vt.charAt(0).toUpperCase()+vt.slice(1),Nt,at.rank),!Object(c.jb)().getBool("WEBGL_PACK_REDUCE")||at.rank<=2){const[It,Et]=c.X.computeOutAndReduceShapes(at.shape,Nt),Lt=c.Lb.sizeFromShape(Et),Vt=at.as2D(-1,Lt);return this.argReduce(Vt,vt).reshape(It)}return this.argReducePacked(at,vt)}argMin(at,gt){return this.argMinMaxReduce(at,gt,"min")}argMax(at,gt){return this.argMinMaxReduce(at,gt,"max")}cumsum(at,gt,vt,Nt){if(gt!==at.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${at.rank-1} but got axis=`+gt);const It=at.shape[gt];let Et=at;for(let Lt=0;Lt<=Math.ceil(Math.log2(It))-1;Lt++){const Vt=new Uo(at.shape,!1,Nt),Ht=Vt.getCustomSetupFunc(Lt),Jt=Et;Et=this.compileAndRun(Vt,[Et],Et.dtype,Ht),Jt.dispose()}if(vt){const Lt=new Uo(at.shape,vt,Nt),Vt=Et;Et=this.compileAndRun(Lt,[Et]),Vt.dispose()}return Et}equal(at,gt){if(Object(c.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(at,gt,`
  return vec4(equal(a, b));
`,"bool");const vt=new Wr("return float(a == b);",at.shape,gt.shape);return this.compileAndRun(vt,[at,gt],"bool")}less(at,gt){const vt=this.tryRunOnCpuOrThrow([at,gt],()=>this.cpuBackend.less(at,gt));if(vt)return vt;if(Object(c.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(at,gt,`
  return vec4(lessThan(a, b));
`,"bool");const Nt=new Wr("return float(a < b);",at.shape,gt.shape);return this.compileAndRun(Nt,[at,gt],"bool")}lessEqual(at,gt){if(Object(c.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(at,gt,`
  return vec4(lessThanEqual(a, b));
`,"bool");const vt=new Wr("return float(a <= b);",at.shape,gt.shape);return this.compileAndRun(vt,[at,gt],"bool")}greater(at,gt){const vt=this.tryRunOnCpuOrThrow([at,gt],()=>this.cpuBackend.greater(at,gt));if(vt)return vt;if(Object(c.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(at,gt,`
  return vec4(greaterThan(a, b));
`,"bool");const Nt=new Wr("return float(a > b);",at.shape,gt.shape);return this.compileAndRun(Nt,[at,gt],"bool")}greaterEqual(at,gt){if(Object(c.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(at,gt,`
  return vec4(greaterThanEqual(a, b));
`,"bool");const vt=new Wr("return float(a >= b);",at.shape,gt.shape);return this.compileAndRun(vt,[at,gt],"bool")}logicalNot(at){const gt=new mr(at.shape,"return float(!(x >= 1.0));");return this.compileAndRun(gt,[at])}logicalAnd(at,gt){if(Object(c.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(at,gt,`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,"bool");const vt=new Wr("return float(a >= 1.0 && b >= 1.0);",at.shape,gt.shape);return this.compileAndRun(vt,[at,gt],"bool")}logicalOr(at,gt){if(Object(c.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(at,gt,`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,"bool");const vt=new Wr("return float(a >= 1.0 || b >= 1.0);",at.shape,gt.shape);return this.compileAndRun(vt,[at,gt],"bool")}select(at,gt,vt){const Nt=new Cs(at.rank,gt.shape,gt.rank);return this.compileAndRun(Nt,[at,gt,vt],Object(c.Kb)(gt.dtype,vt.dtype))}where(at){c.X.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const gt=at.dataSync();return ku(at.shape,gt)}topk(at,gt,vt){const Nt=at.dataSync();return Au(Nt,at.shape,at.dtype,gt,vt)}min(at,gt){c.X.assertAxesAreInnerMostDims("min",gt,at.rank);const[vt,Nt]=c.X.computeOutAndReduceShapes(at.shape,gt),It=c.Lb.sizeFromShape(Nt),Et=at.as2D(-1,It);return this.reduce(Et,"min",Et.dtype).reshape(vt)}minimum(at,gt){const vt=this.tryRunOnCpuOrThrow([at,gt],()=>this.cpuBackend.minimum(at,gt));if(vt)return vt;const Nt=Object(c.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hs(`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`,at.shape,gt.shape):new Wr(`
  if (isnan(a)) return a;
  if (isnan(b)) return b;

  return min(a, b);
`,at.shape,gt.shape);return this.compileAndRun(Nt,[at,gt])}mod(at,gt){const vt=Object(c.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hs(`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`,at.shape,gt.shape):new Wr(`if (b == 0.0) return NAN;
  return mod(a, b);`,at.shape,gt.shape);return this.compileAndRun(vt,[at,gt])}maximum(at,gt){const vt=this.tryRunOnCpuOrThrow([at,gt],()=>this.cpuBackend.maximum(at,gt));if(vt)return vt;const Nt=Object(c.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hs(`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`,at.shape,gt.shape):new Wr(`
  if (isnan(a)) return a;
  if (isnan(b)) return b;

  return max(a, b);
`,at.shape,gt.shape);return this.compileAndRun(Nt,[at,gt])}all(at,gt){c.X.assertAxesAreInnerMostDims("all",gt,at.rank);const[vt,Nt]=c.X.computeOutAndReduceShapes(at.shape,gt),It=c.Lb.sizeFromShape(Nt),Et=at.as2D(-1,It);return this.reduce(Et,"all",Et.dtype).reshape(vt)}any(at,gt){c.X.assertAxesAreInnerMostDims("any",gt,at.rank);const[vt,Nt]=c.X.computeOutAndReduceShapes(at.shape,gt),It=c.Lb.sizeFromShape(Nt),Et=at.as2D(-1,It);return this.reduce(Et,"any",Et.dtype).reshape(vt)}floorDiv(at,gt){if(Object(c.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(at,gt,`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,"int32");const vt=new Wr(`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,at.shape,gt.shape);return this.compileAndRun(vt,[at,gt],"int32")}packedUnaryOp(at,gt,vt){const Nt=new vo(at.shape,gt);return this.compileAndRun(Nt,[at],vt)}packedBinaryOp(at,gt,vt,Nt,It=!1){const Et=new hs(vt,at.shape,gt.shape,It);return this.compileAndRun(Et,[at,gt],Nt)}makeComplexComponentTensorInfo(at,gt){return{dataId:gt.dataId,dtype:gt.dtype,shape:at.shape}}addN(at){if(at.length===1)return at[0];if(at.length>Object(c.jb)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const It=Math.floor(at.length/2),Et=this.addN(at.slice(0,It)),Lt=this.addN(at.slice(It));return this.addN([Et,Lt])}const gt=at.map(It=>It.dtype).reduce((It,Et)=>Object(c.Kb)(It,Et)),vt=at.map(It=>It.shape),Nt=Object(c.jb)().getBool("WEBGL_PACK")?new Dn(at[0].shape,vt):new Tn(at[0].shape,vt);return this.compileAndRun(Nt,at,gt)}pow(at,gt){const vt=Object(c.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hs(`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`,at.shape,gt.shape):new Wr(`
if(a < 0.0 && floor(b) < b){
  return NAN;
}
if (b == 0.0) {
  return 1.0;
}
return (round(mod(b, 2.0)) != 1) ?
    pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,at.shape,gt.shape),Nt=Object(c.Kb)(at.dtype,gt.dtype);return this.compileAndRun(vt,[at,gt],Nt)}ceil(at){if(this.shouldExecuteOnCPU([at])){const vt=Yr(this.texData.get(at.dataId).values,at.dtype);return this.makeOutput(at.shape,at.dtype,vt)}if(Object(c.jb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(at,yo,at.dtype);const gt=new mr(at.shape,yo);return this.compileAndRun(gt,[at])}floor(at){if(this.shouldExecuteOnCPU([at])){const vt=vs(this.texData.get(at.dataId).values,at.dtype);return this.makeOutput(at.shape,at.dtype,vt)}if(Object(c.jb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(at,uu,at.dtype);const gt=new mr(at.shape,uu);return this.compileAndRun(gt,[at])}sign(at){const gt=new mr(at.shape,`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`);return this.compileAndRun(gt,[at])}isNaN(at){const gt=new mr(at.shape,"return float(isnan(x));");return this.compileAndRun(gt,[at],"bool")}isInf(at){const gt=new mr(at.shape,"return float(isinf(x));");return this.compileAndRun(gt,[at],"bool")}isFinite(at){const gt=new mr(at.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(gt,[at],"bool")}round(at){const gt=new mr(at.shape,`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`);return this.compileAndRun(gt,[at])}exp(at){if(this.shouldExecuteOnCPU([at])){const vt=Ls(this.texData.get(at.dataId).values,at.dtype);return this.makeOutput(at.shape,at.dtype,vt)}if(Object(c.jb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(at,Zo,at.dtype);const gt=new mr(at.shape,Zo);return this.compileAndRun(gt,[at])}expm1(at){if(this.shouldExecuteOnCPU([at])){const vt=Jr(this.texData.get(at.dataId).values,at.dtype);return this.makeOutput(at.shape,at.dtype,vt)}if(Object(c.jb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(at,Bs,at.dtype);const gt=new mr(at.shape,Bs);return this.compileAndRun(gt,[at])}softmax(at,gt){const vt=c.Lb.parseAxisParam([gt],at.shape),Nt=Object(c.nb)(at,vt),It=c.X.expandShapeToKeepDim(Nt.shape,vt),Et=c.Eb(at,Nt.reshape(It)),Lt=this.exp(Et),Vt=this.sum(Lt,vt).reshape(It);return Object(c.hb)(Lt,Vt)}log(at){if(this.shouldExecuteOnCPU([at])){const vt=Os(this.texData.get(at.dataId).values,at.dtype);return this.makeOutput(at.shape,at.dtype,vt)}if(Object(c.jb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(at,`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,at.dtype);const gt=new mr(at.shape,`if (x < 0.0) return NAN;
  return log(x);`);return this.compileAndRun(gt,[at])}log1p(at){const gt=new mr(at.shape,"return log(1.0 + x);");return this.compileAndRun(gt,[at])}sqrt(at){const gt=new mr(at.shape,"return sqrt(x);");return this.compileAndRun(gt,[at])}rsqrt(at){if(this.shouldExecuteOnCPU([at])){const vt=Ds(this.texData.get(at.dataId).values,at.dtype);return this.makeOutput(at.shape,at.dtype,vt)}const gt=new mr(at.shape,"return inversesqrt(x);");return this.compileAndRun(gt,[at])}reciprocal(at){const gt=new mr(at.shape,"return 1.0 / x;");return this.compileAndRun(gt,[at])}relu(at){let gt;return gt=Object(c.jb)().getBool("WEBGL_PACK")?new vo(at.shape,so):new mr(at.shape,Zs),this.compileAndRun(gt,[at])}relu6(at){let gt;return gt=Object(c.jb)().getBool("WEBGL_PACK")?new vo(at.shape,_i):new mr(at.shape,jr),this.compileAndRun(gt,[at])}prelu(at,gt){const vt=Object(c.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hs(cs,at.shape,gt.shape):new Wr(ss,at.shape,gt.shape);return this.compileAndRun(vt,[at,gt])}elu(at){if(Object(c.jb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(at,Is,at.dtype);const gt=new mr(at.shape,au);return this.compileAndRun(gt,[at])}eluDer(at,gt){const vt=Object(c.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hs(`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,at.shape,gt.shape):new Wr("return (b >= 1.0) ? a : a * (b + 1.0);",at.shape,gt.shape);return this.compileAndRun(vt,[at,gt])}selu(at){const gt=new mr(at.shape,os);return this.compileAndRun(gt,[at])}clip(at,gt,vt){let Nt;Nt=Object(c.jb)().getBool("WEBGL_PACK_CLIP")?new Vr(at.shape):new ws(at.shape);const It=Nt.getCustomSetupFunc(gt,vt);return this.compileAndRun(Nt,[at],null,It)}abs(at){if(this.shouldExecuteOnCPU([at])&&at.dtype!=="complex64"){const vt=$s(this.texData.get(at.dataId).values);return this.makeOutput(at.shape,at.dtype,vt)}if(Object(c.jb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(at,$u,at.dtype);const gt=new mr(at.shape,$u);return this.compileAndRun(gt,[at])}complexAbs(at){const gt=this.texData.get(at.dataId),vt=new No(at.shape),Nt=[this.makeComplexComponentTensorInfo(at,gt.complexTensorInfos.real),this.makeComplexComponentTensorInfo(at,gt.complexTensorInfos.imag)];return this.compileAndRun(vt,Nt)}sigmoid(at){const gt=new mr(at.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(gt,[at])}softplus(at){const gt=new mr(at.shape,`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`);return this.compileAndRun(gt,[at])}asin(at){const gt=new mr(at.shape,`if (isnan(x)) return x;
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`);return this.compileAndRun(gt,[at])}acos(at){const gt=new mr(at.shape,`if (isnan(x)) return x;
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`);return this.compileAndRun(gt,[at])}atan(at){const gt=new mr(at.shape,`if (isnan(x)) return x;
  return atan(x);
`);return this.compileAndRun(gt,[at])}sinh(at){const gt=new mr(at.shape,`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`);return this.compileAndRun(gt,[at])}cosh(at){const gt=new mr(at.shape,`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`);return this.compileAndRun(gt,[at])}tanh(at){const gt=new mr(at.shape,`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`);return this.compileAndRun(gt,[at])}asinh(at){const gt=new mr(at.shape,"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));");return this.compileAndRun(gt,[at])}acosh(at){const gt=new mr(at.shape,`if (isnan(x)) return x;
  if (x < 1.0) return NAN;
  return log(x + sqrt(x * x - 1.0));`);return this.compileAndRun(gt,[at])}atanh(at){const gt=new mr(at.shape,`if (isnan(x)) return x;
  if ((x < -1.0) || (x > 1.0)) return NAN;
  return (log(1.0 + x) - log(1.0 - x)) / 2.0;`);return this.compileAndRun(gt,[at])}erf(at){const gt=new mr(at.shape,Jo);return this.compileAndRun(gt,[at])}step(at,gt){const vt=new mr(at.shape,function(Nt=0){return`if (isnan(x)) return x;
    return x > 0.0 ? 1.0 : float(${Nt});
  `}(gt));return this.compileAndRun(vt,[at])}conv2dByMatMul(at,gt,vt,Nt,It,Et){const Lt=at.shape,Vt=this.texData.get(at.dataId),Ht=vt.inChannels,Jt=Lt[0]*Lt[1]*Lt[2],un=vt.outChannels,on=vt.dataFormat==="channelsLast",mn=(Jt===1||un===1)&&Ht>1e3,gn=Lt[2]%2!=0&&!!Vt.isPacked;if(mn||!Object(c.jb)().getBool("WEBGL_LAZILY_UNPACK")||!Object(c.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!gn){const En=on?Lt[0]*Lt[1]*Lt[2]:Lt[0]*Lt[2]*Lt[3],_n=Object(c.xb)(at,[1,En,vt.inChannels]),Kn=Object(c.xb)(gt,[1,vt.inChannels,vt.outChannels]),Xn=this.fusedBatchMatMul({a:_n,b:Kn,transposeA:!1,transposeB:!1,bias:Nt,activation:It,preluActivationWeights:Et});return Object(c.xb)(Xn,vt.outShape)}const fn=on?Lt[0]*Lt[1]*(Lt[2]+1):Lt[0]*Lt[2]*(Lt[3]+1),yn={dataId:at.dataId,shape:[1,fn,vt.inChannels],dtype:at.dtype},In=Vt.shape;Vt.shape=Vt.shape.slice(),Vt.shape[Vt.shape.length-2]++,c.Lb.assert(Gt(Vt.shape,yn.shape),()=>`packed reshape ${Vt.shape} to ${yn.shape} isn't free`);const Ln=Object(c.xb)(gt,[1,vt.inChannels,vt.outChannels]),Vn=this.fusedBatchMatMul({a:yn,b:Ln,transposeA:!1,transposeB:!1,bias:Nt,activation:It,preluActivationWeights:Et}),Sn=this.texData.get(Vn.dataId);return c.Lb.assert(Sn.isPacked,()=>"batchMatMul result is expected to be packed"),Vt.shape=In,Sn.shape=vt.outShape,Object(c.ib)().makeTensorFromDataId(Vn.dataId,vt.outShape,Vn.dtype)}conv2dWithIm2Row(at,gt,vt,Nt,It,Et){const{filterWidth:Lt,filterHeight:Vt,inChannels:Ht,outWidth:Jt,outHeight:un,dataFormat:on}=vt,mn=on==="channelsLast",gn=Lt*Vt*Ht,fn=un*Jt,yn=[gn,fn],In=at.squeeze([0]),Ln=gt.reshape([1,gn,-1]),Vn=new Xo(yn,In.shape,vt),Sn=this.compileAndRun(Vn,[In]).reshape([1,yn[0],yn[1]]),En=Nt!=null,_n=Et!=null,Kn=It?na(It,!0):null,Xn=new nu(Sn.shape,Ln.shape,[1,fn,vt.outChannels],!0,!1,En,Kn,_n),ur=[Sn,Ln];Nt&&ur.push(Nt),_n&&ur.push(Et);const br=this.compileAndRun(Xn,ur);return mn?br.reshape([1,un,Jt,vt.outChannels]):br.reshape([1,vt.outChannels,un,Jt])}fusedConv2d({input:at,filter:gt,convInfo:vt,bias:Nt,activation:It,preluActivationWeights:Et}){if(vt.filterHeight===1&&vt.filterWidth===1&&vt.dilationHeight===1&&vt.dilationWidth===1&&vt.strideHeight===1&&vt.strideWidth===1&&(vt.padInfo.type==="SAME"||vt.padInfo.type==="VALID"))return this.conv2dByMatMul(at,gt,vt,Nt,It,Et);if(Object(c.jb)().getBool("WEBGL_CONV_IM2COL")&&at.shape[0]===1)return this.conv2dWithIm2Row(at,gt,vt,Nt,It,Et);const Lt=Nt!=null,Vt=Et!=null,Ht=It?na(It,!1):null,Jt=new zn(vt,Lt,Ht,Vt),un=[at,gt];return Nt&&un.push(Nt),Et&&un.push(Et),this.compileAndRun(Jt,un)}conv2d(at,gt,vt){if(vt.filterHeight===1&&vt.filterWidth===1&&vt.dilationHeight===1&&vt.dilationWidth===1&&vt.strideHeight===1&&vt.strideWidth===1&&(vt.padInfo.type==="SAME"||vt.padInfo.type==="VALID"))return this.conv2dByMatMul(at,gt,vt);if(Object(c.jb)().getBool("WEBGL_CONV_IM2COL")&&at.shape[0]===1)return this.conv2dWithIm2Row(at,gt,vt);const Nt=new zn(vt);return this.compileAndRun(Nt,[at,gt])}conv2dDerInput(at,gt,vt){const Nt=new Vo(vt);return this.compileAndRun(Nt,[at,gt])}conv2dDerFilter(at,gt,vt){const Nt=new ho(vt);return this.compileAndRun(Nt,[at,gt])}fusedDepthwiseConv2D({input:at,filter:gt,convInfo:vt,bias:Nt,activation:It,preluActivationWeights:Et}){const Lt=Object(c.jb)().getBool("WEBGL_PACK_DEPTHWISECONV")&&vt.strideWidth<=2&&vt.outChannels/vt.inChannels==1,Vt=It?na(It,Lt):null,Ht=[at,gt],Jt=Nt!=null,un=Et!=null;let on;return Jt&&Ht.push(Nt),un&&Ht.push(Et),Lt?(on=new jo(vt,Jt,Vt,un),this.compileAndRun(on,Ht)):(on=new Vs(vt,Jt,Vt,un),this.compileAndRun(on,Ht))}depthwiseConv2D(at,gt,vt){let Nt;return Object(c.jb)().getBool("WEBGL_PACK_DEPTHWISECONV")&&vt.strideWidth<=2&&vt.outChannels/vt.inChannels==1?(Nt=new jo(vt),this.compileAndRun(Nt,[at,gt])):(Nt=new Vs(vt),this.compileAndRun(Nt,[at,gt]))}depthwiseConv2DDerInput(at,gt,vt){const Nt=new $o(vt);return this.compileAndRun(Nt,[at,gt])}depthwiseConv2DDerFilter(at,gt,vt){const Nt=new zs(vt);return this.compileAndRun(Nt,[at,gt])}conv3d(at,gt,vt){const Nt=new Bo(vt);return this.compileAndRun(Nt,[at,gt])}conv3dDerInput(at,gt,vt){const Nt=new Or(vt);return this.compileAndRun(Nt,[at,gt])}conv3dDerFilter(at,gt,vt){const Nt=new yr(vt);return this.compileAndRun(Nt,[at,gt])}unstack(at,gt){const vt=at.shape[gt],Nt=new Array(at.rank-1);let It=0;for(let Ht=0;Ht<at.rank;Ht++)Ht!==gt&&(Nt[It++]=at.shape[Ht]);const Et=new Array(at.rank).fill(0),Lt=at.shape.slice();Lt[gt]=1;const Vt=new Array(vt);for(let Ht=0;Ht<Vt.length;Ht++)Et[gt]=Ht,Vt[Ht]=this.slice(at,Et,Lt).reshape(Nt);return Vt}avgPool3d(at,gt){const vt=new Oo(gt,"avg",!1);return this.compileAndRun(vt,[at],"float32")}avgPool3dBackprop(at,gt,vt){const Nt=new zo(vt);return this.compileAndRun(Nt,[at],gt.dtype)}maxPool3d(at,gt){const vt=new Oo(gt,"max",!1);return this.compileAndRun(vt,[at],"float32")}maxPool3dBackprop(at,gt,vt,Nt){const It=new Oo(Nt,"max",!0),Et=this.compileAndRun(It,[gt]),Lt=new Yo(Nt),Vt=this.compileAndRun(Lt,[at,Et],gt.dtype);return Et.dispose(),Vt}resizeBilinear(at,gt,vt,Nt){const It=Object(c.jb)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new _l(at.shape,gt,vt,Nt):new $l(at.shape,gt,vt,Nt);return this.compileAndRun(It,[at],"float32")}resizeBilinearBackprop(at,gt,vt){const Nt=new Su(at,gt,vt);return this.compileAndRun(Nt,[at])}resizeNearestNeighbor(at,gt,vt,Nt){const It=new mo(at.shape,gt,vt,Nt);return this.compileAndRun(It,[at])}resizeNearestNeighborBackprop(at,gt,vt){const Nt=new fo(at,gt,vt);return this.compileAndRun(Nt,[at])}multinomial(at,gt,vt,Nt){const It=gt?at:Object(c.Bb)(at),Et=It.shape[0],Lt=It.shape[1],Vt=new ru(Et,Lt,vt),Ht=Vt.getCustomSetupFunc(Nt);return this.compileAndRun(Vt,[It],"int32",Ht)}oneHot(at,gt,vt,Nt){const It=new Sl(at.size,gt,vt,Nt);return this.compileAndRun(It,[at])}diag(at){const gt=new cr(at.size);return this.compileAndRun(gt,[at])}cropAndResize(at,gt,vt,Nt,It,Et){const Lt=new eu(at.shape,gt.shape,Nt,It,Et);return this.compileAndRun(Lt,[at,gt,vt],"float32")}depthToSpace(at,gt,vt){c.Lb.assert(gt>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+gt);const Nt=at.shape[0],It=vt==="NHWC"?at.shape[1]:at.shape[2],Et=vt==="NHWC"?at.shape[2]:at.shape[3],Lt=vt==="NHWC"?at.shape[3]:at.shape[1],Vt=It*gt,Ht=Et*gt,Jt=Lt/(gt*gt),un=new _o(vt==="NHWC"?[Nt,Vt,Ht,Jt]:[Nt,Jt,Vt,Ht],gt,vt);return this.compileAndRun(un,[at])}split(at,gt,vt){return Il(at,gt,vt)}scatterND(at,gt,vt){const{sliceRank:Nt,numUpdates:It,sliceSize:Et,strides:Lt,outputSize:Vt}=c.X.calculateShapes(gt,at,vt),Ht=[Vt/Et,Et],Jt=at.reshape([It,Nt]),un=gt.reshape([It,Et]);if(Vt===0)return c.X.reshapeTensor(Object(c.Gb)([]),vt);const on=Object(c.yb)(0),mn=new ro(It,Nt,Jt.rank,un.rank,Lt,Ht);return this.compileAndRun(mn,[un,Jt,on]).reshape(vt)}sparseToDense(at,gt,vt,Nt){const{sliceRank:It,numUpdates:Et,strides:Lt,outputSize:Vt}=c.X.calculateShapes(gt,at,vt),Ht=new ro(Et,It,at.rank,gt.rank,Lt,[Vt,1],!1);return this.compileAndRun(Ht,[gt,at,Nt]).reshape(vt)}gatherND(at,gt){const vt=gt.shape,Nt=vt[vt.length-1],[It,Et,Lt,Vt]=c.X.prepareAndValidate(at,gt),Ht=gt.reshape([Et,Nt]),Jt=at.reshape([at.size/Lt,Lt]),un=new Qs(Nt,Vt,[Et,Lt]);return this.compileAndRun(un,[Jt,Ht]).reshape(It)}fill(at,gt,vt){if((vt=vt||c.Lb.inferDtype(gt))==="string"){const Nt=c.Lb.getArrayFromDType(vt,c.Lb.sizeFromShape(at));return Nt.fill(gt),Object(c.ib)().makeTensor(Nt,at,vt,this)}{const Nt=new Io(at,gt),It=Nt.getCustomSetupFunc(gt);return this.compileAndRun(Nt,[],vt,It)}}onesLike(at){if(at.dtype==="string")throw new Error("onesLike is not supported under string dtype");return this.fill(at.shape,1,at.dtype)}zerosLike(at){return this.fill(at.shape,at.dtype==="string"?"":0,at.dtype)}linspace(at,gt,vt){return c.X.linspaceImpl(at,gt,vt)}makeTensorInfo(at,gt,vt){const Nt=this.write(vt,at,gt);return this.texData.get(Nt).usage=null,{dataId:Nt,shape:at,dtype:gt}}makeOutput(at,gt,vt){const{dataId:Nt}=this.makeTensorInfo(at,gt,vt);return Object(c.ib)().makeTensorFromDataId(Nt,at,gt,this)}unpackTensor(at){const gt=new _u(at.shape);return this.runWebGLProgram(gt,[at],at.dtype)}packTensor(at){const gt=new Cl(at.shape);return this.runWebGLProgram(gt,[at],at.dtype,null,!0)}packedReshape(at,gt){const vt=[Ot(at.shape),...kt(at.shape)],Nt={dtype:at.dtype,shape:vt,dataId:at.dataId},It=[Ot(gt),...kt(gt)],Et=new wu(It,vt),Lt=this.runWebGLProgram(Et,[Nt],at.dtype,null,!0);return{dataId:Lt.dataId,shape:gt,dtype:Lt.dtype}}decode(at){const gt=this.texData.get(at),{isPacked:vt,shape:Nt,dtype:It}=gt,Et=Rt(Nt);let Lt;return Lt=vt?new _s(Et):new Xs(Et),{dtype:It,shape:Nt,dataId:this.runWebGLProgram(Lt,[{shape:Et,dtype:It,dataId:at}],It,null,!0).dataId}}runWebGLProgram(at,gt,vt,Nt,It=!1){const Et=this.makeTensorInfo(at.outputShape,vt),Lt=this.texData.get(Et.dataId);if(at.packedOutput&&(Lt.isPacked=!0),at.outPackingScheme===$.DENSE){const fn=rt(at.outputShape);Lt.texShape=fn.map(yn=>2*yn)}if(at.outTexUsage!=null&&(Lt.usage=at.outTexUsage),c.Lb.sizeFromShape(Et.shape)===0)return Lt.values=c.Lb.getTypedArrayFromDType(Et.dtype,0),Et;const Vt=[],Ht=gt.map(fn=>{if(fn.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let yn=this.texData.get(fn.dataId);if(yn.texture==null){if(!at.packedInputs&&c.Lb.sizeFromShape(fn.shape)<=Object(c.jb)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:fn.shape,texData:null,isUniform:!0,uniformValues:yn.values};at.packedInputs&&(yn.isPacked=!0,yn.shape=fn.shape)}else if(!!yn.isPacked!=!!at.packedInputs)fn=yn.isPacked?this.unpackTensor(fn):this.packTensor(fn),Vt.push(fn),yn=this.texData.get(fn.dataId);else if(yn.isPacked&&!Gt(yn.shape,fn.shape)){const In=fn,Ln=fn.shape;fn.shape=yn.shape,fn=this.packedReshape(fn,Ln),Vt.push(fn),yn=this.texData.get(fn.dataId),In.shape=Ln}return this.uploadToGPU(fn.dataId),{shape:fn.shape,texData:yn,isUniform:!1}});this.uploadToGPU(Et.dataId);const Jt={shape:Et.shape,texData:Lt,isUniform:!1},un=function(fn,yn,In){let Ln="";yn.concat(In).forEach(En=>{const _n=En.texData!=null&&En.texData.slice!=null&&En.texData.slice.flatOffset>0,Kn=En.isUniform?"uniform":En.texData.texShape;Ln+=`${En.shape}_${Kn}_${_n}`});const Vn=fn.userCode;let Sn=fn.constructor.name;return Sn+="_"+Ln+"_"+Vn,Sn}(at,Ht,Jt),on=this.getAndSaveBinary(un,()=>function(fn,yn,In,Ln){const Vn=yn.userCode,Sn=In.map((fr,xr)=>{const Mr={logicalShape:fr.shape,texShape:fr.isUniform?null:fr.texData.texShape,isUniform:fr.isUniform,isPacked:!fr.isUniform&&fr.texData.isPacked,flatOffset:null};return fr.texData!=null&&fr.texData.slice!=null&&fr.texData.slice.flatOffset>0&&(Mr.flatOffset=fr.texData.slice.flatOffset),{name:yn.variableNames[xr],shapeInfo:Mr}}),En=Sn.map(fr=>fr.shapeInfo),_n={logicalShape:Ln.shape,texShape:Ln.texData.texShape,isUniform:!1,isPacked:Ln.texData.isPacked,flatOffset:null},Kn=rn(Sn,_n,Vn,yn.packedInputs),Xn=fn.createProgram(Kn);let ur=null;const br=fn.getUniformLocation(Xn,"NAN",!1);Object(c.jb)().getNumber("WEBGL_VERSION")===1&&(ur=fn.getUniformLocation(Xn,"INFINITY",!1));const vr={};for(let fr=0;fr<yn.variableNames.length;fr++){const xr=yn.variableNames[fr],Mr=!1;vr[xr]=fn.getUniformLocation(Xn,xr,Mr),vr["offset"+xr]=fn.getUniformLocation(Xn,"offset"+xr,Mr)}return{program:yn,source:Kn,webGLProgram:Xn,uniformLocations:vr,inShapeInfos:En,outShapeInfo:_n,infLoc:ur,nanLoc:br}}(this.gpgpu,at,Ht,Jt)),mn=this.activeTimers!=null;let gn;if(mn&&(gn=this.startTimer()),function(fn,yn,In,Ln,Vn){Ko(yn.inShapeInfos,In),Ko([yn.outShapeInfo],[Ln]);const Sn=Ln.texData.texture,En=Ln.texData.texShape;Ln.texData.isPacked?fn.setOutputPackedMatrixTexture(Sn,En[0],En[1]):fn.setOutputMatrixTexture(Sn,En[0],En[1]),fn.setProgram(yn.webGLProgram),Object(c.jb)().getNumber("WEBGL_VERSION")===1&&yn.infLoc!==null&&fn.gl.uniform1f(yn.infLoc,1/0),yn.nanLoc!==null&&fn.gl.uniform1f(yn.nanLoc,NaN),In.forEach((_n,Kn)=>{const Xn=yn.program.variableNames[Kn],ur=yn.uniformLocations[Xn],br=yn.uniformLocations["offset"+Xn];if(ur!=null)if(_n.isUniform)if(c.Lb.sizeFromShape(_n.shape)<2)fn.gl.uniform1f(ur,_n.uniformValues[0]);else{let vr=_n.uniformValues;vr instanceof Float32Array||(vr=new Float32Array(vr)),fn.gl.uniform1fv(ur,vr)}else _n.texData.slice!=null&&br!=null&&fn.gl.uniform1i(br,_n.texData.slice.flatOffset),fn.setInputMatrixTexture(_n.texData.texture,ur,Kn)}),Vn!=null&&Vn(fn,yn.webGLProgram),fn.executeProgram()}(this.gpgpu,on,Ht,Jt,Nt),Vt.forEach(fn=>this.disposeIntermediateTensorInfo(fn)),mn&&(gn=this.endTimer(gn),this.activeTimers.push({name:at.constructor.name,query:this.getQueryTime(gn)})),!Object(c.jb)().getBool("WEBGL_LAZILY_UNPACK")&&Lt.isPacked&&It===!1){const fn=this.unpackTensor(Et);return this.disposeIntermediateTensorInfo(Et),fn}return Et}compileAndRun(at,gt,vt,Nt,It=!1){vt=vt||gt[0].dtype;const Et=this.runWebGLProgram(at,gt,vt,Nt,It);return Object(c.ib)().makeTensorFromDataId(Et.dataId,Et.shape,Et.dtype)}getAndSaveBinary(at,gt){return at in this.binaryCache||(this.binaryCache[at]=gt()),this.binaryCache[at]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Object(c.jb)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(at=>{this.gpgpu.deleteProgram(this.binaryCache[at].webGLProgram),delete this.binaryCache[at]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Object(c.Hb)(()=>{if(!Object(c.jb)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const at=Object(c.jb)().getBool("DEBUG");Object(c.jb)().set("DEBUG",!1);const gt=this.abs(Object(c.yb)(1e-8)).dataSync()[0];if(Object(c.jb)().set("DEBUG",at),gt>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}uploadToGPU(at){const gt=this.texData.get(at),{shape:vt,dtype:Nt,values:It,texture:Et,usage:Lt,isPacked:Vt}=gt;if(Et!=null)return;const Ht=this.activeTimers!=null;let Jt;Ht&&(Jt=c.Lb.now());let un=gt.texShape;if(un==null&&(un=function(on,mn=!1){let gn=Object(c.jb)().getNumber("WEBGL_MAX_TEXTURE_SIZE");mn&&(gn*=2,(on=on.map((yn,In)=>In>=on.length-2?c.Lb.nearestLargerEven(on[In]):on[In])).length===1&&(on=[2,on[0]])),on.length!==2&&(on=c.Lb.squeezeShape(on).newShape);let fn=c.Lb.sizeFromShape(on);if(on.length<=1&&fn<=gn)return[1,fn];if(on.length===2&&on[0]<=gn&&on[1]<=gn)return on;if(on.length===3&&on[0]*on[1]<=gn&&on[2]<=gn)return[on[0]*on[1],on[2]];if(on.length===3&&on[0]<=gn&&on[1]*on[2]<=gn)return[on[0],on[1]*on[2]];if(on.length===4&&on[0]*on[1]*on[2]<=gn&&on[3]<=gn)return[on[0]*on[1]*on[2],on[3]];if(on.length===4&&on[0]<=gn&&on[1]*on[2]*on[3]<=gn)return[on[0],on[1]*on[2]*on[3]];if(mn){const yn=Ot(on);let In=2,Ln=2;return on.length&&([In,Ln]=kt(on)),fn=yn*(In/2)*(Ln/2),c.Lb.sizeToSquarishShape(fn).map(Vn=>2*Vn)}return c.Lb.sizeToSquarishShape(fn)}(vt,Vt),gt.texShape=un),It!=null){const on=Rt(vt);let mn,gn=un[1],fn=un[0];const yn=It instanceof Uint8Array;Vt?([gn,fn]=tt(un[0],un[1]),mn=new Ys(on,[fn,gn],yn)):mn=new Wo(on,[fn,gn],yn);const In=this.makeTensorInfo([fn,gn],Nt);this.texData.get(In.dataId).usage=yn?_.PIXELS:_.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(In.dataId),gn,fn,It);const Ln=!0,Vn=this.runWebGLProgram(mn,[In],Nt,null,Ln),Sn=this.texData.get(Vn.dataId);gt.texture=Sn.texture,gt.texShape=Sn.texShape,gt.isPacked=Sn.isPacked,gt.usage=Sn.usage,this.disposeIntermediateTensorInfo(In),this.texData.delete(Vn.dataId),gt.values=null,Ht&&(this.uploadWaitMs+=c.Lb.now()-Jt)}else{const on=this.acquireTexture(un,Lt,Nt,Vt);gt.texture=on}}convertAndCacheOnCPU(at,gt){const vt=this.texData.get(at),{dtype:Nt}=vt;return this.releaseGPUData(at),gt!=null&&(vt.values=function(It,Et){if(Et==="float32"||Et==="complex64")return It;if(Et==="int32"||Et==="bool"){const Lt=Et==="int32"?new Int32Array(It.length):new Uint8Array(It.length);for(let Vt=0;Vt<Lt.length;++Vt)Lt[Vt]=Math.round(It[Vt]);return Lt}throw new Error("Unknown dtype "+Et)}(gt,Nt)),vt.values}acquireTexture(at,gt,vt,Nt){if(this.numBytesInGPU+=this.computeBytes(at,vt),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const It=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${It} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(at,gt,Nt)}computeBytes(at,gt){return at[0]*at[1]*c.Lb.bytesPerElement(gt)}tryRunOnCpuOrThrow(at,gt){if(this.shouldExecuteOnCPU(at))try{return gt()}catch{if(Object(c.jb)().getBool("IS_TEST"))throw new Error("CPU forwarding failed")}return null}}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */c.fb.isBrowser()&&Object(c.vb)("webgl",()=>new Al,2);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function js(Ft){const{inputs:at,backend:gt}=Ft,{x:vt}=at;return gt.incRef(vt.dataId),{dataId:vt.dataId,shape:vt.shape,dtype:vt.dtype}}const El={kernelName:c.u,backendName:"webgl",kernelFunc:js};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Js(Ft){const{inputs:at,backend:gt}=Ft,{real:vt,imag:Nt}=at,It=gt.makeTensorInfo(vt.shape,"complex64"),Et=gt.texData.get(It.dataId),Lt=js({inputs:{x:vt},backend:gt});gt.texData.get(Lt.dataId).complexParentRefCount++;const Vt=js({inputs:{x:Nt},backend:gt});return gt.texData.get(Vt.dataId).complexParentRefCount++,Et.complexTensorInfos={real:Lt,imag:Vt},It}const Ol={kernelName:c.h,backendName:"webgl",kernelFunc:Js};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ga(Ft){return({inputs:at,backend:gt})=>{const{x:vt}=at,Nt=gt,It=new mr(vt.shape,Ft);return Nt.runWebGLProgram(It,[vt],vt.dtype)}}function xo({opSnippet:Ft,packedOpSnippet:at,checkOutOfBounds:gt=!1,supportsComplex:vt=!1,cpuKernelImpl:Nt,dtype:It}){return({inputs:Et,backend:Lt})=>{const{a:Vt,b:Ht}=Et,Jt=Lt;if(vt&&Vt.dtype==="complex64"){const mn=Jt.texData.get(Vt.dataId),gn=Jt.texData.get(Ht.dataId),[fn,yn]=[[mn.complexTensorInfos.real,gn.complexTensorInfos.real],[mn.complexTensorInfos.imag,gn.complexTensorInfos.imag]].map(Ln=>{const[Vn,Sn]=Ln,En={dataId:Vn.dataId,dtype:Vn.dtype,shape:Vt.shape},_n={dataId:Sn.dataId,dtype:Sn.dtype,shape:Ht.shape},Kn=new Wr(Ft,Vt.shape,Ht.shape);return Jt.runWebGLProgram(Kn,[En,_n],Object(c.Kb)(Vn.dtype,Sn.dtype))}),In=Js({inputs:{real:fn,imag:yn},backend:Jt});return Jt.disposeIntermediateTensorInfo(fn),Jt.disposeIntermediateTensorInfo(yn),In}const un=It||Object(c.Kb)(Vt.dtype,Ht.dtype);if(Jt.shouldExecuteOnCPU([Vt,Ht])&&Nt!=null){const mn=Jt.texData.get(Vt.dataId),gn=Jt.texData.get(Ht.dataId),[fn,yn]=Nt(Vt.shape,Ht.shape,mn.values,gn.values,un),In=Jt.makeTensorInfo(yn,un);return Jt.texData.get(In.dataId).values=fn,In}let on;return on=Object(c.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&at!=null?new hs(at,Vt.shape,Ht.shape,gt):new Wr(Ft,Vt.shape,Ht.shape),Jt.runWebGLProgram(on,[Vt,Ht],un)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eu="return a + b;",Dl=xo({opSnippet:Eu,packedOpSnippet:Eu,supportsComplex:!0,cpuKernelImpl:ls}),Rl={kernelName:c.b,backendName:"webgl",kernelFunc:Dl},Pl=xo({opSnippet:`
  if (isnan(a)) return a;
  if (isnan(b)) return b;

  return atan(a, b);
`,packedOpSnippet:`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`}),Fl={kernelName:c.c,backendName:"webgl",kernelFunc:Pl},Ou={kernelName:c.d,backendName:"webgl",kernelFunc:function(Ft){const{inputs:at,backend:gt,attrs:vt}=Ft,{x:Nt}=at;ln(Nt,"avgPool");const{filterSize:It,strides:Et,pad:Lt,dimRoundingMode:Vt}=vt;c.Lb.assert(c.X.eitherStridesOrDilationsAreOne(Et,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${Et} and dilations '1'`);const Ht=c.X.computePool2DInfo(Nt.shape,It,Et,1,Lt,Vt);if(Ht.filterWidth===1&&Ht.filterHeight===1&&c.Lb.arraysEqual(Ht.inShape,Ht.outShape))return js({inputs:{x:Nt},backend:gt});const Jt=new Eo(Ht,"avg",!1);return gt.runWebGLProgram(Jt,[Nt],"float32")}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ml={kernelName:c.e,backendName:"webgl",kernelFunc:function(Ft){const{inputs:at,backend:gt,attrs:vt}=Ft,{dy:Nt,input:It}=at,Et=It;ln([Nt,It],"avgPoolBackprop");const{filterSize:Lt,strides:Vt,pad:Ht}=vt,Jt=c.X.computePool2DInfo(Et.shape,Lt,Vt,1,Ht),un=new Lo(Jt);return gt.runWebGLProgram(un,[Nt],Et.dtype)}};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ll{constructor(at,gt,vt,Nt,It,Et){this.outputShape=[],this.variableNames=["x","mean","variance"],c.X.assertAndGetBroadcastShape(at,gt),c.X.assertAndGetBroadcastShape(at,vt);let Lt="0.0";Nt!=null&&(c.X.assertAndGetBroadcastShape(at,Nt),this.variableNames.push("offset"),Lt="getOffsetAtOutCoords()");let Vt="1.0";It!=null&&(c.X.assertAndGetBroadcastShape(at,It),this.variableNames.push("scale"),Vt="getScaleAtOutCoords()"),this.outputShape=at,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${Lt};
        float scale = ${Vt};
        float inv = scale * inversesqrt(variance + float(${Et}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Du{constructor(at,gt,vt,Nt,It,Et){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],c.X.assertAndGetBroadcastShape(at,gt),c.X.assertAndGetBroadcastShape(at,vt);let Lt="vec4(0.0)";Nt!=null&&(c.X.assertAndGetBroadcastShape(at,Nt),this.variableNames.push("offset"),Lt="getOffsetAtOutCoords()");let Vt="vec4(1.0)";It!=null&&(c.X.assertAndGetBroadcastShape(at,It),this.variableNames.push("scale"),Vt="getScaleAtOutCoords()"),this.outputShape=at,this.userCode=`
      void main() {
        vec4 offset = ${Lt};
        vec4 scale = ${Vt};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${Et}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ru={kernelName:c.s,backendName:"webgl",kernelFunc:({inputs:Ft,backend:at,attrs:gt})=>{const{x:vt,mean:Nt,variance:It,offset:Et,scale:Lt}=Ft;c.Lb.assert(Nt.shape.length===It.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),c.Lb.assert(Et==null||Nt.shape.length===Et.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),c.Lb.assert(Lt==null||Nt.shape.length===Lt.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:Vt}=gt;Vt==null&&(Vt=.001);const Ht=[vt,Nt,It];let Jt=null;Et!=null&&(Jt=Et.shape,Ht.push(Et));let un=null;Lt!=null&&(un=Lt.shape,Ht.push(Lt));const on=Object(c.jb)().getBool("WEBGL_PACK_NORMALIZATION")?new Du(vt.shape,Nt.shape,It.shape,Jt,un,Vt):new Ll(vt.shape,Nt.shape,It.shape,Jt,un,Vt);return at.runWebGLProgram(on,Ht,Ht[0].dtype)}},Pu=xo({opSnippet:"return float(a != b);",dtype:"bool"}),zl={kernelName:c.I,backendName:"webgl",kernelFunc:Pu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cu(Ft){const{inputs:at,backend:gt}=Ft,{input:vt}=at;return js({inputs:{x:gt.texData.get(vt.dataId).complexTensorInfos.real},backend:gt})}const Vl={kernelName:c.J,backendName:"webgl",kernelFunc:cu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bl={kernelName:c.f,backendName:"webgl",kernelFunc:function Ft(at){const{inputs:gt,backend:vt,attrs:Nt}=at,{x:It}=gt,{dtype:Et}=Nt;if(Et==="complex64"){if(It.dtype==="complex64")return js({inputs:{x:It},backend:vt});const Lt=c.Nb(It.shape),Vt=Ft({inputs:{x:It},backend:vt,attrs:{dtype:"float32"}}),Ht=Js({inputs:{real:Vt,imag:Lt},backend:vt});return Lt.dispose(),vt.disposeIntermediateTensorInfo(Vt),Ht}if(It.dtype==="complex64"){const Lt=cu({inputs:{input:It},backend:vt}),Vt=Ft({inputs:{x:Lt},backend:vt,attrs:{dtype:Et}});return vt.disposeIntermediateTensorInfo(Lt),Vt}if(!c.Lb.hasEncodingLoss(It.dtype,Et)){const Lt=js({inputs:{x:It},backend:vt});return{dataId:Lt.dataId,shape:Lt.shape,dtype:Et}}if(Et==="int32")return function(Lt,Vt){const Ht=new mr(Lt.shape,"return float(int(x));"),Jt=Vt.runWebGLProgram(Ht,[Lt],"int32");return{dataId:Jt.dataId,shape:Jt.shape,dtype:Jt.dtype}}(It,vt);if(Et==="bool"){const Lt=vt.makeTensorInfo([],"bool",c.Lb.getTypedArrayFromDType("bool",1)),Vt=Pu({inputs:{a:It,b:Lt},backend:vt});return vt.disposeIntermediateTensorInfo(Lt),Vt}throw new Error(`Error in Cast: failed to cast ${It.dtype} to ${Et}`)}};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ul{constructor(at){this.outputShape=[],this.outputShape=c.X.computeOutShape(at,1),this.variableNames=at.map((Et,Lt)=>"T"+Lt);const gt=new Array(at.length-1);gt[0]=at[0][1];for(let Et=1;Et<gt.length;Et++)gt[Et]=gt[Et-1]+at[Et][1];const vt=[`if (yC < ${gt[0]}) setOutput(getT0(yR, yC));`];for(let Et=1;Et<gt.length;Et++){const Lt=gt[Et-1];vt.push(`else if (yC < ${gt[Et]}) setOutput(getT${Et}(yR, yC-${Lt}));`)}const Nt=gt.length,It=gt[gt.length-1];vt.push(`else setOutput(getT${Nt}(yR, yC-${It}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${vt.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gl{constructor(at,gt){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=c.X.computeOutShape(at,gt);const vt=this.outputShape,Nt=vt.length,It=Hn(Nt),Et=Jn("coords",Nt),Lt=["x","y","z","w","u","v"].slice(0,Nt);this.variableNames=at.map((fn,yn)=>"T"+yn);const Vt=new Array(at.length-1);Vt[0]=at[0][gt];for(let fn=1;fn<Vt.length;fn++)Vt[fn]=Vt[fn-1]+at[fn][gt];const Ht=Lt[gt],Jt=Lt.slice(-2),un=Lt.join();let on=`if (${Ht} < ${Vt[0]}) {
        return getChannel(
            getT0(${un}), vec2(${Jt.join()}));
        }`;for(let fn=1;fn<Vt.length;fn++){const yn=Vt[fn-1];on+=`
        if (${Ht} < ${Vt[fn]}  && ${Ht} >= ${Vt[fn-1]}) {
          return getChannel(
            getT${fn}(${ba(Lt,Ht,yn)}),
            vec2(${ba(Jt,Ht,yn)}));
        }`}const mn=Vt.length,gn=Vt[Vt.length-1];on+=`
        return getChannel(
          getT${mn}(${ba(Lt,Ht,gn)}),
          vec2(${ba(Jt,Ht,gn)}));`,this.userCode=`
      float getValue(${Lt.map(fn=>"int "+fn)}) {
        ${on}
      }

      void main() {
        ${It} coords = getOutputCoords();
        vec4 result = vec4(getValue(${Et}), 0., 0., 0.);

        ${Et[Nt-1]} = ${Et[Nt-1]} + 1;
        if (${Et[Nt-1]} < ${vt[Nt-1]}) {
          result.g = getValue(${Et});
        }

        ${Et[Nt-2]} = ${Et[Nt-2]} + 1;
        if (${Et[Nt-2]} < ${vt[Nt-2]}) {
          result.a = getValue(${Et});
        }

        ${Et[Nt-1]} = ${Et[Nt-1]} - 1;
        if (${Et[Nt-2]} < ${vt[Nt-2]} &&
            ${Et[Nt-1]} < ${vt[Nt-1]}) {
          result.b = getValue(${Et});
        }
        setOutput(result);
      }
    `}}function ba(Ft,at,gt){const vt=Ft.indexOf(at);return Ft.map((Nt,It)=>It===vt?`${Nt} - ${gt}`:Nt).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fu(Ft){const{inputs:at,backend:gt}=Ft,{input:vt}=at;return js({inputs:{x:gt.texData.get(vt.dataId).complexTensorInfos.imag},backend:gt})}const Wl={kernelName:c.v,backendName:"webgl",kernelFunc:Fu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Us(Ft){const{inputs:at,backend:gt,attrs:vt}=Ft,{x:Nt}=at,{shape:It}=vt,Et=gt,Lt=c.Lb.sizeFromShape(Nt.shape),Vt=c.Lb.inferFromImplicitShape(It,Lt),Ht=c.Lb.sizeFromShape(Vt);c.Lb.assert(Lt===Ht,()=>`The new shape (${Vt}) has ${Ht} elements and the old shape (${Nt.shape}) has ${Lt} elements. The new shape and old shape must have the same number of elements.`);const Jt=Et.texData.get(Nt.dataId);return!Jt.isPacked||Gt(Nt.shape,Vt)||Jt.texture!==null&&Gt(Jt.shape,Vt)?(Et.incRef(Nt.dataId),{dataId:Nt.dataId,shape:Vt,dtype:Nt.dtype}):function(un,on,mn){const gn=[Ot(un.shape),...kt(un.shape)],fn={dtype:un.dtype,shape:gn,dataId:un.dataId},yn=[Ot(on),...kt(on)],In=new wu(yn,gn),Ln=mn.runWebGLProgram(In,[fn],un.dtype,null,!0);return{dataId:Ln.dataId,shape:on,dtype:Ln.dtype}}(Nt,Vt,Et)}const Hl={kernelName:c.K,backendName:"webgl",kernelFunc:Us};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kl={kernelName:c.i,backendName:"webgl",kernelFunc:function(Ft){const{inputs:at,backend:gt,attrs:vt}=Ft,{axis:Nt}=vt,It=c.Lb.parseAxisParam(Nt,at[0].shape)[0],Et=c.X.computeOutShape(at.map(Ht=>Ht.shape),It);if(c.Lb.sizeFromShape(Et)===0)return gt.makeTensorInfo(Et,at[0].dtype,[]);const Lt=at.filter(Ht=>c.Lb.sizeFromShape(Ht.shape)>0);if(Lt.length===1)return Lt[0];const Vt=Lt.map(Ht=>Ht.shape);return c.X.assertParamsConsistent(Vt,It),function Ht(Jt,un,on){const mn=Jt[0].dtype;if(mn==="complex64"){const Vn=Jt.map(Xn=>cu({inputs:{input:Xn},backend:on})),Sn=Jt.map(Xn=>Fu({inputs:{input:Xn},backend:on})),En=Ht(Vn,un,on),_n=Ht(Sn,un,on),Kn=Js({inputs:{real:En,imag:_n},backend:on});return Vn.forEach(Xn=>on.disposeIntermediateTensorInfo(Xn)),Sn.forEach(Xn=>on.disposeIntermediateTensorInfo(Xn)),on.disposeIntermediateTensorInfo(En),on.disposeIntermediateTensorInfo(_n),Kn}if(Jt.length>Object(c.jb)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const Vn=Math.floor(Jt.length/2),Sn=Ht(Jt.slice(0,Vn),un,on),En=Ht(Jt.slice(Vn),un,on),_n=Ht([Sn,En],un,on);return on.disposeIntermediateTensorInfo(Sn),on.disposeIntermediateTensorInfo(En),_n}if(Object(c.jb)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&Jt[0].shape.length>1){const Vn=new Gl(Jt.map(Sn=>Sn.shape),un);return on.runWebGLProgram(Vn,Jt,mn)}const gn=c.X.computeOutShape(Jt.map(Vn=>Vn.shape),un),fn=Jt.map(Vn=>Us({inputs:{x:Vn},attrs:{shape:[-1,c.Lb.sizeFromShape(Vn.shape.slice(un))]},backend:on})),yn=new Ul(fn.map(Vn=>Vn.shape)),In=on.runWebGLProgram(yn,fn,mn);fn.forEach(Vn=>on.disposeIntermediateTensorInfo(Vn));const Ln=Us({inputs:{x:In},attrs:{shape:gn},backend:on});return on.disposeIntermediateTensorInfo(In),Ln}(Lt,It,gt)}},Xl=ga(`if (isnan(x)) return x;
  return cos(x);
`),Yl={kernelName:c.j,backendName:"webgl",kernelFunc:Xl},Ql=xo({opSnippet:`
if (a == b) {
  return 1.0;
};
return a / b;`,packedOpSnippet:`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,checkOutOfBounds:!0}),Zl={kernelName:c.l,backendName:"webgl",kernelFunc:Ql};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mu{constructor(at,gt,vt){this.variableNames=["real","imag"];const Nt=gt[1];this.outputShape=gt;const It=vt?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,Et=vt?Nt+".0":"1.0";let Lt;if(at==="real")Lt="return real * expR - imag * expI;";else{if(at!=="imag")throw new Error(`FFT component must be either "real" or "imag", got ${at}.`);Lt="return real * expI + imag * expR;"}this.userCode=`
      const float exponentMultiplier = ${It};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${Lt}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${Nt});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${Nt}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${Et};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hu(Ft,at,gt){const vt=gt.texData.get(Ft.dataId),Nt=c.Lb.sizeFromShape(Ft.shape),It=Ft.shape[Ft.shape.length-1],Et=Us({inputs:{x:Ft},backend:gt,attrs:{shape:[Nt/It,It]}}).shape,Lt=new Mu("real",Et,at),Vt=new Mu("imag",Et,at),Ht=[{dataId:vt.complexTensorInfos.real.dataId,dtype:vt.complexTensorInfos.real.dtype,shape:Et},{dataId:vt.complexTensorInfos.imag.dataId,dtype:vt.complexTensorInfos.imag.dtype,shape:Et}],Jt=gt.runWebGLProgram(Lt,Ht,"float32"),un=gt.runWebGLProgram(Vt,Ht,"float32"),on=Js({inputs:{real:Jt,imag:un},backend:gt});gt.disposeIntermediateTensorInfo(Jt),gt.disposeIntermediateTensorInfo(un);const mn=Us({inputs:{x:on},backend:gt,attrs:{shape:Ft.shape}});return gt.disposeIntermediateTensorInfo(mn),mn}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jl={kernelName:c.o,backendName:"webgl",kernelFunc:function(Ft){const{inputs:at,backend:gt}=Ft,{input:vt}=at;return hu(vt,!1,gt)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _c{constructor(at){this.variableNames=["Image"],this.outputShape=[];const gt=at[2];this.outputShape=at,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${gt} - x;
          float outputValue;
          if(coordX >= 0 && coordX < ${gt}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _h={kernelName:c.p,backendName:"webgl",kernelFunc:({inputs:Ft,backend:at})=>{const{image:gt}=Ft,vt=at,Nt=new _c(gt.shape);return vt.runWebGLProgram(Nt,[gt],gt.dtype)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _d{constructor(at){this.variableNames=["A"];const gt=rr(),[vt,Nt]=at;this.outputShape=at,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${Nt}.0, ${vt}.0);

        vec4 values = ${gt.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ep{constructor(at){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const gt=rr(),[vt,Nt]=at;this.outputShape=at,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${Nt}.0, ${vt}.0);
            vec4 values = ${gt.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${gt.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tp={kernelName:c.r,backendName:"webgl",kernelFunc:function(Ft){const{inputs:at,backend:gt,attrs:vt}=Ft;let{pixels:Nt}=at;const{numChannels:It}=vt,Et=typeof HTMLVideoElement<"u"&&Nt instanceof HTMLVideoElement,Lt=typeof HTMLImageElement<"u"&&Nt instanceof HTMLImageElement,[Vt,Ht]=Et?[Nt.videoWidth,Nt.videoHeight]:[Nt.width,Nt.height],Jt=[Ht,Vt],un=[Ht,Vt,It];(Lt||Et)&&(wo==null&&(wo=document.createElement("canvas").getContext("2d")),wo.canvas.width=Vt,wo.canvas.height=Ht,wo.drawImage(Nt,0,0,Vt,Ht),Nt=wo.canvas);const on=gt.makeTensorInfo(Jt,"int32");gt.texData.get(on.dataId).usage=_.PIXELS,gt.gpgpu.uploadPixelDataToTexture(gt.getTexture(on.dataId),Nt);const mn=Object(c.jb)().getBool("WEBGL_PACK")?new ep(un):new _d(un),gn=gt.runWebGLProgram(mn,[on],"int32");return gt.disposeData(on.dataId),gn}};let wo;const np={kernelName:c.t,backendName:"webgl",kernelFunc:function(Ft){const{inputs:at,backend:gt}=Ft,{input:vt}=at;return hu(vt,!0,gt)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class du{constructor(at,gt){this.variableNames=["x"];const{windowSize:vt,batchSize:Nt,inSize:It,outSize:Et}=at;this.outputShape=[Nt,Et];const Lt=4*Math.floor(vt/4),Vt=vt%4;let Ht="sumValue += dot(values, ones);";if(gt!=null){const un=1/gt;Ht=`sumValue += dot(values * ${c.Lb.isInt(un)?un.toPrecision(2):un}, ones);`}let Jt="";It%vt>0&&(Jt=`
        if (inIdx < 0 || inIdx >= ${It}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${Jt}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${vt};

        float sumValue = 0.0;

        for (int i = 0; i < ${Lt}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${Ht}
        }

        int inIdx = inOffset + ${Lt};
        if (${Vt===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${Ht}
        } else if (${Vt===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${Ht}
        } else if (${Vt===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${Ht}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lu(Ft,at,gt,vt){const Nt=function(Et){const Lt=[];for(;Lt.length===0||Lt[Lt.length-1].outSize!==1;){const Vt=Lt.length?Lt[Lt.length-1].outSize:Et[1],Ht=c.X.computeOptimalWindowSize(Vt);Lt.push({inSize:Vt,windowSize:Ht,outSize:Math.ceil(Vt/Ht)})}return Lt}(Ft.shape);let It=Ft;for(let Et=0;Et<Nt.length;Et++){const{inSize:Lt,windowSize:Vt,outSize:Ht}=Nt[Et];let Jt,un;Jt=gt==="mean"?Et===0?new du({windowSize:Vt,inSize:Lt,batchSize:Ft.shape[0],outSize:Ht},Lt):new du({windowSize:Vt,inSize:Lt,batchSize:Ft.shape[0],outSize:Ht}):new xu({windowSize:Vt,inSize:Lt,batchSize:Ft.shape[0],outSize:Ht},gt),un=It,It=vt.runWebGLProgram(Jt,[It],at),un.dataId!==Ft.dataId&&vt.disposeIntermediateTensorInfo(un)}return It}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rp{constructor(at,gt){this.variableNames=["A"];const vt=new Array(at.length);for(let Et=0;Et<vt.length;Et++)vt[Et]=at[gt[Et]];this.outputShape=vt,this.rank=vt.length;const Nt=Hn(this.rank),It=function(Et){const Lt=Et.length;if(Lt>6)throw Error(`Transpose for rank ${Lt} is not yet supported`);const Vt=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],Ht=new Array(Lt);for(let Jt=0;Jt<Et.length;Jt++)Ht[Et[Jt]]=Vt[Jt];return Ht.join()}(gt);this.userCode=`
    void main() {
      ${Nt} resRC = getOutputCoords();
      setOutput(getA(${It}));
    }
    `}}class sp{constructor(at,gt){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const vt=new Array(at.length);for(let Jt=0;Jt<vt.length;Jt++)vt[Jt]=at[gt[Jt]];if(this.outputShape=vt,this.rank=vt.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const Nt=Hn(this.rank),It=Gn("rc",this.rank),Et=new Array(this.rank);for(let Jt=0;Jt<gt.length;Jt++)Et[gt[Jt]]=It[Jt];const Lt=`vec2(${Et.slice(-2).join()})`,Vt=`++${It[this.rank-1]} < ${vt[this.rank-1]}`,Ht=`getChannel(getA(${Et.join()}), ${Lt})`;this.userCode=`
    void main() {
      ${Nt} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${Ht};
      if(${Vt}) {
        result[1] = ${Ht};
      }
      --${It[this.rank-1]};
      if(++${It[this.rank-2]} < ${vt[this.rank-2]}) {
        result[2] = ${Ht};
        if(${Vt}) {
          result[3] = ${Ht};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pu(Ft,at,gt){const vt=Object(c.jb)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sp(Ft.shape,at):new rp(Ft.shape,at);return gt.runWebGLProgram(vt,[Ft],Ft.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ip={kernelName:c.y,backendName:"webgl",kernelFunc:({inputs:Ft,attrs:at,backend:gt})=>{const{x:vt}=Ft,{reductionIndices:Nt,keepDims:It}=at,Et=gt,Lt=vt.shape.length,Vt=c.Lb.parseAxisParam(Nt,vt.shape);let Ht=Vt;const Jt=c.X.getAxesPermutation(Ht,Lt),un=Jt!=null,on=Et.shouldExecuteOnCPU([vt]);let mn=vt;if(un){if(on){const Ln=Et.texData.get(mn.dataId).values,Vn=new Array(Lt);for(let En=0;En<Vn.length;En++)Vn[En]=vt.shape[Jt[En]];const Sn=xs(Ln,vt.shape,vt.dtype,Jt,Vn);mn=Et.makeTensorInfo(Vn,vt.dtype),Et.texData.get(mn.dataId).values=Sn}else mn=pu(vt,Jt,Et);Ht=c.X.getInnerMostAxes(Ht.length,Lt)}c.X.assertAxesAreInnerMostDims("max",Ht,Lt);const[gn,fn]=c.X.computeOutAndReduceShapes(mn.shape,Ht);let yn,In=gn;if(It&&(In=c.X.expandShapeToKeepDim(gn,Vt)),on){const Ln=Et.texData.get(mn.dataId).values,Vn=Pr(Ln,c.Lb.sizeFromShape(fn),In,vt.dtype);yn=Et.makeTensorInfo(In,vt.dtype),Et.texData.get(yn.dataId).values=Vn}else yn=function(Ln,Vn,Sn,En){const _n=c.Lb.sizeFromShape(Vn),Kn=Us({inputs:{x:Ln},attrs:{shape:[c.Lb.sizeFromShape(Ln.shape)/_n,_n]},backend:En}),Xn=Lu(Kn,Ln.dtype,"max",En),ur=Us({inputs:{x:Xn},attrs:{shape:Sn},backend:En});return En.disposeIntermediateTensorInfo(Kn),En.disposeIntermediateTensorInfo(Xn),ur}(mn,fn,In,Et);return un&&Et.disposeIntermediateTensorInfo(mn),yn}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ap={kernelName:c.z,backendName:"webgl",kernelFunc:function(Ft){const{inputs:at,backend:gt,attrs:vt}=Ft,{x:Nt}=at;ln(Nt,"maxPool");const{filterSize:It,strides:Et,pad:Lt,dimRoundingMode:Vt}=vt;c.Lb.assert(c.X.eitherStridesOrDilationsAreOne(Et,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${Et} and dilations '1'`);const Ht=c.X.computePool2DInfo(Nt.shape,It,Et,1,Lt,Vt);if(Ht.filterWidth===1&&Ht.filterHeight===1&&c.Lb.arraysEqual(Ht.inShape,Ht.outShape))return js({inputs:{x:Nt},backend:gt});const Jt=new Eo(Ht,"max",!1);return gt.runWebGLProgram(Jt,[Nt],Nt.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const up={kernelName:c.A,backendName:"webgl",kernelFunc:function(Ft){const{inputs:at,backend:gt,attrs:vt}=Ft,{dy:Nt,input:It,output:Et}=at,Lt=It;ln([It,Et],"maxPoolBackprop");const{filterSize:Vt,strides:Ht,pad:Jt,dimRoundingMode:un}=vt,on=c.X.computePool2DInfo(Lt.shape,Vt,Ht,1,Jt,un),mn=new Eo(on,"max",!0),gn=gt.runWebGLProgram(mn,[Lt],Lt.dtype),fn=new xl(on),yn=gt.runWebGLProgram(fn,[Nt,gn],Lt.dtype);return gt.disposeIntermediateTensorInfo(gn),yn}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lp={kernelName:c.B,backendName:"webgl",kernelFunc:({inputs:Ft,attrs:at,backend:gt})=>{const{x:vt}=Ft,{filterSize:Nt,strides:It,pad:Et,includeBatchInIndex:Lt}=at,Vt=gt;c.Lb.assert(vt.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${vt.shape.length}.`);const Ht=[1,1];c.Lb.assert(c.X.eitherStridesOrDilationsAreOne(It,Ht),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${It} and dilations '${Ht}'`);const Jt=c.X.computePool2DInfo(vt.shape,Nt,It,Ht,Et),[un,on]=function(mn,gn,fn,yn){let In=new Eo(fn,"max",!1);const Ln=yn.runWebGLProgram(In,[mn],"float32");return In=new Eo(fn,"max",!0,!0,gn),[Ln,yn.runWebGLProgram(In,[mn],"float32")]}(vt,Lt,Jt,Vt);return[un,on]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cp={kernelName:c.C,backendName:"webgl",kernelFunc:({inputs:Ft,attrs:at,backend:gt})=>{const{x:vt}=Ft,{keepDims:Nt,axis:It}=at,Et=gt,Lt=vt.shape.length,Vt=c.Lb.parseAxisParam(It,vt.shape);let Ht=Vt;const Jt=c.X.getAxesPermutation(Ht,Lt),un=Jt!=null,on=Et.shouldExecuteOnCPU([vt]),mn=[];let gn=vt;if(un){if(on){const Vn=Et.texData.get(gn.dataId).values,Sn=new Array(Lt);for(let _n=0;_n<Sn.length;_n++)Sn[_n]=vt.shape[Jt[_n]];const En=xs(Vn,vt.shape,vt.dtype,Jt,Sn);gn=Et.makeTensorInfo(Sn,vt.dtype),Et.texData.get(gn.dataId).values=En}else gn=pu(vt,Jt,Et);mn.push(gn),Ht=c.X.getInnerMostAxes(Ht.length,Lt)}c.X.assertAxesAreInnerMostDims("sum",Ht,Lt);const[fn,yn]=c.X.computeOutAndReduceShapes(gn.shape,Ht);let In=fn;Nt&&(In=c.X.expandShapeToKeepDim(fn,Vt));const Ln=function(Vn,Sn,En,_n){const Kn=c.Lb.sizeFromShape(Sn),Xn=Us({inputs:{x:Vn},attrs:{shape:[c.Lb.sizeFromShape(Vn.shape)/Kn,Kn]},backend:_n}),ur=Lu(Xn,"float32","mean",_n),br=Us({inputs:{x:ur},attrs:{shape:En},backend:_n});return _n.disposeIntermediateTensorInfo(Xn),_n.disposeIntermediateTensorInfo(ur),br}(gn,yn,In,Et);for(const Vn of mn)Et.disposeIntermediateTensorInfo(Vn);return Ln}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hp{constructor(at,gt,vt){this.variableNames=["x"],this.outputShape=gt.map((Jt,un)=>Jt[0]+at[un]+Jt[1]);const Nt=at.length,It=Hn(Nt),Et=gt.map(Jt=>Jt[0]).join(","),Lt=gt.map((Jt,un)=>Jt[0]+at[un]).join(","),Vt=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,Nt),Ht=vt==="reflect"?0:1;this.userCode=Nt!==1?`
      ${It} start = ${It}(${Et});
      ${It} end = ${It}(${Lt});

      void main() {
        ${It} outC = getOutputCoords();
        for (int i = 0; i < ${Nt}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${Ht};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${Ht};
          }
        }
        ${It} coords = outC - start;
        setOutput(getX(${Vt}));
      }
    `:`
        int start = ${Et};
        int end = ${Lt};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${Ht};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${Ht};
          }
          setOutput(getX(outC - start));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dp{constructor(at,gt,vt){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=gt.map((gn,fn)=>gn[0]+at[fn]+gn[1]);const Nt=at.length,It=Hn(Nt),Et=gt.map(gn=>gn[0]).join(","),Lt=gt.map((gn,fn)=>gn[0]+at[fn]).join(","),Vt=Jn("rc",Nt),Ht=Jn("source",Nt),Jt=`${Vt[Nt-1]} < ${this.outputShape[Nt-1]}`,un=Nt===1?"source":`vec2(${Ht.slice(-2).join()})`,on=vt==="reflect"?0:1;let mn="";if(Nt===1){const gn=`
        ${It} source = rc;
        if (source < start) {
          source = start * 2 - source - ${on};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${on};
        }
        source -= start;
      `;mn=`
        ${It} rc = outputLoc;
        ${gn}
        result[0] = getChannel(getX(${Ht.join()}), ${un});
        ${Vt[Nt-1]} += 1;
        if(${Jt}) {
          ${gn}
          result[1] = getChannel(getX(${Ht.join()}), ${un});
        }
      `}else{const gn=`
        ${It} source = rc;
        ${It} lt = ${It}(lessThan(source, start));
        ${It} gte = ${It}(greaterThanEqual(source, end));
        ${It} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${on}) +
                gte * ((end - 1) * 2 - source + ${on});
        source -= start;
      `;mn=`
        ${It} rc = outputLoc;
        ${gn}
        result[0] = getChannel(getX(${Ht.join()}), ${un});
        ${Vt[Nt-1]} += 1;
        if(${Jt}) {
          ${gn}
          result[1] = getChannel(getX(${Ht.join()}), ${un});
        }
        rc = outputLoc;
        ${Vt[Nt-2]} += 1;
        if(${Vt[Nt-2]} < ${this.outputShape[Nt-2]}) {
          ${gn}
          result[2] = getChannel(getX(${Ht.join()}), ${un});
          ${Vt[Nt-1]} += 1;
          if(${Jt}) {
            ${gn}
            result[3] = getChannel(getX(${Ht.join()}), ${un});
          }
        }
      `}this.userCode=`
      const ${It} start = ${It}(${Et});
      const ${It} end = ${It}(${Lt});

      void main() {
        ${It} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${mn}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pp={kernelName:c.D,backendName:"webgl",kernelFunc:({inputs:Ft,backend:at,attrs:gt})=>{const{x:vt}=Ft,{paddings:Nt,mode:It}=gt,Et=Object(c.jb)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new dp(vt.shape,Nt,It):new hp(vt.shape,Nt,It);return at.runWebGLProgram(Et,[vt],vt.dtype)}},fp="return areal * breal - aimag * bimag;",mp="return areal * bimag + aimag * breal;";class zu{constructor(at,gt,vt){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=c.X.assertAndGetBroadcastShape(gt,vt),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${at}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vu="return a * b;",gp={kernelName:c.E,backendName:"webgl",kernelFunc:function(Ft){const{inputs:at,backend:gt}=Ft,{a:vt,b:Nt}=at,It=c.X.upcastType(vt.dtype,Nt.dtype);if(vt.dtype==="complex64"){const Lt=gt.texData.get(vt.dataId),Vt=gt.texData.get(Nt.dataId),Ht=new zu(fp,vt.shape,Nt.shape),Jt=new zu(mp,vt.shape,Nt.shape),un=[{dataId:Lt.complexTensorInfos.real.dataId,dtype:Lt.complexTensorInfos.real.dtype,shape:vt.shape},{dataId:Lt.complexTensorInfos.imag.dataId,dtype:Lt.complexTensorInfos.imag.dtype,shape:vt.shape},{dataId:Vt.complexTensorInfos.real.dataId,dtype:Vt.complexTensorInfos.real.dtype,shape:Nt.shape},{dataId:Vt.complexTensorInfos.imag.dataId,dtype:Vt.complexTensorInfos.imag.dtype,shape:Nt.shape}],on=gt.runWebGLProgram(Ht,un,"float32"),mn=gt.runWebGLProgram(Jt,un,"float32"),gn=Js({inputs:{real:on,imag:mn},backend:gt});return gt.disposeIntermediateTensorInfo(on),gt.disposeIntermediateTensorInfo(mn),gn}if(gt.shouldExecuteOnCPU([vt,Nt])){const Lt=gt.texData.get(vt.dataId),Vt=gt.texData.get(Nt.dataId),[Ht,Jt]=Nr(vt.shape,Nt.shape,Lt.values,Vt.values,It),un=gt.makeTensorInfo(Jt,It);return gt.texData.get(un.dataId).values=Ht,un}let Et;return Et=Object(c.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hs(Vu,vt.shape,Nt.shape):new Wr(Vu,vt.shape,Nt.shape),gt.runWebGLProgram(Et,[vt,Nt],It)}},fu={kernelName:c.F,backendName:"webgl",kernelFunc:({inputs:Ft,backend:at,attrs:gt})=>{c.X.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:vt,scores:Nt}=Ft,{maxOutputSize:It,iouThreshold:Et,scoreThreshold:Lt}=gt,Vt=at,Ht=Vt.readSync(vt.dataId),Jt=Vt.readSync(Nt.dataId),un=It,on=Et,mn=Lt;return c.lb.nonMaxSuppressionV3Impl(Ht,Jt,un,on,mn)}},yp=c.lb.nonMaxSuppressionV4Impl,bp={kernelName:c.G,backendName:"webgl",kernelFunc:({inputs:Ft,backend:at,attrs:gt})=>{c.X.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:vt,scores:Nt}=Ft,{maxOutputSize:It,iouThreshold:Et,scoreThreshold:Lt,padToMaxOutputSize:Vt}=gt,Ht=at,Jt=Ht.readSync(vt.dataId),un=Ht.readSync(Nt.dataId),{selectedIndices:on,validOutputs:mn}=yp(Jt,un,It,Et,Lt,Vt);return[on,mn]}},vp=c.lb.nonMaxSuppressionV5Impl,xp={kernelName:c.H,backendName:"webgl",kernelFunc:({inputs:Ft,backend:at,attrs:gt})=>{c.X.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:vt,scores:Nt}=Ft,{maxOutputSize:It,iouThreshold:Et,scoreThreshold:Lt,softNmsSigma:Vt}=gt,Ht=at,Jt=Ht.readSync(vt.dataId),un=Ht.readSync(Nt.dataId),on=It,mn=Et,gn=Lt,fn=Vt,{selectedIndices:yn,selectedScores:In}=vp(Jt,un,on,mn,gn,fn);return[yn,In]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wp{constructor(at,gt,vt,Nt){this.variableNames=["Image"],this.outputShape=[];const It=at[1],Et=at[2],Lt=Math.sin(gt).toFixed(3),Vt=Math.cos(gt).toFixed(3);this.outputShape=at;const[Ht,Jt]=c.X.getImageCenter(Nt,It,Et),un=Ht.toFixed(3),on=Jt.toFixed(3);let mn="";mn=typeof vt=="number"?`float outputValue = ${vt.toFixed(2)};`:`
        vec3 fill = vec3(${vt.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - ${un}) * ${Vt} - (float(y) - ${on}) * ${Lt};
          float coordYFloat = (float(x) - ${un}) * ${Lt} + (float(y) - ${on}) * ${Vt};
          int coordX = int(round(coordXFloat + ${un}));
          int coordY = int(round(coordYFloat + ${on}));
          ${mn}
          if(coordX >= 0 && coordX < ${Et} && coordY >= 0 && coordY < ${It}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sp={kernelName:c.L,backendName:"webgl",kernelFunc:({inputs:Ft,attrs:at,backend:gt})=>{const{image:vt}=Ft,{radians:Nt,fillValue:It,center:Et}=at,Lt=gt,Vt=new wp(vt.shape,Nt,It,Et);return Lt.runWebGLProgram(Vt,[vt],vt.dtype)}},Bu=ga(`if (isnan(x)) return x;
  return sin(x);
`),ju={kernelName:c.N,backendName:"webgl",kernelFunc:Bu},Cp=ga("return x * x;"),Tp={kernelName:c.P,backendName:"webgl",kernelFunc:Cp},Np=xo({opSnippet:"return (a - b) * (a - b);",packedOpSnippet:"return (a - b) * (a - b);"}),$p={kernelName:c.Q,backendName:"webgl",kernelFunc:Np},Uu="return a - b;",Gu=xo({opSnippet:Uu,packedOpSnippet:Uu,supportsComplex:!0,cpuKernelImpl:Rs}),_p={kernelName:c.R,backendName:"webgl",kernelFunc:Gu},qu=ga("return tan(x);");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ip=[Rl,Fl,Ou,Ml,Ru,Bl,Ol,Kl,Yl,Zl,Jl,_h,tp,El,np,Wl,ip,ap,up,lp,cp,pp,gp,fu,bp,xp,zl,Vl,Hl,Sp,ju,Tp,_p,$p,{kernelName:c.S,backendName:"webgl",kernelFunc:qu},{kernelName:c.U,backendName:"webgl",kernelFunc:({inputs:Ft,attrs:at,backend:gt})=>{const{x:vt}=Ft,{perm:Nt}=at,It=gt,Et=vt.shape.length,Lt=new Array(Et);for(let Ht=0;Ht<Lt.length;Ht++)Lt[Ht]=vt.shape[Nt[Ht]];let Vt;if(It.shouldExecuteOnCPU([vt])){const Ht=It.texData.get(vt.dataId).values,Jt=xs(Ht,vt.shape,vt.dtype,Nt,Lt);Vt=It.makeTensorInfo(Lt,vt.dtype),It.texData.get(Vt.dataId).values=Jt}else Vt=pu(vt,Nt,It);return Vt}},{kernelName:c.V,backendName:"webgl",kernelFunc:function(Ft){const{inputs:at,attrs:gt,backend:vt}=Ft,{axis:Nt}=gt,{x:It}=at;ln(It,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const Et=vt.readSync(It.dataId),{outputValues:Lt,outputShape:Vt,indices:Ht}=$n(Et,Nt,It.shape,It.dtype);return[vt.makeTensorInfo(Vt,It.dtype,Lt),vt.makeTensorInfo([Ht.length],"int32",Ht)]}}];/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const Ft of Ip)Object(c.wb)(Ft);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Tr=o(2),ao=o(9),Wu=o(20),mu=o(42),xa=o(25);const Hu=(Ft,at,gt)=>{const vt=Ft.createBuffer(1,at.length,gt);return vt.copyToChannel(at,0),vt};function Ap(Ft,at,gt,vt,Nt){return new Promise(It=>{const Et={loudness_db:[0],f0_hz:[0]};let Lt=0;for(let Vt=at;Vt<gt;Vt++)vt&&Vt>=Nt?(Et.loudness_db[Lt]=-120,Et.f0_hz[Lt]=-1):(Et.loudness_db[Lt]=Ft.loudness_db[Vt],Et.f0_hz[Lt]=Ft.f0_hz[Vt]),Lt+=1;It(Et)})}function Ku(Ft){return Ft*xa.b}function Xu(Ft){return Ft/xa.b}class kp{constructor(at,gt){this.checkpointUrl=at,gt&&(this.settings=gt)}async initialize(){let at;Tr.registerOp("Roll",gt=>{const vt=Tr.split(gt.inputs[0],2,2),Nt=Tr.concat([vt[1],vt[0]],2);return vt.forEach(It=>It.dispose()),Nt}),Tr.env().set("WEBGL_PACK",!1),Tr.env().set("WEBGL_CONV_IM2COL",!1),Tr.env().set("WEBGL_DELETE_TEXTURE_THRESHOLD",104857600),this.model=await async function(gt){return await Tr.loadGraphModel(gt)}(this.checkpointUrl+"/model.json");try{at=await fetch(this.checkpointUrl+"/settings.json").then(gt=>gt.json())}finally{if(this.settings===null)throw new Error("Passing settings is required if you do not have a settings.json file.")}this.settings={...at,...this.settings},this.initialized=!0}dispose(){this.initialized&&(this.model.dispose(),this.checkpointUrl=null,this.initialized=!1)}isInitialized(){return this.initialized}async memCheck(){return await async function(){const at=window.screen.availWidth*window.screen.availHeight,gt=window.devicePixelRatio,vt=Math.round(at*gt*600/1048576);if(!isNaN(vt)&&vt<50)throw new Error(`Insufficient memory! Your device has ${vt} and recommended memory is 50`);try{if(await Tr.ready(),Tr.getBackend()!=="webgl")throw new Error("It looks like your browser does not support webgl.")}catch(Nt){throw new Error("insufficient memory - "+Nt)}return!0}()}async synthesize(at,gt){gt!==null&&(this.settings={...this.settings,...gt});const{f0_hz:vt,loudness_db:Nt,confidences:It}=at,Et=Object(mu.c)(vt,Nt.length,this.settings.modelMaxFrameLength),Lt=Object(mu.c)(It,Nt.length,this.settings.modelMaxFrameLength),Vt=await async function(Sn,En){const _n=En.averageMaxLoudness,Kn=En.meanLoudness,Xn=En.loudnessThreshold,ur=En.meanPitch;let br,vr=[];if(Sn.loudness_db.length>0){const xr=Tr.tidy(()=>{const Ts=Tr.tensor1d(Sn.loudness_db,"float32"),ts=Ts.max(),Gs=Tr.sub(_n,ts),$a=Tr.add(Ts,Gs);return Ts.dispose(),ts.dispose(),Gs.dispose(),$a}),Mr=xr.greater(Xn),ds=await Tr.booleanMaskAsync(xr,Mr),is=await ds.array(),Kr=Tr.tidy(()=>{const Ts=is>0?ds.mean():xr.mean(),ts=Tr.sub(Kn,Ts),Gs=xr.add(ts).add(0).clipByValue(-120,_n),$a=Gs.min(),Ep=Ts.sub($a);return Gs.sub($a).div(Ep).mul(Kn- -120).add(-120)}),es=Tr.reshape(Sn.confidences,[-1,1,1]),as=Tr.pool(es,[100,1],"avg","same"),Zr=as.reshape([-1]),As=Tr.lessEqual(Zr,.7);br=Tr.tidy(()=>{const Ts=As.mul(-25),ts=Kr.add(Ts),Gs=Tr.maximum(ts,-120);return Ts.dispose(),ts.dispose(),Gs}),vr=await br.array(),Mr.dispose(),xr.dispose(),Kr.dispose(),ds.dispose(),as.dispose(),Zr.dispose(),es.dispose(),As.dispose()}let fr=[];if(Sn.f0_hz.length>0){const xr=await Object(Wu.c)(Sn.f0_hz),Mr=Tr.tidy(()=>{for(let ts=0,Gs=xr.length;ts<Gs;++ts)xr[ts]===-1/0&&(xr[ts]=0);return xr}),ds=Tr.lessEqual(Sn.confidences,.7),is=br.greater(Xn),Kr=Tr.logicalOr(ds,is),es=await Tr.booleanMaskAsync(Mr,Kr),as=es.mean(),Zr=await Tr.sub(ur,as),As=await Zr.array(),Ts=Tr.tidy(()=>{let ts=As/12;return ts=Math.round(ts),Object(mu.b)(Sn.f0_hz,ts)});fr=await Ts.array(),br.dispose(),as.dispose(),es.dispose(),Zr.dispose(),Ts.dispose(),is.dispose(),Kr.dispose(),ds.dispose()}return{f0_hz:fr,loudness_db:vr}}({f0_hz:Et,loudness_db:Nt,confidences:Lt},this.settings),Ht=[],Jt=Vt.loudness_db.length,un=Xu(Jt);let on=!1;const mn=Xu(this.settings.modelMaxFrameLength);let gn;const fn=1*xa.c;for(let Sn=0;Sn<un;Sn+=mn-1){const En=Math.floor(Ku(Sn)),_n=Ku(Sn+mn);_n>Jt&&(on=!0);const{f0_hz:Kn,loudness_db:Xn}=await Ap(Vt,En,_n,on,Jt),ur=Tr.tensor1d(Kn,"float32"),br=Tr.tensor1d(Xn,"float32"),vr=await this.model.predict({f0_hz:ur,loudness_db:br}),fr=await vr.data();Ht.push(fr),vr.dispose(),ur.dispose(),br.dispose()}if(un<=mn)gn=Ht[0];else{const Sn=[];for(let En=0;En<Ht.length;En++){const _n=Ht[En];Sn.push(_n)}gn=function(En,_n){const Kn=En.reduce((xr,Mr)=>xr+Mr.length,0),Xn=new Float32Array(Kn);let ur=0;for(let xr=0;xr<En.length;xr++){const Mr=En[xr],ds=xr<En.length-1;if(xr===0&&(Xn.set(Mr,ur),ur+=Mr.length),ds){const is=En[xr+1],Kr=ur-_n;for(let es=Kr,as=0,Zr=Mr.length-_n;es<ur&&as<is.length;es++,as++,Zr++){const As=(es-Kr)/(ur-Kr);Xn[es]=(br=Mr[Zr],vr=is[as],br*(1-(fr=As))+vr*fr)}Xn.set(is.slice(_n),ur),ur+=is.slice(_n).length}}var br,vr,fr;return Xn}(Sn,fn)}const yn=gn.slice(0,at.originalRecordedBufferLength).map(Sn=>Sn*(this.settings.postGain||1)),In=new ao.Context,Ln=Hu(In,yn,xa.c),Vn=await Object(Wu.j)(Ln,48e3);return await async function({audioCtx:Sn,arrayBuffer:En,sampleRate:_n}){let Kn;ao.setContext(Sn);let Xn=Hu(Sn,En,_n);Kn=await ao.Offline(()=>{const vr=new ao.Compressor({attack:.001,release:.001,threshold:-6}).toDestination(),fr=new ao.Reverb({wet:.3,decay:3}).connect(vr),xr=new ao.Filter(8e3,"lowpass",-24).connect(fr);return new ao.Player({url:Xn}).connect(xr).start(),fr.ready},En.length/_n);const br=Kn.getChannelData(0);return Xn=null,Kn.dispose(),Kn=null,br}({audioCtx:In,arrayBuffer:Vn,sampleRate:48e3})}}},function(i,s,o){o.r(s),o.d(s,"GANSynth",function(){return pt});var a=o(2),c=o(12),d=o(15),g=o(43),b=o(20);const $=[[1,1,1.0087615084725814],[2,1,.029087889211125567],[2,2,.958243896036208],[3,2,.5326346877272624],[3,3,.45988057223186607],[4,3,1.0072850129664943],[5,4,1.0050894259864507],[6,4,.016233689242197466],[6,5,.9763230964529687],[7,5,.5149287456976357],[7,6,.48299891928441196],[8,6,1.0020339883784544],[9,7,1.0013940582804204],[10,7,.004285414445239434],[10,8,.9936677765505681],[11,8,.4979349533263788],[11,9,.5020647178266697],[12,9,.9896782321684733],[12,10,.006967080931645349],[13,10,1.0022486641537054],[14,11,1.0033233953996759],[15,11,.4782757843614299],[15,12,.5183887055972138],[16,12,.9736767011426267],[16,13,.01804416217807709],[17,13,1.0056329663266226],[18,14,1.00808642668908],[19,14,.4576416347984229],[19,15,.5340800956534676],[20,15,.9582897445862256],[20,16,.028988367857957848],[21,16,1.008754652772106],[22,17,1.0122552436937966],[23,17,.4380796830853842],[23,18,.5491738237632201],[24,18,.9434838949694413],[24,19,.039794474296176746],[25,19,1.0116287566447584],[26,20,1.0158945544322868],[27,20,.41952402212367873],[27,21,.5637020154076856],[28,21,.9292283399303117],[28,22,.05045785324282485],[29,22,1.0142694870195312],[30,23,1.0190617246342517],[31,23,.40191289323704393],[31,24,.5776942788784806],[32,24,.915494649120402],[32,25,.060974426459003916],[33,25,1.016690283888679],[34,26,1.0218076651124588],[35,26,.3851885348435194],[35,27,.5911779611807773],[36,27,.9022565352474414],[36,28,.07134062388959171],[37,28,1.0189038677945517],[38,29,1.0241776077147466],[39,29,.369297000124277],[39,30,.6041783722578726],[40,30,.8894896443111251],[40,31,.08155334505527755],[41,31,1.0209222848386956],[42,32,1.0262117836546005],[43,32,.35418795675261777],[43,33,.6167189821271176],[44,33,.87717137085618],[44,34,.09160992335204851],[45,34,1.0227569476841007],[46,35,1.0279460165329002],[47,35,.3398144781420294],[47,36,.628821594757742],[48,36,.8652806947525041],[48,37,.10150809298528844],[49,37,1.0244186730654867],[50,38,1.029412240942602],[51,38,.32613283297317347],[51,39,.6405065019041107],[52,39,.8537980365619783],[52,40,.11124595830527892],[53,40,1.0259177162406141],[54,41,1.030638956235277],[55,41,.3131022777355948],[55,42,.6517926196031543],[56,42,.8427051290118196],[56,43,.12082196533877268],[57,43,1.0272638027474759],[58,44,1.031651623831845],[59,44,.3006848555240512],[59,45,.6626976096262132],[60,45,.8319849024715039],[60,46,.13023487533380312],[61,46,1.0284661577762764],[62,47,1.0324730153919173],[63,47,.28884520321029805],[63,48,.6732379878311283],[64,48,.821621382643116],[64,49,.1394837401591093],[65,49,1.0295335334192939],[66,50,1.0331235182054521],[67,50,.27755036829985363],[67,51,.68342922107227],[68,51,.8115995989355603],[68,52,.148567879414825],[69,52,1.0304742340231496],[70,53,1.0336214033370148],[71,53,.2667696361817086],[71,54,.6932858140884962],[72,54,.8019055022130549],[72,55,.1574868591255191],[73,55,1.031296139836255],[74,56,1.0339830613212895],[75,56,.2564743680536822],[75,57,.7028213875855097],[76,57,.7925258907912134],[76,58,.16624047189958738],[77,58,1.032006729117501],[78,59,1.0342232095724524],[79,59,.24663784949713183],[79,60,.7120487485622758],[80,60,.7834483437084975],[80,61,.17482871845079165],[81,61,1.032613098850059],[82,62,1.0343550751159198],[83,62,.2372351494674972],[83,63,.7209799537859948],[84,63,.7746611604312031],[84,64,.18325179038711914],[85,64,1.0331219841851924],[86,65,1.0343905557724016],[87,65,.22824298931879333],[87,66,.7296263672031092],[88,66,.7661533062642226],[88,67,.19151005417692718],[89,67,1.0335397767254908],[90,68,1.0343403625078313],[91,68,.21963962139622123],[91,69,.7379987119645334],[92,69,.7579143628308538],[92,70,.19960403621540457],[93,70,1.0338725417430177],[94,71,1.0342141453043734],[95,71,.21140471667072153],[95,72,.746107117663542],[96,72,.7499344830670268],[96,73,.20753440891552338],[97,73,1.0341260344172454],[98,74,1.034020604597683],[99,74,.20351926086574523],[99,75,.7539611633021215],[100,75,.7422043502477234],[100,76,.2153019777561019],[101,76,1.0343057151671131],[102,77,1.0337675900563705],[103,77,.19596545852169872],[103,78,.7615699164421695],[104,78,.734715140616724],[104,79,.22290766922455862],[105,79,1.034416764143981],[106,80,1.03346218824938],[107,80,.1887266444456389],[107,81,.7689419689404797],[108,81,.7274584892496355],[108,82,.23035251959385997],[109,82,1.0344640949448594],[110,83,1.0331108005456808],[111,83,.18178720201436843],[111,84,.7760854696185804],[112,84,.7204264588178948],[112,85,.23763766448199494],[113,85,1.0344523675990727],[114,86,1.032719212418228],[115,86,.1751324878193402],[115,87,.7830081541774375],[116,87,.7136115109646374],[116,88,.2447643291417676],[117,88,1.0343860008764458],[118,89,1.0322926551739824],[119,89,.16874876216974247],[119,90,.789717372631832],[120,90,.7070064800338803],[120,91,.2517338194331562],[121,91,1.0342691839607763],[122,92,1.0318358610025598],[123,92,.16262312499771858],[123,93,.7962201145052664],[124,93,.7006045489251309],[124,94,.25854751343650967],[125,94,1.0341058875275075],[126,95,1.0313531121234998],[127,95,.15674345673841866],[127,96,.8025230320033012],[128,96,.6943992268713032],[128,97,.2652068536620191],[129,97,1.033899874262366],[130,98,1.030848284714744],[131,98,.1510983637896712],[131,99,.8086324613545763],[132,99,.6883843289574696],[132,100,.2717133398209474],[133,100,1.033654708853177],[134,101,1.0303248882205327],[135,101,.14567712818173575],[135,102,.8145544424922615],[136,102,.6825539572209546],[136,103,.2780685221191216],[137,103,1.033373767485838],[138,104,1.0297861005632643],[139,104,.14046966111762169],[139,105,.8202947372282664],[140,105,.6769024831869065],[140,106,.28427399504058354],[141,106,1.0330602468722847],[142,107,1.029234799720434],[143,107,.13546646006984392],[143,108,.8258588460540109],[144,108,.671424531713726],[144,109,.290331391589362],[145,109,1.0327171728357682],[146,110,1.0286735920712562],[147,110,.13065856914309196],[147,111,.8312520236957351],[148,111,.6661149660273628],[148,112,.2962423779602388],[149,112,1.03234740847843],[150,113,1.0281048378703825],[151,113,.12603754244145],[151,114,.8364792935255917],[152,114,.6609688738465388],[152,115,.30200864860954885],[153,115,1.0319536619522978],[154,116,1.0275306741623285],[155,116,.12159541018943322],[155,117,.8415454609370665],[156,117,.655981554500098],[156,118,.3076319217011811],[157,118,1.031538493855763],[158,119,1.0269530354146845],[159,119,.11732464738966399],[159,120,.846455125764718],[160,120,.6511485069565366],[160,121,.3131139349019227],[161,121,1.0311043242739946],[162,122,1.0263736721146446],[163,122,.11321814480714538],[163,123,.851212693834753],[164,123,.6464654186857061],[164,124,.3184564415055735],[165,124,1.0306534394819706],[166,125,1.0257941675461106],[167,125,.10926918209624069],[167,126,.8558223877141483],[168,126,.6419281552876014],[168,127,.32366120686047056],[169,127,1.0301879983273805],[170,128,1.0252159529388847],[171,128,.10547140289367021],[171,129,.8602882567276612],[172,129,.6375327508240597],[172,130,.32873000508360367],[173,130,1.0297100383091813],[174,131,1.0246403211604227],[175,131,.10181879172477112],[175,132,.8646141862987496],[176,132,.6332753987956673],[176,133,.33366461604209907],[177,133,1.0292214813668379],[178,134,1.0240684391009978],[179,134,.09830565257411007],[179,135,.8688039066707689],[180,135,.6291524437169539],[180,136,.3384668225808326],[181,136,1.0287241393952773],[182,137,1.0235013588866442],[183,137,.0949265889928822],[183,138,.8728610010546515],[184,138,.6251603732380943],[184,139,.3431384079843332],[185,139,1.0282197194980238],[186,140,1.0229400280388043],[187,140,.09167648561647405],[187,141,.8767889132518744],[188,141,.6212958107744541],[188,142,.3476811536535296],[189,142,1.0277098289923983],[190,143,1.0223852986877378],[191,143,.08855049098843445],[191,144,.8805909547856343],[192,144,.6175555086043407],[192,145,.35209683698566024],[193,145,1.0271959801772084],[194,146,1.021837935933431],[195,146,.08554400158179727],[195,147,.8842703115872171],[196,147,.6139363413989273],[196,148,.35638722943949186],[197,148,1.026679594876984],[198,149,1.0212986254395027],[199,149,.082652646931321],[199,150,.8878300502607867],[200,150,.6104353001536761],[200,151,.3605540947783916],[201,151,1.0261620087703698],[202,152,1.020767980334856],[203,152,.07987227578640096],[203,153,.8912731239662092],[204,153,.6070494864912312],[204,154,.364599187472458],[205,154,1.025644475516362],[206,155,1.0202465474911722],[207,155,.07719894321045902],[207,156,.8946023779404728],[208,156,.6037761073076129],[208,157,.36852425125748506],[209,157,1.0251281706842847],[210,158,1.0197348132361097],[211,158,.07462889855138014],[211,159,.8978205546916732],[212,159,.6006124697383151],[212,160,.3723310178292769],[213,160,1.0246141955013988],[214,161,1.0192332085569418],[215,161,.07215857422040488],[215,162,.9009302988805],[216,162,.5975559764226185],[216,163,.37602120567284064],[217,163,1.024103580422386],[218,164,1.018742113842709],[219,164,.06978457521665815],[219,165,.9039341619174114],[220,165,.5946041210439893],[220,166,.3795965190111676],[221,166,1.0235972885322195],[222,167,1.0182618632088625],[223,167,.0675036693443592],[223,168,.9068346062921914],[224,168,.5917544841265701],[224,169,.3830586468674795],[225,169,1.0230962187892327],[226,170,1.0177927484431766],[227,170,.06531277806896706],[227,171,.9096340096561174],[228,171,.5890047290713193],[228,172,.38640926223293437],[229,172,1.0226012091159231],[230,173,1.017335022608167],[231,173,.0632089679653424],[231,174,.9123346686734497],[232,174,.586352598418078],[232,175,.3896500213288084],[233,175,1.0221130393455482],[234,176,1.0168889033326205],[235,176,.06118944272087777],[235,177,.914938802652698],[236,177,.5837959103122896],[236,178,.39278256296329067],[237,178,1.0216324340290364],[238,179,1.0164545758191],[239,179,.05925153564332089],[239,180,.9174485569826359],[240,180,.5813325551691159],[240,181,.3958085079669357],[241,181,1.0211600651125134],[242,182,1.01603219559476],[243,182,.05739270264601734],[243,183,.919866006375456],[244,183,.578960492519135],[244,184,.39872945870775167],[245,184,1.020696554488055],[246,185,1.0156218910279706],[247,185,.055610515672866775],[247,186,.9221931579354511],[248,186,.5766777480237313],[248,187,.4015469986761612],[249,187,1.0202424764259312],[250,188,1.0152237656316911],[251,188,.05390265653168126],[251,189,.9244319540637365],[252,189,.5744824106486663],[252,190,.4042626921377848],[253,190,1.0197983598926021],[254,191,1.0148379001729047],[255,191,.052266911108559244],[255,192,.9265842752073952],[256,192,.5723726299899468],[256,193,.40687808384383367],[257,193,1.0193646907609162],[258,194,1.0144643546050645],[259,194,.05070116393653833],[259,195,.9286519424651887],[260,195,.5703466137364466],[260,196,.4093946987997115],[261,196,1.0189419139168765],[262,197,1.014103169839173],[263,197,.04920339309393266],[263,198,.9306367200572258],[264,198,.5684026252644323],[264,199,.41181404208517797],[265,199,1.0185304352678317],[266,200,1.0137543693675302],[267,200,.04777166540942449],[267,201,.9325403176671191],[268,201,.5665389813575877],[268,202,.4141375987198434],[269,202,1.0181306236573189],[270,203,1.0134179607527265],[271,203,.04640413195303674],[271,204,.934364392667829],[272,204,.5647540500383554],[272,205,.4163668335733731],[273,205,1.017742812691386],[274,206,1.0130939369942324],[275,206,.04509902379599986],[275,207,.9361105522297561],[276,207,.5630462485124229],[276,208,.4185031913161667],[277,208,1.0173673024779883],[278,209,1.0127822777820206],[279,209,.043854648017688035],[279,210,.9377803553285139],[280,210,.5614140412123577],[280,211,.42054809640522234],[281,211,1.0170043612872055],[282,212,1.0124829506474082],[283,212,.042669383945431606],[283,213,.9393753146522579],[284,213,.5598559379382144],[284,214,.42250295310432634],[285,214,1.016654227133528],[286,215,1.0121959120202477],[287,215,.04154167961383383],[287,216,.9408968984130733],[288,216,.5583704920894111],[288,217,.42436914553372207],[289,217,1.0163171092845467],[290,218,1.0119211081990869],[291,218,.04047004842376173],[291,219,.9423465320743504],[292,219,.5569562989809166],[292,220,.4261480377490578],[293,220,1.0159931896995795],[294,221,1.0116584762427925],[295,221,.03945306599345366],[295,222,.9437255999933521],[296,222,.5556119942410062],[296,223,.4278409738424421],[297,223,1.0156826244024533],[298,224,1.0114079447897668],[299,224,.038489367187566605],[299,225,.9450354469842541],[300,225,.5543362522836106],[300,226,.42944927807097044],[301,226,1.015385544788648],[302,227,1.0111694348102989],[303,227,.03757764331096192],[303,228,.9462773798108762],[304,228,.5531277848528364],[304,229,.4309742550012965],[305,229,1.0151020588742643],[306,230,1.010942860298229],[307,230,.036716639459590646],[307,231,.9474526686068676],[308,231,.5519853396352962],[308,232,.4324171896758833],[309,232,1.0148322524854105],[310,233,1.0107281289063446],[311,233,.03590515201636021],[311,234,.9485625482321702],[312,234,.5509076989367998],[312,235,.43377934779319954],[313,235,1.0145761903940136],[314,236,1.0105251425307091],[315,236,.03514202628559325],[315,237,.9496082195647421],[316,237,.5498936784177629],[316,238,.4350619759070698],[317,238,1.014333917399279],[318,239,1.0103337978471305],[319,239,.03442615425358563],[319,240,.9505908507379167],[320,240,.5489421258861396],[320,241,.43626630163460317],[321,241,1.0141054593619083],[322,242,1.01015398680447],[323,242,.03375647247069698],[323,243,.9515115783174108],[324,243,.5480519201477565],[324,244,.43739353387882146],[325,244,1.0138908241879996],[326,245,1.0099855970782285],[327,245,.033131960048180864],[327,246,.9523715084281075],[328,246,.5472219699015581],[328,247,.438444863061944],[329,247,1.013690002769195],[330,248,1.009828512486449],[331,248,.0325516367573507],[331,249,.9531717178331495],[332,249,.5464512126887197],[332,250,.43942146136466664],[333,250,1.0135029698801676],[334,251,1.0096826133725936],[335,251,.03201456123217285],[335,252,.9539132549610332],[336,252,.5457386138858732],[336,253,.4403244829779182],[337,253,1.0133296850325435],[338,254,1.009547776957031],[339,254,.03151982926510845],[339,255,.9545971408911784],[340,255,.5450831657405287],[340,256,.44115506435778573],[341,256,1.0131700932920482],[342,257,1.0094238776594737],[343,257,.031066572189892106],[343,258,.9552243702967873],[344,258,.5444838864501296],[344,259,.44191432448690826],[345,259,1.013024126057376],[346,260,1.0093107873949636],[347,260,.030653955347715485],[347,261,.9557959123477745],[348,261,.5439398192781751],[348,262,.44260336514265247],[349,262,1.01289170180302],[350,263,1.0092083758457435],[351,263,.03028117663272106],[351,264,.956312711573757],[352,264,.5434500317097861],[352,265,.44322327116676213],[353,265,1.012772726788603],[354,266,1.0091165107105933],[355,266,.029947465111254432],[355,267,.9567756886915669],[356,267,.5430136146404813],[356,268,.443775110739594],[357,268,1.0126670957357586],[358,269,1.0090350579329337],[359,269,.02965207970869547],[359,270,.9571857414000476],[360,270,.5426296815994802],[360,271,.44425993565630856],[361,271,1.012574692474406],[362,272,1.0089638819102829],[363,272,.029394307963707546],[363,273,.9575437451393404],[364,273,.5422973680058967],[364,274,.4446787816043237],[365,274,1.0124953905592755],[366,275,1.0089028456858484],[367,275,.029173464843693937],[367,276,.9578505538209541],[368,276,.5420158304528419],[368,277,.44503266844280676],[369,277,1.0124290538587923],[370,278,1.0088518111235036],[371,278,.028988891617224174],[371,279,.9581070005279474],[372,279,.5417842460227992],[372,280,.4453226004830567],[373,280,1.012375537116488],[374,281,1.0088106390682976],[375,281,.028839954783933083],[375,282,.9583138981860433],[376,282,.5416018116287169],[376,283,.4455495667668758],[377,283,1.0123346864882432],[378,284,1.008779189492711],[379,284,.02872604505481853],[379,285,.9584720402070429],[380,285,.5414677433849261],[380,286,.44571454134485444],[381,286,1.0123063400541175],[382,287,1.008757321629678],[383,287,.028646576380597488],[383,288,.9585822011116006],[384,288,.5413812759956369],[384,289,.4458184835568685],[385,289,1.0122903283078832],[386,290,1.0087448940943453],[387,290,.028600985028178233],[387,291,.9586451371206854],[388,291,.541341662177547],[388,292,.44586233830592226],[389,292,1.0122864746237836],[390,293,1.0087417649949195],[391,293,.028588728701898054],[391,294,.9586615867284015],[392,294,.5413481720936798],[392,295,.44584703633543826],[393,295,1.0122945957030358],[394,296,1.0087477920325896],[395,296,.028609285702619672],[395,297,.958632271251788],[396,297,.5414000928186515],[396,298,.44577349450072723],[397,298,1.0123145019997328],[398,299,1.0087628325926643],[399,299,.028662154128659946],[399,300,.9585578953591529],[400,300,.5414967278190544],[400,301,.4456426160405528],[401,301,1.0123459981276965],[402,302,1.0087867438270437],[403,302,.028746851113718195],[403,303,.9584391475775814],[404,303,.5416373964555454],[404,304,.4454552908447334],[405,304,1.0123888832492127],[406,305,1.0088193827286074],[407,305,.02886291209986826],[407,306,.9582767007831089],[408,306,.541821433501071],[408,307,.44521239571891796],[409,307,1.0124429514472502],[410,308,1.0088606061980132],[411,308,.029009890142771087],[411,309,.9580712126699451],[412,309,.5420481886827784],[412,310,.4449147946460895],[413,310,1.01250799207953],[414,311,1.0089102711038211],[415,311,.029187355249536997],[415,312,.9578233262044412],[416,312,.5423170262339921],[416,313,.44456333904778883],[417,313,1.0125837901172945],[418,314,1.0089682343360202],[419,314,.02939489374516595],[419,315,.9575336700623188],[420,315,.5426273244683578],[420,316,.4441588680360723],[421,316,1.0126701264704934],[422,317,1.0090343528545804],[423,317,.029632107670909735],[423,318,.9572028590461733],[424,318,.5429784753662162],[424,319,.44370220866623333],[425,319,1.0127667782967882],[426,320,1.0091084837312583],[427,320,.02989861420426184],[427,321,.9568314944924141],[428,321,.5433698841780775],[428,322,.44319417618582607],[429,322,1.0128735192969558],[430,323,1.0091904841873789],[431,323,.03019404510848359],[431,324,.9564201646615609],[432,324,.5438009690392793],[432,325,.442635574278337],[433,325,1.0129901199984148],[434,326,1.0092802116265451],[435,326,.030518046204357472],[435,327,.9559694451142186],[436,327,.5442711606026257],[436,328,.4420271953022404],[437,328,1.013116348025554],[438,329,1.0093775236632159],[439,329,.030870276865616747],[439,330,.9554798990737882],[440,330,.5447799016825403],[440,331,.4413698205263152],[441,331,1.0132519683584005],[442,332,1.009482278147551],[443,332,.03125040953717358],[443,333,.9549520777754482],[444,333,.5453266469100869],[444,334,.4406642203630321],[445,334,1.0133967435791398],[446,335,1.009594333186143],[447,335,.031658129272365214],[447,336,.9543865208053518],[448,336,.5459108623998897],[448,337,.43991115459682073],[449,337,1.0135504341086077],[450,338,1.0097135471594447],[451,338,.03209313328990995],[451,339,.9537837564264052],[452,339,.5465320254328632],[452,340,.4391113726049666],[453,340,1.013712798432744],[454,341,1.009839778736762],[455,341,.03255513055252836],[455,342,.9531443018899375],[456,342,.5471896241467579],[456,343,.43826561357805704],[457,343,1.0138835933177033],[458,344,1.0099728868869051],[459,344,.033043841357819334],[459,345,.9524686637453139],[460,345,.5478831572348231],[460,346,.437374606734874],[461,346,1.0140625740178375],[462,347,1.0101127308880269],[463,347,.03355899695286791],[463,348,.9517573381261256],[464,348,.5486121336621822],[464,349,.436439071532636],[465,349,1.0142494944714182],[466,350,1.0102591703335964],[467,350,.03410033916008615],[467,351,.9510108110386514],[468,351,.5493760723833191],[468,352,.4354597178717026],[469,352,1.0144441074918717],[470,353,1.0104120651366326],[471,353,.03466762001996195],[471,354,.9502295586328896],[472,354,.5501745020753853],[472,355,.43443724629963687],[473,355,1.0146461649465606],[474,356,1.0105712755316636],[475,356,.035260601448092795],[475,357,.9494140474694148],[476,357,.5510069608761691],[476,358,.43337234820709825],[477,358,1.0148554179311553],[478,359,1.0107366620751033],[479,359,.035879054907258415],[479,360,.9485647347731454],[480,360,.5518729961339426],[480,361,.4322657060211073],[481,361,1.0150716169344107],[482,362,1.0109080856433987],[483,362,.036522761091017805],[483,363,.9476820686815849],[484,363,.5527721641646695],[484,364,.4311179933933358],[485,364,1.0152945119966836],[486,365,1.011085407429963],[487,365,.037191509621709105],[487,366,.9467664884832998],[488,366,.5537040300164661],[488,367,.42992987538427074],[489,367,1.0155238528614574],[490,368,1.0112684889404733],[491,368,.03788509876006132],[491,369,.945818424848663],[492,369,.5546681672409077],[492,370,.42870200864543534],[493,370,1.015759389119438],[494,371,1.0114571919861517],[495,371,.038603335123549486],[495,372,.9448383000574974],[496,372,.5556641576735553],[496,373,.42743504159139284],[497,373,1.016000870349307],[498,374,1.0116513786769457],[499,374,.03934603342038135],[499,375,.9438265282100843],[500,375,.556691591222498],[500,376,.42612961457530607],[501,376,1.0162480462474877],[502,377,1.011850911412824],[503,377,.0401130161915153],[503,378,.9427835154401112],[504,378,.5577500656591832],[504,379,.42478636005357434],[505,379,1.0165006667574357],[506,380,1.012055652873517],[507,380,.04090411356002747],[507,381,.9417096601187289],[508,381,.5588391864205529],[508,382,.4234059027505881],[509,382,1.016758482190165],[510,383,1.0122654660085202],[511,383,.04171916299559172],[511,384,.940605353048487],[512,384,.5599585664146272],[512,385,.4219888598177451],[513,385,1.0170212433404524],[514,386,1.0124802140252198],[515,386,.04255800908365318],[515,387,.9394709776545362],[516,387,.5611078258344457],[516,388,.42053584098827806],[517,388,1.0172887015980372],[518,389,1.0126997603766286],[519,389,.04342050330548295],[519,390,.9383069101697904],[520,390,.5622865919744513],[520,391,.4190474487280153],[521,391,1.0175606090547666],[522,392,1.0129239687479124],[523,392,.044306503823998804],[523,393,.9371135198133816],[524,393,.5634944990567509],[524,394,.41752427838399275],[525,394,1.017836718605313],[526,395,1.0131527030429122],[527,395,.04521587528078427],[527,396,.9358911689630978],[528,396,.5647311880602439],[528,397,.4159669183258934],[529,397,1.0181167840454461],[530,398,1.013385827369556],[531,398,.04614848859869256],[531,399,.9346402133241121],[532,399,.5659963065530312],[532,400,.41437595008823225],[533,400,1.0184005601646522],[534,401,1.0136232060250132],[535,401,.04710422079259773],[535,402,.9333610020906034],[536,402,.5672895085344858],[536,403,.41275194850334485],[537,403,1.0186878028359048],[538,404,1.0138647034793364],[539,404,.048082954782625906],[539,405,.9320538781067357],[540,405,.5686104542795039],[540,406,.4110954818363832],[541,406,1.0189782691001303],[542,407,1.0141101843606544],[543,407,.04908457922335384],[543,408,.9307191780153855],[544,408,.5699588101870642],[544,409,.40940711191046436],[545,409,1.0192717172488233],[546,410,1.0143595134378742],[547,410,.05010898832967291],[547,411,.9293572324099554],[548,411,.571334248633412],[548,412,.4076873942350095],[549,412,1.0195679069010588],[550,413,1.014612555604275],[551,413,.05115608171422347],[551,414,.9279683659767549],[552,414,.5727364478324755],[552,415,.4059368781231612],[553,415,1.0198665990790994],[554,416,1.0148691758602966],[555,416,.05222576422885553],[555,417,.9265528976348417],[556,417,.5741650916958022],[556,418,.40415610681371494],[557,418,1.0201675562784311],[558,419,1.0151292392959954],[559,419,.05331794581129548],[559,420,.9251111406735011],[560,420,.575619869698764],[560,421,.40234561758289383],[561,421,1.020470542537326],[562,422,1.0153926110734461],[563,422,.05443254133751677],[563,423,.9236434028815992],[564,423,.577100476753225],[564,424,.40050594185671334],[565,424,1.0207753235006762],[566,425,1.0156591564087798],[567,425,.05556947047932675],[567,426,.9221499866777003],[568,426,.5786066130792553],[568,427,.3986376053171075],[569,427,1.021081666483685],[570,428,1.0159287405542117],[571,428,.056728657567230105],[571,429,.9206311892316345],[572,429,.5801379840824749],[572,430,.3967411280111777],[573,430,1.0213893405291132],[574,431,1.016201228779567],[575,431,.057910031456259455],[575,432,.9190873025878152],[576,432,.5816943002369833],[576,433,.39481702444623007],[577,433,1.021698116466727],[578,434,1.0164764863538518],[579,434,.05911352539724152],[579,435,.9175186137811212],[580,435,.5832752769689779],[580,436,.3928658036922941],[581,436,1.0220077669657777],[582,437,1.0167543785266802],[583,437,.06033907691219022],[583,438,.9159254049505173],[584,438,.5848806345442068],[584,439,.3908879694785636],[585,439,1.022318066586335],[586,440,1.017034770509633],[587,440,.061586627674206584],[587,441,.914307953451257],[588,441,.58651009795775],[588,442,.3888840202832941],[589,442,1.0226287918300547],[590,443,1.017317527457434],[591,443,.06285612338957339],[591,444,.9126665319603182],[592,444,.5881633968320044],[592,445,.3868544494242516],[593,445,1.0229397211858324],[594,446,1.0176025144493452],[595,446,.06414751368695158],[595,447,.9110014085827639],[596,447,.5898402653081352],[596,448,.3847997451452973],[597,448,1.0232506351759092],[598,449,1.0178895964699735],[599,449,.06546075200505637],[599,450,.9093128469516464],[600,450,.5915404419502857],[600,451,.38272039070347513],[601,451,1.0235613163962847],[602,452,1.018178638390636],[603,452,.06679579548876291],[603,453,.9076011063291527],[604,453,.5932636696450677],[604,454,.3806168644453139],[605,454,1.0238715495601471],[606,455,1.0184695049504477],[607,455,.06815260488510425],[607,456,.9058664416991429],[608,456,.5950096955107654],[608,457,.37848963988927037],[609,457,1.024181121533852],[610,458,1.0187620607370533],[611,458,.06953114444294146],[611,459,.9041091038666588],[612,459,.5967782707982764],[612,460,.3763391858013562],[613,460,1.0244898213757605],[614,461,1.0190561701684775],[615,461,.07093138181829654],[615,462,.9023293395404434],[616,462,.5985691508103589],[616,463,.37416596626748977],[617,463,1.0247974403689852],[618,464,1.0193516974735164],[619,464,.07235328797779521],[619,465,.9005273914292568],[620,465,.6003820948062436],[620,466,.37197044076689306],[621,466,1.0251037720559506],[622,467,1.0196485066733956],[623,467,.07379683710904351],[623,468,.8987034983230944],[624,468,.6022168659211814],[624,469,.3697530642404009],[625,469,1.025408612268551],[626,470,1.01994646156273],[627,470,.07526200653052777],[627,471,.8968578951803935],[628,471,.6040732310832857],[628,472,.36751428715382667],[629,472,1.0257117591594511],[630,473,1.0202454256910738],[631,473,.07674877660715493],[631,474,.8949908132065928],[632,474,.6059509609308075],[632,475,.3652545555682938],[633,475,1.0260130132278693],[634,476,1.0205452623441595],[635,476,.07825713066499564],[635,477,.8931024799348216],[636,477,.6078498297369068],[636,478,.36297431119783957],[637,478,1.026312177347325],[638,479,1.0208458345252258],[639,479,.07978705490923481],[639,480,.8911931193041005],[640,480,.6097696153313106],[640,481,.360673991471839],[641,481,1.0266090567901067],[642,482,1.021147004936792],[643,482,.08133853834681559],[643,483,.8892629517341233],[644,483,.6117100990244927],[644,484,.3583540295921792],[645,484,1.0269034592511874],[646,485,1.0214486359623245],[647,485,.08291157270803175],[647,486,.8873121941972261],[648,486,.6136710655396947],[648,487,.35601485458732646],[649,487,1.0271951948700204],[650,488,1.0217505896477503],[651,488,.08450615237016054],[651,489,.885341060291742],[652,489,.6156523029400911],[652,490,.3536568913681695],[653,490,1.0274840762511013],[654,491,1.022052727683594],[655,491,.08612227428601159],[655,492,.8833497603088218],[656,492,.6176536025590085],[656,493,.3512805607832744],[657,493,1.02776991848203],[658,494,1.0223549113867765],[659,494,.08775993791161714],[659,495,.8813385013049766],[660,495,.6196747589336273],[660,496,.34888627966024516],[661,496,1.028052539155018],[662,497,1.0226570016825074],[663,497,.08941914513388247],[663,498,.8793074871648813],[664,498,.621715569739104],[664,499,.346474460866357],[665,499,1.0283317583791294],[666,500,1.0229588590871557],[667,500,.09109990020637701],[667,501,.8772569186645972],[668,501,.6237758357289777],[668,502,.34404551334349676],[669,502,1.0286073987990987],[670,503,1.023260343690056],[671,503,.09280220968027517],[671,504,.8751869935378795],[672,504,.6258553606671395],[672,505,.3415998421603758],[673,505,1.0288792856085094],[674,506,1.0235613151361742],[675,506,.09452608233896752],[675,507,.8730979065358732],[676,507,.6279539512706841],[676,508,.33913784855416224],[677,508,1.0291472465628844],[678,509,1.0238616326091752],[679,509,.09627152913686766],[679,510,.8709898494841083],[680,510,.6300714171530707],[680,511,.3366599299694516],[681,511,1.0294111119920568],[682,512,1.0241611548135297],[683,512,.09803856313307117],[683,513,.8688630113461538],[684,513,.6322075707612916],[684,514,.3341664801038121],[685,514,1.0296707148107829],[686,515,1.0244597399582411],[687,515,.09982719943517422],[687,516,.8667175782751595],[688,516,.6343622273238361],[688,517,.33165788894132453],[689,517,1.029925890529174],[690,518,1.024757245739534],[691,518,.10163745513498708],[691,519,.864553733672022],[692,519,.6365352047963319],[692,520,.32913454279236454],[693,520,1.0301764772610114],[694,521,1.0250535293244536],[695,521,.10346934925456013],[695,522,.8623716582378126],[696,522,.6387263238040831],[696,523,.32659682433041565],[697,523,1.0304223157317631],[698,524,1.0253484473338592],[699,524,.10532290268142636],[699,525,.8601715300305955],[700,525,.6409354075949926],[700,526,.32404511262442137],[701,526,1.0306632492858765],[702,527,1.0256418558269649],[703,527,.10719813812199533],[703,528,.8579535245094766],[704,528,.6431622819855923],[704,529,.3214797831731655],[705,529,1.0308991238920382],[706,530,1.0259336102845216],[707,530,.10909508003982304],[707,531,.855717814591042],[708,531,.6454067753119441],[708,532,.3189012079363341],[709,532,1.03112978814904],[710,533,1.0262235655929648],[711,533,.11101375459950885],[711,534,.8534645706974212],[712,534,.6476687183847731],[712,535,.31630975536452444],[713,535,1.0313550932895121],[714,536,1.0265115760290215],[715,536,.11295418962138112],[715,537,.8511939607995829],[716,537,.6499479444348513],[716,538,.3137057904341974],[717,538,1.0315748931821125],[718,539,1.0267974952437684],[719,539,.11491641452111552],[719,540,.8489061504692988],[720,540,.6522442890739327],[720,541,.3110896746693046],[721,541,1.0317890443354898],[722,542,1.027081176247435],[723,542,.11690046026072583],[723,543,.8466013029223681],[724,543,.6545575902471419],[724,544,.3084617661720711],[725,544,1.0319974058989068],[726,545,1.0273624713942857],[727,545,.11890635929917114],[727,546,.8442795790631381],[728,546,.6568876881880987],[728,547,.3058224196480645],[729,547,1.0321998396634169],[730,548,1.0276412323675237],[731,548,.12093414553884717],[731,549,.8419411375296247],[732,549,.6592344253774453],[732,550,.3031719864317822],[733,550,1.0323962100616533],[734,551,1.027917310164898],[735,551,.12298385427920393],[735,552,.8395861347312832],[736,552,.661597646501151],[736,553,.30051081451364153],[737,553,1.0325863841657408],[738,554,1.028190555083932],[739,554,.12505552216817234],[739,555,.8372147248951822],[740,555,.6639771984076539],[740,556,.2978392485576317],[741,556,1.0327702316879357],[742,557,1.0284608167076257],[743,557,.12714918714905468],[743,558,.8348270601054527],[744,558,.6663729300704698],[744,559,.2951576299293991],[745,559,1.0329476249762861],[746,560,1.0287279438905246],[747,560,.12926488841857217],[747,561,.8324232903405301],[748,561,.6687846925454237],[748,562,.2924662967182933],[749,562,1.0331184390116956],[750,563,1.0289917847447467],[751,563,.13140266637549056],[751,564,.8300035635173267],[752,564,.6712123389365675],[752,565,.28976558374944045],[753,565,1.033282551406384],[754,566,1.0292521866268258],[755,566,.13356256257828694],[755,567,.8275680255195722],[756,567,.6736557243576808],[756,568,.28705582261488644],[757,568,1.0334398423957492],[758,569,1.0295089961237516],[759,569,.1357446196959754],[759,570,.8251168202441111],[760,570,.6761147058925864],[760,571,.2843373416864493],[761,571,1.0335901948361186],[762,572,1.0297620590403478],[763,572,.13794888146102224],[763,573,.822650089632257],[764,573,.6785891425651428],[764,574,.2816104661359854],[765,574,1.0337334941973482],[766,575,1.0300112203862977],[767,575,.1401753926301894],[767,576,.8201679737037143],[768,576,.6810788952992894],[768,577,.278875517953921],[769,577,1.0338696285566522],[770,578,1.0302563243634062],[771,578,.14242419893016717],[771,579,.8176706105975015],[772,579,.6835838268889712],[772,580,.2761328159639002],[773,580,1.0339984885922306],[774,581,1.0304972143534852],[775,581,.14469534702456693],[775,582,.8151581365963325],[776,582,.6861038019600981],[776,583,.2733826758448351],[777,583,1.0341199675739228],[778,584,1.0307337329063364],[779,584,.14698888445850505],[779,585,.8126306861670012],[780,585,.6886386869453004],[780,586,.2706254101402667],[781,586,1.0342339613562985],[782,587,1.0309657217274584],[783,587,.14930485962229872],[783,588,.810088391991206],[784,588,.6911883500416512],[784,589,.267861328280309],[785,589,1.0343403683692496],[786,590,1.0311930216672842],[787,590,.1516433217043255],[787,591,.80753138499415],[788,591,.6937526611907388],[788,592,.2650907365900638],[789,592,1.0344390896084676],[790,593,1.0314154727094134],[791,593,.1540043206504027],[791,594,.8049597943767033],[792,594,.6963314920402311],[792,595,.2623139383094437],[793,595,1.034530028625162],[794,596,1.0316329139598897],[795,596,.1563879071152346],[795,597,.8023737476471726],[796,597,.6989247159176777],[796,598,.25953123360660696],[797,598,1.0346130915153564],[798,599,1.0318451836365417],[799,599,.15879413242528773],[799,600,.799773370648628],[800,600,.7015322078013413],[800,601,.256742919587031],[801,601,1.0346881869094755],[802,602,1.0320521190584917],[803,602,.16122304853347555],[803,603,.7971587875884961],[804,603,.7041538442893039],[804,604,.2539492903120581],[805,604,1.0347552259598483],[806,605,1.032253556636297],[807,605,.16367470797552194],[807,606,.7945301210672343],[808,606,.7067895035746306],[808,607,.2511506368077842],[809,607,1.0348141223290412],[810,608,1.0324493318619021],[811,608,.16614916382632547],[811,609,.7918874921076472],[812,609,.709439065413448],[812,610,.24834724708249672],[813,610,1.0348647921767888],[814,611,1.032639279299876],[815,611,.1686464696616927],[815,612,.7892310201754584],[816,612,.7121024111062217],[816,613,.24553940613187852],[817,613,1.0349071541468273],[818,614,1.0328232325774014],[819,614,.17116667951302045],[819,615,.7865608232133336],[820,615,.7147794234616441],[820,616,.24272739595679857],[821,616,1.0349411293537],[822,617,1.0330010243763053],[823,617,.17370984782335191],[823,618,.7838770176637189],[824,618,.7174699867799718],[824,619,.23991149556876706],[825,619,1.0349666413686411],[826,620,1.033172486424039],[827,620,.17627602940857415],[827,621,.7811797184924586],[828,621,.720173986819918],[828,622,.23709198101021747],[829,622,1.0349836162040225],[830,623,1.0333374494861536],[831,623,.1788652794118951],[831,624,.7784690392157592],[832,624,.7228913107823544],[832,625,.234269125354749],[833,625,1.0349919822996723],[834,626,1.0334957433581187],[835,626,.18147765326305537],[835,627,.7757450919251534],[836,627,.7256218472813651],[836,628,.23144319872166874],[837,628,1.0349916705072433],[838,629,1.033647196858036],[839,629,.1841132066386375],[839,630,.773007987305413],[840,630,.7283654863202004],[840,631,.22861446829229304],[841,631,1.0349826140730403],[842,632,1.033791637819688],[843,632,.1867719954109858],[843,633,.7702578346682248],[844,633,.7311221192693971],[844,634,.2257831983137577],[845,634,1.0349647486235953],[846,635,1.0339288930859631],[847,635,.18945407561392777],[847,636,.7674947419659374],[848,636,.7338916388459672],[848,637,.22294965011006523],[849,637,1.0349380121480094],[850,638,1.0342420464149167],[851,638,.1924281237940313],[851,639,.5378425839134362],[852,639,.5202524171708031],[852,640,.4568109772775498],[852,641,.05199677850209752],[853,640,.24351254102567055],[853,641,.5225687624093359],[853,642,.2921493228893563],[854,642,.25538328243481595],[854,643,.5241438210153896],[854,644,.23257172527298814],[855,643,.011987787701546808],[855,644,.3172219958151092],[855,645,.4868674616302827],[855,646,.176468024136203],[856,645,.07357769424953754],[856,646,.38294232266815553],[856,647,.4259205416014665],[856,648,.11753224171517974],[857,647,.13246196705929972],[857,648,.4398303708699065],[857,649,.36708371923835004],[857,650,.06067586883292038],[858,649,.18926719214302565],[858,650,.4946697651421086],[858,651,.3040061179704405],[858,652,.005602736230038195],[859,651,.23906249586178907],[859,652,.5231149368578739],[859,653,.2495840468006932],[860,653,.2897970473112013],[860,654,.5026442283960142],[860,655,.20274559579570214],[861,654,.04664315619110009],[861,655,.3473240465998149],[861,656,.4526192727121032],[861,657,.1523595035438806],[862,656,.09766699822939251],[862,657,.3969699779916487],[862,658,.40188113292822186],[862,659,.1034820659161816],[863,658,.14649823031506354],[863,659,.44395391725661004],[863,660,.3530826952522148],[863,661,.056517279244449437],[864,660,.193417537810633],[864,661,.48905272813711814],[864,662,.30196784607077015],[864,663,.011088189502860925],[865,662,.235165441654809],[865,663,.5161755064939912],[865,664,.25593745749264785],[866,664,.27598857145168865],[866,665,.5055165820237347],[866,666,.21733399798014585],[867,665,.03142691535889764],[867,666,.321995701601107],[867,667,.4677769922252197],[867,668,.17692400337387545],[868,667,.07312870986769164],[868,668,.3630952451007391],[868,669,.4264378437134144],[868,670,.13731285791147696],[869,669,.11270032695167025],[869,670,.4009509624326517],[869,671,.38688927555227676],[869,672,.09946833663506985],[870,671,.15050630725355646],[870,672,.43706477714430675],[870,673,.34910378546507886],[870,674,.06336347754327785],[871,673,.1865736616624162],[871,674,.4714631653468664],[871,675,.3125696686315781],[871,676,.028869775846049314],[872,675,.22058655357283705],[872,676,.502393455771382],[872,677,.27458473006488804],[873,677,.24983886475629993],[873,678,.5137748593109537],[873,679,.24315322539257223],[874,678,.0036240101488931717],[874,679,.2812413419420975],[874,680,.49584386088869215],[874,681,.2153614227018543],[875,680,.034735500335029305],[875,681,.3144060917430617],[875,682,.46485314373790926],[875,683,.18595981453922283],[876,682,.0641063484572785],[876,683,.34219859962945964],[876,684,.43549740951782173],[876,685,.15817234633893226],[877,684,.091864261548934],[877,685,.3683988258245694],[877,686,.407752916631107],[877,687,.13197572785525458],[878,686,.11803256264694018],[878,687,.3930296465168421],[878,688,.3815964769154389],[878,689,.10734720976073055],[879,688,.1426340315995158],[879,689,.4161134070872291],[879,690,.35700543857338174],[879,691,.08426456699687354],[880,690,.16569092182506315],[880,691,.43767193845249674],[880,692,.33395766972405766],[880,693,.06270608273067858],[881,692,.1872249764612122],[881,693,.457726572814142],[881,694,.3124315425508366],[881,695,.04265053289025597],[882,694,.20725744392861123],[882,695,.47629815883858434],[882,696,.29240591801936916],[882,697,.024077171256560802],[883,696,.22580909293436022],[883,697,.49340707629100294],[883,698,.272739666255128],[883,699,.006906252371233933],[884,698,.24190643067177103],[884,699,.5047275543873398],[884,700,.2549459812508028],[885,700,.2567100539467806],[885,701,.5031577036963546],[885,702,.24065881914660317],[886,701,.008634717813202674],[886,702,.27224949572145724],[886,703,.49094674236787206],[886,704,.22719544196570912],[887,703,.02292373131969297],[887,704,.28597629401801355],[887,705,.47672398599653515],[887,706,.2143533208320832],[888,705,.035751602096786475],[888,706,.29743237559552355],[888,707,.46390276826706217],[888,708,.20289630196958544],[889,707,.04719579903029385],[889,708,.3075210742305127],[889,709,.45246460115847775],[889,710,.19280622955805915],[890,709,.057274491299496445],[890,710,.3162602301176305],[890,711,.4423913913890736],[890,712,.18406533389761395],[891,711,.0660054606502899],[891,712,.3236673045470217],[891,713,.43366542899845073],[891,714,.17665622026124392],[892,713,.07340611260620647],[892,714,.3297593908476435],[892,715,.4262693763198494],[892,716,.17056185812791913],[893,715,.07949348729590157],[893,716,.33455322495703466],[893,717,.42018625732795906],[893,718,.16576557078065143],[894,717,.0842842699121286],[894,718,.3380651956328206],[894,719,.41539944734620887],[894,720,.16225102525634236],[895,719,.0877948008176482],[895,720,.3403113543186734],[895,721,.41189266310148215],[895,722,.1600022226324315],[896,721,.09004108530992379],[896,722,.3413074246800344],[896,723,.4096499531105413],[896,724,.15900348863810745],[897,723,.0910388030604564],[897,724,.341068811820455],[897,725,.4086556883871424],[897,726,.15923946457791555],[898,725,.09080331723824445],[898,726,.33961061119156805],[898,727,.40889455345709996],[898,728,.16069509855546693],[899,727,.08934968333179105],[899,728,.33694761720865024],[899,729,.41035153766953336],[899,730,.1633556369851302],[900,729,.08669265767999552],[900,730,.33309433158306806],[900,731,.41301192679237225],[900,732,.16720661638248935],[901,731,.08284670572359325],[901,732,.32806497138102175],[901,733,.41686129488304347],[901,734,.17223385542154263],[902,733,.0778260099865808],[902,734,.3218734768206457],[902,735,.421885496422382],[902,736,.17842344724960524],[903,735,.07164447779930824],[903,736,.31453351881588426],[903,737,.42807065870301164],[903,738,.185761752049803],[904,737,.06431574877136567],[904,738,.3060585062772846],[904,739,.435403174462235],[904,740,.19423538984244326],[905,739,.05585320202451507],[905,740,.29646159317816856],[905,741,.4438696947508069],[905,742,.20383123351642937],[906,741,.04626996319383157],[906,742,.2857556853951481],[906,743,.4534571220289279],[906,744,.21453640208174513],[907,743,.03557891120608933],[907,744,.27395344733160587],[907,745,.4640838862781736],[907,746,.2259711147745072],[908,745,.02378916236694485],[908,746,.26064383557298154],[908,747,.4744097020055178],[908,748,.23741469023048611],[908,749,.0029874664482454345],[909,747,.010888485342882084],[909,748,.24524012825579347],[909,749,.47705262348683797],[909,750,.25146343127990345],[909,751,.018030374036361534],[910,750,.23051594568994063],[910,751,.4659638155007443],[910,752,.26789265476733026],[910,753,.034103962104678205],[911,752,.2157780537828917],[911,753,.4490488012027463],[911,754,.28394240197843773],[911,755,.051207169174446954],[912,754,.19869680451466967],[912,755,.4309201309554197],[912,756,.3010279740476113],[912,757,.06933596927309439],[913,756,.18059146729117878],[913,757,.4117775174928008],[913,758,.3191380672559441],[913,759,.08847923890660256],[914,758,.16147315955443303],[914,759,.3916318997027402],[914,760,.33826157637971177],[914,761,.10862604895508292],[915,760,.14135280401108383],[915,761,.37049402581791996],[915,762,.35838758963377015],[915,763,.12976565972904766],[916,762,.12024113359574008],[916,763,.34837445826725],[916,764,.3795053837685538],[916,765,.15188751617588445],[917,764,.0981486962833266],[917,765,.32528357838026745],[917,766,.40160441931520835],[917,767,.17498124323033803],[918,766,.07508585975635881],[918,767,.30123159095005636],[918,768,.42467433597326765],[918,769,.19903664130457108],[919,768,.05106281593203439],[919,769,.2762285286588279],[919,770,.4480441892579001],[919,771,.22091817857346802],[920,770,.02605116606412028],[920,771,.24679268601046497],[920,772,.4613333588465915],[920,773,.24636316696152993],[920,774,.026661594315488448],[921,772,.00017143112777602207],[921,773,.22016507993495968],[921,774,.4450006731455823],[921,775,.27654268563105877],[921,776,.05450703342817279],[922,775,.19537707282293476],[922,776,.4169980825615683],[922,777,.3043455873211709],[922,778,.08322496813649063],[923,777,.16671893224886847],[923,778,.3873911007134449],[923,779,.333032487802997],[923,780,.11284587069811512],[924,779,.1371380798307044],[924,780,.3568813039463011],[924,781,.36262258254682433],[924,782,.14336176762117853],[925,781,.10666365535341012],[925,782,.32548606626333626],[925,783,.39310680323983005],[925,784,.17476372572452537],[926,783,.07530458232966944],[926,784,.2932141772790525],[926,785,.4235343782302751],[926,786,.20429957725699868],[927,785,.04297407877416276],[927,786,.2566282342451322],[927,787,.44609730979381396],[927,788,.23600300007995265],[927,789,.023774697332874434],[928,787,.00973561058609779],[928,788,.22213324067090034],[928,789,.4366882593279592],[928,790,.27231575108916795],[928,791,.058813271383982776],[929,790,.1899112794795718],[929,791,.4051174305988943],[929,792,.3087329260703045],[929,793,.09459113946159277],[930,792,.15536737862587172],[930,793,.36909687837539557],[930,794,.3443998634306182],[930,795,.13113054742980831],[931,794,.11887833690004168],[931,795,.3317399346424034],[931,796,.3809015150071346],[931,797,.1684974582828263],[932,796,.08156315084174257],[932,797,.29356399783457987],[932,798,.4168389957384664],[932,799,.2027189344423823],[933,798,.043285265762028874],[933,799,.2496929999720567],[933,800,.44089395742648096],[933,801,.24052352812737388],[933,802,.03507425254057242],[934,800,.0043335535351657515],[934,801,.21027601904641954],[934,802,.42143856683278325],[934,803,.2844016743443022],[934,804,.07585590645285804],[935,803,.17353832434253885],[935,804,.38262846297038483],[935,805,.3257498632562316],[935,806,.11730189433403454],[936,805,.13268775789077444],[936,806,.3407519309130924],[936,807,.3670972990020704],[936,808,.15947396875496164],[937,807,.09057464650490143],[937,808,.2978183751219168],[937,809,.40749895190525254],[937,810,.19795010289674397],[938,809,.0474866463063797],[938,810,.24850494279526708],[938,811,.4346436181876547],[938,812,.2403211224239381],[938,813,.04014881320170647],[939,811,.003878639500178961],[939,812,.2047038150773143],[939,813,.41157455841171137],[939,814,.28957529821809164],[939,815,.08560320920592149],[940,814,.16385621221760913],[940,815,.36828320787286745],[940,816,.33550406688664397],[940,817,.13164677712134118],[941,816,.11836297424309958],[941,817,.32185871977911545],[941,818,.3799973298161782],[941,819,.17581896778117206],[942,818,.07143918326167292],[942,819,.2705029465809176],[942,820,.4180894904987747],[942,821,.22040151023922497],[942,822,.023261093492508676],[943,820,.023754358875460287],[943,821,.22082957274806367],[943,822,.41735892037093947],[943,823,.26975946681527463],[943,824,.07244459405934162],[944,823,.17462856886910824],[944,824,.376380003235797],[944,825,.32258384746152186],[944,826,.12234695850241085],[945,825,.12764964491952732],[945,826,.32754202842781277],[945,827,.3705351976091778],[945,828,.17002290467196218],[946,827,.07705703864783364],[946,828,.27228373423426855],[946,829,.4119493110954956],[946,830,.21796235075295245],[946,831,.024608216085607083],[947,829,.025780053026113373],[947,830,.2190518649272109],[947,831,.41169318411556594],[947,832,.27077590916361477],[947,833,.07732052594065236],[948,832,.1695115580680664],[948,833,.36773423672329814],[948,834,.3275311475162098],[948,835,.13077893984001213],[949,834,.11922966876699366],[949,835,.31565346594837984],[949,836,.37813100062036553],[949,837,.17991281790206778],[950,836,.06510103041600655],[950,837,.25463712967072577],[950,838,.4162975451493948],[950,839,.23222690463246418],[950,840,.043347365043106205],[951,838,.010682336294089382],[951,839,.20025854636251755],[951,840,.3947874901107556],[951,841,.2917173663646273],[951,842,.09950708368621437],[952,841,.14911244770443477],[952,842,.3431424199239878],[952,843,.3480530442639449],[952,844,.15411315971947762],[953,843,.0934299055238343],[953,844,.2830893937829872],[953,845,.3971235804951196],[953,846,.20716078374370134],[953,847,.020137203526012115],[954,845,.036025540013401365],[954,846,.22261124110739972],[954,847,.40630997808531094],[954,848,.2648205963423913],[954,849,.07872881878459281],[955,848,.16692727676480973],[955,849,.35954874836594064],[955,850,.328443108696204],[955,851,.13751082396144756],[956,850,.11152248261980105],[956,851,.3006327942159715],[956,852,.3829521945790107],[956,853,.1916328343080391],[956,854,.0076262937092498664],[957,852,.0514953905500914],[957,853,.2343500090068106],[957,854,.41021535649217705],[957,855,.25030428726128284],[957,856,.06835964516566889],[958,855,.17563114080501685],[958,856,.3667504924135684],[958,857,.31835263030310357],[958,858,.1299663000321827],[959,857,.11940718803292909],[959,858,.3065438045294419],[959,859,.37569491987401304],[959,860,.18605528589059708],[959,861,.004834820768368334],[960,859,.05684866493974193],[960,860,.2366688077210537],[960,861,.4085057240274029],[960,862,.24678375999468344],[960,863,.06783571840441664],[961,862,.17558642045742334],[961,863,.36451985113857055],[961,864,.3173137388508224],[961,865,.13129392160626782],[962,864,.11725721455632943],[962,865,.3008194332920608],[962,866,.37580301677160466],[962,867,.19024874552861262],[962,868,.011245575393110812],[963,866,.05231298976932004],[963,867,.23017401181136463],[963,868,.40175554736854613],[963,869,.2536595659979476],[963,870,.07679940668774121],[964,869,.16706057585212106],[964,870,.35303258747063304],[964,871,.3251768586309606],[964,872,.14116418004635392],[965,871,.10550294433561781],[965,872,.28424844668945237],[965,873,.38249269088982873],[965,874,.2036626805762719],[965,875,.02684871916582402],[966,873,.03836058116912999],[966,874,.21480488879977247],[966,875,.389260042863657],[966,876,.27095452974310497],[966,877,.09504101254228686],[967,876,.1502807743955375],[967,877,.3328577086192332],[967,878,.3421239629983485],[967,879,.15918522100542254],[968,878,.08474515454977341],[968,879,.25820758590913884],[968,880,.3938397310124852],[968,881,.22523159171338067],[968,882,.05190695217080459],[969,880,.015820211753405387],[969,881,.19007905592596833],[969,882,.36921246833932636],[969,883,.2980889913883655],[969,884,.12132017371569158],[970,883,.1247775639085626],[970,884,.3015570552958629],[970,885,.36552163552482225],[970,886,.18684713857492927],[970,887,.014284415706242481],[971,885,.055013622481818666],[971,886,.2263705108609403],[971,887,.39186593267986564],[971,888,.2561333080985603],[971,889,.08592049273991473],[972,888,.1575841200944441],[972,889,.3370827060887002],[972,890,.33284859953655166],[972,891,.15390042438231766],[973,890,.08972988049108406],[973,891,.2590326783958039],[973,892,.38812639016604245],[973,893,.22348813860080616],[973,894,.054161074977768404],[974,892,.017081968749935856],[974,893,.18740927170107446],[974,894,.3625874079443392],[974,895,.2990263270079478],[974,896,.12613079428882987],[975,895,.11819045745461297],[975,896,.28905735771716573],[975,897,.36789499357104777],[975,898,.19628130377264577],[975,899,.02735424128922767],[976,897,.04494375361325131],[976,898,.21330043570426716],[976,899,.37902147922066165],[976,900,.2697531768133337],[976,901,.10241904377888808],[977,900,.14130067843136315],[977,901,.3150246804904708],[977,902,.3480110183643501],[977,903,.1725701388645175],[977,904,.005966983373903607],[978,902,.06884101502859519],[978,903,.23351128359258333],[978,904,.3898863909020141],[978,905,.24593198700119934],[978,906,.08224765045066],[979,905,.1597942440306211],[979,906,.3346851109670727],[979,907,.3285973743088808],[979,908,.15444027476874822],[980,907,.08792661347585409],[980,908,.2508895640647832],[980,909,.38533070676895603],[980,910,.22893712756876922],[980,911,.06583953763953361],[981,909,.01060737785460527],[981,910,.17530908392596897],[981,911,.34707093920704996],[981,912,.3101853041457825],[981,913,.1404924603408273],[982,912,.1016482122325276],[982,913,.2640331008343238],[982,914,.3757885914855772],[982,915,.21658719088481612],[982,916,.05379076081392352],[983,914,.023321537452804155],[983,915,.1869789080592518],[983,916,.35433193126746176],[983,917,.2960976478285003],[983,918,.13047091456929613],[984,917,.11086010315035294],[984,918,.272590889791831],[984,919,.3683410258652817],[984,920,.20801518542415245],[984,921,.04616290894518408],[985,919,.03202626907959427],[985,920,.1942489952348069],[985,921,.35801621736570555],[985,922,.2871844809716754],[985,923,.12448425960359358],[986,922,.11614980664040801],[986,923,.2769245860037902],[986,924,.3634503371272694],[986,925,.20337777894188264],[986,926,.04278533591281287],[987,924,.036633170664026604],[987,925,.19735437260885233],[987,926,.3585975660673821],[987,927,.28298312203941667],[987,928,.12237172260813765],[988,927,.11761764880185657],[988,928,.2769347836061358],[988,929,.3613222869658947],[988,930,.20269252495682932],[988,931,.04352084243134597],[989,929,.03715658569409518],[989,930,.19646584076452728],[989,931,.3563193376763676],[989,932,.28325914825402143],[989,933,.12401877287718965],[990,932,.11535841088563661],[990,933,.2726772185957825],[990,934,.36193002492598775],[990,935,.2058724789923987],[990,936,.04828585408934835],[991,934,.03368059076582972],[991,935,.19166681871807822],[991,936,.35120102320155516],[991,937,.2879669101334489],[991,938,.12934311950798513],[992,937,.10947528483272252],[992,938,.2643619456949593],[992,939,.36503164238003943],[992,940,.21273290367631378],[992,941,.05704255868679827],[993,939,.026351338857843194],[993,940,.18296002570453515],[993,941,.3430562989307297],[993,942,.29724916938947604],[993,943,.13830626997954892],[994,942,.10006782116457263],[994,943,.2523219642979947],[994,944,.3701807952606593],[994,945,.22297333198451888],[994,946,.06976592160365215],[995,944,.015392306252147629],[995,945,.17030051412165803],[995,946,.33152253946088156],[995,947,.31147369956054877],[995,948,.1509473916728322],[996,947,.087196881644584],[996,948,.2369586950063475],[996,949,.376718339613223],[996,950,.2345765114615184],[996,951,.08521591343298078],[997,949,.0011357385555340561],[997,950,.15263475001807864],[997,951,.311827742306229],[997,952,.32860504822914505],[997,953,.16942021655341175],[997,954,.016626147439510436],[998,952,.07024774813594223],[998,953,.2212622403680772],[998,954,.36621398307130515],[998,955,.2523140266095425],[998,956,.10329850546808812],[999,955,.13345393361930616],[999,956,.2868146645965228],[999,957,.3438149621043634],[999,958,.19052159754051476],[999,959,.038598535306774456],[1e3,957,.04874340776161587],[1e3,958,.20027433884645776],[1e3,959,.35045072214288214],[1e3,960,.2752172040116266],[1e3,961,.1246081801436533],[1001,960,.11153410463061227],[1001,961,.25968030157128735],[1001,962,.3589611456155988],[1001,963,.21376355164890676],[1001,964,.06462574300561937],[1002,962,.024112239164856285],[1002,963,.1744379670887302],[1002,964,.32884307142135794],[1002,965,.3038963549633426],[1002,966,.14989396525089382],[1002,967,.002787631885767016],[1003,965,.08652179776851913],[1003,966,.23158274748299973],[1003,967,.37014802862444746],[1003,968,.23660182809114255],[1003,969,.09233857620429504],[1004,968,.14320871996140178],[1004,969,.2949268298641504],[1004,970,.33370967770704096],[1004,971,.1821563205430922],[1004,972,.03341416685633306],[1005,970,.05691996613850173],[1005,971,.2048164607341282],[1005,972,.34996958396767003],[1005,973,.26846185022737096],[1005,974,.12203613352843197],[1006,973,.11270360292617912],[1006,974,.2573174820670815],[1006,975,.35551075517876596],[1006,976,.21342439841857963],[1006,977,.06808655521031844],[1007,975,.02300584415020569],[1007,976,.1693741701851818],[1007,977,.31909197071849676],[1007,978,.3064750144925845],[1007,979,.1569666027177789],[1007,980,.01237576860780718],[1008,978,.07918600624195261],[1008,979,.22224585329482],[1008,980,.36060022658704466],[1008,981,.24542280629144228],[1008,982,.10372340547250797],[1009,981,.13025049048804305],[1009,982,.2755544084078468],[1009,983,.34173289952302016],[1009,984,.19757209548510224],[1009,985,.052414383405106256],[1010,983,.04055057399599624],[1010,984,.18602861646793578],[1010,985,.3325126760154172],[1010,986,.28836807114447566],[1010,987,.1417402962688462],[1010,988,.0007268068329768394],[1011,986,.0921230324039655],[1011,987,.23132424535108578],[1011,988,.3651955312519228],[1011,989,.23251096307120944],[1011,990,.09383068210249161],[1012,989,.1395300348660987],[1012,990,.2846106560560243],[1012,991,.33325384799782276],[1012,992,.18901293891606955],[1012,993,.045352651706964286],[1013,991,.0492531143811913],[1013,992,.19272260635298227],[1013,993,.33561458168523745],[1013,994,.27986377343343843],[1013,995,.13637852619084528],[1014,994,.09650852938196901],[1014,995,.2338020594070448],[1014,996,.36193613166585775],[1014,997,.22898317334607854],[1014,998,.09193468643195023],[1015,996,.002457496874436509],[1015,997,.14093777570167637],[1015,998,.28368384860268375],[1015,999,.33027760738271117],[1015,1e3,.1884400273628213],[1015,1001,.046968846655108074],[1016,999,.04899295849310335],[1016,1e3,.19034003312195327],[1016,1001,.3313219755276299],[1016,1002,.28105052006571385],[1016,1003,.13948843868730657],[1016,1004,.0023949943264103815],[1017,1002,.09296476581718328],[1017,1003,.22852898102309294],[1017,1004,.35981389159869226],[1017,1005,.23289594529521537],[1017,1006,.09793041579114306],[1018,1005,.13381394889325862],[1018,1006,.27358691892030107],[1018,1007,.33460745416509985],[1018,1008,.1955825556102765],[1018,1009,.05665143264068217],[1019,1007,.040361378819567154],[1019,1008,.17925977203170015],[1019,1009,.31806447498945245],[1019,1010,.2909077306146313],[1019,1011,.1516962543781077],[1019,1012,.01525050343287846],[1020,1010,.08150854362929537],[1020,1011,.21698349128246774],[1020,1012,.3497669475500838],[1020,1013,.24583808157633427],[1020,1014,.11136370502634059],[1021,1013,.1194990282921764],[1021,1014,.25479878825131264],[1021,1015,.34346022054644576],[1021,1016,.20933239464254857],[1021,1017,.07400664151417581],[1022,1015,.023670383811016393],[1022,1016,.1594303860158249],[1022,1017,.29640289279632487],[1022,1018,.3088876485347881],[1022,1019,.17249814489158258],[1022,1020,.03643709112995095],[1023,1018,.062217701784737935],[1023,1019,.19815982330648652],[1023,1020,.3337745723213922],[1023,1021,.3700921432339217],[1023,1022,.3700921432339217]];function _(){const it=a.buffer([1024,1024]);for(let yt=0;yt<$.length;yt++){const ft=$[yt];it.set(ft[2],ft[0],ft[1])}return it.toTensor()}function _e(it,yt,ft){return a.div(a.sub(it,ft),yt)}async function et(it){return function(yt,ft){const bt=yt.length,Tt=yt[0].length/2,Ct=ft.winLength||Tt,_t=ft.hopLength||Math.floor(Ct/4),Ot=ft.center||!1;let kt=Object(b.b)(Ct);for(let zt=0;zt<kt.length;zt++)kt[zt]=kt[zt]/1.5;kt=Object(b.h)(kt,Tt);const Rt=Tt+_t*(bt-1),jt=new Float32Array(Rt);for(let zt=0;zt<bt;zt++){const Ut=zt*_t;let Qt=tt(yt[zt]);Qt=Object(b.a)(Qt,kt),Qt=j(Qt,jt.slice(Ut,Ut+Tt)),jt.set(Qt,Ut)}let Gt=0,Bt=Rt;return Ot?(Gt=Tt/2,Bt=jt.length-Tt/2):(Gt=Rt-64e3,Bt=jt.length-Gt),jt.slice(Gt,Bt)}(it,{nFFt:2048,winLength:2048,hopLength:512,sampleRate:16e3,center:!1})}async function rt(it){const yt=a.tidy(()=>{const Tt=a.slice(it,[0,0,0,0],[1,-1,-1,1]).reshape([1,128,1024]),Ct=(_t=Tt,a.tidy(()=>{const Bt=_().expandDims(0),zt=_e(_t,.0661371661726,.113718730221),Ut=a.exp(zt),Qt=a.matMul(Ut,Bt);return a.sqrt(Qt)}));var _t;const Ot=function(Bt){return a.tidy(()=>{const zt=_().expandDims(0),Ut=_e(Bt,.8,0),Qt=a.cumsum(a.mul(Ut,Math.PI),1);return a.matMul(Qt,zt)})}(a.slice(it,[0,0,0,1],[1,-1,-1,1]).reshape([1,128,1024]));let kt=Ct.mul(a.cos(Ot));const Rt=a.reverse(kt.slice([0,0,0],[1,128,1023]),2);kt=a.concat([kt,Rt],2);let jt=Ct.mul(a.sin(Ot));const Gt=a.reverse(jt.slice([0,0,0],[1,128,1023]),2);return jt=a.concat([jt,a.mul(Gt,-1)],2),[kt,jt]}),ft=await function(Tt,Ct){const _t=a.tidy(()=>{let Rt=a.concat([Tt,Ct],0).expandDims(3);return Rt=a.pad(Rt,[[0,0],[0,0],[1,0],[0,0]]),a.batchToSpaceND(Rt,[1,2],[[0,0],[0,0]]).reshape([128,4096])}),Ot=_t.dataSync(),kt=[];for(let Rt=0;Rt<128;Rt++)kt[Rt]=Ot.slice(4096*Rt,4096*(Rt+1));return _t.dispose(),kt}(yt[0],yt[1]),bt=await et(ft);return yt.forEach(Tt=>Tt.dispose()),bt}function tt(it){const yt=it.length/2,ft=new g(yt),bt=ft.createComplexArray();return ft.inverseTransform(bt,it),ft.fromComplexArray(bt)}function j(it,yt){if(it.length!==yt.length)return console.error(`Array lengths must be equal to add: ${it.length}, ${it.length}`),null;const ft=new Float32Array(it.length);for(let bt=0;bt<it.length;bt++)ft[bt]=it[bt]+yt[bt];return ft}class nt extends a.layers.Layer{constructor(yt=1e-8,ft={}){super(ft),this.epsilon=yt,this.layerConfig=ft,this.supportsMasking=!0}computeOutputShape(yt){return[yt[0],yt[1],yt[2],yt[3]]}call(yt){return a.tidy(()=>{let ft=yt;Array.isArray(ft)&&(ft=ft[0]);const bt=a.mean(a.square(ft),[3],!0);return a.mul(ft,a.rsqrt(a.add(bt,this.epsilon)))})}getClassName(){return"PixelNorm"}}function st(it=1e-8,yt={}){return new nt(it,yt)}class ot extends a.layers.Layer{constructor(yt=2,ft=16,bt={}){super(bt),this.kernelH=yt,this.kernelW=ft,this.layerConfig=bt,this.supportsMasking=!0}computeOutputShape(yt){return[yt[0],2*(this.kernelH-1)+yt[1],2*(this.kernelW-1)+yt[2],yt[3]]}call(yt){let ft=yt;Array.isArray(ft)&&(ft=ft[0]);const bt=this.kernelH-1,Tt=this.kernelW-1;return a.pad(ft,[[0,0],[bt,bt],[Tt,Tt],[0,0]])}getClassName(){return"InitialPad"}}class ut extends a.layers.Layer{constructor(yt=2){super({}),this.scale=yt,this.supportsMasking=!0}computeOutputShape(yt){return[yt[0],this.scale*yt[1],this.scale*yt[2],yt[3]]}call(yt){return a.tidy(()=>{let ft=yt;Array.isArray(ft)&&(ft=ft[0]);const bt=a.tile(ft,[this.scale**2,1,1,1]);return a.batchToSpaceND(bt,[this.scale,this.scale],[[0,0],[0,0]])})}getClassName(){return"BoxUpscale"}}function ht(it=2){return new ut(it)}class pt{constructor(yt){this.nn=a.sequential(),this.nLatents=256,this.nPitches=61,this.minMidiPitch=24,this.maxMidiPitch=84,this.midiPitches=this.maxMidiPitch-this.minMidiPitch+1,this.checkpointURL=yt}async initialize(){const yt=d.d.now(),ft=await Object(d.a)(this.checkpointURL+"/weights_manifest.json").then(bt=>bt.json()).then(bt=>a.io.loadWeights(bt,this.checkpointURL));a.tidy(()=>{for(const bt in ft)if(bt.includes("kernel")){const Tt=ft[bt].shape[0]*ft[bt].shape[1]*ft[bt].shape[2],Ct=ft[bt];ft[bt]=a.mul(Ct,a.sqrt(2/Tt)),Ct.dispose()}this.build(ft),this.initialized=!0,c.logWithDuration("Initialized model",yt,"GANSynth")}),Object.keys(ft).map(bt=>ft[bt].dispose())}dispose(){this.initialized&&(this.nn.dispose(),this.initialized=!1)}isInitialized(){return this.initialized}build(yt){a.tidy(()=>{const ft={filters:256,kernelSize:[2,16],strides:[1,1],activation:"linear",useBias:!0,padding:"valid",dilationRate:[1,1],trainable:!1},bt={inputShape:[1,1,this.nLatents+this.nPitches]};this.nn.add(st(1e-8,bt)),this.nn.add(function(Ct=2,_t=16,Ot={}){return new ot(Ct,_t,Ot)}(2,16)),this.nn.add(a.layers.conv2d(ft)),this.nn.add(a.layers.leakyReLU({alpha:.2})),this.nn.add(st()),ft.padding="same",ft.kernelSize=[3,3],this.nn.add(a.layers.conv2d(ft)),this.nn.add(a.layers.leakyReLU({alpha:.2})),this.nn.add(st());const Tt=[256,256,256,128,64,32];for(let Ct=0;Ct<Tt.length;Ct++)this.nn.add(ht(2)),ft.filters=Tt[Ct],this.nn.add(a.layers.conv2d(ft)),this.nn.add(a.layers.leakyReLU({alpha:.2})),this.nn.add(st()),this.nn.add(a.layers.conv2d(ft)),this.nn.add(a.layers.leakyReLU({alpha:.2})),this.nn.add(st());ft.filters=2,ft.kernelSize=[1,1],ft.activation="tanh",this.nn.add(a.layers.conv2d(ft)),this.setWeights(yt)})}setWeights(yt){function ft(Ct){const _t=yt[Ct];if(_t===void 0)throw Error("Variable not found: "+Ct);return _t}const bt="Generator/progressive_gan_generator/progressive_gan_block_",Tt=[ft(bt+"1/conv0/conv2d/kernel/ExponentialMovingAverage"),ft(bt+"1/conv0/bias/ExponentialMovingAverage"),ft(bt+"1/conv1/conv2d/kernel/ExponentialMovingAverage"),ft(bt+"1/conv1/bias/ExponentialMovingAverage"),ft(bt+"2/conv0/conv2d/kernel/ExponentialMovingAverage"),ft(bt+"2/conv0/bias/ExponentialMovingAverage"),ft(bt+"2/conv1/conv2d/kernel/ExponentialMovingAverage"),ft(bt+"2/conv1/bias/ExponentialMovingAverage"),ft(bt+"3/conv0/conv2d/kernel/ExponentialMovingAverage"),ft(bt+"3/conv0/bias/ExponentialMovingAverage"),ft(bt+"3/conv1/conv2d/kernel/ExponentialMovingAverage"),ft(bt+"3/conv1/bias/ExponentialMovingAverage"),ft(bt+"4/conv0/conv2d/kernel/ExponentialMovingAverage"),ft(bt+"4/conv0/bias/ExponentialMovingAverage"),ft(bt+"4/conv1/conv2d/kernel/ExponentialMovingAverage"),ft(bt+"4/conv1/bias/ExponentialMovingAverage"),ft(bt+"5/conv0/conv2d/kernel/ExponentialMovingAverage"),ft(bt+"5/conv0/bias/ExponentialMovingAverage"),ft(bt+"5/conv1/conv2d/kernel/ExponentialMovingAverage"),ft(bt+"5/conv1/bias/ExponentialMovingAverage"),ft(bt+"6/conv0/conv2d/kernel/ExponentialMovingAverage"),ft(bt+"6/conv0/bias/ExponentialMovingAverage"),ft(bt+"6/conv1/conv2d/kernel/ExponentialMovingAverage"),ft(bt+"6/conv1/bias/ExponentialMovingAverage"),ft(bt+"7/conv0/conv2d/kernel/ExponentialMovingAverage"),ft(bt+"7/conv0/bias/ExponentialMovingAverage"),ft(bt+"7/conv1/conv2d/kernel/ExponentialMovingAverage"),ft(bt+"7/conv1/bias/ExponentialMovingAverage"),ft(bt+"7/to_rgb/conv2d/kernel/ExponentialMovingAverage"),ft(bt+"7/to_rgb/bias/ExponentialMovingAverage")];this.nn.setWeights(Tt)}predict(yt,ft){return this.nn.predict(yt,{batchSize:ft})}randomSample(yt){return a.tidy(()=>{const ft=a.randomNormal([1,this.nLatents],0,1,"float32"),bt=a.tensor1d([yt-this.minMidiPitch],"int32"),Tt=a.oneHot(bt,this.midiPitches),Ct=a.concat([ft,Tt],1).expandDims(1).expandDims(1);return this.predict(Ct,1)})}specgramsToAudio(yt){return rt(yt)}}},function(i,s,o){o.r(s),o.d(s,"OnsetsAndFrames",function(){return _});var a=o(2),c=o(20),d=o(12),g=o(15),b=o(10);function $(rt,tt,j){return rt.shape[0]===1?rt:a.tidy(()=>{const nt=rt.slice([0,0],[1,tt]);let st=j%tt;st<=3&&(st+=tt);const ot=rt.slice([rt.shape[0]-1,rt.shape[1]-st],[-1,-1]);let ut=[nt,ot];if(rt.shape[0]>2){const ht=rt.shape[0]-2;ut=[nt,rt.slice([1,3],[ht,tt]).as3D(1,ht*tt,-1),ot]}return a.concat(ut,1)})}class _{constructor(tt,j=250){this.checkpointURL=tt,this.chunkLength=j}async initialize(){this.dispose();const tt=g.d.now(),j=await Object(g.a)(this.checkpointURL+"/weights_manifest.json").then(nt=>nt.json()).then(nt=>a.io.loadWeights(nt,this.checkpointURL));this.build(j),Object.keys(j).map(nt=>j[nt].dispose()),this.initialized=!0,d.logWithDuration("Initialized model",tt,"O&F")}dispose(){this.initialized&&(this.onsetsCnn.dispose(),this.onsetsRnn.dispose(),this.activationCnn.dispose(),this.frameRnn.dispose(),this.velocityCnn.dispose(),this.initialized=!1)}isInitialized(){return this.initialized}async transcribeFromMelSpec(tt,j=4){this.isInitialized()||this.initialize();const nt=g.d.now();d.log("Computing onsets, frames, and velocities...","O&F",20);const[st,ot,ut]=a.tidy(()=>{const pt=function(it,yt){let ft=Math.ceil(it.length/yt),bt=it.length%yt,Tt=0;if(ft>1&&bt>0&&bt<=3&&(ft-=1,Tt=bt,bt=0),ft===1)return a.tensor2d(it).expandDims(0);const Ct=yt+6,_t=a.tensor2d(it.slice(0,Ct)).expandDims(0),Ot=a.tensor2d(it.slice(it.length-Ct)).expandDims(0);if(ft===2)return a.concat([_t,Ot],0);let kt;kt=bt?a.tensor2d(it).pad([[0,yt-bt],[0,0]]).as3D(ft,yt,-1):a.tensor2d(it.slice(0,it.length-Tt)).as3D(ft,yt,-1);const Rt=a.slice(kt,[0,yt-3],[ft-2,-1]),jt=a.slice(kt,[2,0],[-1,3]),Gt=a.concat([Rt,kt.slice(1,ft-2),jt],1);return a.concat([_t,Gt,Ot],0)}(tt,this.chunkLength);return this.processBatches(pt,this.chunkLength,tt.length,j)});d.log("Converting to NoteSequence...","O&F",20);const ht=async function(pt,it,yt,ft=.5,bt=.5){const Tt=b.a.create(),Ct=new Uint32Array(88),_t=new Uint8Array(88);let Ot=new Uint8Array(88);function kt(Qt,tn){Tt.notes.push(b.a.Note.create({pitch:Qt+21,startTime:.032*(Ct[Qt]-1),endTime:.032*tn,velocity:_t[Qt]})),Ct[Qt]=0}function Rt(Qt,tn,sn){Ct[Qt]?Ot[Qt]||(kt(Qt,tn),Ct[Qt]=tn+1,_t[Qt]=sn):(Ct[Qt]=tn+1,_t[Qt]=sn)}const jt=a.tidy(()=>{let Qt=a.greater(it,ft),tn=a.greater(pt,bt);return Qt=Qt.pad([[0,1],[0,0]]),tn=tn.pad([[0,1],[0,0]]),yt=yt.pad([[0,1],[0,0]]),tn=a.logicalOr(tn,Qt),[tn,Qt,yt]}),[Gt,Bt,zt]=await Promise.all(jt.map(Qt=>Qt.data()));jt.forEach(Qt=>Qt.dispose());const Ut=pt.shape[0];for(let Qt=0;Qt<Ut+1;++Qt){for(let tn=0;tn<88;++tn){const sn=88*Qt+tn;Bt[sn]?Rt(tn,Qt,zt[sn]):!Gt[sn]&&Ct[tn]&&kt(tn,Qt)}Ot=Bt.slice(88*Qt,88*(Qt+1))}return Tt.totalTime=.032*Ut,Tt}(st,ot,ut);return ht.then(()=>{st.dispose(),ot.dispose(),ut.dispose(),d.logWithDuration("Transcribed from mel spec",nt,"O&F")}),ht}async transcribeFromAudioBuffer(tt,j=4){const nt=g.d.now(),st=async function(ot){const ut=await Object(c.j)(ot);return Object(c.i)(Object(c.f)(ut,{sampleRate:16e3,hopLength:512,nMels:229,nFft:2048,fMin:30}))}(tt);return st.then(()=>d.logWithDuration("Converted audio to mel spec",nt,"O&F",20)),st.then(ot=>this.transcribeFromMelSpec(ot.map(ut=>Array.from(ut),j)))}async transcribeFromAudioFile(tt){const j=await Object(c.d)(tt);return this.transcribeFromAudioBuffer(j)}async transcribeFromAudioURL(tt){const j=await Object(c.e)(tt);return this.transcribeFromAudioBuffer(j)}processBatches(tt,j,nt,st){const ot=Tt=>[this.onsetsCnn.predict(Tt,st),this.activationCnn.predict(Tt,st),this.velocityCnn.predict(Tt,st)];let ut,ht,pt;if(tt.shape[0]===1)[ut,ht,pt]=ot(tt.expandDims(-1));else{const Tt=ot(tt.expandDims(-1)),Ct=[];for(let _t=0;_t<3;++_t)Ct.push($(Tt[_t],j,nt));[ut,ht,pt]=Ct}const it=this.onsetsRnn.predict(ut,this.chunkLength);ut.dispose();const yt=a.concat3d([it,ht],-1);ht.dispose();const ft=this.frameRnn.predict(yt,this.chunkLength),bt=a.clipByValue(pt,0,1).mul(a.scalar(80)).add(a.scalar(10)).toInt();return pt.dispose(),[ft.squeeze(),it.squeeze(),bt.squeeze()]}build(tt){a.tidy(()=>{this.onsetsCnn=new _e,this.onsetsCnn.setWeights(tt,"onsets"),this.onsetsRnn=new et([null,this.onsetsCnn.outputShape[2]]),this.onsetsRnn.setWeights(tt,"onsets","onset_probs"),this.activationCnn=new _e("sigmoid"),this.activationCnn.setWeights(tt,"frame","activation_probs"),this.frameRnn=new et([null,176]),this.frameRnn.setWeights(tt,"frame","frame_probs"),this.velocityCnn=new _e("linear"),this.velocityCnn.setWeights(tt,"velocity","onset_velocities")})}}class _e{constructor(tt){this.nn=a.sequential();const j={filters:48,kernelSize:[3,3],activation:"linear",useBias:!1,padding:"same",dilationRate:[1,1],inputShape:[null,229,1],trainable:!1},nt={scale:!1,trainable:!1};this.nn.add(a.layers.conv2d(j)),this.nn.add(a.layers.batchNormalization(nt)),this.nn.add(a.layers.activation({activation:"relu"})),j.inputShape=null,this.nn.add(a.layers.conv2d(j)),this.nn.add(a.layers.batchNormalization(nt)),this.nn.add(a.layers.activation({activation:"relu"})),this.nn.add(a.layers.maxPooling2d({poolSize:[1,2],strides:[1,2]})),j.filters=96,this.nn.add(a.layers.conv2d(j)),this.nn.add(a.layers.batchNormalization(nt)),this.nn.add(a.layers.activation({activation:"relu"})),this.nn.add(a.layers.maxPooling2d({poolSize:[1,2],strides:[1,2]}));const st=this.nn.outputShape;this.nn.add(a.layers.reshape({targetShape:[st[1],st[2]*st[3]]})),this.nn.add(a.layers.dense({units:768,activation:"relu",trainable:!1})),tt&&this.nn.add(a.layers.dense({units:88,activation:tt,trainable:!1})),this.outputShape=this.nn.outputShape}dispose(){this.nn.dispose()}predict(tt,j){return this.nn.predict(tt,{batchSize:j})}setWeights(tt,j,nt){function st(ut){const ht=tt[ut];if(ht===void 0)throw Error("Variable not found: "+ut);return ht}let ot=[st(j+"/conv0/weights"),st(j+"/conv0/BatchNorm/beta"),st(j+"/conv0/BatchNorm/moving_mean"),st(j+"/conv0/BatchNorm/moving_variance"),st(j+"/conv1/weights"),st(j+"/conv1/BatchNorm/beta"),st(j+"/conv1/BatchNorm/moving_mean"),st(j+"/conv1/BatchNorm/moving_variance"),st(j+"/conv2/weights"),st(j+"/conv2/BatchNorm/beta"),st(j+"/conv2/BatchNorm/moving_mean"),st(j+"/conv2/BatchNorm/moving_variance"),st(j+"/fc_end/weights"),st(j+"/fc_end/biases")];nt&&(ot=ot.concat([st(`${j}/${nt}/weights`),st(`${j}/${nt}/biases`)])),this.nn.setWeights(ot)}}class et{constructor(tt,j=384){this.dense=a.sequential(),this.units=j,this.lstm=function(){const nt=a.layers.lstm({inputShape:tt,units:j,returnSequences:!0,recurrentActivation:"sigmoid",returnState:!0,kernelInitializer:"zeros",recurrentInitializer:"zeros",biasInitializer:"zeros",trainable:!1}),st=[a.input({shape:tt}),a.input({shape:[j]}),a.input({shape:[j]})],ot=nt.apply(st);return a.model({inputs:st,outputs:ot})}(),this.dense.add(a.layers.dense({inputShape:[null,j],units:88,activation:"sigmoid",trainable:!1}))}dispose(){this.lstm.dispose(),this.dense.dispose()}setWeights(tt,j,nt){function st(pt){const it=tt[pt];if(it===void 0)throw Error("Variable not found: "+pt);return it}const ot=(pt,it=0)=>{const[yt,ft,bt,Tt]=a.split(pt,4,-1);return a.concat([yt,bt.add(a.scalar(it)),ft,Tt],-1)},ut=pt=>a.split(ot(pt),[pt.shape[0]-this.units,this.units]),ht="cudnn_lstm/rnn/multi_rnn_cell/cell_0/cudnn_compatible_lstm_cell";this.lstm.setWeights(ut(st(`${j}/${ht}/kernel`)).concat(ot(st(`${j}/${ht}/bias`),1))),this.dense.setWeights([st(`${j}/${nt}/weights`),st(`${j}/${nt}/biases`)])}predict(tt,j){return a.tidy(()=>this.predictImpl(tt,j))}predictImpl(tt,j){const nt=tt.shape[1],st=Math.ceil(nt/j);let ot=[a.zeros([1,this.units]),a.zeros([1,this.units])];const ut=[];for(let ht=0;ht<st;++ht){const pt=tt.slice([0,ht*j],[-1,ht<st-1?j:-1]),it=this.lstm.predict([pt,ot[0],ot[1]]);ut.push(this.dense.predict(it[0])),ot=it.slice(1)}return ut.length===1?ut[0]:a.concat3d(ut,1)}}},function(i,s,o){o.r(s),o.d(s,"Coconet",function(){return et});var a=o(0),c=o(15),d=o(12),g=o(13),b=o(10);const $=/iPad|iPhone|iPod/.test(navigator.userAgent),_={useSoftmaxLoss:!0,batchNormVarianceEpsilon:1e-7,numInstruments:4,numFilters:128,numLayers:33,numRegularConvLayers:0,dilation:[[1,1],[2,2],[4,4],[8,8],[16,16],[16,32],[1,1],[2,2],[4,4],[8,8],[16,16],[16,32],[1,1],[2,2],[4,4],[8,8],[16,16],[16,32],[1,1],[2,2],[4,4],[8,8],[16,16],[16,32],[1,1],[2,2],[4,4],[8,8],[16,16],[16,32]],layers:null,interleaveSplitEveryNLayers:16,numPointwiseSplits:4};class _e{constructor(tt,j){this.residualPeriod=2,this.outputForResidual=null,this.residualCounter=-1,this.rawVars=null,this.spec=tt,this.rawVars=j}dispose(){this.rawVars!==null&&a.gb(this.rawVars),this.outputForResidual&&this.outputForResidual.dispose()}predictFromPianoroll(tt,j){return a.Hb(()=>{let nt=this.getConvnetInput(tt,j);const st=this.spec.layers.length;for(let ot=0;ot<st;ot++){this.residualCounter+=1,this.residualSave(nt);let ut=null;this.spec.interleaveSplitEveryNLayers&&ot>0&&ot<st-2&&ot%(this.spec.interleaveSplitEveryNLayers+1)==0&&(ut=this.spec.numPointwiseSplits),nt=this.applyConvolution(nt,this.spec.layers[ot],ot,ot>=this.spec.numRegularConvLayers,ut),nt=this.applyResidual(nt,ot===0,ot===st-1,ot),nt=this.applyActivation(nt,this.spec.layers[ot],ot),nt=this.applyPooling(nt,this.spec.layers[ot],ot)}return this.computePredictions(nt)})}computePredictions(tt){return this.spec.useSoftmaxLoss?tt.transpose([0,1,3,2]).softmax().transpose([0,1,3,2]):tt.sigmoid()}residualReset(){this.outputForResidual=null,this.residualCounter=0}residualSave(tt){this.residualCounter%this.residualPeriod==1&&(this.outputForResidual=tt)}applyResidual(tt,j,nt,st){return this.outputForResidual==null?tt:this.outputForResidual.shape[this.outputForResidual.shape.length-1]!==tt.shape[tt.shape.length-1]?(this.residualReset(),tt):(this.residualCounter%this.residualPeriod==0&&(j||nt||(tt=tt.add(this.outputForResidual))),tt)}getVar(tt,j){const nt=`model/conv${j}/${tt}`;return this.rawVars[nt]}getSepConvVar(tt,j){const nt=`model/conv${j}/SeparableConv2d/${tt}`;return this.rawVars[nt]}getPointwiseSplitVar(tt,j,nt){const st=`model/conv${j}/split_${j}_${nt}/${tt}`;return this.rawVars[st]}applyConvolution(tt,j,nt,st,ot){if(j.filters==null)return tt;const ut=j.filters,ht=j.convStride||1,pt=j.convPad?j.convPad.toLowerCase():"same";let it=null;if(st){const yt=this.getSepConvVar("depthwise_weights",nt);if(ot){it=a.eb(tt,yt,[ht,ht],pt,"NHWC",j.dilation);const ft=a.Cb(it,ot,it.rank-1),bt=[];for(let Tt=0;Tt<ot;Tt++){const Ct=ut[3]/ot,_t=this.getPointwiseSplitVar("kernel",nt,Tt),Ot=this.getPointwiseSplitVar("bias",nt,Tt),kt=a.mb(ft[Tt].reshape([-1,Ct]),_t,!1,!1),Rt=a.W(kt,Ot);bt.push(Rt.reshape([ft[Tt].shape[0],ft[Tt].shape[1],ft[Tt].shape[2],Ct]))}it=a.bb(bt,it.rank-1)}else{const ft=this.getSepConvVar("pointwise_weights",nt),bt=this.getSepConvVar("biases",nt);it=a.zb(tt,yt,ft,[ht,ht],pt,j.dilation,"NHWC").add(bt)}}else{const yt=this.getVar("weights",nt),ft=j.convStride||1,bt=j.convPad?j.convPad.toLowerCase():"same";it=a.cb(tt,yt,[ft,ft],bt,"NHWC",[1,1])}return this.applyBatchnorm(it,nt)}applyBatchnorm(tt,j){const nt=this.getVar("gamma",j),st=this.getVar("beta",j),ot=this.getVar("popmean",j),ut=this.getVar("popvariance",j);if($){const ht=ut.arraySync()[0][0][0],pt=a.Gb(ht.map(it=>Math.sqrt(it+this.spec.batchNormVarianceEpsilon)));return tt.sub(ot).mul(nt.div(pt)).add(st)}return a.Y(tt,a.Db(ot),a.Db(ut),a.Db(st),a.Db(nt),this.spec.batchNormVarianceEpsilon)}applyActivation(tt,j,nt){return j.activation==="identity"?tt:tt.relu()}applyPooling(tt,j,nt){if(j.pooling==null)return tt;const st=j.pooling,ot=j.poolPad?j.poolPad.toLowerCase():"same";return a.ob(tt,[st[0],st[1]],[st[0],st[1]],ot)}getConvnetInput(tt,j){return tt=a.yb(1,"float32").sub(j).mul(tt),j=a.yb(1,"float32").sub(j),tt.concat(j,3)}}class et{constructor(tt){this.spec=null,this.initialized=!1,this.checkpointURL=tt,this.spec=_}async initialize(){this.dispose();const tt=c.d.now();this.instantiateFromSpec();const j=await Object(c.a)(this.checkpointURL+"/weights_manifest.json").then(nt=>nt.json()).then(nt=>a.kb.loadWeights(nt,this.checkpointURL));this.convnet=new _e(this.spec,j),this.initialized=!0,d.logWithDuration("Initialized model",tt,"Coconet")}dispose(){this.convnet&&this.convnet.dispose(),this.initialized=!1}isInitialized(){return this.initialized}instantiateFromSpec(){this.spec.layers=[],this.spec.layers.push({filters:[3,3,2*this.spec.numInstruments,this.spec.numFilters]});for(let tt=0;tt<this.spec.numLayers-3;tt++)this.spec.layers.push({filters:[3,3,this.spec.numFilters,this.spec.numFilters],dilation:this.spec.dilation?this.spec.dilation[tt]:null});this.spec.layers.push({filters:[2,2,this.spec.numFilters,this.spec.numFilters]}),this.spec.layers.push({filters:[2,2,this.spec.numFilters,this.spec.numInstruments],activation:"identity"})}async infill(tt,j){if(g.assertIsRelativeQuantizedSequence(tt),tt.notes.length===0)throw new Error(`NoteSequence ${tt.id} does not have any notes to infill.`);const nt=tt.totalQuantizedSteps||tt.notes[tt.notes.length-1].quantizedEndStep,st=function(yt,ft){const bt=a.Hb(()=>a.Nb([ft,46,4]).arraySync());return yt.notes.forEach(Tt=>{const Ct=Tt.pitch-36,_t=Tt.quantizedStartStep,Ot=Tt.quantizedEndStep-Tt.quantizedStartStep,kt=Tt.instrument;if(kt<0||kt>=4)d.log(`Found invalid voice ${kt}. Skipping.`,"Coconet",5);else{if(_t+Ot>ft)throw new Error(`NoteSequence ${yt.id} has notes that are longer than the sequence's
          totalQuantizedSteps.`);for(let Rt=_t;Rt<_t+Ot;Rt++)bt[Rt][Ct][kt]=1}}),a.Gb([bt])}(tt,nt);let ot,ut=.99,ht=96;j?(ht=j.numIterations||ht,ut=j.temperature||ut,ot=this.getCompletionMaskFromInput(j.infillMask,st)):ot=this.getCompletionMask(st);const pt=await this.run(st,ht,ut,ot),it=function(yt,ft){const bt=a.Hb(()=>yt.reshape([ft,46,4]).arraySync()),Tt=b.a.create(),Ct=[];for(let _t=0;_t<ft;_t++)for(let Ot=0;Ot<46;Ot++)for(let kt=0;kt<4;kt++)if(bt[_t][Ot][kt]===1){const Rt=b.a.Note.create({pitch:Ot+36,instrument:kt,quantizedStartStep:_t,quantizedEndStep:_t+1});Ct.push(Rt)}return Tt.notes=Ct,Tt.totalQuantizedSteps=Ct[Ct.length-1].quantizedEndStep,Tt.quantizationInfo={stepsPerQuarter:4},Tt}(pt,nt);return st.dispose(),pt.dispose(),ot.dispose(),it}async run(tt,j,nt,st){return this.gibbs(tt,j,nt,st)}getCompletionMaskFromInput(tt,j){if(tt){const nt=a.Z([j.shape[1],4]);for(let st=0;st<tt.length;st++)nt.set(1,tt[st].step,tt[st].voice);return a.Hb(()=>nt.toTensor().expandDims(1).tile([1,46,1]).expandDims(0))}return this.getCompletionMask(j)}getCompletionMask(tt){return a.Hb(()=>{const j=tt.sum(2,!0).equal(a.yb(0,"float32"));return a.ab(j,"float32").add(a.Ob(tt))})}async gibbs(tt,j,nt,st){const ot=a.yb(j,"float32");let ut=tt.clone();for(let ht=0;ht<j;ht++){const pt=this.yaoSchedule(ht,ot),it=this.bernoulliMask(ut.shape,pt,st);await a.qb();const yt=a.Hb(()=>this.convnet.predictFromPianoroll(ut,it));await a.qb(),ut=a.Hb(()=>{const ft=this.samplePredictions(yt,nt),bt=a.Mb(a.ab(it,"bool"),ft,ut);return ut.dispose(),yt.dispose(),it.dispose(),pt.dispose(),bt}),await a.qb()}return ot.dispose(),ut}yaoSchedule(tt,j){return a.Hb(()=>{const nt=a.yb(.1,"float32"),st=a.yb(.9,"float32"),ot=a.yb(.7,"float32"),ut=st.sub(nt).mul(a.yb(tt,"float32")).div(j),ht=st.sub(ut).div(ot);return nt.reshape([1]).concat(ht.reshape([1])).max()})}bernoulliMask(tt,j,nt){return a.Hb(()=>{const[st,ot,ut,ht]=tt,pt=a.Ib(a.tb([st,ot,1,ht],0,1,"float32"),[1,1,ut,1]).less(j);return a.ab(pt,"float32").mul(nt)})}samplePredictions(tt,j){return a.Hb(()=>{tt=a.sb(tt,a.yb(1/j,"float32"));const nt=a.db(tt,2,!1,!1),st=nt.slice([0,0,nt.shape[2]-1,0],[nt.shape[0],nt.shape[1],1,nt.shape[3]]),ot=a.tb(st.shape,0,1,"float32").mul(st).less(nt).argMax(2);return a.rb(ot.flatten(),tt.shape[2],1,0).reshape([tt.shape[0],tt.shape[1],tt.shape[3],tt.shape[2]]).transpose([0,1,3,2])})}}},function(i,s,o){o.r(s),o.d(s,"MusicRNN",function(){return et});var a=o(2),c=o(48),d=o(37),g=o(36),b=o(15),$=o(12),_=o(13);class _e{constructor(tt,j,nt){this.cells=tt,this.attnLength=j,this.attnSize=nt}static isWrapped(tt){return"rnn/attention_cell_wrapper/kernel"in tt}initialize(tt){const j="rnn/attention_cell_wrapper/";this.attnInputMatrix=tt[j+"kernel"],this.attnInputBias=tt[j+"bias"],this.attnW=tt[j+"attention/attn_w"],this.attnV=tt[j+"attention/attn_v"],this.attnMatrix=tt[j+"attention/kernel"],this.attnBias=tt[j+"attention/bias"],this.attnOutputMatrix=tt[j+"attention_output_projection/kernel"],this.attnOutputBias=tt[j+"attention_output_projection/bias"]}initState(){return{attention:a.zeros([this.attnSize]),attentionState:a.zeros([1,this.attnSize*this.attnLength])}}call(tt,j,nt,st){const ot=a.concat([tt,st.attention.as2D(1,-1)],1),ut=a.add(a.matMul(ot,this.attnInputMatrix),this.attnInputBias.as2D(1,-1));[j,nt]=a.multiRNNCell(this.cells,ut,j,nt);const ht=a.reshape(st.attentionState,[-1,this.attnLength,1,this.attnSize]),pt=a.conv2d(ht,this.attnW,[1,1],"same"),it=[];for(let Gt=0;Gt<j.length;Gt++)it.push(j[Gt]),it.push(nt[Gt]);const yt=a.concat(it,1),ft=a.matMul(yt,this.attnMatrix).reshape([-1,1,1,this.attnSize]),bt=a.sum(a.mul(this.attnV,a.tanh(a.add(pt,ft))),[2,3]),Tt=a.softmax(bt),Ct=a.sum(a.mul(a.reshape(Tt,[-1,this.attnLength,1,1]),ht),[1,2]).reshape([-1,this.attnSize]),_t=st.attentionState.reshape([-1,this.attnLength,this.attnSize]),Ot=a.slice(_t,[0,1,0],[_t.shape[0],_t.shape[1]-1,_t.shape[2]]),kt=a.add(a.matMul(a.concat([nt[2],Ct],1),this.attnOutputMatrix),this.attnOutputBias),Rt=Ct.flatten(),jt=a.concat([Ot,kt.as3D(kt.shape[0],1,kt.shape[1])],1).reshape([-1,this.attnLength*this.attnSize]);return{output:kt,c:j,h:nt,attentionState:{attention:Rt,attentionState:jt}}}}class et{constructor(tt,j){this.checkpointURL=tt,this.spec=j,this.initialized=!1,this.rawVars={},this.biasShapes=[],this.lstmCells=[]}isInitialized(){return this.initialized}instantiateFromSpec(){this.dataConverter=g.converterFromSpec(this.spec.dataConverter),this.attentionLength=this.spec.attentionLength,this.chordEncoder=this.spec.chordEncoder?d.chordEncoderFromType(this.spec.chordEncoder):void 0,this.auxInputs=this.spec.auxInputs?this.spec.auxInputs.map(tt=>c.auxiliaryInputFromSpec(tt)):void 0}async initialize(){this.dispose();const tt=b.d.now();this.spec||await Object(b.a)(this.checkpointURL+"/config.json").then(ut=>ut.json()).then(ut=>{if(ut.type!=="MusicRNN")throw new Error(`Attempted to instantiate MusicRNN model with incorrect type:
                  `+ut.type);this.spec=ut}),this.instantiateFromSpec();const j=await Object(b.a)(this.checkpointURL+"/weights_manifest.json").then(ut=>ut.json()).then(ut=>a.io.loadWeights(ut,this.checkpointURL)),nt=_e.isWrapped(j),st=nt?"rnn/attention_cell_wrapper/":"rnn/";this.forgetBias=a.scalar(1),this.lstmCells.length=0,this.biasShapes.length=0;let ot=0;for(;;){const ut=st+"multi_rnn_cell/cell_%d/basic_lstm_cell/".replace("%d",ot.toString());if(!(ut+"kernel"in j))break;this.lstmCells.push((ht,pt,it)=>a.basicLSTMCell(this.forgetBias,j[ut+"kernel"],j[ut+"bias"],ht,pt,it)),this.biasShapes.push(j[ut+"bias"].shape[0]),++ot}this.lstmFcW=j["fully_connected/weights"],this.lstmFcB=j["fully_connected/biases"],nt&&(this.attentionWrapper=new _e(this.lstmCells,this.attentionLength,this.biasShapes[0]/4),this.attentionWrapper.initialize(j)),this.rawVars=j,this.initialized=!0,$.logWithDuration("Initialized model",tt,"MusicRNN")}dispose(){Object.keys(this.rawVars).forEach(tt=>this.rawVars[tt].dispose()),this.rawVars={},this.forgetBias&&(this.forgetBias.dispose(),this.forgetBias=void 0),this.initialized=!1}async continueSequence(tt,j,nt,st){return(await this.continueSequenceImpl(tt,j,nt,st,!1)).sequence}async continueSequenceAndReturnProbabilities(tt,j,nt,st){return this.continueSequenceImpl(tt,j,nt,st,!0)}async continueSequenceImpl(tt,j,nt,st,ot){if(_.assertIsRelativeQuantizedSequence(tt),this.chordEncoder&&!st)throw new Error("Chord progression expected but not provided.");if(!this.chordEncoder&&st)throw new Error("Unexpected chord progression provided.");this.initialized||await this.initialize();const ut=b.d.now(),ht=a.tidy(()=>{const ft=this.dataConverter.toTensor(tt),bt=ft.shape[0],Tt=ft.shape[1],Ct=this.chordEncoder?this.chordEncoder.encodeProgression(st,bt+j):void 0,_t=this.auxInputs?a.concat(this.auxInputs.map(Rt=>Rt.getTensors(bt+j)),1):void 0,Ot=this.sampleRnn(ft,j,nt,Ct,_t,ot),kt=Ot.samples;return{samples:a.stack(kt).as2D(kt.length,Tt),probs:Ot.probs}}),pt=await ht,it=this.dataConverter.toNoteSequence(pt.samples,tt.quantizationInfo.stepsPerQuarter),yt=[];if(ot)for(let ft=0;ft<pt.probs.length;ft++)yt.push(await pt.probs[ft].data()),pt.probs[ft].dispose();return ht.samples.dispose(),it.then(()=>$.logWithDuration("Continuation completed",ut,"MusicRNN",20)),{sequence:it,probs:yt}}sampleRnn(tt,j,nt,st,ot,ut){const ht=tt.shape[0],pt=tt.shape[1];let it=[],yt=[];for(let Rt=0;Rt<this.biasShapes.length;Rt++)it.push(a.zeros([1,this.biasShapes[Rt]/4])),yt.push(a.zeros([1,this.biasShapes[Rt]/4]));let ft,bt=this.attentionWrapper?this.attentionWrapper.initState():null;tt=tt.toFloat();const Tt=[],Ct=[],_t=a.split(tt.toFloat(),ht),Ot=st?a.split(st,st.shape[0]):void 0,kt=ot?a.split(ot,ot.shape[0]):void 0;for(let Rt=0;Rt<ht+j;Rt++){let jt;if(Rt<ht)jt=_t[Rt];else{let Bt,zt=ft.matMul(this.lstmFcW).add(this.lstmFcB).as1D();nt?(zt=zt.div(a.scalar(nt)),Bt=a.multinomial(zt,1).as1D()):Bt=zt.argMax().as1D(),ut&&Ct.push(a.softmax(zt)),jt=a.oneHot(Bt,pt).toFloat(),Tt.push(jt.as1D())}if(Rt===ht+j-1)break;const Gt=[];if(Ot&&Gt.push(Ot[Rt+1]),Gt.push(jt),kt&&Gt.push(kt[Rt]),jt=a.concat(Gt,1),this.attentionWrapper){const Bt=this.attentionWrapper.call(jt,it,yt,bt);it=Bt.c,yt=Bt.h,bt=Bt.attentionState,ft=Bt.output}else[it,yt]=a.multiRNNCell(this.lstmCells,jt,it,yt),ft=yt[yt.length-1]}return{samples:Tt,probs:Ct}}}},function(i,s,o){o.r(s),o.d(s,"MidiMe",function(){return b}),o.d(s,"Decoder",function(){return ut}),o.d(s,"Encoder",function(){return tt}),o.d(s,"MusicVAE",function(){return _t});var a=o(2),c=o(12),d=o(15);class g extends a.layers.Layer{constructor(){super({})}computeOutputShape(kt){return kt[0]}call(kt){return a.tidy(()=>{const[Rt,jt]=kt;return a.add(a.mul(a.randomNormal(jt.shape),jt),Rt)})}getClassName(){return"SamplingLayer"}}class b{constructor(kt={}){this.trained=!1,this.initialized=!1,this.config={encoder_layers:kt.encoder_layers||[1024,256,64],decoder_layers:kt.decoder_layers||[64,256,1024],input_size:kt.input_size||256,latent_size:kt.latent_size||4,beta:kt.beta||1,epochs:kt.epochs||10}}dispose(){this.initialized&&(this.encoder.dispose(),this.decoder.dispose(),this.vae.dispose(),this.initialized=!1)}initialize(){this.dispose();const kt=d.d.now(),Rt=a.input({shape:[this.config.input_size]});this.encoder=this.getEncoder(Rt);const[jt,,]=this.encoder.apply(Rt);this.decoder=this.getDecoder(jt.shape.slice(1));const Gt=this.decoder.apply(jt);this.vae=a.model({inputs:Rt,outputs:Gt,name:"vae"}),this.initialized=!0,c.logWithDuration("Initialized model",kt,"MidiMe")}async train(kt,Rt){const jt=d.d.now();this.trained=!1;let Gt=.001;a.ENV.get("WEBGL_RENDER_FLOAT32_ENABLED")===!1&&a.ENV.get("WEBGL_DOWNLOAD_FLOAT_ENABLED")===!1&&a.ENV.get("WEBGL_VERSION")===1&&(Gt=5e-5);const Bt=a.train.adam(Gt);for(let zt=0;zt<this.config.epochs;zt++)await a.nextFrame(),await Bt.minimize(()=>a.tidy(()=>{const[,Ut,Qt]=this.encoder.predict(kt),tn=this.vae.predict(kt),sn=this.loss(Ut,Qt,tn,kt);return Rt&&Rt(zt,{y:tn,total:sn.totalLoss.arraySync(),losses:[sn.reconLoss.arraySync(),sn.latentLoss.arraySync()]}),sn.totalLoss})),await a.nextFrame();c.logWithDuration("Training finished",jt,"MidiMe"),this.trained=!0,Bt.dispose()}async sample(kt=1){return this.initialized||await this.initialize(),a.tidy(()=>{const Rt=a.randomNormal([kt,this.config.latent_size]);return this.decoder.predict(Rt)})}async decode(kt){return this.initialized||await this.initialize(),this.decoder.predict(kt)}async encode(kt){this.initialized||await this.initialize();const[Rt,,]=this.encoder.predict(kt);return Rt}predict(kt){return this.vae.predict(kt)}getEncoder(kt){let Rt=kt;for(let zt=0;zt<this.config.encoder_layers.length;zt++)Rt=a.layers.dense({units:this.config.encoder_layers[zt],activation:"relu"}).apply(Rt);const jt=this.getAffineLayers(Rt,this.config.latent_size,kt,!1),Gt=this.getAffineLayers(Rt,this.config.latent_size,kt,!0),Bt=new g().apply([jt,Gt]);return a.model({inputs:kt,outputs:[Bt,jt,Gt],name:"encoder"})}getDecoder(kt){const Rt=a.input({shape:kt});let jt=Rt;for(let Bt=0;Bt<this.config.decoder_layers.length;Bt++)jt=a.layers.dense({units:this.config.decoder_layers[Bt],activation:"relu"}).apply(jt);const Gt=this.getAffineLayers(jt,this.config.input_size,Rt,!1);return a.model({inputs:Rt,outputs:Gt,name:"decoder"})}loss(kt,Rt,jt,Gt){return a.tidy(()=>{const Bt=this.klLoss(kt,Rt),zt=this.reconstructionLoss(Gt,jt);return{latentLoss:Bt,reconLoss:zt,totalLoss:a.add(zt,a.mul(Bt,this.config.beta))}})}reconstructionLoss(kt,Rt){return a.tidy(()=>{const jt=a.pow(a.sub(kt,Rt),2),Gt=a.div(jt,a.mul(2,a.pow(a.ones([1]),2)));return a.mean(a.sum(Gt,-1))})}klLoss(kt,Rt){return a.tidy(()=>{const jt=a.pow(kt,2),Gt=a.pow(Rt,2),Bt=a.add(1,a.log(Gt)),zt=a.add(jt,Gt),Ut=a.sub(Bt,zt),Qt=a.div(a.mean(a.sum(Ut,-1)),2);return a.mul(-1,Qt)})}getAffineLayers(kt,Rt,jt,Gt){const Bt=a.layers.dense({units:Rt}).apply(kt);return Gt?a.layers.activation({activation:"softplus"}).apply(Bt):Bt}}var $=o(37),_=o(8),_e=o(36);class et{constructor(kt,Rt){if(kt===void 0)throw Error("`kernel` is undefined.");if(Rt===void 0)throw Error("`bias` is undefined.");this.kernel=kt,this.bias=Rt}}function rt(Ot,kt){return kt.matMul(Ot.kernel).add(Ot.bias)}class tt{}class j{constructor(kt,Rt){this.lstmFwVars=kt,this.lstmBwVars=Rt}process(kt){return a.tidy(()=>[this.singleDirection(kt,!0),this.singleDirection(kt,!1)])}singleDirection(kt,Rt){const jt=kt.shape[0],Gt=kt.shape[1],Bt=Rt?this.lstmFwVars:this.lstmBwVars;let zt=[a.zeros([jt,Bt.bias.shape[0]/4]),a.zeros([jt,Bt.bias.shape[0]/4])];const Ut=a.scalar(1),Qt=(ln,an)=>a.basicLSTMCell(Ut,Bt.kernel,Bt.bias,ln,an[0],an[1]),tn=a.split(kt.toFloat(),Gt,1),sn=[];for(const ln of Rt?tn:tn.reverse())zt=Qt(ln.squeeze([1]),zt),sn.push(zt[1]);return Rt?sn:sn.reverse()}}class nt extends tt{constructor(kt,Rt,jt){super(),this.bidirectionalLstm=new j(kt,Rt),this.muVars=jt,this.zDims=jt?this.muVars.bias.shape[0]:null}encode(kt,Rt){if(Rt)throw new Error("Variable-length segments not supported in flat encoder");return a.tidy(()=>{const[jt,Gt]=this.bidirectionalLstm.process(kt),Bt=a.concat([jt[jt.length-1],Gt[0]],1);return this.muVars?rt(this.muVars,Bt):Bt})}}class st extends tt{constructor(kt,Rt,jt){super(),this.baseEncoders=kt,this.numSteps=Rt,this.muVars=jt,this.zDims=this.muVars.bias.shape[0]}encode(kt,Rt){if(Rt){if(kt.shape[0]!==1)throw new Error("When using variable-length segments, batch size must be 1.");if(Rt.length!==this.numSteps[0])throw new Error("Must provide length for all variable-length segments.")}return a.tidy(()=>{let jt=kt;for(let Gt=0;Gt<this.baseEncoders.length;++Gt){const Bt=this.numSteps[Gt],zt=a.split(jt,Bt,1),Ut=[];for(let Qt=0;Qt<Bt;++Qt)Ut.push(this.baseEncoders[Gt].encode(Gt===0&&Rt?a.slice3d(zt[Qt],[0,0,0],[1,Rt[Qt],-1]):zt[Qt]));jt=a.stack(Ut,1)}return rt(this.muVars,jt.squeeze([1]))})}}function ot(Ot,kt,Rt){const jt=[],Gt=[],Bt=[],zt=a.split(rt(Rt,Ot).tanh(),2*kt.length,1);for(let Ut=0;Ut<kt.length;++Ut){const Qt=kt[Ut],tn=a.scalar(1);jt.push((sn,ln,an)=>a.basicLSTMCell(tn,Qt.kernel,Qt.bias,sn,ln,an)),Gt.push(zt[2*Ut]),Bt.push(zt[2*Ut+1])}return{cell:jt,c:Gt,h:Bt}}class ut{}class ht extends ut{constructor(kt,Rt,jt,Gt,Bt,zt){super(),this.lstmCellVars=kt,this.zToInitStateVars=Rt,this.outputProjectVars=jt,this.zDims=this.zToInitStateVars.kernel.shape[0],this.outputDims=Gt||jt.bias.shape[0],Bt&&zt&&(this.controlBidirectionalLstm=new j(Bt,zt))}decode(kt,Rt,jt,Gt,Bt){const zt=kt.shape[0];return a.tidy(()=>{const Ut=ot(kt,this.lstmCellVars,this.zToInitStateVars);let Qt=Bt?a.expandDims(Bt,0):void 0;const tn=[];let sn=jt||a.zeros([zt,this.outputDims]);if(this.controlBidirectionalLstm){const[an,Yt]=this.controlBidirectionalLstm.process(Qt);Qt=a.concat([a.stack(an,1),a.stack(Yt,1)],2)}const ln=Qt?a.split(a.tile(Qt,[zt,1,1]),Bt.shape[0],1):void 0;for(let an=0;an<Rt;++an){const Yt=ln?[sn,kt,a.squeeze(ln[an],[1])]:[sn,kt];[Ut.c,Ut.h]=a.multiRNNCell(Ut.cell,a.concat(Yt,1),Ut.c,Ut.h);const cn=rt(this.outputProjectVars,Ut.h[Ut.h.length-1]);sn=this.sample(cn,Gt),tn.push(sn)}return a.stack(tn,1)})}}class pt extends ht{sample(kt,Rt){const jt=kt;return(Rt?a.greaterEqual(a.sigmoid(jt.div(a.scalar(Rt))),a.randomUniform(jt.shape)):a.greaterEqual(jt,0)).toFloat()}}class it extends ht{sample(kt,Rt){const jt=kt,Gt=Rt?a.multinomial(jt.div(a.scalar(Rt)),1).as1D():jt.argMax(1).as1D();return a.oneHot(Gt,this.outputDims).toFloat()}}class yt extends ht{constructor(kt,Rt,jt,Gt,Bt,zt){super(kt,Rt,jt,Gt.numDims,Bt,zt),this.nade=Gt}sample(kt,Rt){const[jt,Gt]=a.split(kt,[this.nade.numHidden,this.nade.numDims],1);return this.nade.sample(jt,Gt)}}class ft extends ht{sample(kt,Rt){let[jt,Gt,Bt]=a.split(kt,3,1);if(Gt=a.sigmoid(Gt),Bt=a.tanh(Bt),Rt){jt=a.sigmoid(jt.div(a.scalar(Rt)));const zt=a.randomUniform(jt.shape,0,1);jt=a.greater(jt,zt).toFloat()}else jt=a.greater(a.sigmoid(jt),.5).toFloat();return a.concat([jt,Gt,Bt],1)}}class bt extends ut{constructor(kt){super(),this.coreDecoders=kt,this.numDecoders=this.coreDecoders.length,this.zDims=this.coreDecoders[0].zDims,this.outputDims=this.coreDecoders.reduce((Rt,jt)=>Rt+jt.outputDims,0)}decodeSeparately(kt,Rt,jt,Gt,Bt){const zt=[];for(let Ut=0;Ut<this.coreDecoders.length;++Ut)zt.push(this.coreDecoders[Ut].decode(kt,Rt,jt[Ut],Gt,Bt));return zt}decode(kt,Rt,jt,Gt,Bt){return a.tidy(()=>{const zt=this.decodeSeparately(kt,Rt,this.coreDecoders.map(Ut=>jt),Gt,Bt);return a.concat(zt,-1)})}}class Tt extends ut{constructor(kt,Rt,jt,Gt){super(),this.splitDecoder=new bt(kt),this.lstmCellVars=Rt,this.zToInitStateVars=jt,this.numSteps=Gt,this.zDims=this.zToInitStateVars.kernel.shape[0],this.outputDims=this.splitDecoder.outputDims}decode(kt,Rt,jt,Gt,Bt){const zt=kt.shape[0];return a.tidy(()=>{const Ut=ot(kt,this.lstmCellVars,this.zToInitStateVars),Qt=[];let tn=new Array(this.splitDecoder.numDecoders).fill(void 0);const sn=a.zeros([zt,1]),ln=Bt?a.split(Bt,this.numSteps):void 0;for(let an=0;an<this.numSteps;++an){[Ut.c,Ut.h]=a.multiRNNCell(Ut.cell,sn,Ut.c,Ut.h);const Yt=this.splitDecoder.decodeSeparately(Ut.h[Ut.h.length-1],Rt/this.numSteps,tn,Gt,ln?ln[an]:void 0);Qt.push(a.concat(Yt,-1)),tn=Yt.map(cn=>cn.slice([0,cn.shape[1]-1,0],[zt,1,cn.shape[cn.rank-1]]).squeeze([1]).toFloat())}return a.concat(Qt,1)})}}class Ct{constructor(kt,Rt){this.numDims=kt.shape[0],this.numHidden=kt.shape[2],this.encWeights=kt.as2D(this.numDims,this.numHidden),this.decWeightsT=Rt.as2D(this.numDims,this.numHidden)}sample(kt,Rt){const jt=kt.shape[0];return a.tidy(()=>{const Gt=[];let Bt=kt.clone();for(let zt=0;zt<this.numDims;zt++){const Ut=a.sigmoid(Bt),Qt=this.encWeights.slice([zt,0],[1,this.numHidden]).as1D(),tn=this.decWeightsT.slice([zt,0],[1,this.numHidden]),sn=Rt.slice([0,zt],[jt,1]).add(a.matMul(Ut,tn,!1,!0)).sigmoid().greaterEqual(a.scalar(.5)).toFloat().as1D();zt<this.numDims-1&&(Bt=Bt.add(a.outerProduct(sn.toFloat(),Qt))),Gt.push(sn)}return a.stack(Gt,1)})}}class _t{constructor(kt,Rt){this.initialized=!1,this.checkpointURL=kt,this.spec=Rt}instantiateFromSpec(){this.dataConverter=_e.converterFromSpec(this.spec.dataConverter),this.chordEncoder=this.spec.chordEncoder?$.chordEncoderFromType(this.spec.chordEncoder):void 0}dispose(){this.rawVars!==void 0&&Object.keys(this.rawVars).forEach(kt=>this.rawVars[kt].dispose()),this.encoder=void 0,this.decoder=void 0,this.initialized=!1}getLstmLayers(kt,Rt){const jt=[];let Gt=0;for(;;){const Bt=kt.replace("%d",Gt.toString());if(!(Bt+"kernel"in Rt))break;jt.push(new et(Rt[Bt+"kernel"],Rt[Bt+"bias"])),++Gt}return jt}async initialize(){this.dispose();const kt=d.d.now();this.spec||await Object(d.a)(this.checkpointURL+"/config.json").then(cn=>cn.json()).then(cn=>{if(cn.type!=="MusicVAE")throw new Error(`Attempted to instantiate MusicVAE model with incorrect type:
                  `+cn.type);this.spec=cn}),this.instantiateFromSpec();const Rt="cell_%d/bidirectional_rnn/%s/multi_rnn_cell/cell_0/lstm_cell/",jt="encoder/"+Rt,Gt="encoder/hierarchical_level_%d/"+Rt.replace("%d","0"),Bt="control_preprocessing/"+Rt,zt=await Object(d.a)(this.checkpointURL+"/weights_manifest.json").then(cn=>cn.json()).then(cn=>a.io.loadWeights(cn,this.checkpointURL));this.rawVars=zt;const Ut=new et(zt["encoder/mu/kernel"],zt["encoder/mu/bias"]);if(this.dataConverter.numSegments){const cn=this.getLstmLayers(Gt.replace("%s","fw"),zt),Wt=this.getLstmLayers(Gt.replace("%s","bw"),zt);if(cn.length!==Wt.length||cn.length!==2)throw Error(`Only 2 hierarchical encoder levels are supported. Got ${cn.length} forward and ${Wt.length} backward.`);const wt=[0,1].map(xt=>new nt(cn[xt],Wt[xt]));this.encoder=new st(wt,[this.dataConverter.numSegments,1],Ut)}else{const cn=this.getLstmLayers(jt.replace("%s","fw"),zt),Wt=this.getLstmLayers(jt.replace("%s","bw"),zt);if(cn.length!==Wt.length||cn.length!==1)throw Error(`Only single-layer bidirectional encoders are supported. Got ${cn.length} forward and ${Wt.length} backward.`);this.encoder=new nt(cn[0],Wt[0],Ut)}const Qt=Bt.replace("%s","fw").replace("%d","0")+"kernel"in zt,tn=this.dataConverter.numSegments?"core_decoder/":"",sn=[];if(this.dataConverter.NUM_SPLITS)for(let cn=0;cn<this.dataConverter.NUM_SPLITS;++cn)sn.push(`${tn}core_decoder_${cn}/decoder/`);else sn.push(tn+"decoder/");let ln=[null],an=[null];if(Qt&&(ln=this.getLstmLayers(Bt.replace("%s","fw"),zt),an=this.getLstmLayers(Bt.replace("%s","bw"),zt),ln.length!==an.length||ln.length!==1))throw Error(`Only single-layer bidirectional control preprocessing is supported. Got ${ln.length} forward and ${an.length} backward.`);const Yt=sn.map(cn=>{const Wt=this.getLstmLayers(cn+"multi_rnn_cell/cell_%d/lstm_cell/",zt),wt=new et(zt[cn+"z_to_initial_state/kernel"],zt[cn+"z_to_initial_state/bias"]),xt=new et(zt[cn+"output_projection/kernel"],zt[cn+"output_projection/bias"]);return cn+"nade/w_enc"in zt?new yt(Wt,wt,xt,new Ct(zt[cn+"nade/w_enc"],zt[cn+"nade/w_dec_t"]),ln[0],an[0]):this.spec.dataConverter.type==="GrooveConverter"?new ft(Wt,wt,xt,void 0,ln[0],an[0]):this.spec.useBooleanDecoder?new pt(Wt,wt,xt,void 0,ln[0],an[0]):new it(Wt,wt,xt,void 0,ln[0],an[0])});if(this.dataConverter.numSegments){const cn=this.getLstmLayers("decoder/hierarchical_level_0/cell_%d/lstm_cell/",zt),Wt=new et(zt["decoder/hierarchical_level_0/initial_state/kernel"],zt["decoder/hierarchical_level_0/initial_state/bias"]);this.decoder=new Tt(Yt,cn,Wt,this.dataConverter.numSegments)}else Yt.length===1?this.decoder=Yt[0]:this.decoder=new bt(Yt);this.zDims=this.decoder.zDims,this.initialized=!0,c.logWithDuration("Initialized model",kt,"MusicVAE")}isInitialized(){return this.initialized}checkControlArgs(kt){const Rt=(kt=kt||{}).extraControls||{};if(this.chordEncoder&&!kt.chordProgression)throw new Error("Chord progression expected but not provided.");if(!this.chordEncoder&&kt.chordProgression)throw new Error("Unexpected chord progression provided.");if(this.chordEncoder&&this.dataConverter.endTensor&&kt.chordProgression.length>1)throw new Error("Multiple chords not supported when using variable-length segments.");if(this.spec.conditionOnKey&&kt.key==null)throw new Error("Key expected but not provided.");if(!this.spec.conditionOnKey&&kt.key!=null)throw new Error("Unexpected key provided.");if(this.spec.extraControls)for(const Gt of this.spec.extraControls){if(!(Gt.name in Rt))throw new Error("Missing control signal: "+Gt.name);if(Rt[Gt.name].shape[1]!==Gt.depth)throw new Error(`Control signal ${Gt.name} has invalid depth: ${Rt[Gt.name].shape[1]} != ${Gt.depth}`)}const jt=this.spec.extraControls?new Set(this.spec.extraControls.map(Gt=>Gt.name)):new Set;for(const Gt in Rt)jt.has(Gt)||c.log("Unspecified control signal provided: "+Gt,"MusicVAE",5)}controlArgsToTensor(kt){return kt=kt||{},a.tidy(()=>{const Rt=[];if(kt.chordProgression){const jt=this.encodeChordProgression(kt.chordProgression);Rt.push(jt)}if(kt.key!=null){const jt=a.oneHot(a.fill([this.dataConverter.numSteps],kt.key,"int32"),12);Rt.push(jt)}if(kt.extraControls)for(const jt of this.spec.extraControls)Rt.push(kt.extraControls[jt.name]);return Rt.length?a.concat2d(Rt,1):void 0})}async interpolateTensors(kt,Rt,jt,Gt){this.initialized||await this.initialize();const Bt=await this.encodeTensors(kt,Gt),zt=a.tidy(()=>this.getInterpolatedZs(Bt,Rt));Bt.dispose();const Ut=await this.decodeTensors(zt,jt,Gt);return zt.dispose(),Ut}async interpolate(kt,Rt,jt,Gt){this.checkControlArgs(Gt),this.initialized||await this.initialize();const Bt=await this.encode(kt,Gt),zt=a.tidy(()=>this.getInterpolatedZs(Bt,Rt));Bt.dispose();const Ut=this.decode(zt,jt,Gt);return zt.dispose(),Ut.then(()=>c.logWithDuration("Interpolation completed",0,"MusicVAE",20)),Ut}async getSegmentLengths(kt){if(kt.shape[0]>1)throw new Error("Variable-length segments not supported for batch size > 1.");const Rt=this.dataConverter.numSteps,jt=this.dataConverter.numSegments,Gt=a.tidy(()=>a.min(a.equal(kt.squeeze([0]),this.dataConverter.endTensor.expandDims(0)),1)),Bt=await Gt.data();Gt.dispose();const zt=Rt/jt,Ut=[];let Qt=0,tn=Bt.indexOf(1);for(;tn!==-1;)Ut.push(tn-Qt+1),Qt+=zt,tn=Bt.indexOf(1,Qt);if(Ut.length!==jt)throw new Error(`Incorrect number of segments: ${Ut.length} != ${jt}`);return Ut}encodeChordProgression(kt){const Rt=this.dataConverter.numSteps,jt=this.dataConverter.numSegments,Gt=this.dataConverter.SEGMENTED_BY_TRACK?Rt/jt:Rt,Bt=this.dataConverter.SEGMENTED_BY_TRACK?a.concat2d([this.chordEncoder.encode(_.NO_CHORD).expandDims(0),this.chordEncoder.encodeProgression(kt,Gt-1)],0):this.chordEncoder.encodeProgression(kt,Gt);return this.dataConverter.SEGMENTED_BY_TRACK?a.tile(Bt,[jt,1]):Bt}async encodeTensors(kt,Rt){this.checkControlArgs(Rt),this.initialized||await this.initialize();const jt=this.dataConverter.endTensor?await this.getSegmentLengths(kt):void 0;return a.tidy(()=>{const Gt=this.controlArgsToTensor(Rt),Bt=[kt];if(Gt){const Ut=a.tile(a.expandDims(Gt,0),[kt.shape[0],1,1]);Bt.push(Ut)}const zt=a.concat3d(Bt,2);return this.encoder.encode(zt,jt)})}async encode(kt,Rt){this.initialized||await this.initialize();const jt=d.d.now(),Gt=a.tidy(()=>a.stack(kt.map(zt=>this.dataConverter.toTensor(zt)))),Bt=await this.encodeTensors(Gt,Rt);return Gt.dispose(),c.logWithDuration("Encoding completed",jt,"MusicVAE",20),Bt}async decodeTensors(kt,Rt,jt){return this.checkControlArgs(jt),this.initialized||await this.initialize(),a.tidy(()=>{const Gt=this.controlArgsToTensor(jt);return this.decoder.decode(kt,this.dataConverter.numSteps,void 0,Rt,Gt)})}async decode(kt,Rt,jt,Gt=_.DEFAULT_STEPS_PER_QUARTER,Bt=_.DEFAULT_QUARTERS_PER_MINUTE){this.initialized||await this.initialize();const zt=d.d.now(),Ut=await this.decodeTensors(kt,Rt,jt),Qt=a.tidy(()=>a.split(Ut,Ut.shape[0]).map(sn=>sn.squeeze([0]))),tn=[];for(const sn of Qt)tn.push(await this.dataConverter.toNoteSequence(sn,Gt,Bt)),sn.dispose();return Ut.dispose(),c.logWithDuration("Decoding completed",zt,"MusicVAE",20),tn}getInterpolatedZs(kt,Rt){if(typeof Rt=="number"&&(Rt=[Rt]),kt.shape[0]!==2&&kt.shape[0]!==4)throw new Error("Invalid number of input sequences. Requires length 2, or 4");if(Rt.length!==1&&Rt.length!==2)throw new Error("Invalid number of dimensions. Requires length 1, or 2.");const jt=Rt[0],Gt=Rt.length===2?Rt[1]:jt;return a.tidy(()=>{const Bt=a.linspace(0,1,jt),zt=kt.slice([0,0],[1,kt.shape[1]]).as1D(),Ut=kt.slice([1,0],[1,kt.shape[1]]).as1D();if(kt.shape[0]===2){const Qt=Ut.sub(zt);return a.outerProduct(Bt,Qt).add(zt)}if(kt.shape[0]===4){const Qt=a.linspace(0,1,Gt),tn=kt.slice([2,0],[1,kt.shape[1]]).as1D(),sn=kt.slice([3,0],[1,kt.shape[1]]).as1D(),ln=a.scalar(1).sub(Bt),an=a.scalar(1).sub(Qt);let Yt=zt.mul(a.outerProduct(an,ln).as3D(Gt,jt,1));return Yt=a.addStrict(Yt,Ut.mul(a.outerProduct(Qt,ln).as3D(Gt,jt,1))),Yt=a.addStrict(Yt,tn.mul(a.outerProduct(an,Bt).as3D(Gt,jt,1))),Yt=a.addStrict(Yt,sn.mul(a.outerProduct(Qt,Bt).as3D(Gt,jt,1))),Yt.as2D(jt*Gt,kt.shape[1])}throw new Error("Invalid number of note sequences. Requires length 2, or 4")})}async sampleTensors(kt,Rt=.5,jt){this.checkControlArgs(jt),this.initialized||await this.initialize();const Gt=a.tidy(()=>a.randomNormal([kt,this.decoder.zDims])),Bt=await this.decodeTensors(Gt,Rt,jt);return Gt.dispose(),Bt}async sample(kt,Rt=.5,jt,Gt=_.DEFAULT_STEPS_PER_QUARTER,Bt=_.DEFAULT_QUARTERS_PER_MINUTE){this.checkControlArgs(jt),this.initialized||await this.initialize();const zt=d.d.now(),Ut=a.tidy(()=>a.randomNormal([kt,this.decoder.zDims])),Qt=this.decode(Ut,Rt,jt,Gt,Bt);return Ut.dispose(),Qt.then(()=>c.logWithDuration("Sampling completed",zt,"MusicVAE",20)),Qt}async similarTensors(kt,Rt,jt,Gt,Bt){if(jt<0||jt>1)throw new Error("Similarity must be between 0 and 1.");this.initialized||await this.initialize();const zt=a.expandDims(kt,0),Ut=await this.encodeTensors(zt,Bt);zt.dispose();const Qt=a.tidy(()=>{const sn=a.randomNormal([Rt,this.decoder.zDims]);return a.add(Ut.mul(jt),sn.mul(1-jt))});Ut.dispose();const tn=await this.decodeTensors(Qt,Gt,Bt);return Qt.dispose(),tn}async similar(kt,Rt,jt,Gt,Bt){if(this.checkControlArgs(Bt),jt<0||jt>1)throw new Error("Similarity must be between 0 and 1.");this.initialized||await this.initialize();const zt=await this.encode([kt],Bt),Ut=a.tidy(()=>{const tn=a.randomNormal([Rt,this.decoder.zDims]);return a.add(zt.mul(jt),tn.mul(1-jt))});zt.dispose();const Qt=this.decode(Ut,Gt,Bt);return Ut.dispose(),Qt.then(()=>c.logWithDuration("Similar sequence generation completed",0,"MusicVAE",20)),Qt}}},function(i,s,o){o.r(s),o.d(s,"PianoGenie",function(){return nt}),o.d(s,"PianoGenieKeysig",function(){return ot}),o.d(s,"PianoGenieChord",function(){return st}),o.d(s,"PianoGenieKeysigChordFamily",function(){return ht}),o.d(s,"PianoGenieKeysigChord",function(){return ut});var a=o(2),c=o(15),d=o(73);function g(pt){for(let it=0;it<2;++it)pt.c[it].dispose(),pt.h[it].dispose()}function b(pt,it,yt){if((it=it!==void 0?it:1)<0||it>1)throw new Error("Invalid temperature specified");let ft;if(it===0)ft=a.argMax(pt,0);else{it<1&&(pt=a.div(pt,a.scalar(it,"float32")));const bt=a.reshape(a.softmax(pt,0),[1,-1]),Tt=a.multinomial(bt,1,yt,!0);ft=a.reshape(Tt,[])}return ft}class $ extends class{constructor(it){this.checkpointURL=it,this.initialized=!1}isInitialized(){return this.initialized}async initialize(it){if(this.initialized&&this.dispose(),this.checkpointURL===void 0&&it===void 0)throw new Error("Need to specify either URI or static variables");if(it===void 0){const yt=await Object(c.a)(this.checkpointURL+"/weights_manifest.json").then(ft=>ft.json()).then(ft=>a.io.loadWeights(ft,this.checkpointURL));this.modelVars=yt}else this.modelVars=it;this.decLSTMCells=[],this.decForgetBias=a.scalar(1,"float32");for(let yt=0;yt<2;++yt){const ft=`phero_model/decoder/rnn/rnn/multi_rnn_cell/cell_${yt}/lstm_cell/`;this.decLSTMCells.push((bt,Tt,Ct)=>a.basicLSTMCell(this.decForgetBias,this.modelVars[ft+"kernel"],this.modelVars[ft+"bias"],bt,Tt,Ct))}this.resetState(),this.initialized=!0,this.next(0),this.resetState()}getRnnInputFeats(){return a.tidy(()=>{const it=a.tensor1d([this.button],"float32");return a.sub(a.mul(2,a.div(it,7)),1).as1D()})}next(it,yt,ft){return this.nextWithCustomSamplingFunction(it,bt=>b(bt,yt,ft))}nextFromKeyList(it,yt,ft,bt){return this.nextWithCustomSamplingFunction(it,Tt=>{const Ct=a.tensor1d(yt,"int32");let _t=b(Tt=a.gather(Tt,Ct),ft,bt);const Ot=a.gather(Ct,a.reshape(_t,[1]));return _t=a.reshape(Ot,[]),_t})}nextFromKeyWhitelist(it,yt,ft,bt){return d.logging.log("nextFromKeyWhitelist() is deprecated, and will be removed in a future          version. Please use nextFromKeyList() instead","PianoGenie",5),this.nextFromKeyList(it,yt,ft,bt)}nextWithCustomSamplingFunction(it,yt){const ft=this.lastState;this.button=it;const bt=this.getRnnInputFeats(),[Tt,Ct]=this.evaluateModelAndSample(bt,ft,yt);return bt.dispose(),g(this.lastState),this.lastState=Tt,Ct}evaluateModelAndSample(it,yt,ft){if(!this.initialized)throw new Error("Model is not initialized.");const[bt,Tt]=a.tidy(()=>{let Ct=a.matMul(a.expandDims(it,0),this.modelVars["phero_model/decoder/rnn_input/dense/kernel"]);Ct=a.add(Ct,this.modelVars["phero_model/decoder/rnn_input/dense/bias"]);const[_t,Ot]=a.multiRNNCell(this.decLSTMCells,Ct,yt.c,yt.h),kt={c:_t,h:Ot};let Rt=a.matMul(Ot[1],this.modelVars["phero_model/decoder/pitches/dense/kernel"]);Rt=a.add(Rt,this.modelVars["phero_model/decoder/pitches/dense/bias"]);const jt=a.reshape(Rt,[88]);return[kt,ft(jt).dataSync()[0]]});return[bt,Tt]}resetState(){this.lastState!==void 0&&g(this.lastState),this.lastState=function(){const it={c:[],h:[]};for(let yt=0;yt<2;++yt)it.c.push(a.zeros([1,128],"float32")),it.h.push(a.zeros([1,128],"float32"));return it}()}dispose(){this.initialized&&(Object.keys(this.modelVars).forEach(it=>this.modelVars[it].dispose()),this.decForgetBias.dispose(),g(this.lastState),this.initialized=!1)}}{getRnnInputFeats(){return a.tidy(()=>{const it=[super.getRnnInputFeats()],yt=this.lastOutput,ft=this.lastTime,bt=this.time;let Tt;this.deltaTimeOverride===void 0?Tt=(bt.getTime()-ft.getTime())/1e3:(Tt=this.deltaTimeOverride,this.deltaTimeOverride=void 0);const Ct=a.scalar(yt,"int32"),_t=a.addStrict(Ct,a.scalar(1,"int32")),Ot=a.cast(a.oneHot(_t,89),"float32");it.push(Ot);const kt=a.scalar(Tt,"float32"),Rt=a.round(a.mul(kt,31.25)),jt=a.minimum(Rt,32),Gt=a.cast(a.add(jt,1e-4),"int32"),Bt=a.oneHot(Gt,33),zt=a.cast(Bt,"float32");return it.push(zt),this.lastTime=bt,a.concat1d(it)})}nextWithCustomSamplingFunction(it,yt){this.time=new Date;const ft=super.nextWithCustomSamplingFunction(it,yt);return this.lastOutput=ft,this.lastTime=this.time,ft}overrideLastOutput(it){this.lastOutput=it}overrideDeltaTime(it){this.deltaTimeOverride=it}resetState(){super.resetState(),this.lastOutput=-1,this.lastTime=new Date,this.lastTime.setSeconds(this.lastTime.getSeconds()-1e5),this.time=new Date}}var _,_e;(function(pt){pt[pt.None=0]="None",pt[pt.C=1]="C",pt[pt.Cs=2]="Cs",pt[pt.D=3]="D",pt[pt.Eb=4]="Eb",pt[pt.E=5]="E",pt[pt.F=6]="F",pt[pt.Fs=7]="Fs",pt[pt.G=8]="G",pt[pt.Ab=9]="Ab",pt[pt.A=10]="A",pt[pt.Bb=11]="Bb",pt[pt.B=12]="B"})(_||(_={})),function(pt){pt[pt.None=0]="None",pt[pt.Maj=1]="Maj",pt[pt.Min=2]="Min",pt[pt.Aug=3]="Aug",pt[pt.Dim=4]="Dim",pt[pt.Seven=5]="Seven",pt[pt.Maj7=6]="Maj7",pt[pt.Min7=7]="Min7",pt[pt.Min7b5=8]="Min7b5"}(_e||(_e={}));class et extends ${getRnnInputFeats(){return a.tidy(()=>{const it=[super.getRnnInputFeats()],yt=a.scalar(this.chordRoot,"int32"),ft=a.subStrict(yt,a.scalar(1,"int32")),bt=a.cast(a.oneHot(ft,12),"float32");it.push(bt);const Tt=a.scalar(this.chordFamily,"int32"),Ct=a.subStrict(Tt,a.scalar(1,"int32")),_t=a.cast(a.oneHot(Ct,8),"float32");return it.push(_t),a.concat1d(it)})}setChordRoot(it){this.chordRoot=it}setChordFamily(it){this.chordFamily=it}resetState(){super.resetState(),this.chordRoot=_.None,this.chordFamily=_e.None}}class rt extends ${getRnnInputFeats(){return a.tidy(()=>{const it=[super.getRnnInputFeats()],yt=a.scalar(this.keySignature,"int32"),ft=a.subStrict(yt,a.scalar(1,"int32")),bt=a.cast(a.oneHot(ft,12),"float32");return it.push(bt),a.concat1d(it)})}setKeySignature(it){this.keySignature=it}resetState(){super.resetState(),this.keySignature=_.None}}class tt extends rt{getRnnInputFeats(){return a.tidy(()=>{const it=[super.getRnnInputFeats()],yt=a.scalar(this.chordRoot,"int32"),ft=a.subStrict(yt,a.scalar(1,"int32")),bt=a.cast(a.oneHot(ft,12),"float32");it.push(bt);const Tt=a.scalar(this.chordFamily,"int32"),Ct=a.subStrict(Tt,a.scalar(1,"int32")),_t=a.cast(a.oneHot(Ct,8),"float32");return it.push(_t),a.concat1d(it)})}setChordRoot(it){this.chordRoot=it}setChordFamily(it){this.chordFamily=it}resetState(){super.resetState(),this.chordRoot=_.None,this.chordFamily=_e.None}}class j extends rt{getRnnInputFeats(){return a.tidy(()=>{const it=[super.getRnnInputFeats()],yt=a.scalar(this.chordFamily,"int32"),ft=a.subStrict(yt,a.scalar(1,"int32")),bt=a.cast(a.oneHot(ft,8),"float32");return it.push(bt),a.concat1d(it)})}setChordFamily(it){this.chordFamily=it}resetState(){super.resetState(),this.chordFamily=_e.None}}class nt extends ${}class st extends et{}class ot extends rt{}class ut extends tt{}class ht extends j{}},,function(i,s,o){o.r(s),o.d(s,"tf",function(){return a}),o.d(s,"aux_inputs",function(){return c.aux_inputs}),o.d(s,"chords",function(){return c.chords}),o.d(s,"constants",function(){return c.constants}),o.d(s,"data",function(){return c.data}),o.d(s,"logging",function(){return c.logging}),o.d(s,"melodies",function(){return c.melodies}),o.d(s,"performance",function(){return c.performance}),o.d(s,"sequences",function(){return c.sequences}),o.d(s,"MetronomeCallbackObject",function(){return c.MetronomeCallbackObject}),o.d(s,"Metronome",function(){return c.Metronome}),o.d(s,"MidiConversionError",function(){return c.MidiConversionError}),o.d(s,"midiToSequenceProto",function(){return c.midiToSequenceProto}),o.d(s,"sequenceProtoToMidi",function(){return c.sequenceProtoToMidi}),o.d(s,"urlToBlob",function(){return c.urlToBlob}),o.d(s,"blobToNoteSequence",function(){return c.blobToNoteSequence}),o.d(s,"urlToNoteSequence",function(){return c.urlToNoteSequence}),o.d(s,"BasePlayerCallback",function(){return c.BasePlayerCallback}),o.d(s,"BasePlayer",function(){return c.BasePlayer}),o.d(s,"Player",function(){return c.Player}),o.d(s,"SoundFontPlayer",function(){return c.SoundFontPlayer}),o.d(s,"PlayerWithClick",function(){return c.PlayerWithClick}),o.d(s,"MIDIPlayer",function(){return c.MIDIPlayer}),o.d(s,"BaseRecorderCallback",function(){return c.BaseRecorderCallback}),o.d(s,"Recorder",function(){return c.Recorder}),o.d(s,"BaseVisualizer",function(){return c.BaseVisualizer}),o.d(s,"PianoRollCanvasVisualizer",function(){return c.PianoRollCanvasVisualizer}),o.d(s,"Visualizer",function(){return c.Visualizer}),o.d(s,"BaseSVGVisualizer",function(){return c.BaseSVGVisualizer}),o.d(s,"PianoRollSVGVisualizer",function(){return c.PianoRollSVGVisualizer}),o.d(s,"WaterfallSVGVisualizer",function(){return c.WaterfallSVGVisualizer}),o.d(s,"ScrollType",function(){return c.ScrollType}),o.d(s,"StaffSVGVisualizer",function(){return c.StaffSVGVisualizer}),o.d(s,"Coconet",function(){return d.Coconet}),o.d(s,"MusicRNN",function(){return g.MusicRNN}),o.d(s,"MidiMe",function(){return b.MidiMe}),o.d(s,"Decoder",function(){return b.Decoder}),o.d(s,"Encoder",function(){return b.Encoder}),o.d(s,"MusicVAE",function(){return b.MusicVAE}),o.d(s,"PianoGenie",function(){return $.PianoGenie}),o.d(s,"PianoGenieKeysig",function(){return $.PianoGenieKeysig}),o.d(s,"PianoGenieChord",function(){return $.PianoGenieChord}),o.d(s,"PianoGenieKeysigChordFamily",function(){return $.PianoGenieKeysigChordFamily}),o.d(s,"PianoGenieKeysigChord",function(){return $.PianoGenieKeysigChord}),o.d(s,"NoteSequence",function(){return _.NoteSequence}),o.d(s,"OnsetsAndFrames",function(){return _e.OnsetsAndFrames}),o.d(s,"GANSynth",function(){return et.GANSynth}),o.d(s,"SPICE",function(){return tt}),o.d(s,"DDSP",function(){return j.DDSP});var a=o(2),c=o(73),d=o(185),g=o(186),b=o(187),$=o(188),_=o(181),_e=o(184),et=o(183),rt=o(25);class tt{constructor(st){this.modelUrl=st||"https://tfhub.dev/google/tfjs-model/spice/2/default/1"}async initialize(){this.spiceModel=await Object(rt.h)(this.modelUrl),this.initialized=!0}async getAudioFeatures(st,ot){return await Object(rt.g)(st,this.spiceModel,ot)}dispose(){this.initialized&&(this.spiceModel.dispose(),this.initialized=!1)}isInitialized(){return this.initialized}}var j=o(182)}])})})(es6);var es6Exports=es6.exports;function LoadAudio(i){const{setLoading:s}=useStore();function o(a){es6Exports.Player.tone.Transport.stop(),es6Exports.Player.tone.Transport.cancel(),s(),i.OAF.transcribeFromAudioFile(a.target.files[0]).then(c=>{i.setNoteSequence(c)})}return jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment,{children:[jsxRuntimeExports.jsx("input",{type:"file",onChange:o,id:"files"}),jsxRuntimeExports.jsx("label",{id:"file-label",for:"files",children:"Upload File"})]})}const App$1="";function SequencePlayer(i){function s(){switch(i.player.getPlayState()){case"stopped":i.player.start(i.vis.noteSequence);break;case"paused":i.player.resume();break;case"started":i.player.pause()}}return jsxRuntimeExports.jsx("button",{disabled:i.ns==null,id:"play-pause-button",onClick:s,children:icon})}const icon=jsxRuntimeExports.jsx("svg",{fill:"#000000",version:"1.1",id:"Capa_1",xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:"25",height:"25",viewBox:"0 0 45.974 45.975","xml:space":"preserve",children:jsxRuntimeExports.jsx("g",{children:jsxRuntimeExports.jsxs("g",{children:[jsxRuntimeExports.jsx("g",{children:jsxRuntimeExports.jsx("path",{d:`M9.629,44.68c-1.154,1.16-2.895,1.51-4.407,0.885c-1.513-0.623-2.5-2.1-2.5-3.735V4.043c0-1.637,0.987-3.112,2.5-3.736\r
                      c1.513-0.625,3.253-0.275,4.407,0.885l17.862,17.951c2.088,2.098,2.088,5.488,0,7.585L9.629,44.68z`})}),jsxRuntimeExports.jsx("g",{children:jsxRuntimeExports.jsx("g",{children:jsxRuntimeExports.jsx("path",{d:`M38.252,45.975c-2.763,0-5-2.238-5-5V5c0-2.762,2.237-5,5-5c2.762,0,5,2.238,5,5v35.975\r
                      C43.252,43.736,41.013,45.975,38.252,45.975z`})})})]})})});function classifySharps(i,s){let o=i.svg.children;for(let a=0;a<o.length;a++)o[a].attributes[4].value==s&&o[a].classList.add("sharp")}function TempoControl(i){const[s,o]=reactExports.useState(120);function a(c){let d=c.target.value;Math.abs(120-d)<=2&&(d=120),o(d),i.player.setTempo(d)}return jsxRuntimeExports.jsxs("div",{id:"tempo-container",style:{display:"flex",flexDirection:"column"},children:[jsxRuntimeExports.jsx("div",{style:{display:"flex",flexDirection:"column"},children:jsxRuntimeExports.jsxs("div",{children:[Math.round(s/120*100),"%"]})}),jsxRuntimeExports.jsx("input",{type:"range",min:"12",max:"240",value:s,class:"slider",onChange:a})]})}function SaveMIDI(i){function s(){const o=es6Exports.sequenceProtoToMidi(i.ns),a=new Uint8Array(o),c=new Blob([a],{type:"audio/midi"}),d=URL.createObjectURL(c),g=document.createElement("a");g.style.display="none",g.href=d,g.download="output.mid",g.innerHTML="Download MIDI file",document.body.appendChild(g),g.click()}return jsxRuntimeExports.jsx("button",{disabled:i.ns==null,class:"save-button",onClick:s,children:"Save MIDI"})}const robot="/assets/robot-c02569e9.png";function Description(){const{loading:i}=useStore();return i?jsxRuntimeExports.jsx("div",{class:"description",id:"loading",children:jsxRuntimeExports.jsxs("div",{id:"processing",children:[jsxRuntimeExports.jsx("img",{src:robot}),jsxRuntimeExports.jsx("div",{children:"Processing..."})]})}):jsxRuntimeExports.jsxs("div",{class:"description",children:[jsxRuntimeExports.jsxs("p",{children:["Upload an audio file and have it converted into MIDI!",jsxRuntimeExports.jsx("br",{}),jsxRuntimeExports.jsx("br",{}),"Works best on solo piano performances, but feel free to upload audio of other instruments to see what happens! 😋",jsxRuntimeExports.jsx("br",{}),jsxRuntimeExports.jsx("br",{}),"Please be patient after selecting your file. The longer the audio, the longer it takes to process!"]}),jsxRuntimeExports.jsx("br",{}),jsxRuntimeExports.jsx("br",{}),jsxRuntimeExports.jsxs("div",{id:"made-with",children:["Made with",jsxRuntimeExports.jsx("a",{href:"https://magenta.tensorflow.org/",children:jsxRuntimeExports.jsx("img",{src:"https://magenta.tensorflow.org/assets/magenta-logo.png",height:"50",style:{verticalAlign:"center"}})})]})]})}const createStoreImpl=i=>{let s;const o=new Set,a=($,_)=>{const _e=typeof $=="function"?$(s):$;if(!Object.is(_e,s)){const et=s;s=_??typeof _e!="object"?_e:Object.assign({},s,_e),o.forEach(rt=>rt(s,et))}},c=()=>s,b={setState:a,getState:c,subscribe:$=>(o.add($),()=>o.delete($)),destroy:()=>{({BASE_URL:"/",MODE:"production",DEV:!1,PROD:!0,SSR:!1}&&"production")!=="production"&&console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),o.clear()}};return s=i(a,c,b),b},createStore=i=>i?createStoreImpl(i):createStoreImpl;var withSelector={exports:{}},withSelector_production_min={},shim={exports:{}},useSyncExternalStoreShim_production_min={};/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var e=reactExports;function h$1(i,s){return i===s&&(i!==0||1/i===1/s)||i!==i&&s!==s}var k=typeof Object.is=="function"?Object.is:h$1,l=e.useState,m=e.useEffect,n$1=e.useLayoutEffect,p$1=e.useDebugValue;function q$1(i,s){var o=s(),a=l({inst:{value:o,getSnapshot:s}}),c=a[0].inst,d=a[1];return n$1(function(){c.value=o,c.getSnapshot=s,r$1(c)&&d({inst:c})},[i,o,s]),m(function(){return r$1(c)&&d({inst:c}),i(function(){r$1(c)&&d({inst:c})})},[i]),p$1(o),o}function r$1(i){var s=i.getSnapshot;i=i.value;try{var o=s();return!k(i,o)}catch{return!0}}function t$1(i,s){return s()}var u$1=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?t$1:q$1;useSyncExternalStoreShim_production_min.useSyncExternalStore=e.useSyncExternalStore!==void 0?e.useSyncExternalStore:u$1;shim.exports=useSyncExternalStoreShim_production_min;var shimExports=shim.exports;/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var h=reactExports,n=shimExports;function p(i,s){return i===s&&(i!==0||1/i===1/s)||i!==i&&s!==s}var q=typeof Object.is=="function"?Object.is:p,r=n.useSyncExternalStore,t=h.useRef,u=h.useEffect,v=h.useMemo,w=h.useDebugValue;withSelector_production_min.useSyncExternalStoreWithSelector=function(i,s,o,a,c){var d=t(null);if(d.current===null){var g={hasValue:!1,value:null};d.current=g}else g=d.current;d=v(function(){function $(tt){if(!_){if(_=!0,_e=tt,tt=a(tt),c!==void 0&&g.hasValue){var j=g.value;if(c(j,tt))return et=j}return et=tt}if(j=et,q(_e,tt))return j;var nt=a(tt);return c!==void 0&&c(j,nt)?j:(_e=tt,et=nt)}var _=!1,_e,et,rt=o===void 0?null:o;return[function(){return $(s())},rt===null?void 0:function(){return $(rt())}]},[s,o,a,c]);var b=r(i,d[0],d[1]);return u(function(){g.hasValue=!0,g.value=b},[b]),w(b),b};withSelector.exports=withSelector_production_min;var withSelectorExports=withSelector.exports;const useSyncExternalStoreExports=getDefaultExportFromCjs(withSelectorExports),{useSyncExternalStoreWithSelector}=useSyncExternalStoreExports;function useStore$1(i,s=i.getState,o){const a=useSyncExternalStoreWithSelector(i.subscribe,i.getState,i.getServerState||i.getState,s,o);return reactExports.useDebugValue(a),a}const createImpl=i=>{({BASE_URL:"/",MODE:"production",DEV:!1,PROD:!0,SSR:!1}&&"production")!=="production"&&typeof i!="function"&&console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");const s=typeof i=="function"?createStore(i):i,o=(a,c)=>useStore$1(s,a,c);return Object.assign(o,s),o},create=i=>i?createImpl(i):createImpl,useStore=create(i=>({loading:!1,setLoading:()=>i({loading:!0})})),ACTIVE_KEY_COLOR="255, 201, 25",VIS2_KEY_COLOR="200, 200, 200",WHITE_WIDTH=Math.round(window.innerWidth/85),BLACK_WIDTH=Math.round(WHITE_WIDTH*(5/9)),OAF=new es6Exports.OnsetsAndFrames("https://storage.googleapis.com/magentadata/js/checkpoints/transcription/onsets_frames_uni");OAF.initialize();function App(){const[i,s]=reactExports.useState(null);let o,a,c;i!=null&&(o=new es6Exports.WaterfallSVGVisualizer(i,document.getElementById("vis1"),{activeNoteRGB:ACTIVE_KEY_COLOR,noteHeight:50,pixelsPerTimeStep:200,noteSpacing:10,whiteNoteWidth:WHITE_WIDTH,blackNoteWidth:BLACK_WIDTH}),classifySharps(o,BLACK_WIDTH),a=new es6Exports.PianoRollCanvasVisualizer(i,document.getElementById("vis2"),{noteRGB:VIS2_KEY_COLOR,activeNoteRGB:ACTIVE_KEY_COLOR}),c=new es6Exports.SoundFontPlayer("https://storage.googleapis.com/magentadata/js/soundfonts/sgm_plus",void 0,void 0,void 0,{run:(g=es6Exports.NoteSequence.Note)=>{o.redraw(g,!0),a.redraw(g,!0);let b=a.ctx.canvas,$=g.startTime/i.totalTime*b.width;a.ctx.strokeStyle="white",a.ctx.beginPath(),a.ctx.moveTo($,0),a.ctx.lineTo($,b.height),a.ctx.stroke()}}),c.loadSamples(i));function d(g){let b=c.getPlayState();b==="stopped"?c.start(i):b==="paused"&&c.resume();let $=g.target.getBoundingClientRect(),_e=(g.clientX-$.left)/$.width,et=_e*i.totalTime,rt;c.desiredQPM==null?rt=120:rt=c.desiredQPM;let tt=rt/120;c.seekTo(et/tt);let j=document.getElementsByClassName("waterfall-notes-container")[0];j.scrollTop=j.scrollHeight-_e*j.scrollHeight}return jsxRuntimeExports.jsxs("div",{id:"container",children:[jsxRuntimeExports.jsxs("div",{id:"controls",children:[jsxRuntimeExports.jsx(LoadAudio,{OAF,setNoteSequence:s}),jsxRuntimeExports.jsxs("div",{id:"audio-controls",children:[jsxRuntimeExports.jsx(SequencePlayer,{vis:o,ns:i,player:c}),jsxRuntimeExports.jsx(TempoControl,{player:c})]}),jsxRuntimeExports.jsx(SaveMIDI,{ns:i})]}),jsxRuntimeExports.jsxs("div",{id:"visualizers",children:[jsxRuntimeExports.jsx("canvas",{onClick:d,id:"vis2"}),jsxRuntimeExports.jsx("div",{id:"vis1-container",children:jsxRuntimeExports.jsx("div",{id:"vis1",children:jsxRuntimeExports.jsx(Description,{})})})]})]})}const index="";client.createRoot(document.getElementById("root")).render(jsxRuntimeExports.jsx(React.StrictMode,{children:jsxRuntimeExports.jsx(App,{})}));
